<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>计网OS相关知识</title>
    <link href="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="网络模型"><a href="#网络模型" class="headerlink" title="网络模型"></a>网络模型</h2><h3 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h3><ul><li>物理层、数据链路层、网络层、传输层、会话层、表示层、应用层</li></ul><h3 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP&#x2F;IP模型"></a>TCP&#x2F;IP模型</h3><ul><li>网络接口层、网络层、传输层、应用层</li></ul><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><h3 id="应用层有哪些协议"><a href="#应用层有哪些协议" class="headerlink" title="应用层有哪些协议"></a>应用层有哪些协议</h3><ul><li>HTTP、HTTPS、CDN、DNS、FTP</li></ul><h3 id="HTTP报文有哪些部分"><a href="#HTTP报文有哪些部分" class="headerlink" title="HTTP报文有哪些部分"></a>HTTP报文有哪些部分</h3><h4 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h4><ul><li>请求行：包含请求方法、请求目标（URL或URI）和HTTP协议版本。</li><li>请求头部：包含关于请求的附加信息，如Host、User-Agent、Content-Type等。</li><li>空行：请求头部和请求体之间用空行分隔。</li><li>请求体：可选，包含请求的数据，通常用于POST请求等需要传输数据的情况。</li></ul><h4 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h4><ul><li>状态行：包含HTTP协议版本、状态码和状态信息。</li><li>响应头部：包含关于响应的附加信息，如Content-Type、Content-Length等。</li><li>空行：响应头部和响应体之间用空行分隔。</li><li>响应体：包含响应的数据，通常是服务器返回的HTML、JSON等内容。</li></ul><h3 id="HTTP常用状态码"><a href="#HTTP常用状态码" class="headerlink" title="HTTP常用状态码"></a>HTTP常用状态码</h3><ul><li>1xx 类状态码属于提示信息，是协议处理中的一种中间状态，实际用到的比较少。</li><li>2xx 类状态码表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。200：请求成功；</li><li>3xx 类状态码表示客户端请求的资源发生了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。301：永久重定向；302：临时重定向；</li><li>4xx 类状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。404：无法找到此页面；405：请求的方法类型不支持；</li><li>5xx 类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。500：服务器内部出错。</li></ul><h3 id="301、302状态码分别是什么"><a href="#301、302状态码分别是什么" class="headerlink" title="301、302状态码分别是什么"></a>301、302状态码分别是什么</h3><ul><li>「301 Moved Permanently」表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。</li><li>「302 Found」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。</li><li>301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。</li></ul><h3 id="502和504区别"><a href="#502和504区别" class="headerlink" title="502和504区别"></a>502和504区别</h3><ul><li>502 Bad Gateway：作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。</li><li>504 Gateway Time-out：作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器收到响应。</li></ul><h3 id="GET和POST的区别"><a href="#GET和POST的区别" class="headerlink" title="GET和POST的区别"></a>GET和POST的区别</h3><ul><li>GET 的语义是从服务器获取指定的资源，GET 请求的参数位置一般是写在 URL 中，URL 规定只能支持 ASCII，所以 GET 请求的参数只允许 ASCII 字符 ，而且浏览器会对 URL 的长度有限制（HTTP协议本身对 URL长度并没有做任何规定）。</li><li>POST 的语义是根据请求负荷（报文body）对指定的资源做出处理，POST 请求携带数据的位置一般是写在报文 body 中，body 中的数据可以是任意格式的数据，只要客户端与服务端协商好即可，而且浏览器不会对 body 大小做限制。</li><li>GET安全幂等，POST不安全不幂等，浏览器会缓存GET请求的数据，不会缓存POST请求的数据；会把GET请求的数据保存为书签，不会把POST请求的数据保存为书签。</li></ul><h3 id="HTTP长连接"><a href="#HTTP长连接" class="headerlink" title="HTTP长连接"></a>HTTP长连接</h3><ul><li>客户端与服务端通信前，需要建立连接，建立后发送请求，然后释放连接。如果每次请求都要经历这个过程会很浪费时间。</li><li>HTTP 的 Keep-Alive 实现了不断开TCP连接，可以使用同一个 TCP 连接来发送和接收多个 HTTP 请求&#x2F;应答，避免了连接建立和释放的开销，这个方法称为 HTTP 长连接。</li><li>HTTP 长连接的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。</li></ul><h3 id="HTTP、HTTPS默认的端口"><a href="#HTTP、HTTPS默认的端口" class="headerlink" title="HTTP、HTTPS默认的端口"></a>HTTP、HTTPS默认的端口</h3><ul><li>HTTP：80、HTTPS：443</li></ul><h3 id="HTTP1-1怎么对请求做拆包，具体来说怎么拆的？"><a href="#HTTP1-1怎么对请求做拆包，具体来说怎么拆的？" class="headerlink" title="HTTP1.1怎么对请求做拆包，具体来说怎么拆的？"></a>HTTP1.1怎么对请求做拆包，具体来说怎么拆的？</h3><ul><li>在HTTP&#x2F;1.1中，请求的拆包是通过”Content-Length”头字段来进行的。该字段指示了请求正文的长度，服务器可以根据该长度来正确接收和解析请求。</li></ul><h3 id="HTTP断点重传"><a href="#HTTP断点重传" class="headerlink" title="HTTP断点重传"></a>HTTP断点重传</h3><ul><li>断点续传是HTTP&#x2F;1.1协议支持的特性。实现断点续传的功能，需要客户端记录下当前的下载进度，并在需要续传的时候通知服务端本次需要下载的内容片段。</li><li>例：<ul><li>客户端开始下载一个1024K的文件，服务端发送Accept-Ranges: bytes来告诉客户端，其支持带Range的请求</li><li>假如客户端下载了其中512K时候网络突然断开了，过了一会网络可以了，客户端再下载时候，需要在HTTP头中申明本次需要续传的片段：Range:bytes&#x3D;512000-这个头通知服务端从文件的512K位置开始传输文件，直到文件内容结束</li><li>服务端收到断点续传请求，从文件的512K位置开始传输，并且在HTTP头中增加：Content-Range:bytes 512000-&#x2F;1024000,Content-Length: 512000。并且此时服务端返回的HTTP状态码应该是206 Partial Content。如果客户端传递过来的Range超过资源的大小,则响应416 Requested Range Not Satisfiable</li></ul></li><li>通过上面流程可以看出：断点续传中4个HTTP头不可少的，分别是Range头、Content-Range头、Accept-Ranges头、Content-Length头。其中第一个Range头是客户端发过来的，后面3个头需要服务端发送给客户端。下面是它们的说明：</li><li><strong>Accept-Ranges: bytes：</strong>这个值声明了可被接受的每一个范围请求, 大多数情况下是字节数 bytes</li><li><strong>Range: bytes&#x3D;开始位置-结束位置：</strong>Range是浏览器告知服务器所需分部分内容范围的消息头。</li></ul><h3 id="HTTP为什么不安全"><a href="#HTTP为什么不安全" class="headerlink" title="HTTP为什么不安全"></a>HTTP为什么不安全</h3><ul><li>HTTP是明文传输，所以安全上会有以下风险：<ul><li>窃听风险，通信链路上可以获取通信内容</li><li>篡改风险，强制植入垃圾广告</li><li>冒充风险，例如冒充淘宝</li></ul></li><li>HTTPS再HTTP和TCP层之间加入了SSL&#x2F;TLS协议，解决了上述风险<ul><li>信息加密，交互信息无法窃取</li><li>校验机制，无法篡改通信内容，篡改了就不能正常显示</li><li>身份证书：证明淘宝是真的淘宝网</li></ul></li></ul><h3 id="HTTP和HTTPS的区别"><a href="#HTTP和HTTPS的区别" class="headerlink" title="HTTP和HTTPS的区别"></a>HTTP和HTTPS的区别</h3><ul><li>HTTP 是超文本传输协议，信息是明文传输，存在安全风险的问题。HTTPS 则解决 HTTP 不安全的缺陷，在 TCP 和 HTTP 网络层之间加入了 SSL&#x2F;TLS 安全协议，使得报文能够加密传输。</li><li>HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL&#x2F;TLS 的握手过程，才可进入加密报文传输。</li><li>两者的默认端口不一样，HTTP 默认端口号是 80，HTTPS 默认端口号是 443。</li><li>HTTPS 协议需要向 CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的。</li></ul><h3 id="TLS握手过程"><a href="#TLS握手过程" class="headerlink" title="TLS握手过程"></a>TLS握手过程</h3><h4 id="客户端→服务端：Client-Hello"><a href="#客户端→服务端：Client-Hello" class="headerlink" title="客户端→服务端：Client Hello"></a>客户端→服务端：Client Hello</h4><ul><li>客户端生成一个随机数</li><li>将自己支持的加密算法、TLS版本、随机数发送给服务端</li></ul><h4 id="服务端→客户端：Server-Hello"><a href="#服务端→客户端：Server-Hello" class="headerlink" title="服务端→客户端：Server Hello"></a>服务端→客户端：Server Hello</h4><ul><li>服务端生成一个随机数</li><li>将随机数、确认TLS版本号、使用的密码套件（RSA）、使用的证书发送给客户端</li></ul><h4 id="客户端→服务端：Client-Key-Exchange-Change-Cipher-Spec-Encrypted-Handshake-Message"><a href="#客户端→服务端：Client-Key-Exchange-Change-Cipher-Spec-Encrypted-Handshake-Message" class="headerlink" title="客户端→服务端：Client Key Exchange,Change Cipher Spec,Encrypted Handshake Message"></a>客户端→服务端：Client Key Exchange,Change Cipher Spec,Encrypted Handshake Message</h4><ul><li>检查证书是否有效，是否由可信CA签发，是否过期</li><li>若有效，则从证书中取出服务端公钥，生成一个“预主密钥”（Pre-Master Secret），并用服务器公钥加密后发送给服务器。</li><li>使用客户端随机数、服务端随机数、pre-matster算出会话密钥，之后改用会话密钥加密通道</li></ul><h4 id="服务端→客户端：Change-Cipher-Spec-Encrypted-Handshake-Message"><a href="#服务端→客户端：Change-Cipher-Spec-Encrypted-Handshake-Message" class="headerlink" title="服务端→客户端：Change Cipher Spec,Encrypted Handshake Message"></a>服务端→客户端：Change Cipher Spec,Encrypted Handshake Message</h4><ul><li>服务端使用私钥解密出预主密钥</li><li>使用客户端随机数、服务端随机数、pre-matster算出会话密钥，之后改用会话密钥加密通道</li><li>双方各发送一条Finish消息，表示握手完成</li></ul><h3 id="HTTP进行TCP连接之后，在什么情况下会中断"><a href="#HTTP进行TCP连接之后，在什么情况下会中断" class="headerlink" title="HTTP进行TCP连接之后，在什么情况下会中断"></a>HTTP进行TCP连接之后，在什么情况下会中断</h3><ul><li>当服务端或者客户端执行 close 系统调用的时候，会发送FIN报文，就会进行四次挥手的过程</li><li>当发送方发送了数据之后，接收方超过一段时间没有响应ACK报文，发送方重传数据达到最大次数的时候，就会断开TCP连接</li><li>当HTTP长时间没有进行请求和响应的时候，超过一定的时间，就会释放连接</li></ul><h3 id="HTTP、SOCKET和TCP的区别"><a href="#HTTP、SOCKET和TCP的区别" class="headerlink" title="HTTP、SOCKET和TCP的区别"></a>HTTP、SOCKET和TCP的区别</h3><ul><li><p>HTTP是应用层协议，定义了客户端和服务器之间交换的数据格式和规则；Socket是通信的一端，提供了网络通信的接口；TCP是传输层协议，负责在网络中建立可靠的数据传输连接。它们在网络通信中扮演不同的角色和层次。</p></li><li><p>HTTP是一种用于传输超文本数据的应用层协议，用于在客户端和服务器之间传输和显示Web页面。</p></li><li><p>Socket是计算机网络中的一种抽象，用于描述通信链路的一端，提供了底层的通信接口，可实现不同计算机之间的数据交换。</p></li><li><p>TCP是一种面向连接的、可靠的传输层协议，负责在通信的两端之间建立可靠的数据传输连接。</p></li></ul><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><ul><li>DNS的全称是Domain Name System（域名系统），它是互联网中用于将域名转换为对应IP地址的分布式数据库系统。DNS扮演着重要的角色，使得人们可以通过易记的域名访问互联网资源，而无需记住复杂的IP地址。默认端口53。</li><li>在域名中，越靠右的位置表示其层级越高。</li><li>域名的层级关系类似一个树状结构：<ul><li>根 DNS 服务器（.）</li><li>顶级域 DNS 服务器（.com）</li><li>权威 DNS 服务器（server.com）</li></ul></li></ul><h3 id="DNS-域名解析的工作流程？"><a href="#DNS-域名解析的工作流程？" class="headerlink" title="DNS 域名解析的工作流程？"></a>DNS 域名解析的工作流程？</h3><ul><li>客户端向本地DNS服务器发送请求，询问<a href="http://www.server.com/">www.server.com</a> 的 IP 是什么</li><li>本地域名服务器收到以后，会查找缓存中是否存在这个域名，若有直接返回IP，若没有，本地DNS会向根域名服务器询问</li><li>根域名服务器收到后，发现后置是.com，则将.com顶级域名服务器地址返回给本地DNS</li><li>本地DNS收到后，向.com顶级域名服务器询问</li><li>顶级域名服务器收到后，将server.com权威DNS服务器地址返回</li><li>本地DNS向server.com权威DNS服务器询问</li><li>权威DNS服务i其将IP返回</li><li>本地DNS将IP返回给客户端<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/DNS%E8%A7%A3%E6%9E%90.png" alt="DNS解析"></li></ul><h3 id="DNS底层使用TCP还是UDP"><a href="#DNS底层使用TCP还是UDP" class="headerlink" title="DNS底层使用TCP还是UDP"></a>DNS底层使用TCP还是UDP</h3><ul><li>低延迟： UDP是一种无连接的协议，不需要在数据传输前建立连接，因此可以减少传输时延，适合DNS这种需要快速响应的应用场景。</li><li>简单快速： UDP相比于TCP更简单，没有TCP的连接管理和流量控制机制，传输效率更高，适合DNS这种需要快速传输数据的场景。</li><li>轻量级：UDP头部较小，占用较少的网络资源，对于小型请求和响应来说更加轻量级，适合DNS这种频繁且短小的数据交换。</li></ul><h3 id="HTTP到底是不是无状态的？"><a href="#HTTP到底是不是无状态的？" class="headerlink" title="HTTP到底是不是无状态的？"></a>HTTP到底是不是无状态的？</h3><ul><li>HTTP是无状态的，这意味着每个请求都是独立的，服务器不会在多个请求之间保留关于客户端状态的信息。在每个HTTP请求中，服务器不会记住之前的请求或会话状态，因此每个请求都是相互独立的。</li><li>虽然HTTP本身是无状态的，但可以通过一些机制来实现状态保持，其中最常见的方式是使用Cookie和Session来跟踪用户状态。通过在客户端存储会话信息或状态信息，服务器可以识别和跟踪特定用户的状态，以提供一定程度的状态保持功能。</li></ul><h3 id="携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？"><a href="#携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？" class="headerlink" title="携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？"></a>携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？</h3><ul><li>携带Cookie的HTTP请求实际上是可以在一定程度上实现状态保持的，因为Cookie是用来在客户端存储会话信息和状态信息的一种机制。当浏览器发送包含Cookie的HTTP请求时，服务器可以通过读取这些Cookie来识别用户、管理会话状态以及保持特定的用户状态。因此，可以说即使HTTP本身是无状态的协议，但通过Cookie的使用可以实现一定程度的状态保持功能。</li><li>HTTP被描述为“无状态”的主要原因是每个HTTP请求都是独立的，服务器并不保存关于客户端的状态信息，每个请求都需要提供足够的信息来理解请求的意图。这样的设计使得Web系统更具有规模化和简单性，但也导致了一些挑战，比如需要额外的机制来处理用户状态和会话管理。</li><li>虽然Cookie是HTTP协议簇的一部分，但是HTTP协议在设计初衷上仍然保持无状态特性，即每个请求都是相互独立的。使用Cookie只是在无状态协议下的一种补充机制，用于在客户端存储状态信息以实现状态保持。</li></ul><h3 id="cookie和session有什么区别？"><a href="#cookie和session有什么区别？" class="headerlink" title="cookie和session有什么区别？"></a>cookie和session有什么区别？</h3><ul><li><strong>存储位置：</strong>Cookie的数据存储在客户端（通常是浏览器）。当浏览器向服务器发送请求时，会自动附带Cookie中的数据。Session的数据存储在服务器端。服务器为每个用户分配一个唯一的Session ID，这个ID通常通过Cookie或URL重写的方式发送给客户端，客户端后续的请求会带上这个Session ID，服务器根据ID查找对应的Session数据。</li><li><strong>数据容量：</strong>单个Cookie的大小限制通常在4KB左右，而且大多数浏览器对每个域名的总Cookie数量也有限制。由于Session存储在服务器上，理论上不受数据大小的限制，主要受限于服务器的内存大小。</li><li><strong>安全性：</strong>Cookie相对不安全，因为数据存储在客户端，容易受到XSS（跨站脚本攻击）的威胁。不过，可以通过设置HttpOnly属性来防止JavaScript访问，减少XSS攻击的风险，但仍然可能受到CSRF（跨站请求伪造）的攻击。Session通常认为比Cookie更安全，因为敏感数据存储在服务器端。但仍然需要防范Session劫持（通过获取他人的Session ID）和会话固定攻击。</li><li><strong>生命周期：</strong>Cookie可以设置过期时间，过期后自动删除。也可以设置为会话Cookie，即浏览器关闭时自动删除。Session在默认情况下，当用户关闭浏览器时，Session结束。但服务器也可以设置Session的超时时间，超过这个时间未活动，Session也会失效。</li><li><strong>性能：</strong>使用Cookie时，因为数据随每个请求发送到服务器，可能会影响网络传输效率，尤其是在Cookie数据较大时。使用Session时，因为数据存储在服务器端，每次请求都需要查询服务器上的Session数据，这可能会增加服务器的负载，特别是在高并发场景下。</li></ul><h3 id="token，session，cookie的区别？"><a href="#token，session，cookie的区别？" class="headerlink" title="token，session，cookie的区别？"></a>token，session，cookie的区别？</h3><ul><li>session存储于服务器，可以理解为一个状态列表，拥有一个唯一识别符号sessionId，通常存放于cookie中。服务器收到cookie后解析出sessionId，再去session列表中查找，才能找到相应session，依赖cookie。</li><li>cookie类似一个令牌，装有sessionId，存储在客户端，浏览器通常会自动添加。</li><li>token也类似一个令牌，无状态，用户信息都被加密到token中，服务器收到token后解密就可知道是哪个用户，需要开发者手动添加。</li></ul><h3 id="如果客户端禁用了cookie，session还能用吗？"><a href="#如果客户端禁用了cookie，session还能用吗？" class="headerlink" title="如果客户端禁用了cookie，session还能用吗？"></a>如果客户端禁用了cookie，session还能用吗？</h3><ul><li><p>默认情况下禁用 Cookie 后，Session 是无法正常使用的，因为大多数 Web 服务器都是依赖于 Cookie 来传递 Session 的会话 ID 的。</p></li><li><p>客户端浏览器禁用 Cookie 时，服务器将无法把会话 ID 发送给客户端，客户端也无法在后续请求中携带会话 ID 返回给服务器，从而导致服务器无法识别用户会话。</p></li><li><p>但是，有几种方法可以绕过这个问题，尽管它们可能会引入额外的复杂性和&#x2F;或降低用户体验：</p><ul><li><strong>URL重写：</strong>每当服务器响应需要保持状态的请求时，将Session ID附加到URL中作为参数。例如，原本的链接<code>http://example.com/page</code>变为<code>http://example.com/page;jsessionid=XXXXXX</code>，服务器端需要相应地解析 URL 来获取 Session ID，并维护用户的会话状态。这种方式的缺点是URL变得不那么整洁，且如果用户通过电子邮件或其他方式分享了这样的链接，可能导致Session ID的意外泄露。</li><li>隐藏表单字段：在每个需要Session信息的HTML表单中包含一个隐藏字段，用来存储Session ID。当表单提交时，Session ID随表单数据一起发送回服务器，服务器通过解析表单数据中的 Session ID 来获取用户的会话状态。这种方法仅适用于通过表单提交的交互模式，不适合链接点击或Ajax请求。</li></ul></li></ul><h3 id="如果我把数据存储到-localStorage，和Cookie有什么区别？"><a href="#如果我把数据存储到-localStorage，和Cookie有什么区别？" class="headerlink" title="如果我把数据存储到 localStorage，和Cookie有什么区别？"></a>如果我把数据存储到 localStorage，和Cookie有什么区别？</h3><ul><li>存储容量: Cookie 的存储容量通常较小,每个 Cookie 的大小限制在几 KB 左右。而 LocalStorage 的存储容量通常较大,一般限制在几 MB 左右。因此,如果需要存储大量数据，LocalStorage 通常更适合;</li><li>数据发送: Cookie 在每次 HTTP 请求中都会自动发送到服务器,这使得 Cookie 适合用于在客户端和服务器之间传递数据。而 localStorage 的数据不会自动发送到服务器,它仅在浏览器端存储数据,因此 LocalStorage 适合用于在同一域名下的不同页面之间共享数据;</li><li>生命周期：Cookie 可以设置一个过期时间,使得数据在指定时间后自动过期。而 LocalStorage 的数据将永久存储在浏览器中,除非通过 JavaScript 代码手动删除;</li><li>安全性：Cookie 的安全性较低,因为 Cookie 在每次 HTTP 请求中都会自动发送到服务器,存在被窃取或篡改的风险。而 LocalStorage 的数据仅在浏览器端存储,不会自动发送到服务器,相对而言更安全一些;</li></ul><h3 id="什么数据应该存在到cookie，什么数据存放到-Localstorage"><a href="#什么数据应该存在到cookie，什么数据存放到-Localstorage" class="headerlink" title="什么数据应该存在到cookie，什么数据存放到 Localstorage"></a>什么数据应该存在到cookie，什么数据存放到 Localstorage</h3><ul><li>Cookie 适合用于在客户端和服务器之间传递数据、跨域访问和设置过期时间，而 LocalStorage 适合用于在同一域名下的不同页面之间共享数据、存储大量数据和永久存储数据。</li></ul><h3 id="JWT-令牌和传统方式有什么区别？"><a href="#JWT-令牌和传统方式有什么区别？" class="headerlink" title="JWT 令牌和传统方式有什么区别？"></a>JWT 令牌和传统方式有什么区别？</h3><ul><li>无状态性：JWT是无状态的令牌，不需要在服务器端存储会话信息。相反，JWT令牌中包含了所有必要的信息，如用户身份、权限等。这使得JWT在分布式系统中更加适用，可以方便地进行扩展和跨域访问。</li><li>安全性：JWT使用密钥对令牌进行签名，确保令牌的完整性和真实性。只有持有正确密钥的服务器才能对令牌进行验证和解析。这种方式比传统的基于会话和Cookie的验证更加安全，有效防止了CSRF（跨站请求伪造）等攻击。</li><li>跨域支持：JWT令牌可以在不同域之间传递，适用于跨域访问的场景。通过在请求的头部或参数中携带JWT令牌，可以实现无需Cookie的跨域身份验证。</li></ul><h3 id="JWT-令牌都有哪些字段？"><a href="#JWT-令牌都有哪些字段？" class="headerlink" title="JWT 令牌都有哪些字段？"></a>JWT 令牌都有哪些字段？</h3><h4 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h4><ul><li>头部用于说明令牌的类型和签名算法</li></ul><h4 id="负载"><a href="#负载" class="headerlink" title="负载"></a>负载</h4><ul><li>载荷是 JWT 的核心部分，包含各种“声明”（Claims），即关于用户和令牌的信息。</li></ul><h4 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h4><ul><li>签名用于验证令牌是否被篡改。</li></ul><h3 id="JWT-令牌为什么能解决集群部署，什么是集群部署？"><a href="#JWT-令牌为什么能解决集群部署，什么是集群部署？" class="headerlink" title="JWT 令牌为什么能解决集群部署，什么是集群部署？"></a>JWT 令牌为什么能解决集群部署，什么是集群部署？</h3><ul><li>在传统的基于会话和Cookie的身份验证方式中，会话信息通常存储在服务器的内存或数据库中。但在集群部署中，不同服务器之间没有共享的会话信息，这会导致用户在不同服务器之间切换时需要重新登录，或者需要引入额外的共享机制（如Redis），增加了复杂性和性能开销。</li><li>而JWT令牌通过在令牌中包含所有必要的身份验证和会话信息，使得服务器无需存储会话信息，从而解决了集群部署中的身份验证和会话管理问题。当用户进行登录认证后，服务器将生成一个JWT令牌并返回给客户端。客户端在后续的请求中携带该令牌，服务器可以通过对令牌进行验证和解析来获取用户身份和权限信息，而无需访问共享的会话存储。</li><li>由于JWT令牌是自包含的，服务器可以独立地对令牌进行验证，而不需要依赖其他服务器或共享存储。这使得集群中的每个服务器都可以独立处理请求，提高了系统的可伸缩性和容错性。</li></ul><h3 id="jwt的缺点是什么？"><a href="#jwt的缺点是什么？" class="headerlink" title="jwt的缺点是什么？"></a>jwt的缺点是什么？</h3><ul><li>JWT 一旦派发出去，在失效之前都是有效的，没办法即使撤销JWT。</li><li>要解决这个问题的话，得在业务层增加判断逻辑，比如增加<strong>黑名单机制。</strong>使用内存数据库比如 Redis 维护一个黑名单，如果想让某个 JWT 失效的话就直接将这个 JWT 加入到 黑名单 即可。然后，每次使用 JWT 进行请求的话都会先判断这个 JWT 是否存在于黑名单中。</li></ul><h3 id="JWT-令牌如果泄露了，怎么解决，JWT是怎么做的？"><a href="#JWT-令牌如果泄露了，怎么解决，JWT是怎么做的？" class="headerlink" title="JWT 令牌如果泄露了，怎么解决，JWT是怎么做的？"></a>JWT 令牌如果泄露了，怎么解决，JWT是怎么做的？</h3><ul><li>及时失效令牌：当检测到JWT令牌泄露或存在风险时，可以立即将令牌标记为失效状态。服务器在接收到带有失效标记的令牌时，会拒绝对其进行任何操作，从而保护用户的身份和数据安全。</li><li>刷新令牌：JWT令牌通常具有一定的有效期，过期后需要重新获取新的令牌。当检测到令牌泄露时，可以主动刷新令牌，即重新生成一个新的令牌，并将旧令牌标记为失效状态。这样，即使泄露的令牌被恶意使用，也会很快失效，减少了被攻击者滥用的风险。</li><li>使用黑名单：服务器可以维护一个令牌的黑名单，将泄露的令牌添加到黑名单中。在接收到令牌时，先检查令牌是否在黑名单中，如果在则拒绝操作。这种方法需要服务器维护黑名单的状态，对性能有一定的影响，但可以有效地保护泄露的令牌不被滥用。</li></ul><h3 id="使用session登录流程"><a href="#使用session登录流程" class="headerlink" title="使用session登录流程"></a>使用session登录流程</h3><ul><li>用户向服务器发送用户名和密码。</li><li>服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。</li><li>服务器向用户返回一个 session_id，写入用户的 Cookie。</li><li>用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。</li><li>服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。</li></ul><h3 id="Token怎么保存"><a href="#Token怎么保存" class="headerlink" title="Token怎么保存"></a>Token怎么保存</h3><h4 id="Local-Storage（本地存储）"><a href="#Local-Storage（本地存储）" class="headerlink" title="Local Storage（本地存储）"></a>Local Storage（本地存储）</h4><ul><li>优点：Local Storage 提供了较大的存储空间（一般为5MB），且不会随着HTTP请求一起发送到服务器，因此不会出现在HTTP缓存或日志中。</li><li>缺点：存在XSS（跨站脚本攻击）的风险，恶意脚本可以通过JavaScript访问到存储在Local Storage中的JWT，从而盗取用户凭证。</li></ul><h4 id="Session-Storage（会话存储）"><a href="#Session-Storage（会话存储）" class="headerlink" title="Session Storage（会话存储）"></a>Session Storage（会话存储）</h4><ul><li>优点：与Local Storage类似，但仅限于当前浏览器窗口或标签页，当窗口关闭后数据会被清除，这在一定程度上减少了数据泄露的风险。</li><li>缺点：用户体验可能受影响，因为刷新页面或在新标签页打开相同应用时需要重新认证。</li></ul><h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><ul><li>优点：可以设置HttpOnly标志来防止通过JavaScript访问，减少XSS攻击的风险；可以利用Secure标志确保仅通过HTTPS发送，增加安全性。</li><li>缺点：大小限制较小（通常4KB），并且每次HTTP请求都会携带Cookie，可能影响性能；设置不当可能会受到CSRF（跨站请求伪造）攻击。</li></ul><h3 id="为什么有HTTP协议了-还要用RPC"><a href="#为什么有HTTP协议了-还要用RPC" class="headerlink" title="为什么有HTTP协议了?还要用RPC?"></a>为什么有HTTP协议了?还要用RPC?</h3><h4 id="性能差异"><a href="#性能差异" class="headerlink" title="性能差异"></a>性能差异</h4><ul><li>HTTP 是文本协议，每次请求都要带上大量的头信息（如 Content-Type、User-Agent 等），数据封装臃肿。</li><li>RPC 通常是二进制协议（如 gRPC 使用 Protobuf），数据体积小，传输快，适合高并发场景。</li></ul><h4 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h4><ul><li>RPC 框架（如 Dubbo、gRPC）支持自动生成客户端代码，调用远程服务就像调用本地方法一样。</li><li>HTTP 调用则需要手动构造请求、处理响应，开发成本更高。</li></ul><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><ul><li>RPC：微服务之间调用</li><li>HTTP：开放API或Web应用</li></ul><h3 id="HTTP长连接与WebSocket有什么区别？"><a href="#HTTP长连接与WebSocket有什么区别？" class="headerlink" title="HTTP长连接与WebSocket有什么区别？"></a>HTTP长连接与WebSocket有什么区别？</h3><ul><li>全双工和半双工：TCP 协议本身是全双工的，但我们最常用的 HTTP&#x2F;1.1，虽然是基于 TCP 的协议，但它是半双工的，对于大部分需要服务器主动推送数据到客户端的场景，都不太友好，因此我们需要使用支持全双工的 WebSocket 协议。</li><li>应用场景区别：在 HTTP&#x2F;1.1 里，只要客户端不问，服务端就不答。基于这样的特点，对于登录页面这样的简单场景，可以使用定时轮询或者长轮询的方式实现服务器推送(comet)的效果。对于客户端和服务端之间需要频繁交互的复杂场景，比如网页游戏，都可以考虑使用 WebSocket 协议。</li></ul><h3 id="Nginx（应用层）有哪些负载均衡算法？"><a href="#Nginx（应用层）有哪些负载均衡算法？" class="headerlink" title="Nginx（应用层）有哪些负载均衡算法？"></a>Nginx（应用层）有哪些负载均衡算法？</h3><ul><li>轮询：按照顺序依次将请求分配给后端服务器。这种算法最简单，但是也无法处理某个节点变慢或者客户端操作有连续性的情况。</li><li>IP哈希：根据客户端IP地址的哈希值来确定分配请求的后端服务器。适用于需要保持同一客户端的请求始终发送到同一台后端服务器的场景，如会话保持。</li><li>URL哈希：按访问的URL的哈希结果来分配请求，使每个URL定向到一台后端服务器，可以进一步提高后端缓存服务器的效率。</li><li>最短响应时间：按照后端服务器的响应时间来分配请求，响应时间短的优先分配。适用于后端服务器性能不均的场景，能够将请求发送到响应时间快的服务器，实现负载均衡。</li><li>加权轮询：按照权重分配请求给后端服务器，权重越高的服务器获得更多的请求。适用于后端服务器性能不同的场景，可以根据服务器权重分配请求，提高高性能服务器的利用率。</li></ul><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><h3 id="说一下TCP头部"><a href="#说一下TCP头部" class="headerlink" title="说一下TCP头部"></a>说一下TCP头部</h3><ul><li>序列号：在建立连接时由计算机生成的随机数作为其初始值，通过 SYN 包传给接收端主机，每发送一次数据，就「累加」一次该「数据字节数」的大小。用来解决网络包乱序问题。</li><li>确认应答号：指下一次「期望」收到的数据的序列号，发送端收到这个确认应答以后可以认为在这个序号以前的数据都已经被正常接收。用来解决丢包的问题。</li><li>控制位：<ul><li>ACK：该位为 1 时，「确认应答」的字段变为有效，TCP 规定除了最初建立连接时的 SYN 包之外该位必须设置为 1 。</li><li>RST：该位为 1 时，表示 TCP 连接中出现异常必须强制断开连接。</li><li>SYN：该位为 1 时，表示希望建立连接，并在其「序列号」的字段进行序列号初始值的设定。</li><li>FIN：该位为 1 时，表示今后不会再有数据发送，希望断开连接。当通信结束希望断开连接时，通信双方的主机之间就可以相互交换 FIN 位为 1 的 TCP 段。</li></ul></li></ul><h3 id="TCP三次握手"><a href="#TCP三次握手" class="headerlink" title="TCP三次握手"></a>TCP三次握手</h3><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E8%BF%87%E7%A8%8B.png" alt="TCP三次握手过程"></p><ul><li>一开始，客户端和服务端都处于 CLOSE 状态。先是服务端主动监听某个端口，处于 LISTEN 状态</li></ul><h4 id="SYN报文"><a href="#SYN报文" class="headerlink" title="SYN报文"></a>SYN报文</h4><ul><li>客户端会随机初始化序号（client_isn），将此序号置于 TCP 首部的「序号」字段中，同时把 SYN 标志位置为 1，表示 SYN 报文。接着把第一个 SYN 报文发送给服务端，表示向服务端发起连接，该报文不包含应用层数据，之后客户端处于 SYN-SENT 状态。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/SYN%E6%8A%A5%E6%96%87.png" alt="SYN报文"></li></ul><h4 id="SYN-ACK报文"><a href="#SYN-ACK报文" class="headerlink" title="SYN+ACK报文"></a>SYN+ACK报文</h4><ul><li>服务端收到客户端的 SYN 报文后，首先服务端也随机初始化自己的序号（server_isn），将此序号填入 TCP 首部的「序号」字段中，其次把 TCP 首部的「确认应答号」字段填入 client_isn + 1, 接着把 SYN 和 ACK 标志位置为 1。最后把该报文发给客户端，该报文也不包含应用层数据，之后服务端处于 SYN-RCVD 状态。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/SYNACK%E6%8A%A5%E6%96%87.png" alt="SYNACK报文"></li></ul><h4 id="ACK报文"><a href="#ACK报文" class="headerlink" title="ACK报文"></a>ACK报文</h4><ul><li>客户端收到服务端报文后，还要向服务端回应最后一个应答报文，首先该应答报文 TCP 首部 ACK 标志位置为 1 ，其次「确认应答号」字段填入 server_isn + 1 ，最后把报文发送给服务端，这次报文可以携带客户到服务端的数据，之后客户端处于 ESTABLISHED 状态。</li><li>服务端收到客户端的应答报文后，也进入 ESTABLISHED 状态。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/ACK%E6%8A%A5%E6%96%87.png" alt="ACK报文"></li><li>※第三次握手是可以携带数据的，前两次握手是不可以携带数据的</li></ul><h3 id="使用三次握手的原因"><a href="#使用三次握手的原因" class="headerlink" title="使用三次握手的原因"></a>使用三次握手的原因</h3><h4 id="避免历史链接"><a href="#避免历史链接" class="headerlink" title="避免历史链接"></a>避免历史链接</h4><ul><li>RFC 793 指出的 TCP 连接使用三次握手的首要原因：<blockquote><p>The principle reason for the three-way handshake is to prevent old duplicate connection initiations from causing confusion.</p></blockquote></li><li>若只是两步握手：<ul><li>客户端给服务端发送了一个SYN报文，序号为90，但由于网络拥塞，这个报文传输的慢。接着客户端宕机重启，重新发送了一个100号的SYN报文</li><li>※此时90号先到达服务端，服务端回应了一个ACK为91的报文，此时服务端进入ESTABLISHED状态</li><li>客户端接收到ACK为91的报文，但实际上客户端想要接收到ACK为101的报文，此时客户端发送RST报文，连接中止</li></ul></li><li>若只是两步握手的话，在※处服务端就进入了半连接状态，浪费服务器资源</li><li>三次握手的过程：<ul><li>客户端给服务端发送了一个SYN报文，序号为90，但由于网络拥塞，这个报文传输的慢。接着客户端宕机重启，重新发送了一个100号的SYN报文</li><li>※此时90号先到达服务端，服务端回应了一个ACK为91的报文</li><li>客户端接收到ACK为91的报文，但实际上客户端想要接收到ACK为101的报文，此时客户端发送RST报文，连接中止</li><li>100号SYN报文到达服务端，服务端回应ACK为101的报文</li><li>客户端收到，建立连接，并发送ACK报文</li><li>服务端收到，连接建立</li></ul></li></ul><h4 id="同步双方初始序列号"><a href="#同步双方初始序列号" class="headerlink" title="同步双方初始序列号"></a>同步双方初始序列号</h4><ul><li>连接时，客户端向服务端发送一个初始序列号（SYN），服务端收到这个序列号后需要确认，同时生成自己的序列号并发送到客户端（SYN+ACK）</li><li>客户端收到服务端的序列号，告诉服务端已经收到（ACK）</li><li>作用：<ul><li>接收方可以去除重复的数据；</li><li>接收方可以根据数据包的序列号按序接收；</li><li>可以标识发送出去的数据包中， 哪些是已经被对方收到的（通过 ACK 报文中的序列号知道）；</li></ul></li></ul><h4 id="避免资源浪费"><a href="#避免资源浪费" class="headerlink" title="避免资源浪费"></a>避免资源浪费</h4><ul><li>如果只有「两次握手」，当客户端发生的 SYN 报文在网络中阻塞，客户端没有接收到 ACK 报文，就会重新发送 SYN ，由于没有第三次握手，服务端不清楚客户端是否收到了自己回复的 ACK 报文，所以服务端每收到一个 SYN 就只能先主动建立一个连接，这会造成什么情况呢？</li><li>如果客户端发送的 SYN 报文在网络中阻塞了，重复发送多次 SYN 报文，那么服务端在收到请求后就会建立多个冗余的无效链接，造成不必要的资源浪费。</li><li>即两次握手会造成消息滞留情况下，服务端重复接受无用的连接请求 SYN 报文，而造成重复分配资源。</li></ul><h3 id="TCP-三次握手，客户端第三次发送的确认包丢失了发生什么？"><a href="#TCP-三次握手，客户端第三次发送的确认包丢失了发生什么？" class="headerlink" title="TCP 三次握手，客户端第三次发送的确认包丢失了发生什么？"></a>TCP 三次握手，客户端第三次发送的确认包丢失了发生什么？</h3><ul><li>客户端收到服务端的 SYN-ACK 报文后，就会给服务端回一个 ACK 报文，也就是第三次握手，此时客户端状态进入到 ESTABLISH 状态。</li><li>因为这个第三次握手的 ACK 是对第二次握手的 SYN 的确认报文，所以当第三次握手丢失了，如果服务端那一方迟迟收不到这个确认报文，就会触发超时重传机制，每次重传都会等待2倍的超时时间，重传 SYN-ACK 报文，直到收到第三次握手，或者达到最大重传次数。<ul><li>若tcp_synack_retries 为 2，当服务端超时重传 2 次 SYN-ACK 报文后，由于 tcp_synack_retries 为 2，已达到最大重传次数，于是再等待一段时间（时间为上一次超时时间的 2 倍），如果还是没能收到客户端的第三次握手（ACK 报文），那么服务端就会断开连接。</li></ul></li><li>注意，ACK 报文是不会有重传的，当 ACK 丢失了，就由对方重传对应的报文。</li></ul><h3 id="三次握手和-accept-是什么关系？-accept-做了哪些事情？"><a href="#三次握手和-accept-是什么关系？-accept-做了哪些事情？" class="headerlink" title="三次握手和 accept 是什么关系？ accept 做了哪些事情？"></a>三次握手和 accept 是什么关系？ accept 做了哪些事情？</h3><h4 id="accept系统调用"><a href="#accept系统调用" class="headerlink" title="accept系统调用"></a>accept系统调用</h4><ul><li>accept() 是一个 服务器端的系统调用，用于从内核中“已完成连接队列”中取出一个连接，正式建立与客户端的通信通道。返回一个新的套接字，并设置客户端的地址信息</li></ul><h4 id="accept-做的事"><a href="#accept-做的事" class="headerlink" title="accept()做的事"></a>accept()做的事</h4><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/accept%E4%B8%8E%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png" alt="accept与三次握手"></p><ul><li>默认阻塞等待连接<ul><li>如果“已完成连接队列”为空，accept() 会阻塞，直到有客户端完成三次握手。</li></ul></li><li>从队列中取出连接：<ul><li>内核维护两个队列：<ul><li>半连接队列（握手未完成）</li><li>已连接队列（握手完成）</li></ul></li><li>accept() 从已连接队列中取出一个连接。</li></ul></li><li>返回新的 socket 描述符：<ul><li>这个新 socket 是专门用于与该客户端通信的，和原来的监听 socket 是分开的。</li></ul></li><li>获取客户端地址信息：<ul><li>如果你传入 addr 参数，accept() 会填充客户端的 IP 和端口信息。</li></ul></li></ul><h4 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h4><table><thead><tr><th>阶段</th><th>说明</th></tr></thead><tbody><tr><td>🔄 三次握手</td><td>TCP 协议自动完成：客户端发送 SYN，服务器回应 SYN+ACK，客户端再发 ACK</td></tr><tr><td>🎯 accept()</td><td>三次握手完成后，服务器调用 accept() 从内核的“已完成连接队列”中取出连接，返回一个新的 socket，用于后续通信</td></tr></tbody></table><h3 id="客户端发送的第一个-SYN-报文，服务器没有收到怎么办？"><a href="#客户端发送的第一个-SYN-报文，服务器没有收到怎么办？" class="headerlink" title="客户端发送的第一个 SYN 报文，服务器没有收到怎么办？"></a>客户端发送的第一个 SYN 报文，服务器没有收到怎么办？</h3><ul><li>会超时重传，第一次超时时间一般是1秒，写死在内核中，更改的话需要重新编译内核</li><li>超时重传次数有上限，SYN报文重传次数由 tcp_syn_retries内核参数控制，Linux中默认为5</li><li>每次超时重传都会等待2倍时间，第一次1秒，第二次2秒，第三次4秒…</li><li>超时重传最大次数后，客户端从SYN_SENT状态变为CLOSE状态</li></ul><h3 id="服务器收到第一个-SYN-报文，回复的-SYN-ACK-报文丢失了怎么办？"><a href="#服务器收到第一个-SYN-报文，回复的-SYN-ACK-报文丢失了怎么办？" class="headerlink" title="服务器收到第一个 SYN 报文，回复的 SYN + ACK 报文丢失了怎么办？"></a>服务器收到第一个 SYN 报文，回复的 SYN + ACK 报文丢失了怎么办？</h3><ul><li>因为SYNACK报文是对SYN报文的回复，所以这个报文丢失会导致客户端重传SYN报文 <ul><li>SYN报文重传次数由 tcp_syn_retries内核参数控制，Linux中默认为5</li></ul></li><li>因为SYNACK报文是第二次握手，所以丢失以后服务端也会进行重传<ul><li>SYNACK重传次数由tcp_synack_retries内核参数决定，默认5</li></ul></li></ul><h3 id="第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？"><a href="#第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？" class="headerlink" title="第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？"></a>第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？</h3><ul><li>服务端收到客户端发起的 SYN 请求后，内核会把该连接存储到半连接队列，并向客户端响应 SYN+ACK，接着客户端会返回 ACK，服务端收到第三次握手的 ACK 后，内核会把连接从半连接队列移除，然后创建新的完全的连接，并将其添加到 accept 队列，等待进程调用 accept 函数时把连接取出来。</li><li>不管是半连接队列还是全连接队列，都有最大长度限制，超过限制时，内核会直接丢弃，或返回 RST 包。</li></ul><h3 id="大量SYN包发送给服务端服务端会发生什么事情？"><a href="#大量SYN包发送给服务端服务端会发生什么事情？" class="headerlink" title="大量SYN包发送给服务端服务端会发生什么事情？"></a>大量SYN包发送给服务端服务端会发生什么事情？</h3><ul><li>SYN Flood 攻击，有可能会导致TCP 半连接队列打满，这样当 TCP 半连接队列满了，后续再在收到 SYN 报文就会丢弃，导致客户端无法和服务端建立连接。</li></ul><h4 id="解决方案一：调大netdev-max-backlog"><a href="#解决方案一：调大netdev-max-backlog" class="headerlink" title="解决方案一：调大netdev_max_backlog"></a>解决方案一：调大netdev_max_backlog</h4><ul><li>这个参数用来保存<strong>内核来不及处理的数据包的队列大小</strong>，默认1000。当网卡接收的速度大于内核处理速度，会满。</li><li>这一方法可以缓解网卡拥堵，降低丢包率，但不能防止半连接队列打满</li></ul><h4 id="解决方案二：增大SYN半连接队列"><a href="#解决方案二：增大SYN半连接队列" class="headerlink" title="解决方案二：增大SYN半连接队列"></a>解决方案二：增大SYN半连接队列</h4><ul><li>增大 net.ipv4.tcp_max_syn_backlog，控制半连接队列的最大长度</li><li>增大 listen() 函数中的 backlog，这是你在代码中设置的队列长度</li><li>增大 net.core.somaxconn，控制全连接队列的最大长度，也影响半连接队列的处理能力</li><li>最终队列大小是min(tcp_max_syn_backlog, somaxconn, backlog)，所以三个参数都要调大才有效。</li></ul><h4 id="解决方案三：开启-net-ipv4-tcp-syncookies——验证是否真心连接"><a href="#解决方案三：开启-net-ipv4-tcp-syncookies——验证是否真心连接" class="headerlink" title="解决方案三：开启 net.ipv4.tcp_syncookies——验证是否真心连接"></a>解决方案三：开启 net.ipv4.tcp_syncookies——验证是否真心连接</h4><ul><li>当半连接队列已满，再收到SYN报文时，并不丢弃，但也不分配连接资源</li><li>而是先构造一个特殊序列号（SYN Cookie），包含了客户端和服务端的IP、端口、时间戳、MSS（客户端声明的最大报文段长度）等</li><li>发送 SYN+ACK 报文，序列号就是 Cookie</li><li>客户端回应 ACK 后，服务器从 ACK 中恢复出原始连接信息，如果合法，将连接放入accept队列</li><li>有三个值，0表示不开启，1表示SYN队列满再使用，2表示无条件开启</li></ul><h4 id="减少SYNACK重传次数"><a href="#减少SYNACK重传次数" class="headerlink" title="减少SYNACK重传次数"></a>减少SYNACK重传次数</h4><ul><li>因为被SYN攻击时，会有大量处于SYN_RCVD的连接，这个状态的连接会重传SYNACK报文</li><li>只要减少重传次数，就能更快断开连接</li></ul><h3 id="TCP四次挥手（FIN-ACK-FIN-ACK）"><a href="#TCP四次挥手（FIN-ACK-FIN-ACK）" class="headerlink" title="TCP四次挥手（FIN-ACK-FIN-ACK）"></a>TCP四次挥手（FIN-ACK-FIN-ACK）</h3><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.png" alt="TCP四次挥手"></p><h4 id="客户端FIN"><a href="#客户端FIN" class="headerlink" title="客户端FIN"></a>客户端FIN</h4><ul><li>客户端主动调用关闭连接的函数，于是就会发送 FIN 报文，这个 FIN 报文代表客户端不会再发送数据了，进入 FIN_WAIT_1 状态；</li></ul><h4 id="服务端ACK、服务端FIN"><a href="#服务端ACK、服务端FIN" class="headerlink" title="服务端ACK、服务端FIN"></a>服务端ACK、服务端FIN</h4><ul><li>服务端收到了 FIN 报文，然后马上回复一个 ACK 确认报文，此时服务端进入 CLOSE_WAIT 状态。在收到 FIN 报文的时候，TCP 协议栈会在接收缓冲区中插入一个特殊的“文件结束符”（EOF），这个 EOF 会被放在已排队等候的其他已接收的数据之后，所以必须要得继续 read 接收缓冲区已接收的数据；</li><li>接着，当服务端在 read 数据的时候，最后自然就会读到 EOF，接着 read() 就会返回 0，这时服务端应用程序如果有数据要发送的话，就发完数据后才调用关闭连接的函数，如果服务端应用程序没有数据要发送的话，可以直接调用关闭连接的函数，这时服务端就会发一个 FIN 包，这个 FIN 报文代表服务端不会再发送数据了，之后处于 LAST_ACK 状态；</li></ul><h4 id="客户端ACK"><a href="#客户端ACK" class="headerlink" title="客户端ACK"></a>客户端ACK</h4><ul><li>客户端接收到服务端的 FIN 包，并发送 ACK 确认包给服务端，此时客户端将进入 TIME_WAIT 状态；</li><li>服务端收到 ACK 确认包后，就进入了最后的 CLOSE 状态；<br>客户端经过 2MSL（报文最大生存时间） 时间之后，也进入 CLOSE 状态；</li></ul><h3 id="为什么4次握手中间两次不能变成一次？"><a href="#为什么4次握手中间两次不能变成一次？" class="headerlink" title="为什么4次握手中间两次不能变成一次？"></a>为什么4次握手中间两次不能变成一次？</h3><ul><li>服务器收到客户端的 FIN 报文时，内核会马上回一个 ACK 应答报文，但是服务端应用程序可能还有数据要发送，所以并不能马上发送 FIN 报文，而是将发送 FIN 报文的控制权交给服务端应用程序：<ul><li>如果服务端应用程序有数据要发送的话，就发完数据后，才调用关闭连接的函数；</li><li>如果服务端应用程序没有数据要发送的话，可以直接调用关闭连接的函数，</li></ul></li><li>从上面过程可知，是否要发送第三次挥手的控制权不在内核，而是在被动关闭方（上图的服务端）的应用程序，因为应用程序可能还有数据要发送，由应用程序决定什么时候调用关闭连接的函数，当调用了关闭连接的函数，内核就会发送 FIN 报文了，所以服务端的 ACK 和 FIN 一般都会分开发送。</li></ul><h3 id="第二次和第三次挥手能合并嘛"><a href="#第二次和第三次挥手能合并嘛" class="headerlink" title="第二次和第三次挥手能合并嘛"></a>第二次和第三次挥手能合并嘛</h3><ul><li>没数据发送可以合并</li></ul><h3 id="第三次挥手一直没发，会发生什么？"><a href="#第三次挥手一直没发，会发生什么？" class="headerlink" title="第三次挥手一直没发，会发生什么？"></a>第三次挥手一直没发，会发生什么？</h3><ul><li>若客户端使用shutdown()关闭，客户端会一直停留在FIN_WAIT_2状态</li><li>若使用close()，客户端维持一段FIN_WAIT_2后，再关闭，时间受tcp_fin_timeout控制</li></ul><h3 id="第二次和第三次挥手之间，主动断开的那端能干什么"><a href="#第二次和第三次挥手之间，主动断开的那端能干什么" class="headerlink" title="第二次和第三次挥手之间，主动断开的那端能干什么"></a>第二次和第三次挥手之间，主动断开的那端能干什么</h3><ul><li>如果主动断开的一方，是调用了 shutdown 函数来关闭连接，并且只选择了关闭发送能力且没有关闭接收能力的话，那么主动断开的一方在第二次和第三次挥手之间还可以接收数据。</li><li>也就是说，在二三挥手之间，可以由服务端发送数据，客户端正常发送ACK</li></ul><h3 id="断开连接时客户端-FIN-包丢失，服务端的状态是什么？"><a href="#断开连接时客户端-FIN-包丢失，服务端的状态是什么？" class="headerlink" title="断开连接时客户端 FIN 包丢失，服务端的状态是什么？"></a>断开连接时客户端 FIN 包丢失，服务端的状态是什么？</h3><ul><li>正常情况下，客户端会进入FIN_WAIT1状态，服务端进入CLOSE_WAIT状态</li><li>客户端会超时重传，服务端依旧是ESTASBLISH状态</li></ul><h3 id="为什么四次挥手之后要等2MSL"><a href="#为什么四次挥手之后要等2MSL" class="headerlink" title="为什么四次挥手之后要等2MSL?"></a>为什么四次挥手之后要等2MSL?</h3><ul><li>MSL为报文最大生存时间，是任何报文在网络上存在的最长时间，超过此时间报文会被丢弃，TCP基于IP协议，IP协议头部有TTL字段（最大路由跳数），MSL要大于TTL消耗为0的时间</li><li>之所以是2倍MSL，是因为网络中可能存在来自发送方的数据包，当这些发送方的数据包被接收方处理后又会向对方发送响应，所以一来一回需要等待 2 倍的时间。如果被动关闭方没有收到断开连接的最后的 ACK 报文，就会触发超时重发 FIN 报文，另一方接收到 FIN 后，会重发 ACK 给被动关闭方， 一来一去正好 2 个 MSL。</li></ul><h3 id="服务端出现大量的timewait有哪些原因"><a href="#服务端出现大量的timewait有哪些原因" class="headerlink" title="服务端出现大量的timewait有哪些原因?"></a>服务端出现大量的timewait有哪些原因?</h3><h4 id="HTTP没有使用长连接"><a href="#HTTP没有使用长连接" class="headerlink" title="HTTP没有使用长连接"></a>HTTP没有使用长连接</h4><ul><li>关闭长连接后，每次请求都要握手、传数据、挥手</li><li>根据大多数 Web 服务的实现，不管哪一方禁用了 HTTP Keep-Alive，都是由服务端主动关闭连接，那么此时服务端上就会出现 TIME_WAIT 状态的连接。</li></ul><h4 id="HTTP长连接超时"><a href="#HTTP长连接超时" class="headerlink" title="HTTP长连接超时"></a>HTTP长连接超时</h4><ul><li>web 服务软件一般都会提供一个参数，用来指定 HTTP 长连接的超时时间，比如 nginx 提供的 keepalive_timeout 参数。</li><li>假设设置了 HTTP 长连接的超时时间是 60 秒，nginx 就会启动一个「定时器」，如果客户端在完后一个 HTTP 请求后，在 60 秒内都没有再发起新的请求，定时器的时间一到，nginx 就会触发回调函数来关闭该连接，那么此时服务端上就会出现 TIME_WAIT 状态的连接。</li></ul><h4 id="HTTP长连接请求数量达到上限"><a href="#HTTP长连接请求数量达到上限" class="headerlink" title="HTTP长连接请求数量达到上限"></a>HTTP长连接请求数量达到上限</h4><ul><li>Web 服务端通常会有个参数，来定义一条 HTTP 长连接上最大能处理的请求数量，当超过最大限制时，就会主动关闭连接。</li><li>比如 nginx 的 keepalive_requests 这个参数，这个参数是指一个 HTTP 长连接建立之后，nginx 就会为这个连接设置一个计数器，记录这个 HTTP 长连接上已经接收并处理的客户端请求的数量。如果达到这个参数设置的最大值时，则 nginx 会主动关闭这个长连接，那么此时服务端上就会出现 TIME_WAIT 状态的连接。</li><li>keepalive_requests 参数的默认值是 100 ，意味着每个 HTTP 长连接最多只能跑 100 次请求，这个参数往往被大多数人忽略，因为当 QPS (每秒请求数) 不是很高时，默认值 100 凑合够用。</li><li>但是，对于一些 QPS 比较高的场景，比如超过 10000 QPS，甚至达到 30000 , 50000 甚至更高，如果 keepalive_requests 参数值是 100，这时候就 nginx 就会很频繁地关闭连接，那么此时服务端上就会出大量的 TIME_WAIT 状态。</li></ul><h3 id="TCP和UDP区别"><a href="#TCP和UDP区别" class="headerlink" title="TCP和UDP区别"></a>TCP和UDP区别</h3><table><thead><tr><th>特性</th><th>TCP（传输控制协议）</th><th>UDP（用户数据报协议）</th></tr></thead><tbody><tr><td>是否连接</td><td>✅ 面向连接（三次握手）</td><td>❌ 无连接</td></tr><tr><td>可靠性</td><td>✅ 保证数据可靠传输（有确认、重传）</td><td>❌ 不保证可靠性（无确认、无重传）</td></tr><tr><td>顺序保证</td><td>✅ 保证数据按顺序到达</td><td>❌ 不保证顺序</td></tr><tr><td>流量控制</td><td>✅ 有流量控制机制</td><td>❌ 无流量控制</td></tr><tr><td>拥塞控制</td><td>✅ 有拥塞控制机制</td><td>❌ 无拥塞控制</td></tr><tr><td>传输效率</td><td>❌ 较低（因控制机制多）</td><td>✅ 高效（轻量级）</td></tr><tr><td>首部开销</td><td>TCP首部较长，不使用选项字段时为20字节</td><td>UDP首部只有8字节</td></tr><tr><td>传输方式</td><td>TCP为流式传输</td><td>UDP是一个包一个包的发送</td></tr><tr><td>适合场景</td><td>文件传输、网页浏览、邮件、远程登录等</td><td>视频直播、语音通话、游戏、DNS查询等</td></tr></tbody></table><h3 id="TCP为什么可靠传输"><a href="#TCP为什么可靠传输" class="headerlink" title="TCP为什么可靠传输"></a>TCP为什么可靠传输</h3><ul><li>连接管理：即三次握手和四次挥手。连接管理机制能够建立起可靠的连接，这是保证传输可靠性的前提。</li><li>序列号：TCP将每个字节的数据都进行了编号，这就是序列号。序列号的具体作用如下：能够保证可靠性，既能防止数据丢失，又能避免数据重复。能够保证有序性，按照序列号顺序进行数据包还原。能够提高效率，基于序列号可实现多次发送，一次确认。</li><li>确认应答：接收方接收数据之后，会回传ACK报文，报文中带有此次确认的序列号，用于告知发送方此次接收数据的情况。在指定时间后，若发送端仍未收到确认应答，就会启动超时重传。</li><li>超时重传：超时重传主要有两种场景：数据包丢失：在指定时间后，若发送端仍未收到确认应答，就会启动超时重传，向接收端重新发送数据包。确认包丢失：当接收端收到重复数据(通过序列号进行识别)时将其丢弃，并重新回传ACK报文。</li><li>流量控制：接收端处理数据的速度是有限的，如果发送方发送数据的速度过快，就会导致接收端的缓冲区溢出，进而导致丢包。为了避免上述情况的发生，TCP支持根据接收端的处理能力，来决定发送端的发送速度。这就是流量控制。流量控制是通过在TCP报文段首部维护一个滑动窗口来实现的。</li><li>拥塞控制：拥塞控制就是当网络拥堵严重时，发送端减少数据发送。拥塞控制是通过发送端维护一个拥塞窗口来实现的。可以得出，发送端的发送速度，受限于滑动窗口和拥塞窗口中的最小值。拥塞控制方法分为：慢开始，拥塞避免、快重传和快恢复。</li></ul><h3 id="如何使用UDP实现HTTP"><a href="#如何使用UDP实现HTTP" class="headerlink" title="如何使用UDP实现HTTP"></a>如何使用UDP实现HTTP</h3><h4 id="使用QUIC协议"><a href="#使用QUIC协议" class="headerlink" title="使用QUIC协议"></a>使用QUIC协议</h4><ul><li>实现了序列号、ACK、重传机制</li><li>实现了拥塞控制</li><li>包含TLS1.3</li></ul><h4 id="自己实现（应用层）"><a href="#自己实现（应用层）" class="headerlink" title="自己实现（应用层）"></a>自己实现（应用层）</h4><ul><li>给每个 UDP 包加上序列号</li><li>实现 ACK 和重传机制</li><li>加入超时控制</li><li>加密传输（如 TLS）</li><li>自定义协议头（类似 QUIC）</li></ul><h3 id="tcp粘包怎么解决？"><a href="#tcp粘包怎么解决？" class="headerlink" title="tcp粘包怎么解决？"></a>tcp粘包怎么解决？</h3><ul><li>粘包的问题出现是因为不知道一个用户消息的边界在哪，如果知道了边界在哪，接收方就可以通过边界来划分出有效的用户消息。</li></ul><h4 id="固定消息长度"><a href="#固定消息长度" class="headerlink" title="固定消息长度"></a>固定消息长度</h4><ul><li>顾名思义</li></ul><h4 id="特殊字符作为边界"><a href="#特殊字符作为边界" class="headerlink" title="特殊字符作为边界"></a>特殊字符作为边界</h4><ul><li>在消息之间插入一些特殊字符，当读到这个字符时，就认为已经读完一条消息</li><li>HTTP设置回车、换行符作为边界</li><li>如果消息中刚好存在这个字符，我们需要设置转义字符</li></ul><h4 id="自定义消息体结构"><a href="#自定义消息体结构" class="headerlink" title="自定义消息体结构"></a>自定义消息体结构</h4><ul><li>我们可以自定义一个消息结构，由包头和数据组成，其中包头包是固定大小的，而且包头里有一个字段来说明紧随其后的数据有多大。</li><li>比如这个消息结构体，首先 4 个字节大小的变量来表示数据长度，真正的数据则在后面。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> &#123;</span> <br>    <span class="hljs-type">u_int32_t</span> message_length; <br>    <span class="hljs-type">char</span> message_data[]; <br>&#125; message;<br></code></pre></td></tr></table></figure></li><li>从包头中解析到消息的大小，就可以知道消息边界了</li></ul><h3 id="TCP的拥塞控制介绍一下？"><a href="#TCP的拥塞控制介绍一下？" class="headerlink" title="TCP的拥塞控制介绍一下？"></a>TCP的拥塞控制介绍一下？</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><ul><li>TCP通过降低发送的数据量来进行拥塞控制</li><li>使用拥塞窗口cwnd，它会根据网络拥塞程度动态变化。发送窗口 swnd 和接收窗口 rwnd 是约等于的关系，那么由于加入了拥塞窗口的概念后，此时发送窗口的值是swnd &#x3D; min(cwnd, rwnd)，也就是拥塞窗口和接收窗口中的最小值。<ul><li>只要网络中没有出现拥塞，cwnd 就会增大；但网络中出现了拥塞，cwnd 就减少；</li><li>如果发生了超时重传，说明网络出现了拥塞</li></ul></li><li>拥塞控制主要是四个算法：</li></ul><h4 id="慢启动"><a href="#慢启动" class="headerlink" title="慢启动"></a>慢启动</h4><ul><li>规则：当发送方每收到一个 ACK，拥塞窗口 cwnd 的大小就会加 1。</li><li>假定拥塞窗口 cwnd 和发送窗口 swnd 相等，连接建立完成后，一开始初始化 cwnd &#x3D; 1，表示可以传一个 MSS 大小的数据。</li><li>当收到一个 ACK 确认应答后，cwnd 增加 1，于是一次能够发送 2 个</li><li>当收到 2 个的 ACK 确认应答后， cwnd 增加 2，于是就可以比之前多发2 个，所以这一次能够发送 4 个</li><li>当这 4 个的 ACK 确认到来的时候，每个确认 cwnd 增加 1， 4 个确认 cwnd 增加 4，于是就可以比之前多发 4 个，所以这一次能够发送 8 个。</li><li>直到达到慢启动门限 ssthresh （slow start threshold）一般来说 ssthresh 的大小是 65535 字节。<ul><li>当 cwnd &lt; ssthresh 时，使用慢启动算法。</li><li>当 cwnd &gt;&#x3D; ssthresh 时，就会使用「拥塞避免算法」。</li></ul></li></ul><h4 id="拥塞避免算法"><a href="#拥塞避免算法" class="headerlink" title="拥塞避免算法"></a>拥塞避免算法</h4><ul><li>当拥塞窗口 cwnd 「超过」慢启动门限 ssthresh 就会进入拥塞避免算法。</li><li>规则是：每当收到一个 ACK 时，cwnd 增加 1&#x2F;cwnd。</li></ul><h4 id="拥塞发生算法"><a href="#拥塞发生算法" class="headerlink" title="拥塞发生算法"></a>拥塞发生算法</h4><ul><li>分为超时重传和快速重传</li><li>超时重传：拥塞避免+慢启动<ul><li>将慢启动阈值ssthresh设为cwnd&#x2F;2</li><li>cwnd&#x3D;1</li><li>但是这种方式太激进了，反应也很强烈，会造成网络卡顿。</li></ul></li><li>快速重传：少量数据包丢失<ul><li>当收到乱序的数据包时，会连续发送三个期待的ACK，告诉发送方重传</li><li>发送方收到三个相同ACK的包，立即重传</li></ul></li></ul><h4 id="快速恢复算法"><a href="#快速恢复算法" class="headerlink" title="快速恢复算法"></a>快速恢复算法</h4><ul><li>和快速重传搭配使用</li><li>将慢启动阈值ssthresh设为cwnd&#x2F;2</li><li>然后将cwnd设置为ssthresh+3MSS（最大段大小）</li><li>执行拥塞避免算法，逐渐增加cwnd</li><li>这是因为收到三个重复的 ACK，说明网络中还有一定的带宽可用，不需要像传统的慢启动那样将 cwnd 一下子降为 1。</li></ul><h2 id="网络场景"><a href="#网络场景" class="headerlink" title="网络场景"></a>网络场景</h2><h3 id="浏览器访问-URL-的全过程解析"><a href="#浏览器访问-URL-的全过程解析" class="headerlink" title="浏览器访问 URL 的全过程解析"></a>浏览器访问 URL 的全过程解析</h3><h4 id="解析URL"><a href="#解析URL" class="headerlink" title="解析URL"></a>解析URL</h4><ul><li>分析 URL 所需要使用的传输协议和请求的资源路径。如果输入的 URL 中的协议或者主机名不合法，将会把地址栏中输入的内容传递给搜索引擎。如果没有问题，浏览器会检查 URL 中是否出现了非法字符，则对非法字符进行转义后在进行下一过程。</li></ul><h4 id="从缓存中查看域名的IP"><a href="#从缓存中查看域名的IP" class="headerlink" title="从缓存中查看域名的IP"></a>从缓存中查看域名的IP</h4><ul><li>浏览器尝试从以下缓存中获取域名对应的 IP 地址：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">浏览器<span class="hljs-built_in"> DNS </span>缓存 → 操作系统 hosts 文件 → 路由器缓存 → ISP<span class="hljs-built_in"> DNS </span>缓存<br></code></pre></td></tr></table></figure></li><li>如果命中缓存，直接返回 IP 地址，跳过 DNS 查询。</li></ul><h4 id="DNS-解析阶段（如果缓存未命中）"><a href="#DNS-解析阶段（如果缓存未命中）" class="headerlink" title="DNS 解析阶段（如果缓存未命中）"></a>DNS 解析阶段（如果缓存未命中）</h4><ul><li>浏览器向本地 DNS 服务器发起查询请求。</li><li>若本地 DNS 无记录，则递归查询：<ul><li>根域名服务器（.）</li><li>顶级域名服务器（如 .com）</li><li>权威域名服务器（如 example.com）</li></ul></li><li>最终返回目标主机的 IP 地址。</li></ul><h4 id="MAC-地址解析阶段（链路层准备）"><a href="#MAC-地址解析阶段（链路层准备）" class="headerlink" title="MAC 地址解析阶段（链路层准备）"></a>MAC 地址解析阶段（链路层准备）</h4><ul><li>网络层将目标 IP 地址下发给数据链路层。</li><li>判断目标 IP 是否在同一子网：<ul><li>✅ 同一子网：使用 ARP 协议获取目标主机的 MAC 地址</li><li>❌ 不同子网：通过网关转发，使用 ARP 获取网关的 MAC 地址</li></ul></li><li>构造以太网帧，包含源 MAC 和目标 MAC。</li></ul><h4 id="建立-TCP-连接（三次握手）"><a href="#建立-TCP-连接（三次握手）" class="headerlink" title="建立 TCP 连接（三次握手）"></a>建立 TCP 连接（三次握手）</h4><h4 id="建立-TLS-连接（HTTPS-的四次握手）"><a href="#建立-TLS-连接（HTTPS-的四次握手）" class="headerlink" title="建立 TLS 连接（HTTPS 的四次握手）"></a>建立 TLS 连接（HTTPS 的四次握手）</h4><ul><li>客户端发送 ClientHello（包含加密参数）</li><li>服务器回应 ServerHello（返回证书等）</li><li>客户端验证证书，生成密钥</li><li>双方完成密钥交换，建立加密通道</li></ul><h4 id="发送-HTTP-请求"><a href="#发送-HTTP-请求" class="headerlink" title="发送 HTTP 请求"></a>发送 HTTP 请求</h4><ul><li>浏览器构造并发送 HTTP 请求报文：<ul><li>请求方法（GET、POST 等）</li><li>请求头（User-Agent、Cookie、Accept 等）</li><li>请求体（如表单数据）</li></ul></li></ul><h4 id="服务器处理并返回响应"><a href="#服务器处理并返回响应" class="headerlink" title="服务器处理并返回响应"></a>服务器处理并返回响应</h4><h3 id="访问网页开始转圈怎么排查问题"><a href="#访问网页开始转圈怎么排查问题" class="headerlink" title="访问网页开始转圈怎么排查问题"></a>访问网页开始转圈怎么排查问题</h3><ul><li>先确定是服务端的问题，还是客户端的问题。先确认浏览器是否可以访问其他网站，如果不可以，说明客户端网络自身的问题，然后检查客户端网络配置（连接wifi正不正常，有没有插网线）；如果可以正常其他网页，说明客户端网络是可以正常上网的。</li><li>如果客户端网络没问题，就抓包确认 DNS 是否解析出了 IP 地址，如果没有解析出来，说明域名写错了，如果解析出了 IP 地址，抓包确认有没有和服务端建立三次握手，如果能成功建立三次握手，并且发出了 HTTP 请求，但是就是没有显示页面，可以查看服务端返回的响应码：<ul><li>如果是404错误码，检查输入的url是否正确；</li><li>如果是500，说明服务器此时有问题；</li><li>如果是200，F12看看前端代码有问题导致浏览器没有渲染出页面。</li></ul></li><li>如果客户端网络是正常的，但是访问速度很慢，导致很久才显示出来。这时候要看客户端的网口流量是否太大的了，导致tcp发生丢包之类的问题。</li></ul><h3 id="server-a和server-b，如何判断两个服务器正常连接？"><a href="#server-a和server-b，如何判断两个服务器正常连接？" class="headerlink" title="server a和server b，如何判断两个服务器正常连接？"></a>server a和server b，如何判断两个服务器正常连接？</h3><h4 id="TCP保活机制"><a href="#TCP保活机制" class="headerlink" title="TCP保活机制"></a>TCP保活机制</h4><ul><li>定义一个时间段，在这个时间段内，如果没有任何连接相关的活动，TCP 保活机制会开始作用，每隔一个时间间隔，发送一个探测报文，该探测报文包含的数据非常少，如果连续几个探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，系统内核将错误信息通知给上层应用程序。</li><li>Linux默认值：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">net.ipv4.tcp_keepalive_time</span> = <span class="hljs-number">7200</span>     <span class="hljs-comment"># 空闲多久开始探测（默认2小时）</span><br><span class="hljs-attr">net.ipv4.tcp_keepalive_intvl</span> = <span class="hljs-number">75</span>      <span class="hljs-comment"># 探测间隔时间</span><br><span class="hljs-attr">net.ipv4.tcp_keepalive_probes</span> = <span class="hljs-number">9</span>      <span class="hljs-comment"># 探测次数检测 9 次无响应，认为对方是不可达的，从而中断本次的连接。</span><br></code></pre></td></tr></table></figure></li><li>也就是说在 Linux 系统中，最少需要经过 2 小时 11 分 15 秒才可以发现一个「死亡」连接。</li><li>正常时，TCP保活的探测报文发送到对端，对端正常回应，此时重置保活时间</li><li>当对端主机宕机并重启时，TCP保活的探测报文发送到对端，对端可以响应，但因为没有该连接的有效信息，所以返回一个RST报文，这样就会很快发现TCP连接已重置</li><li>对端主机宕机，或对端由于其他原因导致报文不可达。当 TCP 保活的探测报文发送给对端后，石沉大海，没有响应，连续几次，达到保活探测次数后，TCP 会报告该 TCP 连接已经死亡。</li></ul><h4 id="心跳机制"><a href="#心跳机制" class="headerlink" title="心跳机制"></a>心跳机制</h4><ul><li>web 服务软件一般都会提供 keepalive_timeout 参数，用来指定 HTTP 长连接的超时时间。如果设置了 HTTP 长连接的超时时间是 60 秒，web 服务软件就会启动一个定时器，如果客户端在完成一个 HTTP 请求后，在 60 秒内都没有再发起新的请求，定时器的时间一到，就会触发回调函数来释放该连接。</li></ul><h3 id="服务端正常启动了，但是客户端请求不到有哪些原因-如何排查"><a href="#服务端正常启动了，但是客户端请求不到有哪些原因-如何排查" class="headerlink" title="服务端正常启动了，但是客户端请求不到有哪些原因?如何排查?"></a>服务端正常启动了，但是客户端请求不到有哪些原因?如何排查?</h3><h4 id="排查无响应"><a href="#排查无响应" class="headerlink" title="排查无响应"></a>排查无响应</h4><ul><li>检查接口IP地址是否正确，ping一下接口地址。</li><li>检查被测接口端口号是否正确，可以在本机Telnet接口的IP和端口号，检查端口号能否连通</li><li>检查服务器的防火墙是否关闭，如果是以为安全或者权限问题不能关闭，需要找运维进行策略配置，开放对应的IP和端口。</li><li>检查你的客户端（浏览器、测试工具 (opens new window)），是否设置了网络代理，网络代理可以造成请求失败。</li></ul><h4 id="排查有响应"><a href="#排查有响应" class="headerlink" title="排查有响应"></a>排查有响应</h4><ul><li>400：客户端请求错误，比如请求参数格式错误</li><li>401：未授权，比如请求header里，缺乏必要的信息头。（token，auth等）</li><li>403：禁止，常见原因是因为用户的账号没有对应的URL权限，还有就是项目中所用的中间件，不允许远程连接（Tomcat）</li><li>404：资源未找到，导致这种情况的原因很多，比如URL地址不正确</li><li>500：服务器内部错误，出现这种情况，说明服务器内部报错了 ，需要登录服务器，检查错误日志，根具体的提示信息在进行排查</li><li>502&#x2F;503&#x2F;504（错误的网关、服务器无法获得、网关超时）：如果单次调用接口就报该错误，说明后端服务器配置有问题或者服务不可用，挂掉了；如果是并发压测时出现的，说明后端压力太大，出现异常，此问题一般是后端出现了响应时间过长或者是无响应造成的</li></ul><h3 id="服务器ping不通但是http能请求成功，会出现这种情况吗-什么原因造成的"><a href="#服务器ping不通但是http能请求成功，会出现这种情况吗-什么原因造成的" class="headerlink" title="服务器ping不通但是http能请求成功，会出现这种情况吗?什么原因造成的?"></a>服务器ping不通但是http能请求成功，会出现这种情况吗?什么原因造成的?</h3><ul><li>ping 走的是 icmp 协议，http 走的是 tcp 协议。</li><li>有可能服务器的防火墙禁止 icmp 协议，但是 tcp 协议没有禁止，就会出现服务器 ping 不通，但是 http 能请求成果。</li></ul><h2 id="网络攻击"><a href="#网络攻击" class="headerlink" title="网络攻击"></a>网络攻击</h2><h3 id="什么是ddos攻击？怎么防范？"><a href="#什么是ddos攻击？怎么防范？" class="headerlink" title="什么是ddos攻击？怎么防范？"></a>什么是ddos攻击？怎么防范？</h3><h4 id="ddos攻击"><a href="#ddos攻击" class="headerlink" title="ddos攻击"></a>ddos攻击</h4><ul><li>攻击者控制一系列设备，组成僵尸网络，向被攻击服务器发送大量请求</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li>网络层攻击：例如ICMP Flood（Ping Flood）利用 ICMP 协议发送大量 ping 请求，消耗目标的处理能力和带宽。UDP Flood，向目标发送大量无连接的 UDP 数据包，目标主机需处理每个包，造成资源耗尽。</li><li>传输层攻击：SYN Flood，利用 TCP 三次握手机制，发送大量 SYN 请求但不完成握手，造成半连接堆积。</li><li>应用层攻击：HTTP Flood模拟大量合法的 HTTP 请求（GET&#x2F;POST），压垮 Web 服务。</li></ul><h4 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h4><ul><li>增强网络基础设施：提升网络带宽、增加服务器的处理能力和承载能力，通过增强基础设施的能力来抵御攻击。</li><li>使用防火墙和入侵检测系统：配置防火墙规则，限制不必要的网络流量，阻止来自可疑IP地址的流量。入侵检测系统可以帮助及时发现并响应DDoS攻击。</li><li>流量清洗和负载均衡：使用专业的DDoS防护服务提供商，通过流量清洗技术过滤掉恶意流量，将合法流量转发给目标服务器。负载均衡可以将流量均匀地分发到多台服务器上，减轻单一服务器的压力。</li><li>配置访问控制策略：限制特定IP地址或IP段的访问，设置访问频率限制，防止过多请求集中在单个IP上。</li></ul><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><ul><li>攻击者通过在 Web 应用的输入字段中插入恶意的 SQL 语句，从而操控后台数据库执行非预期操作，例如读取敏感数据、绕过身份验证、修改或删除数据，甚至控制整个数据库系统</li></ul><h4 id="防范-1"><a href="#防范-1" class="headerlink" title="防范"></a>防范</h4><ul><li>输入验证和转义：对输入进行验证和转义。确保输入符合预期格式，并防止任何可能导致SQL注入的特殊字符。</li><li>使用参数化查询：使用参数化查询可以避免直接将用户输入嵌入到SQL查询中。参数化查询使用预定义的变量来接收用户输入，并将其传递给数据库引擎，而不是直接将其用作查询的一部分。这样可以防止SQL注入攻击。</li><li>限制数据库权限：限制数据库用户的权限，只授予他们执行所需操作所需的最低权限。攻击者可能具有比预期更多的权限，这可能会使攻击更加容易。</li><li>实施输入过滤：在某些情况下，实施输入过滤可以进一步减少SQL注入的风险。这可能涉及检查和过滤用户输入中的特殊字符和词汇，以排除可能的恶意输入。</li></ul><h3 id="CSRF攻击"><a href="#CSRF攻击" class="headerlink" title="CSRF攻击"></a>CSRF攻击</h3><h4 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h4><ul><li>用户登陆了可信网站A，A给浏览器返回了一个sessionId，保存在浏览器中</li><li>用户打开了恶意网站B，B中嵌入了一个恶意请求</li><li>浏览器根据B的请求，向A发送请求</li><li>由于Cookie是正确的，所以A会正常响应这个请求</li></ul><h4 id="防范-2"><a href="#防范-2" class="headerlink" title="防范"></a>防范</h4><ul><li>CSRF Token：每次生成页面或表单时，服务器附加一个随机生成的令牌（Token）该令牌与用户会话绑定，存储在服务器端。用户提交请求时，必须携带该 Token（通常放在表单字段或请求头中）服务器验证 Token 是否匹配，若不匹配则拒绝请求</li><li>验证Referer头：服务器检查请求头中的 Referer 或 Origin 字段。若来源不是本站域名，则拒绝请求</li><li>双重验证机制（验证码 &#x2F; 二次确认）：在敏感操作前要求用户输入验证码或点击确认按钮</li></ul><h3 id="XSS攻击"><a href="#XSS攻击" class="headerlink" title="XSS攻击"></a>XSS攻击</h3><h4 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h4><ul><li>恶意脚本通过 URL 参数或表单提交传入，服务端未做过滤，直接“反射”到页面中</li></ul><h4 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h4><ul><li>恶意脚本被存储在数据库、文件或缓存中。页面渲染时从后端读取并执行</li></ul><h4 id="基于DOM的XSS"><a href="#基于DOM的XSS" class="headerlink" title="基于DOM的XSS"></a>基于DOM的XSS</h4><ul><li>通过修改原始的客户端代码，受害者浏览器的 DOM 环境改变，导致有效载荷的执行。也就是说，页面本身并没有变化，但由于 DOM 环境被恶意修改，有客户端代码被包含进了页面，并且意外执行。</li></ul><h4 id="防范-3"><a href="#防范-3" class="headerlink" title="防范"></a>防范</h4><ul><li>输入验证：对所有用户输入的数据进行有效性检验，过滤或转义特殊字符。例如，禁止用户输入HTML标签和JavaScript代码。</li><li>Content Security Policy（CSP）：通过设置CSP策略，限制网页中可执行的脚本源，有效防范XSS攻击。</li><li>输出编码：在网页输出用户输入内容时，使用合适的编码方式，如HTML转义、URL编码等，防止恶意脚本注入。</li><li>使用HttpOnly标记：在设置Cookie时，设置HttpOnly属性，使得Cookie无法被JavaScript代码读取，减少受到XSS攻击的可能。</li></ul><h3 id="DNS劫持"><a href="#DNS劫持" class="headerlink" title="DNS劫持"></a>DNS劫持</h3><ul><li>攻击者在用户查询DNS服务器时篡改响应，将用户请求的域名映射到攻击者控制的虚假IP地址上，使用户误以为访问的是正常网站，实际上被重定向到攻击者操控的恶意网站。这种劫持可以通过植入恶意的DNS记录或劫持用户的DNS流量来实现。</li></ul><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="用户态和内核态"><a href="#用户态和内核态" class="headerlink" title="用户态和内核态"></a>用户态和内核态</h2><h3 id="用户态和内核态的区别？"><a href="#用户态和内核态的区别？" class="headerlink" title="用户态和内核态的区别？"></a>用户态和内核态的区别？</h3><ul><li>内核态（Kernel Mode）：在内核态下，CPU可以执行所有的指令和访问所有的硬件资源。这种模式下的操作具有更高的权限，主要用于操作系统内核的运行。主要操作包括：系统调用、异常处理、硬件中断</li><li>用户态（User Mode）：在用户态下，CPU只能执行部分指令集，无法直接访问硬件资源。这种模式下的操作权限较低，主要用于运行用户程序。</li><li>区分的原因：<ul><li>安全：用户程序无法直接访问硬件资源，避免恶意程序对系统资源的破坏</li><li>稳定：用户态程序出现问题时，不会影响到整个系统，避免了程序故障导致系统崩溃风险</li><li>隔离：使内核与用户程序之间有明显的边界，有利于系统的模块化和维护</li></ul></li></ul><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><h3 id="线程和进程"><a href="#线程和进程" class="headerlink" title="线程和进程"></a>线程和进程</h3><h4 id="本质区别（定义）"><a href="#本质区别（定义）" class="headerlink" title="本质区别（定义）"></a>本质区别（定义）</h4><ul><li>进程是操作系统资源分配的基本单位，而线程是任务调度和执行的基本单位</li></ul><h4 id="切换的开销"><a href="#切换的开销" class="headerlink" title="切换的开销"></a>切换的开销</h4><ul><li>每个进程都有独立的代码和数据空间（程序上下文），程序之间的切换会有较大的开销；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每个线程都有自己独立的运行栈和程序计数器（PC），线程之间切换的开销小</li></ul><h4 id="稳定性"><a href="#稳定性" class="headerlink" title="稳定性"></a>稳定性</h4><ul><li>进程中的线程而不能钢盔，可能导致整个进程崩溃，进程中的子进程崩溃，并不会影响其他进程</li></ul><h4 id="内存分配方面"><a href="#内存分配方面" class="headerlink" title="内存分配方面"></a>内存分配方面</h4><ul><li>系统在运行的时候会为每个进程分配不同的内存空间；而对线程而言，除了CPU外，系统不会为线程分配内存（线程所使用的资源来自其所属进程的资源），线程组之间只能共享资源</li></ul><h4 id="包含关系"><a href="#包含关系" class="headerlink" title="包含关系"></a>包含关系</h4><ul><li>没有线程的进程可以看做是单线程的，如果一个进程内有多个线程，则执行过程不是一条线的，而是多条线</li></ul><h3 id="进程，线程，协程的区别是什么？"><a href="#进程，线程，协程的区别是什么？" class="headerlink" title="进程，线程，协程的区别是什么？"></a>进程，线程，协程的区别是什么？</h3><h4 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h4><ul><li>进程是操作系统中进行资源分配和调度的基本单位，它拥有自己的独立内存空间和系统资源。每个进程都有独立的堆和栈，不与其他进程共享。进程间通信需要通过特定的机制，如管道、消息队列、信号量等。由于进程拥有独立的内存空间，因此其稳定性和安全性相对较高，但同时上下文切换的开销也较大，因为需要保存和恢复整个进程的状态。</li></ul><h4 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h4><ul><li>线程是进程内的一个执行单元，也是CPU调度和分派的基本单位。与进程不同，线程共享进程的内存空间，包括堆和全局变量。线程之间通信更加高效，因为它们可以直接读写共享内存。线程的上下文切换开销较小，因为只需要保存和恢复线程的上下文，而不是整个进程的状态。然而，由于多个线程共享内存空间，因此存在数据竞争和线程安全的问题，需要通过同步和互斥机制来解决。</li></ul><h4 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h4><ul><li>协程是一种用户态的轻量级线程，其调度完全由用户程序控制，而不需要内核的参与。协程拥有自己的寄存器上下文和栈，但与其他协程共享堆内存。协程的切换开销非常小，因为只需要保存和恢复协程的上下文，而无需进行内核级的上下文切换。这使得协程在处理大量并发任务时具有非常高的效率。然而，协程需要程序员显式地进行调度和管理，相对于线程和进程来说，其编程模型更为复杂。</li></ul><h3 id="为什么进程崩溃不会对其他进程产生很大影响"><a href="#为什么进程崩溃不会对其他进程产生很大影响" class="headerlink" title="为什么进程崩溃不会对其他进程产生很大影响"></a>为什么进程崩溃不会对其他进程产生很大影响</h3><ul><li>进程隔离性：每个进程都有自己独立的内存空间，当一个进程崩溃时，其内存空间会被操作系统回收，不会影响其他进程的内存空间。这种进程间的隔离性保证了一个进程崩溃不会直接影响其他进程的执行。</li><li>进程独立性：每个进程都是独立运行的，它们之间不会共享资源，如文件、网络连接等。因此，一个进程的崩溃通常不会对其他进程的资源产生影响。</li></ul><h3 id="操作系统给进程分配了什么资源"><a href="#操作系统给进程分配了什么资源" class="headerlink" title="操作系统给进程分配了什么资源"></a>操作系统给进程分配了什么资源</h3><ul><li>虚拟内存、文件句柄、信号量等资源。</li></ul><h3 id="多线程比单线程的优势，劣势？"><a href="#多线程比单线程的优势，劣势？" class="headerlink" title="多线程比单线程的优势，劣势？"></a>多线程比单线程的优势，劣势？</h3><ul><li>优势：提高程序的运行效率，可以充分利用多核处理器的资源，同时处理多个任务，加快程序的执行速度。</li><li>劣势：存在多线程数据竞争访问的问题，需要通过锁机制来保证线程安全，增加了加锁的开销，并且还会有死锁的风险。多线程会消耗更多系统资源，如CPU和内存，因为每个线程都需要占用一定的内存和处理时间。</li></ul><h3 id="多线程是不是越多越好，太多会有什么问题？"><a href="#多线程是不是越多越好，太多会有什么问题？" class="headerlink" title="多线程是不是越多越好，太多会有什么问题？"></a>多线程是不是越多越好，太多会有什么问题？</h3><ul><li>切换开销：线程的创建和切换会消耗系统资源，包括内存和CPU。如果创建太多线程，会占用大量的系统资源，导致系统负载过高，某个线程崩溃后，可能会导致进程崩溃。</li><li>死锁的问题：过多的线程可能会导致竞争条件和死锁。竞争条件指的是多个线程同时访问和修改共享资源，如果没有合适的同步机制，可能会导致数据不一致或错误的结果。而死锁则是指多个线程相互等待对方释放资源，导致程序无法继续执行。</li></ul><h3 id="进程切换和线程切换区别"><a href="#进程切换和线程切换区别" class="headerlink" title="进程切换和线程切换区别"></a>进程切换和线程切换区别</h3><ul><li>进程切换：进程切换涉及到更多的内容，包括整个进程的地址空间、全局变量、文件描述符等。因此，进程切换的开销通常比线程切换大。</li><li>线程切换：线程切换只涉及到线程的堆栈、寄存器和程序计数器等，不涉及进程级别的资源，因此线程切换的开销较小。</li></ul><h3 id="线程切换为什么比进程切换快，节省了什么资源？"><a href="#线程切换为什么比进程切换快，节省了什么资源？" class="headerlink" title="线程切换为什么比进程切换快，节省了什么资源？"></a>线程切换为什么比进程切换快，节省了什么资源？</h3><ul><li>线程切换快，因为线程之间共享同一个进程的资源，不需要重新加载或切换这些资源。</li><li>进程切换慢，因为每个进程拥有独立资源，切换时必须保存和恢复大量上下文。</li><li>节省了地址空间、页表TLB、文件描述符表、内核数据结构中的PCB</li></ul><h3 id="线程切换详细过程是怎么样的？上下文保存在哪里？"><a href="#线程切换详细过程是怎么样的？上下文保存在哪里？" class="headerlink" title="线程切换详细过程是怎么样的？上下文保存在哪里？"></a>线程切换详细过程是怎么样的？上下文保存在哪里？</h3><h4 id="过程-2"><a href="#过程-2" class="headerlink" title="过程"></a>过程</h4><ul><li>保存当前线程状态：将当前线程的寄存器、PC、SP 等保存到它的 TCB 中</li><li>更新线程状态：把当前线程标记为“就绪”或“阻塞”</li><li>选择下一个线程：调度器根据算法（如时间片轮转、优先级）选出下一个线程</li><li>恢复新线程状态：从新线程的 TCB 中恢复寄存器、PC、SP 等，设置为“运行”态，CPU开始执行它的指令</li></ul><h4 id="保存位置"><a href="#保存位置" class="headerlink" title="保存位置"></a>保存位置</h4><ul><li>一般情况下，上下文信息会保存在线程的控制块（Thread Control Block，TCB）中。</li><li>TCB是操作系统用于管理线程的数据结构，包含了线程的状态、寄存器的值、堆栈信息等。</li></ul><h3 id="进程五状态模型"><a href="#进程五状态模型" class="headerlink" title="进程五状态模型"></a>进程五状态模型</h3><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%BF%9B%E7%A8%8B%E4%BA%94%E7%8A%B6%E6%80%81%E6%A8%A1%E5%9E%8B.png" alt="进程五状态模型"></p><ul><li>创建态 → 就绪态系统完成创建进程相关的工作</li><li>就绪态 → 运行态进程被调度</li><li>运行态 → 就绪态时间片到，或CPU被其他高优先级的进程抢占</li><li>运行态 → 阻塞态等待系统资源分配，或等待某事件发生（“系统调用”的方式，主动行为）</li><li>阻塞态 → 就绪态资源分配到位，等待的事件发生（不是进程自身能控制的，被动行为）</li><li>运行态 → 终止态进程运行结束，或运行过程中遇到不可修复的错误</li></ul><h3 id="进程上下文有哪些？"><a href="#进程上下文有哪些？" class="headerlink" title="进程上下文有哪些？"></a>进程上下文有哪些？</h3><ul><li>进程是由内核管理和调度的，所以进程的切换只能发生在内核态。</li><li>所以，进程的上下文切换不仅包含了虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的资源。</li></ul><h3 id="进程间通讯有哪些方式？"><a href="#进程间通讯有哪些方式？" class="headerlink" title="进程间通讯有哪些方式？"></a>进程间通讯有哪些方式？</h3><h4 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h4><ul><li>匿名管道：顾名思义，它没有名字标识，匿名管道是特殊文件只存在于内存，没有存在于文件系统中，shell 命令中的「|」竖线就是匿名管道，通信的数据是无格式的流并且大小受限，通信的方式是单向的，数据只能在一个方向上流动，如果要双向通信，需要创建两个管道，再来匿名管道是只能用于存在父子关系的进程间通信，匿名管道的生命周期随着进程创建而建立，随着进程终止而消失。</li><li>命名管道：突破了匿名管道只能在亲缘关系进程间的通信限制，因为使用命名管道的前提，需要在文件系统创建一个类型为 p 的设备文件，那么毫无关系的进程就可以通过这个设备文件进行通信。另外，不管是匿名管道还是命名管道，进程写入的数据都是缓存在内核中，另一个进程读取数据时候自然也是从内核中获取，同时通信数据都遵循先进先出原则，不支持 lseek 之类的文件定位操作。<ul><li>读取同一个管道文件的进程会从这个文件的inode中找到同一个pipe_inode_info 内核对象，pipe_inode_info 就是真正存放数据和同步信息的内核对象。从而使用同一个内核缓冲区进行通信。</li></ul></li></ul><h4 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h4><ul><li>克服了管道通信的数据是无格式的字节流的问题，消息队列实际上是保存在内核的「消息链表」，消息队列的消息体是可以用户自定义的数据类型，发送数据时，会被分成一个一个独立的消息体，当然接收数据时，也要与发送方发送的消息体的数据类型保持一致，这样才能保证读取的数据是正确的。消息队列通信的速度不是最及时的，毕竟每次数据的写入和读取都需要经过用户态与内核态之间的拷贝过程。</li></ul><h4 id="共享内存"><a href="#共享内存" class="headerlink" title="共享内存"></a>共享内存</h4><ul><li>共享内存可以解决消息队列通信中用户态与内核态之间数据拷贝过程带来的开销，它直接分配一个共享空间，每个进程都可以直接访问，就像访问进程自己的空间一样快捷方便，不需要陷入内核态或者系统调用，大大提高了通信的速度，享有最快的进程间通信方式之名。但是便捷高效的共享内存通信，带来新的问题，多进程竞争同个共享资源会造成数据的错乱。</li></ul><h4 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h4><ul><li>需要信号量来保护共享资源，以确保任何时刻只能有一个进程访问共享资源，这种方式就是互斥访问。信号量不仅可以实现访问的互斥性，还可以实现进程间的同步，信号量其实是一个计数器，表示的是资源个数，其值可以通过两个原子操作来控制，分别是 P 操作和 V 操作。</li></ul><h4 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h4><ul><li>信号是异步通信机制，信号可以在应用进程和内核之间直接交互，内核也可以利用信号来通知用户空间的进程发生了哪些系统事件，信号事件的来源主要有硬件来源（如键盘 Cltr+C ）和软件来源（如 kill 命令），一旦有信号发生，进程有三种方式响应信号 1. 执行默认操作、2. 捕捉信号、3. 忽略信号。有两个信号是应用进程无法捕捉和忽略的，即 SIGKILL 和 SIGSTOP，这是为了方便我们能在任何时候结束或停止某个进程。</li></ul><h4 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h4><ul><li>如果要与不同主机的进程间通信，那么就需要 Socket 通信了。Socket 实际上不仅用于不同的主机进程间通信，还可以用于本地主机进程间通信，可根据创建 Socket 的类型不同，分为三种常见的通信方式，一个是基于 TCP 协议的通信方式，一个是基于 UDP 协议的通信方式，一个是本地进程间通信方式。</li></ul><h3 id="管道有哪几种？"><a href="#管道有哪几种？" class="headerlink" title="管道有哪几种？"></a>管道有哪几种？</h3><ul><li>匿名管道：是一种在父子进程或者兄弟进程之间进行通信的机制，只能用于具有亲缘关系的进程间通信，通常通过pipe系统调用创建。</li><li>命名管道：是一种允许无关的进程间进行通信的机制，基于文件系统，可以在不相关的进程之间进行通信。</li></ul><h3 id="信号和信号量有什么区别？"><a href="#信号和信号量有什么区别？" class="headerlink" title="信号和信号量有什么区别？"></a>信号和信号量有什么区别？</h3><ul><li>信号：一种处理异步事件的方式。信号是比较复杂的通信方式，用于通知接收进程有某种事件发生，除了用于进程外，还可以发送信号给进程本身。</li><li>信号量：进程间通信处理同步互斥的机制。是在多线程环境下使用的一种设施，它负责协调各个线程，以保证它们能够正确，合理的使用公共资源。</li></ul><h3 id="共享内存怎么实现的？"><a href="#共享内存怎么实现的？" class="headerlink" title="共享内存怎么实现的？"></a>共享内存怎么实现的？</h3><ul><li>共享内存的机制，就是拿出一块虚拟地址空间来，映射到相同的物理内存中。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98.png" alt="共享内存"></li></ul><h3 id="线程通信的方式"><a href="#线程通信的方式" class="headerlink" title="线程通信的方式"></a>线程通信的方式</h3><h4 id="互斥锁"><a href="#互斥锁" class="headerlink" title="互斥锁"></a>互斥锁</h4><ul><li>进入临界区前加锁，退出时解锁。其他线程在锁被占用时会阻塞等待。</li></ul><h4 id="条件变量"><a href="#条件变量" class="headerlink" title="条件变量"></a>条件变量</h4><ul><li>一个线程等待条件成立（阻塞），另一个线程改变条件并发出信号唤醒它。</li><li>常见于生产者-消费者模型：生产者生产数据后通知消费者。</li></ul><h4 id="自旋锁"><a href="#自旋锁" class="headerlink" title="自旋锁"></a>自旋锁</h4><ul><li>线程使用CAS检查锁的状态，不会主动产生上下文切换，如果没有成功获取锁，会一直占用CPU进行忙等</li><li>CAS分为两个步骤：第一步查看锁是否为空闲，第二步若为空闲，则让锁被当前线程持有。这两步是原子的</li></ul><h4 id="信号量-1"><a href="#信号量-1" class="headerlink" title="信号量"></a>信号量</h4><ul><li>内部维护一个计数器，控制可同时访问资源的线程数。</li><li>计数器为 0 时，新的访问线程会阻塞。</li></ul><h4 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h4><ul><li>多个线程可同时持有读锁，但写锁是独占的。</li><li>当「写锁」没有被线程持有时，多个线程能够并发地持有读锁，但是，一旦「写锁」被线程持有后，读线程的获取读锁的操作会被阻塞，而且其他写线程的获取写锁的操作也会被阻塞。</li><li>适合“读多写少”的场景。</li></ul><h3 id="进程调度算法"><a href="#进程调度算法" class="headerlink" title="进程调度算法"></a>进程调度算法</h3><h4 id="先来先服务算法"><a href="#先来先服务算法" class="headerlink" title="先来先服务算法"></a>先来先服务算法</h4><ul><li>顾名思义，先来后到，每次从就绪队列选择最先进入队列的进程，然后一直运行，直到进程退出或被阻塞，才会继续从队列中选择第一个进程接着运行。</li><li>这似乎很公平，但是当一个长作业先运行了，那么后面的短作业等待的时间就会很长，不利于短作业。 FCFS 对长作业有利，适用于 CPU 繁忙型作业的系统，而不适用于 I&#x2F;O 繁忙型作业的系统。</li></ul><h4 id="最短作业优先调度算法"><a href="#最短作业优先调度算法" class="headerlink" title="最短作业优先调度算法"></a>最短作业优先调度算法</h4><ul><li>它会优先选择运行时间最短的进程来运行，这有助于提高系统的吞吐量。</li><li>这显然对长作业不利，很容易造成一种极端现象。</li><li>比如，一个长作业在就绪队列等待运行，而这个就绪队列有非常多的短作业，那么就会使得长作业不断的往后推，周转时间变长，致使长作业长期不会被运行。</li></ul><h4 id="高相应比优先调度算法"><a href="#高相应比优先调度算法" class="headerlink" title="高相应比优先调度算法"></a>高相应比优先调度算法</h4><ul><li>每次调度时，计算相应比优先级：优先权&#x3D;（等待时间+要求服务时间）&#x2F;要求服务时间</li><li>如果两个进程的「等待时间」相同时，「要求的服务时间」越短，「响应比」就越高，这样短作业的进程容易被选中运行；</li><li>如果两个进程「要求的服务时间」相同时，「等待时间」越长，「响应比」就越高，这就兼顾到了长作业进程，因为进程的响应比可以随时间等待的增加而提高，当其等待时间足够长时，其响应比便可以升到很高，从而获得运行的机会；</li></ul><h4 id="时间片轮转调度算法"><a href="#时间片轮转调度算法" class="headerlink" title="时间片轮转调度算法"></a>时间片轮转调度算法</h4><ul><li>每个进程被分配一个时间段，称为时间片，即允许该进程在该时间段中运行。若进程在时间片用完前阻塞或结束，则CPU立即切换</li><li>关键是时间片长度，过短导致CPU频繁上下文切换，过长导致短作业进程响应时间变长</li></ul><h4 id="最高优先级调度算法"><a href="#最高优先级调度算法" class="headerlink" title="最高优先级调度算法"></a>最高优先级调度算法</h4><ul><li>从就绪队列中选择最高优先级的进程进行运行</li><li>静态优先级：优先级不会变化，在创建进程时就已确定</li><li>动态优先级：进程运行时间增加则降低优先级，等待时间增加则提高优先级</li><li>抢占式：若就绪队列出现优先级高的进程，立即挂起当前进程</li><li>非抢占式：等运行完当前进程，再调度高优先级进程</li></ul><h4 id="多级反馈队列调度算法"><a href="#多级反馈队列调度算法" class="headerlink" title="多级反馈队列调度算法"></a>多级反馈队列调度算法</h4><ul><li>「多级」表示有多个队列，每个队列优先级从高到低，同时优先级越高时间片越短。</li><li>「反馈」表示如果有新的进程加入优先级高的队列时，立刻停止当前正在运行的进程，转而去运行优先级高的队列；<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E5%A4%9A%E7%BA%A7%E5%8F%8D%E9%A6%88%E9%98%9F%E5%88%97%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95.png" alt="多级反馈队列调度算法"></li><li>设置了多个队列，赋予每个队列不同的优先级，每个队列优先级从高到低，同时优先级越高时间片越短；</li><li>新的进程会被放入到第一级队列的末尾，按先来先服务的原则排队等待被调度，如果在第一级队列规定的时间片没运行完成，则将其转入到第二级队列的末尾，以此类推，直至完成；</li><li>当较高优先级的队列为空，才调度较低优先级的队列中的进程运行。如果进程运行时，有新进程进入较高优先级的队列，则停止当前运行的进程并将其移入到原队列末尾，接着让较高优先级的进程运行；</li><li>对于短作业可能可以在第一级队列很快被处理完。</li><li>对于长作业，如果在第一级队列处理不完，可以移入下次队列等待被执行，虽然等待的时间变长了，但是运行时间也会更长了，所以该算法很好的兼顾了长短作业，同时有较好的响应时间。</li></ul><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="为什么并发执行线程需要加锁？"><a href="#为什么并发执行线程需要加锁？" class="headerlink" title="为什么并发执行线程需要加锁？"></a>为什么并发执行线程需要加锁？</h3><ul><li>为了保护共享数据。确保在任何时刻只有一个线程能够访问共享数据</li></ul><h3 id="自旋锁是什么？应用在哪些场景？"><a href="#自旋锁是什么？应用在哪些场景？" class="headerlink" title="自旋锁是什么？应用在哪些场景？"></a>自旋锁是什么？应用在哪些场景？</h3><ul><li>自旋锁加锁失败后，线程会忙等待，直到它拿到锁。</li><li>自旋锁是通过 CPU 提供的 CAS 函数（Compare And Swap），在「用户态」完成加锁和解锁操作，不会主动产生线程上下文切换，所以相比互斥锁来说，会快一些，开销也小一些。</li><li>自旋锁是最比较简单的一种锁，一直自旋，利用 CPU 周期，直到锁可用。需要注意，在单核 CPU 上，需要抢占式的调度器（即不断通过时钟中断一个线程，运行其他线程）。否则，自旋锁在单 CPU 上无法使用，因为一个自旋的线程永远不会放弃 CPU。</li><li>自旋的时间和被锁住的代码执行的时间是成「正比」的关系</li><li>能确定被锁住的代码执行时间很短，就不应该用互斥锁，而应该选用自旋锁，否则使用互斥锁。</li></ul><h3 id="死锁发生的条件"><a href="#死锁发生的条件" class="headerlink" title="死锁发生的条件"></a>死锁发生的条件</h3><h4 id="互斥条件"><a href="#互斥条件" class="headerlink" title="互斥条件"></a>互斥条件</h4><ul><li>系统中的资源一次只能被一个进程占用，不能共享使用。</li></ul><h4 id="请求并保持条件"><a href="#请求并保持条件" class="headerlink" title="请求并保持条件"></a>请求并保持条件</h4><ul><li>一个进程已经持有至少一个资源，同时又提出新的资源请求，并且在等待新资源的同时不释放自己已经占有的资源。</li></ul><h4 id="不可剥夺条件"><a href="#不可剥夺条件" class="headerlink" title="不可剥夺条件"></a>不可剥夺条件</h4><ul><li>进程已获得的资源，在使用完之前，不能被系统强行剥夺，只能由进程自己主动释放。</li></ul><h4 id="循环等待条件"><a href="#循环等待条件" class="headerlink" title="循环等待条件"></a>循环等待条件</h4><ul><li>存在一个进程等待环</li></ul><h3 id="预防死锁"><a href="#预防死锁" class="headerlink" title="预防死锁"></a>预防死锁</h3><table><thead><tr><th>破坏条件</th><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><strong>互斥条件</strong></td><td>尽量使用可共享资源</td><td>例如只读文件可多个线程同时访问；但很多资源（打印机、写锁）必须互斥，无法彻底破坏</td></tr><tr><td><strong>请求并保持条件</strong></td><td>一次性申请所有资源</td><td>进程启动时就申请全部所需资源，不能边占边等；缺点是资源利用率低</td></tr><tr><td><strong>不可剥夺条件</strong></td><td>支持资源抢占</td><td>如果申请新资源失败，主动释放已占有的资源，稍后重试</td></tr><tr><td><strong>循环等待条件</strong></td><td>资源有序分配法</td><td>给资源编号，进程必须按编号顺序申请资源，释放则反向</td></tr></tbody></table><h3 id="银行家算法"><a href="#银行家算法" class="headerlink" title="银行家算法"></a>银行家算法</h3><ul><li>一个进程的最大需求量不超过系统拥有的总资源数，才会被接纳执行。一个进程可以分期请求资源，但总请求书不可超过最大需求量。当系统现有资源数小于进程需求时，对进程的需求可以延迟分配，但总让进程在有限时间内获取资源。</li><li>维护了几个变量：<ul><li>当前系统剩余的各个资源的数量</li><li>当前系统剩余的被需要的资源数</li><li>每个进程所需要的各个资源的最大数量</li><li>每个进程已分配的各个资源的数量</li></ul></li><li>银行家算法的核心思想，就是在分配给进程资源前，首先判断这个进程的安全性，也就是预执行，判断分配后是否产生死锁现象。如果系统当前资源能满足其执行，则尝试分配，如果不满足则让该进程等待。</li><li>通过不断检查剩余可用资源是否满足某个进程的最大需求，如果可以则加入安全序列，并把该进程当前持有的资源回收；不断重复这个过程，看最后能否实现让所有进程都加入安全序列。安全序列一定不会发生死锁，但没有死锁不一定是安全序列。</li></ul><h3 id="乐观锁和悲观锁有什么区别？"><a href="#乐观锁和悲观锁有什么区别？" class="headerlink" title="乐观锁和悲观锁有什么区别？"></a>乐观锁和悲观锁有什么区别？</h3><h4 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h4><ul><li>乐观锁假设多个事务之间很少发生冲突，因此在读取数据时不会加锁，而是在更新数据时检查数据的版本（如使用版本号或时间戳），如果版本匹配则执行更新操作，否则认为发生了冲突。</li><li>用于读多写少，通过版本控制来处理冲突</li></ul><h4 id="悲观锁"><a href="#悲观锁" class="headerlink" title="悲观锁"></a>悲观锁</h4><ul><li>基本思想：悲观锁假设多个事务之间会频繁发生冲突，因此在读取数据时会加锁，防止其他事务对数据进行修改，直到当前事务完成操作后才释放锁。</li><li>使用场景：悲观锁适用于写多的场景，通过加锁保证数据的一致性。例如，数据库中的行级锁机制可以用于处理并发更新同一行数据的情况。</li></ul><h2 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h2><h3 id="介绍一下操作系统内存管理"><a href="#介绍一下操作系统内存管理" class="headerlink" title="介绍一下操作系统内存管理"></a>介绍一下操作系统内存管理</h3><h4 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h4><ul><li>操作系统设计了虚拟内存，每个进程都有自己的独立的虚拟内存，我们所写的程序不会直接与物理内打交道。</li><li>有了虚拟内存之后，进程的运行内存就可以大于物理内存大小。CPU访问内存有重复访问一定内存的倾向性，对于那些没有经常访问的内存，我们可以将其换到主存中。</li></ul><h4 id="页表"><a href="#页表" class="headerlink" title="页表"></a>页表</h4><ul><li>每个进程都使用各自页表进行进程的内存管理，所以每个进程的虚拟内存空间就是相互独立的。进程也没有办法访问其他进程的页表，所以这些页表是私有的，这就解决了多进程之间地址冲突的问题。</li><li>页表中还有权限等属性，保障了安全性。</li><li>Linux通过对内存分页来管理内存，分页是把整个虚拟和物理内存空间切成一段段固定尺寸的大小。每一个小空间称为页（page），Linux一页为4KB<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E9%A1%B5%E8%A1%A8.png" alt="页表"></li><li>将虚拟内存映射为物理内存</li><li>而当进程访问的虚拟地址在页表中查不到时，系统会产生一个缺页异常，进入系统内核空间分配物理内存、更新进程页表，最后再返回用户空间，恢复进程的运行。</li></ul><h3 id="什么是虚拟内存和物理内存？"><a href="#什么是虚拟内存和物理内存？" class="headerlink" title="什么是虚拟内存和物理内存？"></a>什么是虚拟内存和物理内存？</h3><ul><li>虚拟内存是操作系统为每个进程提供的逻辑内存，进程觉得自己有很大的内存，但其实不是，操作系统只拿出一块真实内存分配给进程，只有被用到的页才会被加载，用不到的页会被置换到主存中，并由页表完成对逻辑地址到物理地址的映射</li><li>物理内存就是内存条上的内存</li></ul><h3 id="页表-1"><a href="#页表-1" class="headerlink" title="页表"></a>页表</h3><ul><li>分页：将虚拟内存分成大小相等的页，物理内存分成同样大小的页框</li><li>页表完成虚拟地址到物理地址的映射，CPU访问内存时，通过MMU（内存管理单元）查页表完成地址转换</li><li>在分页机制下，虚拟地址分为两部分，虚拟页号和页内偏移，MMU会把虚拟页号映射为物理页号，物理页号和页内偏移拼起来就能找到真实物理内存中的位置了<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84.png" alt="页表映射"></li></ul><h3 id="讲一下段表"><a href="#讲一下段表" class="headerlink" title="讲一下段表"></a>讲一下段表</h3><ul><li>虚拟地址也可以通过段表与物理地址进行映射的，分段机制会把程序的虚拟地址分成 4 个段：代码段、数据段、堆、栈，每个段在段表中有一个项，在这一项找到段的基地址，再加上偏移量，于是就能找到物理内存中的地址，如下图：<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%AE%B5%E8%A1%A8.png" alt="段表"></li></ul><h3 id="虚拟地址转化为物理地址过程"><a href="#虚拟地址转化为物理地址过程" class="headerlink" title="虚拟地址转化为物理地址过程"></a>虚拟地址转化为物理地址过程</h3><ul><li>将虚拟内存划分为页，物理内存划分为<strong>页框</strong>，页表记录页框和页的映射</li><li>当程序访问一个虚拟地址时，MMU会将虚拟地址分解为页号和页内偏移量。然后，MMU会查找页表，根据页号找到对应的页表项。页表项中包含了物理页的地址或页框号。最后，MMU将物理页的地址与页内偏移量组合，得到对应的物理地址。</li></ul><h3 id="程序的内存布局是怎么样的？"><a href="#程序的内存布局是怎么样的？" class="headerlink" title="程序的内存布局是怎么样的？"></a>程序的内存布局是怎么样的？</h3><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80.png" alt="程序的内存布局"></p><ul><li>代码段，包括二进制可执行代码；</li><li>数据段，包括已初始化的静态常量和全局变量；</li><li>BSS 段，包括未初始化的静态变量和全局变量；</li><li>堆段，包括动态分配的内存，从低地址开始向上增长；</li><li>文件映射段，包括动态库、共享内存等；</li><li>栈段，包括局部变量和函数调用的上下文等。栈的大小是固定的，一般是 8 MB。当然系统也提供了参数，以便我们自定义大小；</li><li>代码段的起始地址不是0，那一灰色区域为<strong>保留区</strong>，这是因为在大多数的系统里，我们认为比较小数值的地址不是一个合法地址，例如，我们通常在 C 的代码里会将无效的指针赋值为 NULL。</li><li>这个过程是虚拟内存</li></ul><h3 id="堆和栈的区别？"><a href="#堆和栈的区别？" class="headerlink" title="堆和栈的区别？"></a>堆和栈的区别？</h3><ul><li>分配方式：堆是动态分配内存，由程序员手动申请和释放内存，通常用于存储动态数据结构和对象。栈是静态分配内存，由编译器自动分配和释放内存，用于存储函数的局部变量和函数调用信息。</li><li>内存管理：堆需要程序员手动管理内存的分配和释放，如果管理不当可能会导致内存泄漏或内存溢出。栈由编译器自动管理内存，遵循后进先出的原则，变量的生命周期由其作用域决定，函数调用时分配内存，函数返回时释放内存。</li><li>大小和速度：堆通常比栈大，内存空间较大，动态分配和释放内存需要时间开销。栈大小有限，通常比较小，内存分配和释放速度较快，因为是编译器自动管理。</li></ul><h3 id="fork-会复制哪些东西？"><a href="#fork-会复制哪些东西？" class="headerlink" title="fork()会复制哪些东西？"></a>fork()会复制哪些东西？</h3><ul><li>fork 阶段会复制父进程的页表（虚拟内存）</li><li>fork 之后，如果有一个进程对共享内存进行修改，发生了写时复制，就会复制物理内存</li></ul><h3 id="介绍copy-on-write写时复制"><a href="#介绍copy-on-write写时复制" class="headerlink" title="介绍copy on write写时复制"></a>介绍copy on write写时复制</h3><ul><li>在fork后页表对应的页表项的属性会标记该物理内存的权限为只读。</li><li>当父进程或者子进程在向这个内存发起写操作时，CPU 就会触发写保护中断，这个写保护中断是由于违反权限导致的，然后操作系统会在「写保护中断处理函数」里进行物理内存的复制，并重新设置其内存映射关系，将父子进程的内存读写权限设置为可读写，最后才会对内存进行写操作，这个过程被称为「写时复制(Copy On Write)」。</li><li>只复制发生改变的页</li></ul><h3 id="copy-on-write节省了什么资源？"><a href="#copy-on-write节省了什么资源？" class="headerlink" title="copy on write节省了什么资源？"></a>copy on write节省了什么资源？</h3><ul><li>节省了物理内存的资源，因为 fork 的时候，子进程不需要复制父进程的物理内存，避免了不必要的内存复制开销，子进程只需要复制父进程的页表，这时候父子进程的页表指向的都是共享的物理内存。</li><li>只有当父子进程任何有一方对这片共享的物理内存发生了修改操作，才会触发写时复制机制，这时候才会复制发生修改操作的物理内存。</li></ul><h3 id="malloc-1KB和1MB-有什么区别？"><a href="#malloc-1KB和1MB-有什么区别？" class="headerlink" title="malloc 1KB和1MB 有什么区别？"></a>malloc 1KB和1MB 有什么区别？</h3><ul><li>如果用户分配的内存小于 128 KB，则通过 brk() 申请内存；<ul><li>在现有堆顶直接向高地址扩展</li></ul></li><li>如果用户分配的内存大于 128 KB，则通过 mmap() 申请内存；<ul><li>在堆和栈之间的“内存映射区”找一块独立虚拟内存</li></ul></li></ul><h3 id="操作系统内存不足的时候会发生什么？"><a href="#操作系统内存不足的时候会发生什么？" class="headerlink" title="操作系统内存不足的时候会发生什么？"></a>操作系统内存不足的时候会发生什么？</h3><ul><li>应用程序通过 malloc 函数申请内存的时候，实际上申请的是虚拟内存，此时并不会分配物理内存。</li><li>当应用程序读写了这块虚拟内存，CPU 就会去访问这个虚拟内存， 这时会发现这个虚拟内存没有映射到物理内存， CPU 就会产生缺页中断，进程会从用户态切换到内核态，并将缺页中断交给内核的 Page Fault Handler （缺页中断函数）处理。</li><li>缺页中断处理函数会看是否有空闲的物理内存，如果有，就直接分配物理内存，并建立虚拟内存与物理内存之间的映射关系。</li><li>若没有空闲的物理内存，内核就会开始回收内存<ul><li>后台内存回收（kswapd）：在物理内存紧张的时候，会唤醒 kswapd 内核线程来回收内存，这个回收内存的过程异步的，不会阻塞进程的执行。</li><li>直接内存回收（direct reclaim）：如果后台异步回收跟不上进程内存申请的速度，就会开始直接回收，这个回收内存的过程是同步的，会阻塞进程的执行。</li><li>若直接内存回收也不行，就会触发OOM（out of memory）机制<ul><li>OOM Killer 机制会根据算法选择一个占用物理内存较高的进程，然后将其杀死，以便释放内存资源，如果物理内存依然不足，OOM Killer 会继续杀死占用物理内存较高的进程，直到释放足够的内存位置。</li></ul></li></ul></li></ul><h3 id="回收内存时，具体哪些内存可以回收？"><a href="#回收内存时，具体哪些内存可以回收？" class="headerlink" title="回收内存时，具体哪些内存可以回收？"></a>回收内存时，具体哪些内存可以回收？</h3><ul><li>文件页（File-backed Page）：内核缓存的磁盘数据（Buffer）和内核缓存的文件数据（Cache）都叫作文件页。大部分文件页，都可以直接释放内存，以后有需要时，再从磁盘重新读取就可以了。而那些被应用程序修改过，并且暂时还没写入磁盘的数据（也就是脏页），就得先写入磁盘，然后才能进行内存释放。所以，回收干净页的方式是直接释放内存，回收脏页的方式是先写回磁盘后再释放内存。</li><li>匿名页（Anonymous Page）：这部分内存没有实际载体，不像文件缓存有硬盘文件这样一个载体，比如堆、栈数据等。这部分内存很可能还要再次被访问，所以不能直接释放内存，它们回收的方式是通过 Linux 的 Swap 机制，Swap 会把不常访问的内存先写到磁盘中，然后释放这些内存，给其他更需要的进程使用。再次访问这些内存时，重新从磁盘读入内存就可以了。</li></ul><h3 id="回收内存时基于什么算法？"><a href="#回收内存时基于什么算法？" class="headerlink" title="回收内存时基于什么算法？"></a>回收内存时基于什么算法？</h3><ul><li>LRU（least rencently used）维护两个双向链表：<ul><li>active_list 活跃内存页链表，这里存放的是最近被访问过（活跃）的内存页；</li><li>inactive_list 不活跃内存页链表，这里存放的是很少被访问（非活跃）的内存页；</li></ul></li></ul><h4 id="过程-3"><a href="#过程-3" class="headerlink" title="过程"></a>过程</h4><ul><li>新分配的页 → 放入 active_list，标记 PG_referenced&#x3D;0</li><li>访问页面时：<ul><li>在 active_list 中：将 PG_referenced 置 1</li><li>在 inactive_list 中：<ul><li>若 PG_referenced&#x3D;0 → 置 1（但不移动）</li><li>若 PG_referenced&#x3D;1 → 移回 active_list，并清零标志</li></ul></li></ul></li><li>回收过程：从 inactive_list 尾部取页：<ul><li>若 PG_referenced&#x3D;1 → 清零并跳过（说明刚被访问过）</li><li>若 PG_referenced&#x3D;0：<ul><li>文件映射页：直接丢弃（脏页需先写回磁盘）</li><li>匿名页：写入 swap 分区&#x2F;文件，再释放物理页</li></ul></li></ul></li></ul><h3 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h3><h4 id="最佳页面置换算法"><a href="#最佳页面置换算法" class="headerlink" title="最佳页面置换算法"></a>最佳页面置换算法</h4><ul><li>置换在「未来」最长时间不访问的页面。</li><li>需要知道当前物理内存中的页下一次被使用的时间</li><li>取最后一个被使用的页面，将其置换出去</li><li>无法实现，只是做参考</li></ul><h4 id="先进先出"><a href="#先进先出" class="headerlink" title="先进先出"></a>先进先出</h4><ul><li>选择在内存驻留时间很长的页面进行中置换</li></ul><h4 id="最近最久未使用（LRU）"><a href="#最近最久未使用（LRU）" class="headerlink" title="最近最久未使用（LRU）"></a>最近最久未使用（LRU）</h4><ul><li>选择最长时间没有被访问的页面进行置换</li><li>虽然 LRU 在理论上是可以实现的，但代价很高。为了完全实现 LRU，需要在内存中维护一个所有页面的链表，最近最多使用的页面在表头，最近最少使用的页面在表尾。</li><li>困难的是，在每次访问内存时都必须要更新「整个链表」。在链表中找到一个页面，删除它，然后把它移动到表头是一个非常费时的操作。</li><li>所以，LRU 虽然看上去不错，但是由于开销比较大，实际应用中比较少使用。</li></ul><h4 id="时钟页面置换算法"><a href="#时钟页面置换算法" class="headerlink" title="时钟页面置换算法"></a>时钟页面置换算法</h4><ul><li>把所有的页面都保存在一个类似钟面的「环形链表」中，一个表针指向最老的页面。</li><li>当发生缺页中断时，算法首先检查表针指向的页面：<ul><li>如果它的访问位位是 0 就淘汰该页面，并把新的页面插入这个位置，然后把表针前移一个位置；</li><li>如果访问位是 1 就清除访问位，并把表针前移一个位置，重复这个过程直到找到了一个访问位为 0 的页面为止；<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%97%B6%E9%92%9F%E7%AE%97%E6%B3%95.png" alt="时钟算法"></li></ul></li></ul><h4 id="最不常用算法（LFU）"><a href="#最不常用算法（LFU）" class="headerlink" title="最不常用算法（LFU）"></a>最不常用算法（LFU）</h4><ul><li>当发生缺页中断时，选择「访问次数」最少的那个页面，并将其淘汰。</li><li>看起来很简单，每个页面加一个计数器就可以实现了，但是在操作系统中实现的时候，我们需要考虑效率和硬件成本的。</li><li>要增加一个计数器来实现，这个硬件成本是比较高的，另外如果要对这个计数器查找哪个页面访问次数最小，查找链表本身，如果链表长度很大，是非常耗时的，效率不高。</li><li>LFU 算法只考虑了频率问题，没考虑时间的问题，比如有些页面在过去时间里访问的频率很高，但是现在已经没有访问了，而当前频繁访问的页面由于没有这些页面访问的次数高，在发生缺页中断时，就会可能会误伤当前刚开始频繁访问，但访问次数还不高的页面。</li></ul><h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><h3 id="什么是中断"><a href="#什么是中断" class="headerlink" title="什么是中断"></a>什么是中断</h3><ul><li>CPU停下当前的工作任务，去处理其他事情，处理完后回来继续执行刚才的任务</li></ul><h4 id="内中断"><a href="#内中断" class="headerlink" title="内中断"></a>内中断</h4><ul><li>陷入：由陷入指令引发，是应用程序故意引发的，如如系统调用，程序调试功能等。</li><li>故障：由错误条件引起的，可能被内核修复，内核修复故障后会把CPU使用权还给用户程序，让它继续执行，如缺页故障</li><li>终止：由致命错误引起，内核无法修复，直接终止该应用程序，如：除以0、非法使用特权指令</li></ul><h4 id="外中断"><a href="#外中断" class="headerlink" title="外中断"></a>外中断</h4><ul><li>可屏蔽中断：主要来自外部设备如硬盘，打印机，网卡等。此类中断并不会影响系统运行，可随时处理，甚至不处理，所以名为可屏蔽。</li><li>不可屏蔽中断：如电源掉电，硬件线路故障等。这里不可屏蔽的意思不是不可以屏蔽，不建议屏蔽，而是问题太大，屏蔽不了，不能屏蔽的意思。</li></ul><h3 id="中断的流程"><a href="#中断的流程" class="headerlink" title="中断的流程"></a>中断的流程</h3><h4 id="发生中断"><a href="#发生中断" class="headerlink" title="发生中断"></a>发生中断</h4><ul><li>可能是外设（键盘、网卡、定时器等）、CPU 内部异常（除零、缺页）或软件指令（int 指令）触发，向CPU发送中断信号</li></ul><h4 id="中断响应"><a href="#中断响应" class="headerlink" title="中断响应"></a>中断响应</h4><ul><li>CPU 检查当前是否允许中断（看中断使能标志 IF 位）。如果允许，会在当前指令执行完后响应中断。</li></ul><h4 id="保护现场（Save-Context）"><a href="#保护现场（Save-Context）" class="headerlink" title="保护现场（Save Context）"></a>保护现场（Save Context）</h4><ul><li>硬件自动保存：PC、标志寄存器</li><li>软件：将通用寄存器、浮点寄存器等压入栈中，确保中断返回后能恢复原状态。</li></ul><h4 id="识别中断源"><a href="#识别中断源" class="headerlink" title="识别中断源"></a>识别中断源</h4><ul><li>CPU在中断向量表中找到对应的中断服务程序入口地址。</li></ul><h4 id="执行中断服务程序"><a href="#执行中断服务程序" class="headerlink" title="执行中断服务程序"></a>执行中断服务程序</h4><ul><li>跳转到 中断服务程序 入口执行。</li></ul><h4 id="恢复现场"><a href="#恢复现场" class="headerlink" title="恢复现场"></a>恢复现场</h4><ul><li>将之前保存的寄存器、标志位等从栈中恢复。</li><li>确保 CPU 状态与中断发生前一致。</li></ul><h3 id="中断的作用"><a href="#中断的作用" class="headerlink" title="中断的作用"></a>中断的作用</h3><ul><li>中断使得计算机系统具备应对对处理突发事件的能力，提高了CPU的工作效率，如果没有中断系统，CPU就只能按照原来的程序编写的先后顺序，对各个外设进行查询和处理，即轮询工作方式，轮询方法貌似公平，但实际工作效率却很低，却不能及时响应紧急事件。</li></ul><h2 id="网络IO"><a href="#网络IO" class="headerlink" title="网络IO"></a>网络IO</h2><h3 id="了解过哪些IO模型？"><a href="#了解过哪些IO模型？" class="headerlink" title="了解过哪些IO模型？"></a>了解过哪些IO模型？</h3><ul><li>阻塞I&#x2F;O模型：应用程序发起I&#x2F;O操作后会被阻塞，直到操作完成才返回结果。适用于对实时性要求不高的场景。</li><li>非阻塞I&#x2F;O模型：应用程序发起I&#x2F;O操作后立即返回，不会被阻塞，但需要不断轮询或者使用select&#x2F;poll&#x2F;epoll等系统调用来检查I&#x2F;O操作是否完成。适合于需要进行多路复用的场景，例如需要同时处理多个socket连接的服务器程序。</li><li>I&#x2F;O复用模型：通过select、poll、epoll等系统调用，应用程序可以同时等待多个I&#x2F;O操作，当其中任何一个I&#x2F;O操作准备就绪时，应用程序会被通知。适合于需要同时处理多个I&#x2F;O操作的场景，比如高并发的服务端程序。</li><li>信号驱动I&#x2F;O模型：应用程序发起I&#x2F;O操作后，可以继续做其他事情，当I&#x2F;O操作完成时，操作系统会向应用程序发送信号来通知其完成。适合于需要异步I&#x2F;O通知的场景，可以提高系统的并发能力。</li><li>异步I&#x2F;O模型：应用程序发起I&#x2F;O操作后可以立即做其他事情，当I&#x2F;O操作完成时，应用程序会得到通知。异步I&#x2F;O模型由操作系统内核完成I&#x2F;O操作，应用程序只需等待通知即可。适合于需要大量并发连接和高性能的场景，能够减少系统调用次数，提高系统效率。<br><a href="https://blog.csdn.net/bojinyuan00/article/details/149501058">这个文章写得很好</a></li></ul><h3 id="服务器处理并发请求有哪几种方式？"><a href="#服务器处理并发请求有哪几种方式？" class="headerlink" title="服务器处理并发请求有哪几种方式？"></a>服务器处理并发请求有哪几种方式？</h3><ul><li>单线程web服务器方式：web服务器一次处理一个请求，结束后读取并处理下一个请求，性能比较低，一次只能处理一个请求。</li><li>多进程&#x2F;多线程web服务器：web服务器生成多个进程或线程并行处理多个用户请求，进程或线程可以按需或事先生成。有的web服务器应用程序为每个用户请求生成一个单独的进程或线程来进行响应，不过，一旦并发请求数量达到成千上万时，多个同时运行的进程或线程将会消耗大量的系统资源。（即每个进程只能响应一个请求，并且一个进程对应一个线程）</li><li>I&#x2F;O多路复用web服务器：web服务器可以I&#x2F;O多路复用，达到只用一个线程就能监听和处理多个客户端的 i&#x2F;o 事件。</li><li>多路复用多线程web服务器：将多进程和多路复用的功能结合起来形成的web服务器架构，其避免了让一个进程服务于过多的用户请求，并能充分利用多CPU主机所提供的计算能力。（这种架构可以理解为有多个进程，并且一个进程又生成多个线程，每个线程处理一个请求）</li></ul><h3 id="讲一下io多路复用"><a href="#讲一下io多路复用" class="headerlink" title="讲一下io多路复用"></a>讲一下io多路复用</h3><ul><li>指的是复用一个线程，处理多个socket中的事件。能够资源复用，防止创建过多线程导致的上下文切换的开销。<pre><code class=" mermaid">sequenceDiagram    autonumber    participant App as 应用程序1    participant Kernel as 内核    participant Mon1 as 描述符1    participant Mon2 as 描述符2    Note over App: 应用程序发起 IO 多路复用，阻塞等待任一 fd 就绪    App-&gt;&gt;Kernel: select/poll/epoll(fd1, fd2, ..., fdN)    par 并行监控        Kernel--&gt;&gt;Mon1: 监控收发/事件订阅        Mon1-&gt;&gt;Kernel: 数据准备好/事件就绪        Mon1--&gt;&gt;App: 通知/唤醒    and        Kernel--&gt;&gt;Mon2: 监控收发/事件订阅        Mon2-&gt;&gt;Kernel: 数据准备好/事件就绪        Mon2--&gt;&gt;App: 通知/唤醒    end    Kernel--&gt;&gt;App: 返回就绪的 fd（例如 fd2）    App-&gt;&gt;Kernel: read(fd2)    Kernel--&gt;&gt;App: 返回数据    App-&gt;&gt;App: 处理数据    App-&gt;&gt;Kernel: 下一轮 select/poll/epoll(fd1, fd2, ..., fdN)</code></pre></li></ul><h3 id="select、poll、epoll-的区别是什么？"><a href="#select、poll、epoll-的区别是什么？" class="headerlink" title="select、poll、epoll 的区别是什么？"></a>select、poll、epoll 的区别是什么？</h3><ul><li>内核提供给用户态的多路复用系统调用，进程可以通过一个系统调用函数从内核中获取多个事件。</li></ul><h4 id="select-poll"><a href="#select-poll" class="headerlink" title="select&#x2F;poll"></a>select&#x2F;poll</h4><ul><li>将已连接的 Socket 都放到一个文件描述符集合</li><li>然后调用 select 函数将文件描述符集合拷贝到内核里，让内核来检查是否有网络事件产生</li><li>通过遍历文件描述符集合的方式，当检查到有事件产生后，将此 Socket 标记为可读或可写， 接着再把整个文件描述符集合拷贝回用户态里，然后用户态还需要再通过遍历的方法找到可读或可写的 Socket，然后再对其处理。<ul><li>一共两次遍历和两次拷贝</li><li>select 使用固定长度的 BitsMap，表示文件描述符集合，而且所支持的文件描述符的个数是有限制的，在 Linux 系统中，由内核中的 FD_SETSIZE 限制， 默认最大值为 1024，只能监听 0~1023 的文件描述符。</li></ul></li><li>poll 不再用 BitsMap 来存储所关注的文件描述符，取而代之用动态数组，突破了 select 的文件描述符个数限制，当然还会受到系统文件描述符限制。</li><li>总结：都是使用「线性结构」存储进程关注的 Socket 集合，因此都需要遍历文件描述符集合来找到可读或可写的 Socket，时间复杂度为 O(n)，而且也需要在用户态与内核态之间拷贝文件描述符集合</li></ul><h4 id="epoll"><a href="#epoll" class="headerlink" title="epoll"></a>epoll</h4><ul><li>epoll 在内核里使用红黑树来跟踪进程所有待检测的文件描述字，把需要监控的 socket 通过 epoll_ctl() 函数加入内核中的红黑树里，红黑树是个高效的数据结构，增删改一般时间复杂度是 O(logn)。而 select&#x2F;poll 内核里没有类似 epoll 红黑树这种保存所有待检测的 socket 的数据结构，所以 select&#x2F;poll 每次操作时都传入整个 socket 集合给内核，而 epoll 因为在内核维护了红黑树，可以保存所有待检测的 socket ，所以只需要传入一个待检测的 socket，减少了内核和用户空间大量的数据拷贝和内存分配。</li><li>epoll 使用事件驱动的机制，内核里维护了一个链表来记录就绪事件，当某个 socket 有事件发生时，通过回调函数内核会将其加入到这个就绪事件列表中（不会删除红黑树中的），当用户调用 epoll_wait() 函数时，只会返回有事件发生的文件描述符的个数，不需要像 select&#x2F;poll 那样轮询扫描整个 socket 集合，大大提高了检测的效率。</li><li></li></ul><h3 id="epoll-的-边缘触发和水平触发有什么区别？"><a href="#epoll-的-边缘触发和水平触发有什么区别？" class="headerlink" title="epoll 的 边缘触发和水平触发有什么区别？"></a>epoll 的 边缘触发和水平触发有什么区别？</h3><h4 id="边缘触发"><a href="#边缘触发" class="headerlink" title="边缘触发"></a>边缘触发</h4><ul><li>使用边缘触发模式时，当被监控的 Socket 描述符上有可读事件发生时，服务器端只会从 epoll_wait 中苏醒一次，即使进程没有调用 read 函数从内核读取数据，也依然只苏醒一次，因此我们程序要保证一次性将内核缓冲区的数据读取完；</li><li>如果使用边缘触发模式，I&#x2F;O 事件发生时只会通知一次，而且我们不知道到底能读写多少数据，所以在收到通知后应尽可能地读写数据，以免错失读写的机会。因此，我们会循环从文件描述符读写数据，那么如果文件描述符是阻塞的，没有数据可读写时，进程会阻塞在读写函数那里，程序就没办法继续往下执行。所以，边缘触发模式一般和非阻塞 I&#x2F;O 搭配使用，程序会一直执行 I&#x2F;O 操作，直到系统调用（如 read 和 write）返回错误，错误类型为 EAGAIN 或 EWOULDBLOCK。</li></ul><h4 id="水平触发"><a href="#水平触发" class="headerlink" title="水平触发"></a>水平触发</h4><ul><li>使用水平触发模式时，当被监控的 Socket 上有可读事件发生时，服务器端不断地从 epoll_wait 中苏醒，直到内核缓冲区数据被 read 函数读完才结束，目的是告诉我们有数据需要读取；</li><li>如果使用水平触发模式，当内核通知文件描述符可读写时，接下来还可以继续去检测它的状态，看它是否依然可读或可写。所以在收到通知后，没必要一次执行尽可能多的读写操作。</li><li>一般来说，边缘触发的效率比水平触发的效率要高，因为边缘触发可以减少 epoll_wait 的系统调用次数，系统调用也是有一定的开销的的，毕竟也存在上下文的切换。</li></ul><h3 id="零拷贝是什么？"><a href="#零拷贝是什么？" class="headerlink" title="零拷贝是什么？"></a>零拷贝是什么？</h3><ul><li>传统 IO 的工作方式，从硬盘读取数据，然后再通过网卡向外发送，我们需要进行 4 上下文切换，和 4 次数据拷贝，其中 2 次数据拷贝发生在内存里的缓冲区和对应的硬件设备之间，这个是由 DMA 完成，另外 2 次则发生在内核态和用户态之间，这个数据搬移工作是由 CPU 完成的。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E4%BC%A0%E7%BB%9FIO.png" alt="传统IO"></li><li>为了提高文件传输的性能，于是就出现了零拷贝技术，它通过一次系统调用（sendfile 方法）合并了磁盘读取与网络发送两个操作，降低了上下文切换次数。另外，拷贝数据都是发生在内核中的，天然就降低了数据拷贝的次数。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E9%9B%B6%E6%8B%B7%E8%B4%9D.png" alt="零拷贝"></li><li>零拷贝技术的文件传输方式相比传统文件传输的方式，减少了 2 次上下文切换和数据拷贝次数，只需要 2 次上下文切换和数据拷贝次数，就可以完成文件的传输，而且 2 次的数据拷贝过程，都不需要通过 CPU，2 次都是由 DMA 来搬运。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计网OS相关知识</title>
    <link href="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h1><h2 id="网络模型"><a href="#网络模型" class="headerlink" title="网络模型"></a>网络模型</h2><h3 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h3><ul><li>物理层、数据链路层、网络层、传输层、会话层、表示层、应用层</li></ul><h3 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="TCP&#x2F;IP模型"></a>TCP&#x2F;IP模型</h3><ul><li>网络接口层、网络层、传输层、应用层</li></ul><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h2><h3 id="应用层有哪些协议"><a href="#应用层有哪些协议" class="headerlink" title="应用层有哪些协议"></a>应用层有哪些协议</h3><ul><li>HTTP、HTTPS、CDN、DNS、FTP</li></ul><h3 id="HTTP报文有哪些部分"><a href="#HTTP报文有哪些部分" class="headerlink" title="HTTP报文有哪些部分"></a>HTTP报文有哪些部分</h3><h4 id="请求报文"><a href="#请求报文" class="headerlink" title="请求报文"></a>请求报文</h4><ul><li>请求行：包含请求方法、请求目标（URL或URI）和HTTP协议版本。</li><li>请求头部：包含关于请求的附加信息，如Host、User-Agent、Content-Type等。</li><li>空行：请求头部和请求体之间用空行分隔。</li><li>请求体：可选，包含请求的数据，通常用于POST请求等需要传输数据的情况。</li></ul><h4 id="响应报文"><a href="#响应报文" class="headerlink" title="响应报文"></a>响应报文</h4><ul><li>状态行：包含HTTP协议版本、状态码和状态信息。</li><li>响应头部：包含关于响应的附加信息，如Content-Type、Content-Length等。</li><li>空行：响应头部和响应体之间用空行分隔。</li><li>响应体：包含响应的数据，通常是服务器返回的HTML、JSON等内容。</li></ul><h3 id="HTTP常用状态码"><a href="#HTTP常用状态码" class="headerlink" title="HTTP常用状态码"></a>HTTP常用状态码</h3><ul><li>1xx 类状态码属于提示信息，是协议处理中的一种中间状态，实际用到的比较少。</li><li>2xx 类状态码表示服务器成功处理了客户端的请求，也是我们最愿意看到的状态。200：请求成功；</li><li>3xx 类状态码表示客户端请求的资源发生了变动，需要客户端用新的 URL 重新发送请求获取资源，也就是重定向。301：永久重定向；302：临时重定向；</li><li>4xx 类状态码表示客户端发送的报文有误，服务器无法处理，也就是错误码的含义。404：无法找到此页面；405：请求的方法类型不支持；</li><li>5xx 类状态码表示客户端请求报文正确，但是服务器处理时内部发生了错误，属于服务器端的错误码。500：服务器内部出错。</li></ul><h3 id="301、302状态码分别是什么"><a href="#301、302状态码分别是什么" class="headerlink" title="301、302状态码分别是什么"></a>301、302状态码分别是什么</h3><ul><li>「301 Moved Permanently」表示永久重定向，说明请求的资源已经不存在了，需改用新的 URL 再次访问。</li><li>「302 Found」表示临时重定向，说明请求的资源还在，但暂时需要用另一个 URL 来访问。</li><li>301 和 302 都会在响应头里使用字段 Location，指明后续要跳转的 URL，浏览器会自动重定向新的 URL。</li></ul><h3 id="502和504区别"><a href="#502和504区别" class="headerlink" title="502和504区别"></a>502和504区别</h3><ul><li>502 Bad Gateway：作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。</li><li>504 Gateway Time-out：作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器收到响应。</li></ul><h3 id="GET和POST的区别"><a href="#GET和POST的区别" class="headerlink" title="GET和POST的区别"></a>GET和POST的区别</h3><ul><li>GET 的语义是从服务器获取指定的资源，GET 请求的参数位置一般是写在 URL 中，URL 规定只能支持 ASCII，所以 GET 请求的参数只允许 ASCII 字符 ，而且浏览器会对 URL 的长度有限制（HTTP协议本身对 URL长度并没有做任何规定）。</li><li>POST 的语义是根据请求负荷（报文body）对指定的资源做出处理，POST 请求携带数据的位置一般是写在报文 body 中，body 中的数据可以是任意格式的数据，只要客户端与服务端协商好即可，而且浏览器不会对 body 大小做限制。</li><li>GET安全幂等，POST不安全不幂等，浏览器会缓存GET请求的数据，不会缓存POST请求的数据；会把GET请求的数据保存为书签，不会把POST请求的数据保存为书签。</li></ul><h3 id="HTTP长连接"><a href="#HTTP长连接" class="headerlink" title="HTTP长连接"></a>HTTP长连接</h3><ul><li>客户端与服务端通信前，需要建立连接，建立后发送请求，然后释放连接。如果每次请求都要经历这个过程会很浪费时间。</li><li>HTTP 的 Keep-Alive 实现了不断开TCP连接，可以使用同一个 TCP 连接来发送和接收多个 HTTP 请求&#x2F;应答，避免了连接建立和释放的开销，这个方法称为 HTTP 长连接。</li><li>HTTP 长连接的特点是，只要任意一端没有明确提出断开连接，则保持 TCP 连接状态。</li></ul><h3 id="HTTP、HTTPS默认的端口"><a href="#HTTP、HTTPS默认的端口" class="headerlink" title="HTTP、HTTPS默认的端口"></a>HTTP、HTTPS默认的端口</h3><ul><li>HTTP：80、HTTPS：443</li></ul><h3 id="HTTP1-1怎么对请求做拆包，具体来说怎么拆的？"><a href="#HTTP1-1怎么对请求做拆包，具体来说怎么拆的？" class="headerlink" title="HTTP1.1怎么对请求做拆包，具体来说怎么拆的？"></a>HTTP1.1怎么对请求做拆包，具体来说怎么拆的？</h3><ul><li>在HTTP&#x2F;1.1中，请求的拆包是通过”Content-Length”头字段来进行的。该字段指示了请求正文的长度，服务器可以根据该长度来正确接收和解析请求。</li></ul><h3 id="HTTP断点重传"><a href="#HTTP断点重传" class="headerlink" title="HTTP断点重传"></a>HTTP断点重传</h3><ul><li>断点续传是HTTP&#x2F;1.1协议支持的特性。实现断点续传的功能，需要客户端记录下当前的下载进度，并在需要续传的时候通知服务端本次需要下载的内容片段。</li><li>例：<ul><li>客户端开始下载一个1024K的文件，服务端发送Accept-Ranges: bytes来告诉客户端，其支持带Range的请求</li><li>假如客户端下载了其中512K时候网络突然断开了，过了一会网络可以了，客户端再下载时候，需要在HTTP头中申明本次需要续传的片段：Range:bytes&#x3D;512000-这个头通知服务端从文件的512K位置开始传输文件，直到文件内容结束</li><li>服务端收到断点续传请求，从文件的512K位置开始传输，并且在HTTP头中增加：Content-Range:bytes 512000-&#x2F;1024000,Content-Length: 512000。并且此时服务端返回的HTTP状态码应该是206 Partial Content。如果客户端传递过来的Range超过资源的大小,则响应416 Requested Range Not Satisfiable</li></ul></li><li>通过上面流程可以看出：断点续传中4个HTTP头不可少的，分别是Range头、Content-Range头、Accept-Ranges头、Content-Length头。其中第一个Range头是客户端发过来的，后面3个头需要服务端发送给客户端。下面是它们的说明：</li><li><strong>Accept-Ranges: bytes：</strong>这个值声明了可被接受的每一个范围请求, 大多数情况下是字节数 bytes</li><li><strong>Range: bytes&#x3D;开始位置-结束位置：</strong>Range是浏览器告知服务器所需分部分内容范围的消息头。</li></ul><h3 id="HTTP为什么不安全"><a href="#HTTP为什么不安全" class="headerlink" title="HTTP为什么不安全"></a>HTTP为什么不安全</h3><ul><li>HTTP是明文传输，所以安全上会有以下风险：<ul><li>窃听风险，通信链路上可以获取通信内容</li><li>篡改风险，强制植入垃圾广告</li><li>冒充风险，例如冒充淘宝</li></ul></li><li>HTTPS再HTTP和TCP层之间加入了SSL&#x2F;TLS协议，解决了上述风险<ul><li>信息加密，交互信息无法窃取</li><li>校验机制，无法篡改通信内容，篡改了就不能正常显示</li><li>身份证书：证明淘宝是真的淘宝网</li></ul></li></ul><h3 id="HTTP和HTTPS的区别"><a href="#HTTP和HTTPS的区别" class="headerlink" title="HTTP和HTTPS的区别"></a>HTTP和HTTPS的区别</h3><ul><li>HTTP 是超文本传输协议，信息是明文传输，存在安全风险的问题。HTTPS 则解决 HTTP 不安全的缺陷，在 TCP 和 HTTP 网络层之间加入了 SSL&#x2F;TLS 安全协议，使得报文能够加密传输。</li><li>HTTP 连接建立相对简单， TCP 三次握手之后便可进行 HTTP 的报文传输。而 HTTPS 在 TCP 三次握手之后，还需进行 SSL&#x2F;TLS 的握手过程，才可进入加密报文传输。</li><li>两者的默认端口不一样，HTTP 默认端口号是 80，HTTPS 默认端口号是 443。</li><li>HTTPS 协议需要向 CA（证书权威机构）申请数字证书，来保证服务器的身份是可信的。</li></ul><h3 id="TLS握手过程"><a href="#TLS握手过程" class="headerlink" title="TLS握手过程"></a>TLS握手过程</h3><h4 id="客户端→服务端：Client-Hello"><a href="#客户端→服务端：Client-Hello" class="headerlink" title="客户端→服务端：Client Hello"></a>客户端→服务端：Client Hello</h4><ul><li>客户端生成一个随机数</li><li>将自己支持的加密算法、TLS版本、随机数发送给服务端</li></ul><h4 id="服务端→客户端：Server-Hello"><a href="#服务端→客户端：Server-Hello" class="headerlink" title="服务端→客户端：Server Hello"></a>服务端→客户端：Server Hello</h4><ul><li>服务端生成一个随机数</li><li>将随机数、确认TLS版本号、使用的密码套件（RSA）、使用的证书发送给客户端</li></ul><h4 id="客户端→服务端：Client-Key-Exchange-Change-Cipher-Spec-Encrypted-Handshake-Message"><a href="#客户端→服务端：Client-Key-Exchange-Change-Cipher-Spec-Encrypted-Handshake-Message" class="headerlink" title="客户端→服务端：Client Key Exchange,Change Cipher Spec,Encrypted Handshake Message"></a>客户端→服务端：Client Key Exchange,Change Cipher Spec,Encrypted Handshake Message</h4><ul><li>检查证书是否有效，是否由可信CA签发，是否过期</li><li>若有效，则从证书中取出服务端公钥，生成一个“预主密钥”（Pre-Master Secret），并用服务器公钥加密后发送给服务器。</li><li>使用客户端随机数、服务端随机数、pre-matster算出会话密钥，之后改用会话密钥加密通道</li></ul><h4 id="服务端→客户端：Change-Cipher-Spec-Encrypted-Handshake-Message"><a href="#服务端→客户端：Change-Cipher-Spec-Encrypted-Handshake-Message" class="headerlink" title="服务端→客户端：Change Cipher Spec,Encrypted Handshake Message"></a>服务端→客户端：Change Cipher Spec,Encrypted Handshake Message</h4><ul><li>服务端使用私钥解密出预主密钥</li><li>使用客户端随机数、服务端随机数、pre-matster算出会话密钥，之后改用会话密钥加密通道</li><li>双方各发送一条Finish消息，表示握手完成</li></ul><h3 id="HTTP进行TCP连接之后，在什么情况下会中断"><a href="#HTTP进行TCP连接之后，在什么情况下会中断" class="headerlink" title="HTTP进行TCP连接之后，在什么情况下会中断"></a>HTTP进行TCP连接之后，在什么情况下会中断</h3><ul><li>当服务端或者客户端执行 close 系统调用的时候，会发送FIN报文，就会进行四次挥手的过程</li><li>当发送方发送了数据之后，接收方超过一段时间没有响应ACK报文，发送方重传数据达到最大次数的时候，就会断开TCP连接</li><li>当HTTP长时间没有进行请求和响应的时候，超过一定的时间，就会释放连接</li></ul><h3 id="HTTP、SOCKET和TCP的区别"><a href="#HTTP、SOCKET和TCP的区别" class="headerlink" title="HTTP、SOCKET和TCP的区别"></a>HTTP、SOCKET和TCP的区别</h3><ul><li><p>HTTP是应用层协议，定义了客户端和服务器之间交换的数据格式和规则；Socket是通信的一端，提供了网络通信的接口；TCP是传输层协议，负责在网络中建立可靠的数据传输连接。它们在网络通信中扮演不同的角色和层次。</p></li><li><p>HTTP是一种用于传输超文本数据的应用层协议，用于在客户端和服务器之间传输和显示Web页面。</p></li><li><p>Socket是计算机网络中的一种抽象，用于描述通信链路的一端，提供了底层的通信接口，可实现不同计算机之间的数据交换。</p></li><li><p>TCP是一种面向连接的、可靠的传输层协议，负责在通信的两端之间建立可靠的数据传输连接。</p></li></ul><h3 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h3><ul><li>DNS的全称是Domain Name System（域名系统），它是互联网中用于将域名转换为对应IP地址的分布式数据库系统。DNS扮演着重要的角色，使得人们可以通过易记的域名访问互联网资源，而无需记住复杂的IP地址。默认端口53。</li><li>在域名中，越靠右的位置表示其层级越高。</li><li>域名的层级关系类似一个树状结构：<ul><li>根 DNS 服务器（.）</li><li>顶级域 DNS 服务器（.com）</li><li>权威 DNS 服务器（server.com）</li></ul></li></ul><h3 id="DNS-域名解析的工作流程？"><a href="#DNS-域名解析的工作流程？" class="headerlink" title="DNS 域名解析的工作流程？"></a>DNS 域名解析的工作流程？</h3><ul><li>客户端向本地DNS服务器发送请求，询问<a href="http://www.server.com/">www.server.com</a> 的 IP 是什么</li><li>本地域名服务器收到以后，会查找缓存中是否存在这个域名，若有直接返回IP，若没有，本地DNS会向根域名服务器询问</li><li>根域名服务器收到后，发现后置是.com，则将.com顶级域名服务器地址返回给本地DNS</li><li>本地DNS收到后，向.com顶级域名服务器询问</li><li>顶级域名服务器收到后，将server.com权威DNS服务器地址返回</li><li>本地DNS向server.com权威DNS服务器询问</li><li>权威DNS服务i其将IP返回</li><li>本地DNS将IP返回给客户端<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/DNS%E8%A7%A3%E6%9E%90.png" alt="DNS解析"></li></ul><h3 id="DNS底层使用TCP还是UDP"><a href="#DNS底层使用TCP还是UDP" class="headerlink" title="DNS底层使用TCP还是UDP"></a>DNS底层使用TCP还是UDP</h3><ul><li>低延迟： UDP是一种无连接的协议，不需要在数据传输前建立连接，因此可以减少传输时延，适合DNS这种需要快速响应的应用场景。</li><li>简单快速： UDP相比于TCP更简单，没有TCP的连接管理和流量控制机制，传输效率更高，适合DNS这种需要快速传输数据的场景。</li><li>轻量级：UDP头部较小，占用较少的网络资源，对于小型请求和响应来说更加轻量级，适合DNS这种频繁且短小的数据交换。</li></ul><h3 id="HTTP到底是不是无状态的？"><a href="#HTTP到底是不是无状态的？" class="headerlink" title="HTTP到底是不是无状态的？"></a>HTTP到底是不是无状态的？</h3><ul><li>HTTP是无状态的，这意味着每个请求都是独立的，服务器不会在多个请求之间保留关于客户端状态的信息。在每个HTTP请求中，服务器不会记住之前的请求或会话状态，因此每个请求都是相互独立的。</li><li>虽然HTTP本身是无状态的，但可以通过一些机制来实现状态保持，其中最常见的方式是使用Cookie和Session来跟踪用户状态。通过在客户端存储会话信息或状态信息，服务器可以识别和跟踪特定用户的状态，以提供一定程度的状态保持功能。</li></ul><h3 id="携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？"><a href="#携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？" class="headerlink" title="携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？"></a>携带Cookie的HTTP请求是有状态还是无状态的？Cookie是HTTP协议簇的一部分，那为什么还说HTTP是无状态的？</h3><ul><li>携带Cookie的HTTP请求实际上是可以在一定程度上实现状态保持的，因为Cookie是用来在客户端存储会话信息和状态信息的一种机制。当浏览器发送包含Cookie的HTTP请求时，服务器可以通过读取这些Cookie来识别用户、管理会话状态以及保持特定的用户状态。因此，可以说即使HTTP本身是无状态的协议，但通过Cookie的使用可以实现一定程度的状态保持功能。</li><li>HTTP被描述为“无状态”的主要原因是每个HTTP请求都是独立的，服务器并不保存关于客户端的状态信息，每个请求都需要提供足够的信息来理解请求的意图。这样的设计使得Web系统更具有规模化和简单性，但也导致了一些挑战，比如需要额外的机制来处理用户状态和会话管理。</li><li>虽然Cookie是HTTP协议簇的一部分，但是HTTP协议在设计初衷上仍然保持无状态特性，即每个请求都是相互独立的。使用Cookie只是在无状态协议下的一种补充机制，用于在客户端存储状态信息以实现状态保持。</li></ul><h3 id="cookie和session有什么区别？"><a href="#cookie和session有什么区别？" class="headerlink" title="cookie和session有什么区别？"></a>cookie和session有什么区别？</h3><ul><li><strong>存储位置：</strong>Cookie的数据存储在客户端（通常是浏览器）。当浏览器向服务器发送请求时，会自动附带Cookie中的数据。Session的数据存储在服务器端。服务器为每个用户分配一个唯一的Session ID，这个ID通常通过Cookie或URL重写的方式发送给客户端，客户端后续的请求会带上这个Session ID，服务器根据ID查找对应的Session数据。</li><li><strong>数据容量：</strong>单个Cookie的大小限制通常在4KB左右，而且大多数浏览器对每个域名的总Cookie数量也有限制。由于Session存储在服务器上，理论上不受数据大小的限制，主要受限于服务器的内存大小。</li><li><strong>安全性：</strong>Cookie相对不安全，因为数据存储在客户端，容易受到XSS（跨站脚本攻击）的威胁。不过，可以通过设置HttpOnly属性来防止JavaScript访问，减少XSS攻击的风险，但仍然可能受到CSRF（跨站请求伪造）的攻击。Session通常认为比Cookie更安全，因为敏感数据存储在服务器端。但仍然需要防范Session劫持（通过获取他人的Session ID）和会话固定攻击。</li><li><strong>生命周期：</strong>Cookie可以设置过期时间，过期后自动删除。也可以设置为会话Cookie，即浏览器关闭时自动删除。Session在默认情况下，当用户关闭浏览器时，Session结束。但服务器也可以设置Session的超时时间，超过这个时间未活动，Session也会失效。</li><li><strong>性能：</strong>使用Cookie时，因为数据随每个请求发送到服务器，可能会影响网络传输效率，尤其是在Cookie数据较大时。使用Session时，因为数据存储在服务器端，每次请求都需要查询服务器上的Session数据，这可能会增加服务器的负载，特别是在高并发场景下。</li></ul><h3 id="token，session，cookie的区别？"><a href="#token，session，cookie的区别？" class="headerlink" title="token，session，cookie的区别？"></a>token，session，cookie的区别？</h3><ul><li>session存储于服务器，可以理解为一个状态列表，拥有一个唯一识别符号sessionId，通常存放于cookie中。服务器收到cookie后解析出sessionId，再去session列表中查找，才能找到相应session，依赖cookie。</li><li>cookie类似一个令牌，装有sessionId，存储在客户端，浏览器通常会自动添加。</li><li>token也类似一个令牌，无状态，用户信息都被加密到token中，服务器收到token后解密就可知道是哪个用户，需要开发者手动添加。</li></ul><h3 id="如果客户端禁用了cookie，session还能用吗？"><a href="#如果客户端禁用了cookie，session还能用吗？" class="headerlink" title="如果客户端禁用了cookie，session还能用吗？"></a>如果客户端禁用了cookie，session还能用吗？</h3><ul><li><p>默认情况下禁用 Cookie 后，Session 是无法正常使用的，因为大多数 Web 服务器都是依赖于 Cookie 来传递 Session 的会话 ID 的。</p></li><li><p>客户端浏览器禁用 Cookie 时，服务器将无法把会话 ID 发送给客户端，客户端也无法在后续请求中携带会话 ID 返回给服务器，从而导致服务器无法识别用户会话。</p></li><li><p>但是，有几种方法可以绕过这个问题，尽管它们可能会引入额外的复杂性和&#x2F;或降低用户体验：</p><ul><li><strong>URL重写：</strong>每当服务器响应需要保持状态的请求时，将Session ID附加到URL中作为参数。例如，原本的链接<code>http://example.com/page</code>变为<code>http://example.com/page;jsessionid=XXXXXX</code>，服务器端需要相应地解析 URL 来获取 Session ID，并维护用户的会话状态。这种方式的缺点是URL变得不那么整洁，且如果用户通过电子邮件或其他方式分享了这样的链接，可能导致Session ID的意外泄露。</li><li>隐藏表单字段：在每个需要Session信息的HTML表单中包含一个隐藏字段，用来存储Session ID。当表单提交时，Session ID随表单数据一起发送回服务器，服务器通过解析表单数据中的 Session ID 来获取用户的会话状态。这种方法仅适用于通过表单提交的交互模式，不适合链接点击或Ajax请求。</li></ul></li></ul><h3 id="如果我把数据存储到-localStorage，和Cookie有什么区别？"><a href="#如果我把数据存储到-localStorage，和Cookie有什么区别？" class="headerlink" title="如果我把数据存储到 localStorage，和Cookie有什么区别？"></a>如果我把数据存储到 localStorage，和Cookie有什么区别？</h3><ul><li>存储容量: Cookie 的存储容量通常较小,每个 Cookie 的大小限制在几 KB 左右。而 LocalStorage 的存储容量通常较大,一般限制在几 MB 左右。因此,如果需要存储大量数据，LocalStorage 通常更适合;</li><li>数据发送: Cookie 在每次 HTTP 请求中都会自动发送到服务器,这使得 Cookie 适合用于在客户端和服务器之间传递数据。而 localStorage 的数据不会自动发送到服务器,它仅在浏览器端存储数据,因此 LocalStorage 适合用于在同一域名下的不同页面之间共享数据;</li><li>生命周期：Cookie 可以设置一个过期时间,使得数据在指定时间后自动过期。而 LocalStorage 的数据将永久存储在浏览器中,除非通过 JavaScript 代码手动删除;</li><li>安全性：Cookie 的安全性较低,因为 Cookie 在每次 HTTP 请求中都会自动发送到服务器,存在被窃取或篡改的风险。而 LocalStorage 的数据仅在浏览器端存储,不会自动发送到服务器,相对而言更安全一些;</li></ul><h3 id="什么数据应该存在到cookie，什么数据存放到-Localstorage"><a href="#什么数据应该存在到cookie，什么数据存放到-Localstorage" class="headerlink" title="什么数据应该存在到cookie，什么数据存放到 Localstorage"></a>什么数据应该存在到cookie，什么数据存放到 Localstorage</h3><ul><li>Cookie 适合用于在客户端和服务器之间传递数据、跨域访问和设置过期时间，而 LocalStorage 适合用于在同一域名下的不同页面之间共享数据、存储大量数据和永久存储数据。</li></ul><h3 id="JWT-令牌和传统方式有什么区别？"><a href="#JWT-令牌和传统方式有什么区别？" class="headerlink" title="JWT 令牌和传统方式有什么区别？"></a>JWT 令牌和传统方式有什么区别？</h3><ul><li>无状态性：JWT是无状态的令牌，不需要在服务器端存储会话信息。相反，JWT令牌中包含了所有必要的信息，如用户身份、权限等。这使得JWT在分布式系统中更加适用，可以方便地进行扩展和跨域访问。</li><li>安全性：JWT使用密钥对令牌进行签名，确保令牌的完整性和真实性。只有持有正确密钥的服务器才能对令牌进行验证和解析。这种方式比传统的基于会话和Cookie的验证更加安全，有效防止了CSRF（跨站请求伪造）等攻击。</li><li>跨域支持：JWT令牌可以在不同域之间传递，适用于跨域访问的场景。通过在请求的头部或参数中携带JWT令牌，可以实现无需Cookie的跨域身份验证。</li></ul><h3 id="JWT-令牌都有哪些字段？"><a href="#JWT-令牌都有哪些字段？" class="headerlink" title="JWT 令牌都有哪些字段？"></a>JWT 令牌都有哪些字段？</h3><h4 id="头部"><a href="#头部" class="headerlink" title="头部"></a>头部</h4><ul><li>头部用于说明令牌的类型和签名算法</li></ul><h4 id="负载"><a href="#负载" class="headerlink" title="负载"></a>负载</h4><ul><li>载荷是 JWT 的核心部分，包含各种“声明”（Claims），即关于用户和令牌的信息。</li></ul><h4 id="签名"><a href="#签名" class="headerlink" title="签名"></a>签名</h4><ul><li>签名用于验证令牌是否被篡改。</li></ul><h3 id="JWT-令牌为什么能解决集群部署，什么是集群部署？"><a href="#JWT-令牌为什么能解决集群部署，什么是集群部署？" class="headerlink" title="JWT 令牌为什么能解决集群部署，什么是集群部署？"></a>JWT 令牌为什么能解决集群部署，什么是集群部署？</h3><ul><li>在传统的基于会话和Cookie的身份验证方式中，会话信息通常存储在服务器的内存或数据库中。但在集群部署中，不同服务器之间没有共享的会话信息，这会导致用户在不同服务器之间切换时需要重新登录，或者需要引入额外的共享机制（如Redis），增加了复杂性和性能开销。</li><li>而JWT令牌通过在令牌中包含所有必要的身份验证和会话信息，使得服务器无需存储会话信息，从而解决了集群部署中的身份验证和会话管理问题。当用户进行登录认证后，服务器将生成一个JWT令牌并返回给客户端。客户端在后续的请求中携带该令牌，服务器可以通过对令牌进行验证和解析来获取用户身份和权限信息，而无需访问共享的会话存储。</li><li>由于JWT令牌是自包含的，服务器可以独立地对令牌进行验证，而不需要依赖其他服务器或共享存储。这使得集群中的每个服务器都可以独立处理请求，提高了系统的可伸缩性和容错性。</li></ul><h3 id="jwt的缺点是什么？"><a href="#jwt的缺点是什么？" class="headerlink" title="jwt的缺点是什么？"></a>jwt的缺点是什么？</h3><ul><li>JWT 一旦派发出去，在失效之前都是有效的，没办法即使撤销JWT。</li><li>要解决这个问题的话，得在业务层增加判断逻辑，比如增加<strong>黑名单机制。</strong>使用内存数据库比如 Redis 维护一个黑名单，如果想让某个 JWT 失效的话就直接将这个 JWT 加入到 黑名单 即可。然后，每次使用 JWT 进行请求的话都会先判断这个 JWT 是否存在于黑名单中。</li></ul><h3 id="JWT-令牌如果泄露了，怎么解决，JWT是怎么做的？"><a href="#JWT-令牌如果泄露了，怎么解决，JWT是怎么做的？" class="headerlink" title="JWT 令牌如果泄露了，怎么解决，JWT是怎么做的？"></a>JWT 令牌如果泄露了，怎么解决，JWT是怎么做的？</h3><ul><li>及时失效令牌：当检测到JWT令牌泄露或存在风险时，可以立即将令牌标记为失效状态。服务器在接收到带有失效标记的令牌时，会拒绝对其进行任何操作，从而保护用户的身份和数据安全。</li><li>刷新令牌：JWT令牌通常具有一定的有效期，过期后需要重新获取新的令牌。当检测到令牌泄露时，可以主动刷新令牌，即重新生成一个新的令牌，并将旧令牌标记为失效状态。这样，即使泄露的令牌被恶意使用，也会很快失效，减少了被攻击者滥用的风险。</li><li>使用黑名单：服务器可以维护一个令牌的黑名单，将泄露的令牌添加到黑名单中。在接收到令牌时，先检查令牌是否在黑名单中，如果在则拒绝操作。这种方法需要服务器维护黑名单的状态，对性能有一定的影响，但可以有效地保护泄露的令牌不被滥用。</li></ul><h3 id="使用session登录流程"><a href="#使用session登录流程" class="headerlink" title="使用session登录流程"></a>使用session登录流程</h3><ul><li>用户向服务器发送用户名和密码。</li><li>服务器验证通过后，在当前对话（session）里面保存相关数据，比如用户角色、登录时间等等。</li><li>服务器向用户返回一个 session_id，写入用户的 Cookie。</li><li>用户随后的每一次请求，都会通过 Cookie，将 session_id 传回服务器。</li><li>服务器收到 session_id，找到前期保存的数据，由此得知用户的身份。</li></ul><h3 id="Token怎么保存"><a href="#Token怎么保存" class="headerlink" title="Token怎么保存"></a>Token怎么保存</h3><h4 id="Local-Storage（本地存储）"><a href="#Local-Storage（本地存储）" class="headerlink" title="Local Storage（本地存储）"></a>Local Storage（本地存储）</h4><ul><li>优点：Local Storage 提供了较大的存储空间（一般为5MB），且不会随着HTTP请求一起发送到服务器，因此不会出现在HTTP缓存或日志中。</li><li>缺点：存在XSS（跨站脚本攻击）的风险，恶意脚本可以通过JavaScript访问到存储在Local Storage中的JWT，从而盗取用户凭证。</li></ul><h4 id="Session-Storage（会话存储）"><a href="#Session-Storage（会话存储）" class="headerlink" title="Session Storage（会话存储）"></a>Session Storage（会话存储）</h4><ul><li>优点：与Local Storage类似，但仅限于当前浏览器窗口或标签页，当窗口关闭后数据会被清除，这在一定程度上减少了数据泄露的风险。</li><li>缺点：用户体验可能受影响，因为刷新页面或在新标签页打开相同应用时需要重新认证。</li></ul><h4 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h4><ul><li>优点：可以设置HttpOnly标志来防止通过JavaScript访问，减少XSS攻击的风险；可以利用Secure标志确保仅通过HTTPS发送，增加安全性。</li><li>缺点：大小限制较小（通常4KB），并且每次HTTP请求都会携带Cookie，可能影响性能；设置不当可能会受到CSRF（跨站请求伪造）攻击。</li></ul><h3 id="为什么有HTTP协议了-还要用RPC"><a href="#为什么有HTTP协议了-还要用RPC" class="headerlink" title="为什么有HTTP协议了?还要用RPC?"></a>为什么有HTTP协议了?还要用RPC?</h3><h4 id="性能差异"><a href="#性能差异" class="headerlink" title="性能差异"></a>性能差异</h4><ul><li>HTTP 是文本协议，每次请求都要带上大量的头信息（如 Content-Type、User-Agent 等），数据封装臃肿。</li><li>RPC 通常是二进制协议（如 gRPC 使用 Protobuf），数据体积小，传输快，适合高并发场景。</li></ul><h4 id="调用方式"><a href="#调用方式" class="headerlink" title="调用方式"></a>调用方式</h4><ul><li>RPC 框架（如 Dubbo、gRPC）支持自动生成客户端代码，调用远程服务就像调用本地方法一样。</li><li>HTTP 调用则需要手动构造请求、处理响应，开发成本更高。</li></ul><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><ul><li>RPC：微服务之间调用</li><li>HTTP：开放API或Web应用</li></ul><h3 id="HTTP长连接与WebSocket有什么区别？"><a href="#HTTP长连接与WebSocket有什么区别？" class="headerlink" title="HTTP长连接与WebSocket有什么区别？"></a>HTTP长连接与WebSocket有什么区别？</h3><ul><li>全双工和半双工：TCP 协议本身是全双工的，但我们最常用的 HTTP&#x2F;1.1，虽然是基于 TCP 的协议，但它是半双工的，对于大部分需要服务器主动推送数据到客户端的场景，都不太友好，因此我们需要使用支持全双工的 WebSocket 协议。</li><li>应用场景区别：在 HTTP&#x2F;1.1 里，只要客户端不问，服务端就不答。基于这样的特点，对于登录页面这样的简单场景，可以使用定时轮询或者长轮询的方式实现服务器推送(comet)的效果。对于客户端和服务端之间需要频繁交互的复杂场景，比如网页游戏，都可以考虑使用 WebSocket 协议。</li></ul><h3 id="Nginx（应用层）有哪些负载均衡算法？"><a href="#Nginx（应用层）有哪些负载均衡算法？" class="headerlink" title="Nginx（应用层）有哪些负载均衡算法？"></a>Nginx（应用层）有哪些负载均衡算法？</h3><ul><li>轮询：按照顺序依次将请求分配给后端服务器。这种算法最简单，但是也无法处理某个节点变慢或者客户端操作有连续性的情况。</li><li>IP哈希：根据客户端IP地址的哈希值来确定分配请求的后端服务器。适用于需要保持同一客户端的请求始终发送到同一台后端服务器的场景，如会话保持。</li><li>URL哈希：按访问的URL的哈希结果来分配请求，使每个URL定向到一台后端服务器，可以进一步提高后端缓存服务器的效率。</li><li>最短响应时间：按照后端服务器的响应时间来分配请求，响应时间短的优先分配。适用于后端服务器性能不均的场景，能够将请求发送到响应时间快的服务器，实现负载均衡。</li><li>加权轮询：按照权重分配请求给后端服务器，权重越高的服务器获得更多的请求。适用于后端服务器性能不同的场景，可以根据服务器权重分配请求，提高高性能服务器的利用率。</li></ul><h2 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h2><h3 id="说一下TCP头部"><a href="#说一下TCP头部" class="headerlink" title="说一下TCP头部"></a>说一下TCP头部</h3><ul><li>序列号：在建立连接时由计算机生成的随机数作为其初始值，通过 SYN 包传给接收端主机，每发送一次数据，就「累加」一次该「数据字节数」的大小。用来解决网络包乱序问题。</li><li>确认应答号：指下一次「期望」收到的数据的序列号，发送端收到这个确认应答以后可以认为在这个序号以前的数据都已经被正常接收。用来解决丢包的问题。</li><li>控制位：<ul><li>ACK：该位为 1 时，「确认应答」的字段变为有效，TCP 规定除了最初建立连接时的 SYN 包之外该位必须设置为 1 。</li><li>RST：该位为 1 时，表示 TCP 连接中出现异常必须强制断开连接。</li><li>SYN：该位为 1 时，表示希望建立连接，并在其「序列号」的字段进行序列号初始值的设定。</li><li>FIN：该位为 1 时，表示今后不会再有数据发送，希望断开连接。当通信结束希望断开连接时，通信双方的主机之间就可以相互交换 FIN 位为 1 的 TCP 段。</li></ul></li></ul><h3 id="TCP三次握手"><a href="#TCP三次握手" class="headerlink" title="TCP三次握手"></a>TCP三次握手</h3><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/TCP%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E8%BF%87%E7%A8%8B.png" alt="TCP三次握手过程"></p><ul><li>一开始，客户端和服务端都处于 CLOSE 状态。先是服务端主动监听某个端口，处于 LISTEN 状态</li></ul><h4 id="SYN报文"><a href="#SYN报文" class="headerlink" title="SYN报文"></a>SYN报文</h4><ul><li>客户端会随机初始化序号（client_isn），将此序号置于 TCP 首部的「序号」字段中，同时把 SYN 标志位置为 1，表示 SYN 报文。接着把第一个 SYN 报文发送给服务端，表示向服务端发起连接，该报文不包含应用层数据，之后客户端处于 SYN-SENT 状态。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/SYN%E6%8A%A5%E6%96%87.png" alt="SYN报文"></li></ul><h4 id="SYN-ACK报文"><a href="#SYN-ACK报文" class="headerlink" title="SYN+ACK报文"></a>SYN+ACK报文</h4><ul><li>服务端收到客户端的 SYN 报文后，首先服务端也随机初始化自己的序号（server_isn），将此序号填入 TCP 首部的「序号」字段中，其次把 TCP 首部的「确认应答号」字段填入 client_isn + 1, 接着把 SYN 和 ACK 标志位置为 1。最后把该报文发给客户端，该报文也不包含应用层数据，之后服务端处于 SYN-RCVD 状态。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/SYNACK%E6%8A%A5%E6%96%87.png" alt="SYNACK报文"></li></ul><h4 id="ACK报文"><a href="#ACK报文" class="headerlink" title="ACK报文"></a>ACK报文</h4><ul><li>客户端收到服务端报文后，还要向服务端回应最后一个应答报文，首先该应答报文 TCP 首部 ACK 标志位置为 1 ，其次「确认应答号」字段填入 server_isn + 1 ，最后把报文发送给服务端，这次报文可以携带客户到服务端的数据，之后客户端处于 ESTABLISHED 状态。</li><li>服务端收到客户端的应答报文后，也进入 ESTABLISHED 状态。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/ACK%E6%8A%A5%E6%96%87.png" alt="ACK报文"></li><li>※第三次握手是可以携带数据的，前两次握手是不可以携带数据的</li></ul><h3 id="使用三次握手的原因"><a href="#使用三次握手的原因" class="headerlink" title="使用三次握手的原因"></a>使用三次握手的原因</h3><h4 id="避免历史链接"><a href="#避免历史链接" class="headerlink" title="避免历史链接"></a>避免历史链接</h4><ul><li>RFC 793 指出的 TCP 连接使用三次握手的首要原因：<blockquote><p>The principle reason for the three-way handshake is to prevent old duplicate connection initiations from causing confusion.</p></blockquote></li><li>若只是两步握手：<ul><li>客户端给服务端发送了一个SYN报文，序号为90，但由于网络拥塞，这个报文传输的慢。接着客户端宕机重启，重新发送了一个100号的SYN报文</li><li>※此时90号先到达服务端，服务端回应了一个ACK为91的报文，此时服务端进入ESTABLISHED状态</li><li>客户端接收到ACK为91的报文，但实际上客户端想要接收到ACK为101的报文，此时客户端发送RST报文，连接中止</li></ul></li><li>若只是两步握手的话，在※处服务端就进入了半连接状态，浪费服务器资源</li><li>三次握手的过程：<ul><li>客户端给服务端发送了一个SYN报文，序号为90，但由于网络拥塞，这个报文传输的慢。接着客户端宕机重启，重新发送了一个100号的SYN报文</li><li>※此时90号先到达服务端，服务端回应了一个ACK为91的报文</li><li>客户端接收到ACK为91的报文，但实际上客户端想要接收到ACK为101的报文，此时客户端发送RST报文，连接中止</li><li>100号SYN报文到达服务端，服务端回应ACK为101的报文</li><li>客户端收到，建立连接，并发送ACK报文</li><li>服务端收到，连接建立</li></ul></li></ul><h4 id="同步双方初始序列号"><a href="#同步双方初始序列号" class="headerlink" title="同步双方初始序列号"></a>同步双方初始序列号</h4><ul><li>连接时，客户端向服务端发送一个初始序列号（SYN），服务端收到这个序列号后需要确认，同时生成自己的序列号并发送到客户端（SYN+ACK）</li><li>客户端收到服务端的序列号，告诉服务端已经收到（ACK）</li><li>作用：<ul><li>接收方可以去除重复的数据；</li><li>接收方可以根据数据包的序列号按序接收；</li><li>可以标识发送出去的数据包中， 哪些是已经被对方收到的（通过 ACK 报文中的序列号知道）；</li></ul></li></ul><h4 id="避免资源浪费"><a href="#避免资源浪费" class="headerlink" title="避免资源浪费"></a>避免资源浪费</h4><ul><li>如果只有「两次握手」，当客户端发生的 SYN 报文在网络中阻塞，客户端没有接收到 ACK 报文，就会重新发送 SYN ，由于没有第三次握手，服务端不清楚客户端是否收到了自己回复的 ACK 报文，所以服务端每收到一个 SYN 就只能先主动建立一个连接，这会造成什么情况呢？</li><li>如果客户端发送的 SYN 报文在网络中阻塞了，重复发送多次 SYN 报文，那么服务端在收到请求后就会建立多个冗余的无效链接，造成不必要的资源浪费。</li><li>即两次握手会造成消息滞留情况下，服务端重复接受无用的连接请求 SYN 报文，而造成重复分配资源。</li></ul><h3 id="TCP-三次握手，客户端第三次发送的确认包丢失了发生什么？"><a href="#TCP-三次握手，客户端第三次发送的确认包丢失了发生什么？" class="headerlink" title="TCP 三次握手，客户端第三次发送的确认包丢失了发生什么？"></a>TCP 三次握手，客户端第三次发送的确认包丢失了发生什么？</h3><ul><li>客户端收到服务端的 SYN-ACK 报文后，就会给服务端回一个 ACK 报文，也就是第三次握手，此时客户端状态进入到 ESTABLISH 状态。</li><li>因为这个第三次握手的 ACK 是对第二次握手的 SYN 的确认报文，所以当第三次握手丢失了，如果服务端那一方迟迟收不到这个确认报文，就会触发超时重传机制，每次重传都会等待2倍的超时时间，重传 SYN-ACK 报文，直到收到第三次握手，或者达到最大重传次数。<ul><li>若tcp_synack_retries 为 2，当服务端超时重传 2 次 SYN-ACK 报文后，由于 tcp_synack_retries 为 2，已达到最大重传次数，于是再等待一段时间（时间为上一次超时时间的 2 倍），如果还是没能收到客户端的第三次握手（ACK 报文），那么服务端就会断开连接。</li></ul></li><li>注意，ACK 报文是不会有重传的，当 ACK 丢失了，就由对方重传对应的报文。</li></ul><h3 id="三次握手和-accept-是什么关系？-accept-做了哪些事情？"><a href="#三次握手和-accept-是什么关系？-accept-做了哪些事情？" class="headerlink" title="三次握手和 accept 是什么关系？ accept 做了哪些事情？"></a>三次握手和 accept 是什么关系？ accept 做了哪些事情？</h3><h4 id="accept系统调用"><a href="#accept系统调用" class="headerlink" title="accept系统调用"></a>accept系统调用</h4><ul><li>accept() 是一个 服务器端的系统调用，用于从内核中“已完成连接队列”中取出一个连接，正式建立与客户端的通信通道。返回一个新的套接字，并设置客户端的地址信息</li></ul><h4 id="accept-做的事"><a href="#accept-做的事" class="headerlink" title="accept()做的事"></a>accept()做的事</h4><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/accept%E4%B8%8E%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B.png" alt="accept与三次握手"></p><ul><li>默认阻塞等待连接<ul><li>如果“已完成连接队列”为空，accept() 会阻塞，直到有客户端完成三次握手。</li></ul></li><li>从队列中取出连接：<ul><li>内核维护两个队列：<ul><li>半连接队列（握手未完成）</li><li>已连接队列（握手完成）</li></ul></li><li>accept() 从已连接队列中取出一个连接。</li></ul></li><li>返回新的 socket 描述符：<ul><li>这个新 socket 是专门用于与该客户端通信的，和原来的监听 socket 是分开的。</li></ul></li><li>获取客户端地址信息：<ul><li>如果你传入 addr 参数，accept() 会填充客户端的 IP 和端口信息。</li></ul></li></ul><h4 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h4><table><thead><tr><th>阶段</th><th>说明</th></tr></thead><tbody><tr><td>🔄 三次握手</td><td>TCP 协议自动完成：客户端发送 SYN，服务器回应 SYN+ACK，客户端再发 ACK</td></tr><tr><td>🎯 accept()</td><td>三次握手完成后，服务器调用 accept() 从内核的“已完成连接队列”中取出连接，返回一个新的 socket，用于后续通信</td></tr></tbody></table><h3 id="客户端发送的第一个-SYN-报文，服务器没有收到怎么办？"><a href="#客户端发送的第一个-SYN-报文，服务器没有收到怎么办？" class="headerlink" title="客户端发送的第一个 SYN 报文，服务器没有收到怎么办？"></a>客户端发送的第一个 SYN 报文，服务器没有收到怎么办？</h3><ul><li>会超时重传，第一次超时时间一般是1秒，写死在内核中，更改的话需要重新编译内核</li><li>超时重传次数有上限，SYN报文重传次数由 tcp_syn_retries内核参数控制，Linux中默认为5</li><li>每次超时重传都会等待2倍时间，第一次1秒，第二次2秒，第三次4秒…</li><li>超时重传最大次数后，客户端从SYN_SENT状态变为CLOSE状态</li></ul><h3 id="服务器收到第一个-SYN-报文，回复的-SYN-ACK-报文丢失了怎么办？"><a href="#服务器收到第一个-SYN-报文，回复的-SYN-ACK-报文丢失了怎么办？" class="headerlink" title="服务器收到第一个 SYN 报文，回复的 SYN + ACK 报文丢失了怎么办？"></a>服务器收到第一个 SYN 报文，回复的 SYN + ACK 报文丢失了怎么办？</h3><ul><li>因为SYNACK报文是对SYN报文的回复，所以这个报文丢失会导致客户端重传SYN报文 <ul><li>SYN报文重传次数由 tcp_syn_retries内核参数控制，Linux中默认为5</li></ul></li><li>因为SYNACK报文是第二次握手，所以丢失以后服务端也会进行重传<ul><li>SYNACK重传次数由tcp_synack_retries内核参数决定，默认5</li></ul></li></ul><h3 id="第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？"><a href="#第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？" class="headerlink" title="第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？"></a>第一次握手，客户端发送SYN报后，服务端回复ACK报，那这个过程中服务端内部做了哪些工作？</h3><ul><li>服务端收到客户端发起的 SYN 请求后，内核会把该连接存储到半连接队列，并向客户端响应 SYN+ACK，接着客户端会返回 ACK，服务端收到第三次握手的 ACK 后，内核会把连接从半连接队列移除，然后创建新的完全的连接，并将其添加到 accept 队列，等待进程调用 accept 函数时把连接取出来。</li><li>不管是半连接队列还是全连接队列，都有最大长度限制，超过限制时，内核会直接丢弃，或返回 RST 包。</li></ul><h3 id="大量SYN包发送给服务端服务端会发生什么事情？"><a href="#大量SYN包发送给服务端服务端会发生什么事情？" class="headerlink" title="大量SYN包发送给服务端服务端会发生什么事情？"></a>大量SYN包发送给服务端服务端会发生什么事情？</h3><ul><li>SYN Flood 攻击，有可能会导致TCP 半连接队列打满，这样当 TCP 半连接队列满了，后续再在收到 SYN 报文就会丢弃，导致客户端无法和服务端建立连接。</li></ul><h4 id="解决方案一：调大netdev-max-backlog"><a href="#解决方案一：调大netdev-max-backlog" class="headerlink" title="解决方案一：调大netdev_max_backlog"></a>解决方案一：调大netdev_max_backlog</h4><ul><li>这个参数用来保存<strong>内核来不及处理的数据包的队列大小</strong>，默认1000。当网卡接收的速度大于内核处理速度，会满。</li><li>这一方法可以缓解网卡拥堵，降低丢包率，但不能防止半连接队列打满</li></ul><h4 id="解决方案二：增大SYN半连接队列"><a href="#解决方案二：增大SYN半连接队列" class="headerlink" title="解决方案二：增大SYN半连接队列"></a>解决方案二：增大SYN半连接队列</h4><ul><li>增大 net.ipv4.tcp_max_syn_backlog，控制半连接队列的最大长度</li><li>增大 listen() 函数中的 backlog，这是你在代码中设置的队列长度</li><li>增大 net.core.somaxconn，控制全连接队列的最大长度，也影响半连接队列的处理能力</li><li>最终队列大小是min(tcp_max_syn_backlog, somaxconn, backlog)，所以三个参数都要调大才有效。</li></ul><h4 id="解决方案三：开启-net-ipv4-tcp-syncookies——验证是否真心连接"><a href="#解决方案三：开启-net-ipv4-tcp-syncookies——验证是否真心连接" class="headerlink" title="解决方案三：开启 net.ipv4.tcp_syncookies——验证是否真心连接"></a>解决方案三：开启 net.ipv4.tcp_syncookies——验证是否真心连接</h4><ul><li>当半连接队列已满，再收到SYN报文时，并不丢弃，但也不分配连接资源</li><li>而是先构造一个特殊序列号（SYN Cookie），包含了客户端和服务端的IP、端口、时间戳、MSS（客户端声明的最大报文段长度）等</li><li>发送 SYN+ACK 报文，序列号就是 Cookie</li><li>客户端回应 ACK 后，服务器从 ACK 中恢复出原始连接信息，如果合法，将连接放入accept队列</li><li>有三个值，0表示不开启，1表示SYN队列满再使用，2表示无条件开启</li></ul><h4 id="减少SYNACK重传次数"><a href="#减少SYNACK重传次数" class="headerlink" title="减少SYNACK重传次数"></a>减少SYNACK重传次数</h4><ul><li>因为被SYN攻击时，会有大量处于SYN_RCVD的连接，这个状态的连接会重传SYNACK报文</li><li>只要减少重传次数，就能更快断开连接</li></ul><h3 id="TCP四次挥手（FIN-ACK-FIN-ACK）"><a href="#TCP四次挥手（FIN-ACK-FIN-ACK）" class="headerlink" title="TCP四次挥手（FIN-ACK-FIN-ACK）"></a>TCP四次挥手（FIN-ACK-FIN-ACK）</h3><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/TCP%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B.png" alt="TCP四次挥手"></p><h4 id="客户端FIN"><a href="#客户端FIN" class="headerlink" title="客户端FIN"></a>客户端FIN</h4><ul><li>客户端主动调用关闭连接的函数，于是就会发送 FIN 报文，这个 FIN 报文代表客户端不会再发送数据了，进入 FIN_WAIT_1 状态；</li></ul><h4 id="服务端ACK、服务端FIN"><a href="#服务端ACK、服务端FIN" class="headerlink" title="服务端ACK、服务端FIN"></a>服务端ACK、服务端FIN</h4><ul><li>服务端收到了 FIN 报文，然后马上回复一个 ACK 确认报文，此时服务端进入 CLOSE_WAIT 状态。在收到 FIN 报文的时候，TCP 协议栈会在接收缓冲区中插入一个特殊的“文件结束符”（EOF），这个 EOF 会被放在已排队等候的其他已接收的数据之后，所以必须要得继续 read 接收缓冲区已接收的数据；</li><li>接着，当服务端在 read 数据的时候，最后自然就会读到 EOF，接着 read() 就会返回 0，这时服务端应用程序如果有数据要发送的话，就发完数据后才调用关闭连接的函数，如果服务端应用程序没有数据要发送的话，可以直接调用关闭连接的函数，这时服务端就会发一个 FIN 包，这个 FIN 报文代表服务端不会再发送数据了，之后处于 LAST_ACK 状态；</li></ul><h4 id="客户端ACK"><a href="#客户端ACK" class="headerlink" title="客户端ACK"></a>客户端ACK</h4><ul><li>客户端接收到服务端的 FIN 包，并发送 ACK 确认包给服务端，此时客户端将进入 TIME_WAIT 状态；</li><li>服务端收到 ACK 确认包后，就进入了最后的 CLOSE 状态；<br>客户端经过 2MSL（报文最大生存时间） 时间之后，也进入 CLOSE 状态；</li></ul><h3 id="为什么4次握手中间两次不能变成一次？"><a href="#为什么4次握手中间两次不能变成一次？" class="headerlink" title="为什么4次握手中间两次不能变成一次？"></a>为什么4次握手中间两次不能变成一次？</h3><ul><li>服务器收到客户端的 FIN 报文时，内核会马上回一个 ACK 应答报文，但是服务端应用程序可能还有数据要发送，所以并不能马上发送 FIN 报文，而是将发送 FIN 报文的控制权交给服务端应用程序：<ul><li>如果服务端应用程序有数据要发送的话，就发完数据后，才调用关闭连接的函数；</li><li>如果服务端应用程序没有数据要发送的话，可以直接调用关闭连接的函数，</li></ul></li><li>从上面过程可知，是否要发送第三次挥手的控制权不在内核，而是在被动关闭方（上图的服务端）的应用程序，因为应用程序可能还有数据要发送，由应用程序决定什么时候调用关闭连接的函数，当调用了关闭连接的函数，内核就会发送 FIN 报文了，所以服务端的 ACK 和 FIN 一般都会分开发送。</li></ul><h3 id="第二次和第三次挥手能合并嘛"><a href="#第二次和第三次挥手能合并嘛" class="headerlink" title="第二次和第三次挥手能合并嘛"></a>第二次和第三次挥手能合并嘛</h3><ul><li>没数据发送可以合并</li></ul><h3 id="第三次挥手一直没发，会发生什么？"><a href="#第三次挥手一直没发，会发生什么？" class="headerlink" title="第三次挥手一直没发，会发生什么？"></a>第三次挥手一直没发，会发生什么？</h3><ul><li>若客户端使用shutdown()关闭，客户端会一直停留在FIN_WAIT_2状态</li><li>若使用close()，客户端维持一段FIN_WAIT_2后，再关闭，时间受tcp_fin_timeout控制</li></ul><h3 id="第二次和第三次挥手之间，主动断开的那端能干什么"><a href="#第二次和第三次挥手之间，主动断开的那端能干什么" class="headerlink" title="第二次和第三次挥手之间，主动断开的那端能干什么"></a>第二次和第三次挥手之间，主动断开的那端能干什么</h3><ul><li>如果主动断开的一方，是调用了 shutdown 函数来关闭连接，并且只选择了关闭发送能力且没有关闭接收能力的话，那么主动断开的一方在第二次和第三次挥手之间还可以接收数据。</li><li>也就是说，在二三挥手之间，可以由服务端发送数据，客户端正常发送ACK</li></ul><h3 id="断开连接时客户端-FIN-包丢失，服务端的状态是什么？"><a href="#断开连接时客户端-FIN-包丢失，服务端的状态是什么？" class="headerlink" title="断开连接时客户端 FIN 包丢失，服务端的状态是什么？"></a>断开连接时客户端 FIN 包丢失，服务端的状态是什么？</h3><ul><li>正常情况下，客户端会进入FIN_WAIT1状态，服务端进入CLOSE_WAIT状态</li><li>客户端会超时重传，服务端依旧是ESTASBLISH状态</li></ul><h3 id="为什么四次挥手之后要等2MSL"><a href="#为什么四次挥手之后要等2MSL" class="headerlink" title="为什么四次挥手之后要等2MSL?"></a>为什么四次挥手之后要等2MSL?</h3><ul><li>MSL为报文最大生存时间，是任何报文在网络上存在的最长时间，超过此时间报文会被丢弃，TCP基于IP协议，IP协议头部有TTL字段（最大路由跳数），MSL要大于TTL消耗为0的时间</li><li>之所以是2倍MSL，是因为网络中可能存在来自发送方的数据包，当这些发送方的数据包被接收方处理后又会向对方发送响应，所以一来一回需要等待 2 倍的时间。如果被动关闭方没有收到断开连接的最后的 ACK 报文，就会触发超时重发 FIN 报文，另一方接收到 FIN 后，会重发 ACK 给被动关闭方， 一来一去正好 2 个 MSL。</li></ul><h3 id="服务端出现大量的timewait有哪些原因"><a href="#服务端出现大量的timewait有哪些原因" class="headerlink" title="服务端出现大量的timewait有哪些原因?"></a>服务端出现大量的timewait有哪些原因?</h3><h4 id="HTTP没有使用长连接"><a href="#HTTP没有使用长连接" class="headerlink" title="HTTP没有使用长连接"></a>HTTP没有使用长连接</h4><ul><li>关闭长连接后，每次请求都要握手、传数据、挥手</li><li>根据大多数 Web 服务的实现，不管哪一方禁用了 HTTP Keep-Alive，都是由服务端主动关闭连接，那么此时服务端上就会出现 TIME_WAIT 状态的连接。</li></ul><h4 id="HTTP长连接超时"><a href="#HTTP长连接超时" class="headerlink" title="HTTP长连接超时"></a>HTTP长连接超时</h4><ul><li>web 服务软件一般都会提供一个参数，用来指定 HTTP 长连接的超时时间，比如 nginx 提供的 keepalive_timeout 参数。</li><li>假设设置了 HTTP 长连接的超时时间是 60 秒，nginx 就会启动一个「定时器」，如果客户端在完后一个 HTTP 请求后，在 60 秒内都没有再发起新的请求，定时器的时间一到，nginx 就会触发回调函数来关闭该连接，那么此时服务端上就会出现 TIME_WAIT 状态的连接。</li></ul><h4 id="HTTP长连接请求数量达到上限"><a href="#HTTP长连接请求数量达到上限" class="headerlink" title="HTTP长连接请求数量达到上限"></a>HTTP长连接请求数量达到上限</h4><ul><li>Web 服务端通常会有个参数，来定义一条 HTTP 长连接上最大能处理的请求数量，当超过最大限制时，就会主动关闭连接。</li><li>比如 nginx 的 keepalive_requests 这个参数，这个参数是指一个 HTTP 长连接建立之后，nginx 就会为这个连接设置一个计数器，记录这个 HTTP 长连接上已经接收并处理的客户端请求的数量。如果达到这个参数设置的最大值时，则 nginx 会主动关闭这个长连接，那么此时服务端上就会出现 TIME_WAIT 状态的连接。</li><li>keepalive_requests 参数的默认值是 100 ，意味着每个 HTTP 长连接最多只能跑 100 次请求，这个参数往往被大多数人忽略，因为当 QPS (每秒请求数) 不是很高时，默认值 100 凑合够用。</li><li>但是，对于一些 QPS 比较高的场景，比如超过 10000 QPS，甚至达到 30000 , 50000 甚至更高，如果 keepalive_requests 参数值是 100，这时候就 nginx 就会很频繁地关闭连接，那么此时服务端上就会出大量的 TIME_WAIT 状态。</li></ul><h3 id="TCP和UDP区别"><a href="#TCP和UDP区别" class="headerlink" title="TCP和UDP区别"></a>TCP和UDP区别</h3><table><thead><tr><th>特性</th><th>TCP（传输控制协议）</th><th>UDP（用户数据报协议）</th></tr></thead><tbody><tr><td>是否连接</td><td>✅ 面向连接（三次握手）</td><td>❌ 无连接</td></tr><tr><td>可靠性</td><td>✅ 保证数据可靠传输（有确认、重传）</td><td>❌ 不保证可靠性（无确认、无重传）</td></tr><tr><td>顺序保证</td><td>✅ 保证数据按顺序到达</td><td>❌ 不保证顺序</td></tr><tr><td>流量控制</td><td>✅ 有流量控制机制</td><td>❌ 无流量控制</td></tr><tr><td>拥塞控制</td><td>✅ 有拥塞控制机制</td><td>❌ 无拥塞控制</td></tr><tr><td>传输效率</td><td>❌ 较低（因控制机制多）</td><td>✅ 高效（轻量级）</td></tr><tr><td>首部开销</td><td>TCP首部较长，不使用选项字段时为20字节</td><td>UDP首部只有8字节</td></tr><tr><td>传输方式</td><td>TCP为流式传输</td><td>UDP是一个包一个包的发送</td></tr><tr><td>适合场景</td><td>文件传输、网页浏览、邮件、远程登录等</td><td>视频直播、语音通话、游戏、DNS查询等</td></tr></tbody></table><h3 id="TCP为什么可靠传输"><a href="#TCP为什么可靠传输" class="headerlink" title="TCP为什么可靠传输"></a>TCP为什么可靠传输</h3><ul><li>连接管理：即三次握手和四次挥手。连接管理机制能够建立起可靠的连接，这是保证传输可靠性的前提。</li><li>序列号：TCP将每个字节的数据都进行了编号，这就是序列号。序列号的具体作用如下：能够保证可靠性，既能防止数据丢失，又能避免数据重复。能够保证有序性，按照序列号顺序进行数据包还原。能够提高效率，基于序列号可实现多次发送，一次确认。</li><li>确认应答：接收方接收数据之后，会回传ACK报文，报文中带有此次确认的序列号，用于告知发送方此次接收数据的情况。在指定时间后，若发送端仍未收到确认应答，就会启动超时重传。</li><li>超时重传：超时重传主要有两种场景：数据包丢失：在指定时间后，若发送端仍未收到确认应答，就会启动超时重传，向接收端重新发送数据包。确认包丢失：当接收端收到重复数据(通过序列号进行识别)时将其丢弃，并重新回传ACK报文。</li><li>流量控制：接收端处理数据的速度是有限的，如果发送方发送数据的速度过快，就会导致接收端的缓冲区溢出，进而导致丢包。为了避免上述情况的发生，TCP支持根据接收端的处理能力，来决定发送端的发送速度。这就是流量控制。流量控制是通过在TCP报文段首部维护一个滑动窗口来实现的。</li><li>拥塞控制：拥塞控制就是当网络拥堵严重时，发送端减少数据发送。拥塞控制是通过发送端维护一个拥塞窗口来实现的。可以得出，发送端的发送速度，受限于滑动窗口和拥塞窗口中的最小值。拥塞控制方法分为：慢开始，拥塞避免、快重传和快恢复。</li></ul><h3 id="如何使用UDP实现HTTP"><a href="#如何使用UDP实现HTTP" class="headerlink" title="如何使用UDP实现HTTP"></a>如何使用UDP实现HTTP</h3><h4 id="使用QUIC协议"><a href="#使用QUIC协议" class="headerlink" title="使用QUIC协议"></a>使用QUIC协议</h4><ul><li>实现了序列号、ACK、重传机制</li><li>实现了拥塞控制</li><li>包含TLS1.3</li></ul><h4 id="自己实现（应用层）"><a href="#自己实现（应用层）" class="headerlink" title="自己实现（应用层）"></a>自己实现（应用层）</h4><ul><li>给每个 UDP 包加上序列号</li><li>实现 ACK 和重传机制</li><li>加入超时控制</li><li>加密传输（如 TLS）</li><li>自定义协议头（类似 QUIC）</li></ul><h3 id="tcp粘包怎么解决？"><a href="#tcp粘包怎么解决？" class="headerlink" title="tcp粘包怎么解决？"></a>tcp粘包怎么解决？</h3><ul><li>粘包的问题出现是因为不知道一个用户消息的边界在哪，如果知道了边界在哪，接收方就可以通过边界来划分出有效的用户消息。</li></ul><h4 id="固定消息长度"><a href="#固定消息长度" class="headerlink" title="固定消息长度"></a>固定消息长度</h4><ul><li>顾名思义</li></ul><h4 id="特殊字符作为边界"><a href="#特殊字符作为边界" class="headerlink" title="特殊字符作为边界"></a>特殊字符作为边界</h4><ul><li>在消息之间插入一些特殊字符，当读到这个字符时，就认为已经读完一条消息</li><li>HTTP设置回车、换行符作为边界</li><li>如果消息中刚好存在这个字符，我们需要设置转义字符</li></ul><h4 id="自定义消息体结构"><a href="#自定义消息体结构" class="headerlink" title="自定义消息体结构"></a>自定义消息体结构</h4><ul><li>我们可以自定义一个消息结构，由包头和数据组成，其中包头包是固定大小的，而且包头里有一个字段来说明紧随其后的数据有多大。</li><li>比如这个消息结构体，首先 4 个字节大小的变量来表示数据长度，真正的数据则在后面。<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-class"><span class="hljs-keyword">struct</span> &#123;</span> <br>    <span class="hljs-type">u_int32_t</span> message_length; <br>    <span class="hljs-type">char</span> message_data[]; <br>&#125; message;<br></code></pre></td></tr></table></figure></li><li>从包头中解析到消息的大小，就可以知道消息边界了</li></ul><h3 id="TCP的拥塞控制介绍一下？"><a href="#TCP的拥塞控制介绍一下？" class="headerlink" title="TCP的拥塞控制介绍一下？"></a>TCP的拥塞控制介绍一下？</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><ul><li>TCP通过降低发送的数据量来进行拥塞控制</li><li>使用拥塞窗口cwnd，它会根据网络拥塞程度动态变化。发送窗口 swnd 和接收窗口 rwnd 是约等于的关系，那么由于加入了拥塞窗口的概念后，此时发送窗口的值是swnd &#x3D; min(cwnd, rwnd)，也就是拥塞窗口和接收窗口中的最小值。<ul><li>只要网络中没有出现拥塞，cwnd 就会增大；但网络中出现了拥塞，cwnd 就减少；</li><li>如果发生了超时重传，说明网络出现了拥塞</li></ul></li><li>拥塞控制主要是四个算法：</li></ul><h4 id="慢启动"><a href="#慢启动" class="headerlink" title="慢启动"></a>慢启动</h4><ul><li>规则：当发送方每收到一个 ACK，拥塞窗口 cwnd 的大小就会加 1。</li><li>假定拥塞窗口 cwnd 和发送窗口 swnd 相等，连接建立完成后，一开始初始化 cwnd &#x3D; 1，表示可以传一个 MSS 大小的数据。</li><li>当收到一个 ACK 确认应答后，cwnd 增加 1，于是一次能够发送 2 个</li><li>当收到 2 个的 ACK 确认应答后， cwnd 增加 2，于是就可以比之前多发2 个，所以这一次能够发送 4 个</li><li>当这 4 个的 ACK 确认到来的时候，每个确认 cwnd 增加 1， 4 个确认 cwnd 增加 4，于是就可以比之前多发 4 个，所以这一次能够发送 8 个。</li><li>直到达到慢启动门限 ssthresh （slow start threshold）一般来说 ssthresh 的大小是 65535 字节。<ul><li>当 cwnd &lt; ssthresh 时，使用慢启动算法。</li><li>当 cwnd &gt;&#x3D; ssthresh 时，就会使用「拥塞避免算法」。</li></ul></li></ul><h4 id="拥塞避免算法"><a href="#拥塞避免算法" class="headerlink" title="拥塞避免算法"></a>拥塞避免算法</h4><ul><li>当拥塞窗口 cwnd 「超过」慢启动门限 ssthresh 就会进入拥塞避免算法。</li><li>规则是：每当收到一个 ACK 时，cwnd 增加 1&#x2F;cwnd。</li></ul><h4 id="拥塞发生算法"><a href="#拥塞发生算法" class="headerlink" title="拥塞发生算法"></a>拥塞发生算法</h4><ul><li>分为超时重传和快速重传</li><li>超时重传：拥塞避免+慢启动<ul><li>将慢启动阈值ssthresh设为cwnd&#x2F;2</li><li>cwnd&#x3D;1</li><li>但是这种方式太激进了，反应也很强烈，会造成网络卡顿。</li></ul></li><li>快速重传：少量数据包丢失<ul><li>当收到乱序的数据包时，会连续发送三个期待的ACK，告诉发送方重传</li><li>发送方收到三个相同ACK的包，立即重传</li></ul></li></ul><h4 id="快速恢复算法"><a href="#快速恢复算法" class="headerlink" title="快速恢复算法"></a>快速恢复算法</h4><ul><li>和快速重传搭配使用</li><li>将慢启动阈值ssthresh设为cwnd&#x2F;2</li><li>然后将cwnd设置为ssthresh+3MSS（最大段大小）</li><li>执行拥塞避免算法，逐渐增加cwnd</li><li>这是因为收到三个重复的 ACK，说明网络中还有一定的带宽可用，不需要像传统的慢启动那样将 cwnd 一下子降为 1。</li></ul><h2 id="网络场景"><a href="#网络场景" class="headerlink" title="网络场景"></a>网络场景</h2><h3 id="浏览器访问-URL-的全过程解析"><a href="#浏览器访问-URL-的全过程解析" class="headerlink" title="浏览器访问 URL 的全过程解析"></a>浏览器访问 URL 的全过程解析</h3><h4 id="解析URL"><a href="#解析URL" class="headerlink" title="解析URL"></a>解析URL</h4><ul><li>分析 URL 所需要使用的传输协议和请求的资源路径。如果输入的 URL 中的协议或者主机名不合法，将会把地址栏中输入的内容传递给搜索引擎。如果没有问题，浏览器会检查 URL 中是否出现了非法字符，则对非法字符进行转义后在进行下一过程。</li></ul><h4 id="从缓存中查看域名的IP"><a href="#从缓存中查看域名的IP" class="headerlink" title="从缓存中查看域名的IP"></a>从缓存中查看域名的IP</h4><ul><li>浏览器尝试从以下缓存中获取域名对应的 IP 地址：<figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">浏览器<span class="hljs-built_in"> DNS </span>缓存 → 操作系统 hosts 文件 → 路由器缓存 → ISP<span class="hljs-built_in"> DNS </span>缓存<br></code></pre></td></tr></table></figure></li><li>如果命中缓存，直接返回 IP 地址，跳过 DNS 查询。</li></ul><h4 id="DNS-解析阶段（如果缓存未命中）"><a href="#DNS-解析阶段（如果缓存未命中）" class="headerlink" title="DNS 解析阶段（如果缓存未命中）"></a>DNS 解析阶段（如果缓存未命中）</h4><ul><li>浏览器向本地 DNS 服务器发起查询请求。</li><li>若本地 DNS 无记录，则递归查询：<ul><li>根域名服务器（.）</li><li>顶级域名服务器（如 .com）</li><li>权威域名服务器（如 example.com）</li></ul></li><li>最终返回目标主机的 IP 地址。</li></ul><h4 id="MAC-地址解析阶段（链路层准备）"><a href="#MAC-地址解析阶段（链路层准备）" class="headerlink" title="MAC 地址解析阶段（链路层准备）"></a>MAC 地址解析阶段（链路层准备）</h4><ul><li>网络层将目标 IP 地址下发给数据链路层。</li><li>判断目标 IP 是否在同一子网：<ul><li>✅ 同一子网：使用 ARP 协议获取目标主机的 MAC 地址</li><li>❌ 不同子网：通过网关转发，使用 ARP 获取网关的 MAC 地址</li></ul></li><li>构造以太网帧，包含源 MAC 和目标 MAC。</li></ul><h4 id="建立-TCP-连接（三次握手）"><a href="#建立-TCP-连接（三次握手）" class="headerlink" title="建立 TCP 连接（三次握手）"></a>建立 TCP 连接（三次握手）</h4><h4 id="建立-TLS-连接（HTTPS-的四次握手）"><a href="#建立-TLS-连接（HTTPS-的四次握手）" class="headerlink" title="建立 TLS 连接（HTTPS 的四次握手）"></a>建立 TLS 连接（HTTPS 的四次握手）</h4><ul><li>客户端发送 ClientHello（包含加密参数）</li><li>服务器回应 ServerHello（返回证书等）</li><li>客户端验证证书，生成密钥</li><li>双方完成密钥交换，建立加密通道</li></ul><h4 id="发送-HTTP-请求"><a href="#发送-HTTP-请求" class="headerlink" title="发送 HTTP 请求"></a>发送 HTTP 请求</h4><ul><li>浏览器构造并发送 HTTP 请求报文：<ul><li>请求方法（GET、POST 等）</li><li>请求头（User-Agent、Cookie、Accept 等）</li><li>请求体（如表单数据）</li></ul></li></ul><h4 id="服务器处理并返回响应"><a href="#服务器处理并返回响应" class="headerlink" title="服务器处理并返回响应"></a>服务器处理并返回响应</h4><h3 id="访问网页开始转圈怎么排查问题"><a href="#访问网页开始转圈怎么排查问题" class="headerlink" title="访问网页开始转圈怎么排查问题"></a>访问网页开始转圈怎么排查问题</h3><ul><li>先确定是服务端的问题，还是客户端的问题。先确认浏览器是否可以访问其他网站，如果不可以，说明客户端网络自身的问题，然后检查客户端网络配置（连接wifi正不正常，有没有插网线）；如果可以正常其他网页，说明客户端网络是可以正常上网的。</li><li>如果客户端网络没问题，就抓包确认 DNS 是否解析出了 IP 地址，如果没有解析出来，说明域名写错了，如果解析出了 IP 地址，抓包确认有没有和服务端建立三次握手，如果能成功建立三次握手，并且发出了 HTTP 请求，但是就是没有显示页面，可以查看服务端返回的响应码：<ul><li>如果是404错误码，检查输入的url是否正确；</li><li>如果是500，说明服务器此时有问题；</li><li>如果是200，F12看看前端代码有问题导致浏览器没有渲染出页面。</li></ul></li><li>如果客户端网络是正常的，但是访问速度很慢，导致很久才显示出来。这时候要看客户端的网口流量是否太大的了，导致tcp发生丢包之类的问题。</li></ul><h3 id="server-a和server-b，如何判断两个服务器正常连接？"><a href="#server-a和server-b，如何判断两个服务器正常连接？" class="headerlink" title="server a和server b，如何判断两个服务器正常连接？"></a>server a和server b，如何判断两个服务器正常连接？</h3><h4 id="TCP保活机制"><a href="#TCP保活机制" class="headerlink" title="TCP保活机制"></a>TCP保活机制</h4><ul><li>定义一个时间段，在这个时间段内，如果没有任何连接相关的活动，TCP 保活机制会开始作用，每隔一个时间间隔，发送一个探测报文，该探测报文包含的数据非常少，如果连续几个探测报文都没有得到响应，则认为当前的 TCP 连接已经死亡，系统内核将错误信息通知给上层应用程序。</li><li>Linux默认值：<figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">net.ipv4.tcp_keepalive_time</span> = <span class="hljs-number">7200</span>     <span class="hljs-comment"># 空闲多久开始探测（默认2小时）</span><br><span class="hljs-attr">net.ipv4.tcp_keepalive_intvl</span> = <span class="hljs-number">75</span>      <span class="hljs-comment"># 探测间隔时间</span><br><span class="hljs-attr">net.ipv4.tcp_keepalive_probes</span> = <span class="hljs-number">9</span>      <span class="hljs-comment"># 探测次数检测 9 次无响应，认为对方是不可达的，从而中断本次的连接。</span><br></code></pre></td></tr></table></figure></li><li>也就是说在 Linux 系统中，最少需要经过 2 小时 11 分 15 秒才可以发现一个「死亡」连接。</li><li>正常时，TCP保活的探测报文发送到对端，对端正常回应，此时重置保活时间</li><li>当对端主机宕机并重启时，TCP保活的探测报文发送到对端，对端可以响应，但因为没有该连接的有效信息，所以返回一个RST报文，这样就会很快发现TCP连接已重置</li><li>对端主机宕机，或对端由于其他原因导致报文不可达。当 TCP 保活的探测报文发送给对端后，石沉大海，没有响应，连续几次，达到保活探测次数后，TCP 会报告该 TCP 连接已经死亡。</li></ul><h4 id="心跳机制"><a href="#心跳机制" class="headerlink" title="心跳机制"></a>心跳机制</h4><ul><li>web 服务软件一般都会提供 keepalive_timeout 参数，用来指定 HTTP 长连接的超时时间。如果设置了 HTTP 长连接的超时时间是 60 秒，web 服务软件就会启动一个定时器，如果客户端在完成一个 HTTP 请求后，在 60 秒内都没有再发起新的请求，定时器的时间一到，就会触发回调函数来释放该连接。</li></ul><h3 id="服务端正常启动了，但是客户端请求不到有哪些原因-如何排查"><a href="#服务端正常启动了，但是客户端请求不到有哪些原因-如何排查" class="headerlink" title="服务端正常启动了，但是客户端请求不到有哪些原因?如何排查?"></a>服务端正常启动了，但是客户端请求不到有哪些原因?如何排查?</h3><h4 id="排查无响应"><a href="#排查无响应" class="headerlink" title="排查无响应"></a>排查无响应</h4><ul><li>检查接口IP地址是否正确，ping一下接口地址。</li><li>检查被测接口端口号是否正确，可以在本机Telnet接口的IP和端口号，检查端口号能否连通</li><li>检查服务器的防火墙是否关闭，如果是以为安全或者权限问题不能关闭，需要找运维进行策略配置，开放对应的IP和端口。</li><li>检查你的客户端（浏览器、测试工具 (opens new window)），是否设置了网络代理，网络代理可以造成请求失败。</li></ul><h4 id="排查有响应"><a href="#排查有响应" class="headerlink" title="排查有响应"></a>排查有响应</h4><ul><li>400：客户端请求错误，比如请求参数格式错误</li><li>401：未授权，比如请求header里，缺乏必要的信息头。（token，auth等）</li><li>403：禁止，常见原因是因为用户的账号没有对应的URL权限，还有就是项目中所用的中间件，不允许远程连接（Tomcat）</li><li>404：资源未找到，导致这种情况的原因很多，比如URL地址不正确</li><li>500：服务器内部错误，出现这种情况，说明服务器内部报错了 ，需要登录服务器，检查错误日志，根具体的提示信息在进行排查</li><li>502&#x2F;503&#x2F;504（错误的网关、服务器无法获得、网关超时）：如果单次调用接口就报该错误，说明后端服务器配置有问题或者服务不可用，挂掉了；如果是并发压测时出现的，说明后端压力太大，出现异常，此问题一般是后端出现了响应时间过长或者是无响应造成的</li></ul><h3 id="服务器ping不通但是http能请求成功，会出现这种情况吗-什么原因造成的"><a href="#服务器ping不通但是http能请求成功，会出现这种情况吗-什么原因造成的" class="headerlink" title="服务器ping不通但是http能请求成功，会出现这种情况吗?什么原因造成的?"></a>服务器ping不通但是http能请求成功，会出现这种情况吗?什么原因造成的?</h3><ul><li>ping 走的是 icmp 协议，http 走的是 tcp 协议。</li><li>有可能服务器的防火墙禁止 icmp 协议，但是 tcp 协议没有禁止，就会出现服务器 ping 不通，但是 http 能请求成果。</li></ul><h2 id="网络攻击"><a href="#网络攻击" class="headerlink" title="网络攻击"></a>网络攻击</h2><h3 id="什么是ddos攻击？怎么防范？"><a href="#什么是ddos攻击？怎么防范？" class="headerlink" title="什么是ddos攻击？怎么防范？"></a>什么是ddos攻击？怎么防范？</h3><h4 id="ddos攻击"><a href="#ddos攻击" class="headerlink" title="ddos攻击"></a>ddos攻击</h4><ul><li>攻击者控制一系列设备，组成僵尸网络，向被攻击服务器发送大量请求</li></ul><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><ul><li>网络层攻击：例如ICMP Flood（Ping Flood）利用 ICMP 协议发送大量 ping 请求，消耗目标的处理能力和带宽。UDP Flood，向目标发送大量无连接的 UDP 数据包，目标主机需处理每个包，造成资源耗尽。</li><li>传输层攻击：SYN Flood，利用 TCP 三次握手机制，发送大量 SYN 请求但不完成握手，造成半连接堆积。</li><li>应用层攻击：HTTP Flood模拟大量合法的 HTTP 请求（GET&#x2F;POST），压垮 Web 服务。</li></ul><h4 id="防范"><a href="#防范" class="headerlink" title="防范"></a>防范</h4><ul><li>增强网络基础设施：提升网络带宽、增加服务器的处理能力和承载能力，通过增强基础设施的能力来抵御攻击。</li><li>使用防火墙和入侵检测系统：配置防火墙规则，限制不必要的网络流量，阻止来自可疑IP地址的流量。入侵检测系统可以帮助及时发现并响应DDoS攻击。</li><li>流量清洗和负载均衡：使用专业的DDoS防护服务提供商，通过流量清洗技术过滤掉恶意流量，将合法流量转发给目标服务器。负载均衡可以将流量均匀地分发到多台服务器上，减轻单一服务器的压力。</li><li>配置访问控制策略：限制特定IP地址或IP段的访问，设置访问频率限制，防止过多请求集中在单个IP上。</li></ul><h3 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h3><ul><li>攻击者通过在 Web 应用的输入字段中插入恶意的 SQL 语句，从而操控后台数据库执行非预期操作，例如读取敏感数据、绕过身份验证、修改或删除数据，甚至控制整个数据库系统</li></ul><h4 id="防范-1"><a href="#防范-1" class="headerlink" title="防范"></a>防范</h4><ul><li>输入验证和转义：对输入进行验证和转义。确保输入符合预期格式，并防止任何可能导致SQL注入的特殊字符。</li><li>使用参数化查询：使用参数化查询可以避免直接将用户输入嵌入到SQL查询中。参数化查询使用预定义的变量来接收用户输入，并将其传递给数据库引擎，而不是直接将其用作查询的一部分。这样可以防止SQL注入攻击。</li><li>限制数据库权限：限制数据库用户的权限，只授予他们执行所需操作所需的最低权限。攻击者可能具有比预期更多的权限，这可能会使攻击更加容易。</li><li>实施输入过滤：在某些情况下，实施输入过滤可以进一步减少SQL注入的风险。这可能涉及检查和过滤用户输入中的特殊字符和词汇，以排除可能的恶意输入。</li></ul><h3 id="CSRF攻击"><a href="#CSRF攻击" class="headerlink" title="CSRF攻击"></a>CSRF攻击</h3><h4 id="过程-1"><a href="#过程-1" class="headerlink" title="过程"></a>过程</h4><ul><li>用户登陆了可信网站A，A给浏览器返回了一个sessionId，保存在浏览器中</li><li>用户打开了恶意网站B，B中嵌入了一个恶意请求</li><li>浏览器根据B的请求，向A发送请求</li><li>由于Cookie是正确的，所以A会正常响应这个请求</li></ul><h4 id="防范-2"><a href="#防范-2" class="headerlink" title="防范"></a>防范</h4><ul><li>CSRF Token：每次生成页面或表单时，服务器附加一个随机生成的令牌（Token）该令牌与用户会话绑定，存储在服务器端。用户提交请求时，必须携带该 Token（通常放在表单字段或请求头中）服务器验证 Token 是否匹配，若不匹配则拒绝请求</li><li>验证Referer头：服务器检查请求头中的 Referer 或 Origin 字段。若来源不是本站域名，则拒绝请求</li><li>双重验证机制（验证码 &#x2F; 二次确认）：在敏感操作前要求用户输入验证码或点击确认按钮</li></ul><h3 id="XSS攻击"><a href="#XSS攻击" class="headerlink" title="XSS攻击"></a>XSS攻击</h3><h4 id="反射型XSS"><a href="#反射型XSS" class="headerlink" title="反射型XSS"></a>反射型XSS</h4><ul><li>恶意脚本通过 URL 参数或表单提交传入，服务端未做过滤，直接“反射”到页面中</li></ul><h4 id="存储型XSS"><a href="#存储型XSS" class="headerlink" title="存储型XSS"></a>存储型XSS</h4><ul><li>恶意脚本被存储在数据库、文件或缓存中。页面渲染时从后端读取并执行</li></ul><h4 id="基于DOM的XSS"><a href="#基于DOM的XSS" class="headerlink" title="基于DOM的XSS"></a>基于DOM的XSS</h4><ul><li>通过修改原始的客户端代码，受害者浏览器的 DOM 环境改变，导致有效载荷的执行。也就是说，页面本身并没有变化，但由于 DOM 环境被恶意修改，有客户端代码被包含进了页面，并且意外执行。</li></ul><h4 id="防范-3"><a href="#防范-3" class="headerlink" title="防范"></a>防范</h4><ul><li>输入验证：对所有用户输入的数据进行有效性检验，过滤或转义特殊字符。例如，禁止用户输入HTML标签和JavaScript代码。</li><li>Content Security Policy（CSP）：通过设置CSP策略，限制网页中可执行的脚本源，有效防范XSS攻击。</li><li>输出编码：在网页输出用户输入内容时，使用合适的编码方式，如HTML转义、URL编码等，防止恶意脚本注入。</li><li>使用HttpOnly标记：在设置Cookie时，设置HttpOnly属性，使得Cookie无法被JavaScript代码读取，减少受到XSS攻击的可能。</li></ul><h3 id="DNS劫持"><a href="#DNS劫持" class="headerlink" title="DNS劫持"></a>DNS劫持</h3><ul><li>攻击者在用户查询DNS服务器时篡改响应，将用户请求的域名映射到攻击者控制的虚假IP地址上，使用户误以为访问的是正常网站，实际上被重定向到攻击者操控的恶意网站。这种劫持可以通过植入恶意的DNS记录或劫持用户的DNS流量来实现。</li></ul><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><h2 id="用户态和内核态"><a href="#用户态和内核态" class="headerlink" title="用户态和内核态"></a>用户态和内核态</h2><h3 id="用户态和内核态的区别？"><a href="#用户态和内核态的区别？" class="headerlink" title="用户态和内核态的区别？"></a>用户态和内核态的区别？</h3><ul><li>内核态（Kernel Mode）：在内核态下，CPU可以执行所有的指令和访问所有的硬件资源。这种模式下的操作具有更高的权限，主要用于操作系统内核的运行。主要操作包括：系统调用、异常处理、硬件中断</li><li>用户态（User Mode）：在用户态下，CPU只能执行部分指令集，无法直接访问硬件资源。这种模式下的操作权限较低，主要用于运行用户程序。</li><li>区分的原因：<ul><li>安全：用户程序无法直接访问硬件资源，避免恶意程序对系统资源的破坏</li><li>稳定：用户态程序出现问题时，不会影响到整个系统，避免了程序故障导致系统崩溃风险</li><li>隔离：使内核与用户程序之间有明显的边界，有利于系统的模块化和维护</li></ul></li></ul><h2 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h2><h3 id="线程和进程"><a href="#线程和进程" class="headerlink" title="线程和进程"></a>线程和进程</h3><h4 id="本质区别（定义）"><a href="#本质区别（定义）" class="headerlink" title="本质区别（定义）"></a>本质区别（定义）</h4><ul><li>进程是操作系统资源分配的基本单位，而线程是任务调度和执行的基本单位</li></ul><h4 id="切换的开销"><a href="#切换的开销" class="headerlink" title="切换的开销"></a>切换的开销</h4><ul><li>每个进程都有独立的代码和数据空间（程序上下文），程序之间的切换会有较大的开销；线程可以看做轻量级的进程，同一类线程共享代码和数据空间，每个线程都有自己独立的运行栈和程序计数器（PC），线程之间切换的开销小</li></ul><h4 id="稳定性"><a href="#稳定性" class="headerlink" title="稳定性"></a>稳定性</h4><ul><li>进程中的线程而不能钢盔，可能导致整个进程崩溃，进程中的子进程崩溃，并不会影响其他进程</li></ul><h4 id="内存分配方面"><a href="#内存分配方面" class="headerlink" title="内存分配方面"></a>内存分配方面</h4><ul><li>系统在运行的时候会为每个进程分配不同的内存空间；而对线程而言，除了CPU外，系统不会为线程分配内存（线程所使用的资源来自其所属进程的资源），线程组之间只能共享资源</li></ul><h4 id="包含关系"><a href="#包含关系" class="headerlink" title="包含关系"></a>包含关系</h4><ul><li>没有线程的进程可以看做是单线程的，如果一个进程内有多个线程，则执行过程不是一条线的，而是多条线</li></ul><h3 id="进程，线程，协程的区别是什么？"><a href="#进程，线程，协程的区别是什么？" class="headerlink" title="进程，线程，协程的区别是什么？"></a>进程，线程，协程的区别是什么？</h3><h4 id="进程"><a href="#进程" class="headerlink" title="进程"></a>进程</h4><ul><li>进程是操作系统中进行资源分配和调度的基本单位，它拥有自己的独立内存空间和系统资源。每个进程都有独立的堆和栈，不与其他进程共享。进程间通信需要通过特定的机制，如管道、消息队列、信号量等。由于进程拥有独立的内存空间，因此其稳定性和安全性相对较高，但同时上下文切换的开销也较大，因为需要保存和恢复整个进程的状态。</li></ul><h4 id="线程"><a href="#线程" class="headerlink" title="线程"></a>线程</h4><ul><li>线程是进程内的一个执行单元，也是CPU调度和分派的基本单位。与进程不同，线程共享进程的内存空间，包括堆和全局变量。线程之间通信更加高效，因为它们可以直接读写共享内存。线程的上下文切换开销较小，因为只需要保存和恢复线程的上下文，而不是整个进程的状态。然而，由于多个线程共享内存空间，因此存在数据竞争和线程安全的问题，需要通过同步和互斥机制来解决。</li></ul><h4 id="协程"><a href="#协程" class="headerlink" title="协程"></a>协程</h4><ul><li>协程是一种用户态的轻量级线程，其调度完全由用户程序控制，而不需要内核的参与。协程拥有自己的寄存器上下文和栈，但与其他协程共享堆内存。协程的切换开销非常小，因为只需要保存和恢复协程的上下文，而无需进行内核级的上下文切换。这使得协程在处理大量并发任务时具有非常高的效率。然而，协程需要程序员显式地进行调度和管理，相对于线程和进程来说，其编程模型更为复杂。</li></ul><h3 id="为什么进程崩溃不会对其他进程产生很大影响"><a href="#为什么进程崩溃不会对其他进程产生很大影响" class="headerlink" title="为什么进程崩溃不会对其他进程产生很大影响"></a>为什么进程崩溃不会对其他进程产生很大影响</h3><ul><li>进程隔离性：每个进程都有自己独立的内存空间，当一个进程崩溃时，其内存空间会被操作系统回收，不会影响其他进程的内存空间。这种进程间的隔离性保证了一个进程崩溃不会直接影响其他进程的执行。</li><li>进程独立性：每个进程都是独立运行的，它们之间不会共享资源，如文件、网络连接等。因此，一个进程的崩溃通常不会对其他进程的资源产生影响。</li></ul><h3 id="操作系统给进程分配了什么资源"><a href="#操作系统给进程分配了什么资源" class="headerlink" title="操作系统给进程分配了什么资源"></a>操作系统给进程分配了什么资源</h3><ul><li>虚拟内存、文件句柄、信号量等资源。</li></ul><h3 id="多线程比单线程的优势，劣势？"><a href="#多线程比单线程的优势，劣势？" class="headerlink" title="多线程比单线程的优势，劣势？"></a>多线程比单线程的优势，劣势？</h3><ul><li>优势：提高程序的运行效率，可以充分利用多核处理器的资源，同时处理多个任务，加快程序的执行速度。</li><li>劣势：存在多线程数据竞争访问的问题，需要通过锁机制来保证线程安全，增加了加锁的开销，并且还会有死锁的风险。多线程会消耗更多系统资源，如CPU和内存，因为每个线程都需要占用一定的内存和处理时间。</li></ul><h3 id="多线程是不是越多越好，太多会有什么问题？"><a href="#多线程是不是越多越好，太多会有什么问题？" class="headerlink" title="多线程是不是越多越好，太多会有什么问题？"></a>多线程是不是越多越好，太多会有什么问题？</h3><ul><li>切换开销：线程的创建和切换会消耗系统资源，包括内存和CPU。如果创建太多线程，会占用大量的系统资源，导致系统负载过高，某个线程崩溃后，可能会导致进程崩溃。</li><li>死锁的问题：过多的线程可能会导致竞争条件和死锁。竞争条件指的是多个线程同时访问和修改共享资源，如果没有合适的同步机制，可能会导致数据不一致或错误的结果。而死锁则是指多个线程相互等待对方释放资源，导致程序无法继续执行。</li></ul><h3 id="进程切换和线程切换区别"><a href="#进程切换和线程切换区别" class="headerlink" title="进程切换和线程切换区别"></a>进程切换和线程切换区别</h3><ul><li>进程切换：进程切换涉及到更多的内容，包括整个进程的地址空间、全局变量、文件描述符等。因此，进程切换的开销通常比线程切换大。</li><li>线程切换：线程切换只涉及到线程的堆栈、寄存器和程序计数器等，不涉及进程级别的资源，因此线程切换的开销较小。</li></ul><h3 id="线程切换为什么比进程切换快，节省了什么资源？"><a href="#线程切换为什么比进程切换快，节省了什么资源？" class="headerlink" title="线程切换为什么比进程切换快，节省了什么资源？"></a>线程切换为什么比进程切换快，节省了什么资源？</h3><ul><li>线程切换快，因为线程之间共享同一个进程的资源，不需要重新加载或切换这些资源。</li><li>进程切换慢，因为每个进程拥有独立资源，切换时必须保存和恢复大量上下文。</li><li>节省了地址空间、页表TLB、文件描述符表、内核数据结构中的PCB</li></ul><h3 id="线程切换详细过程是怎么样的？上下文保存在哪里？"><a href="#线程切换详细过程是怎么样的？上下文保存在哪里？" class="headerlink" title="线程切换详细过程是怎么样的？上下文保存在哪里？"></a>线程切换详细过程是怎么样的？上下文保存在哪里？</h3><h4 id="过程-2"><a href="#过程-2" class="headerlink" title="过程"></a>过程</h4><ul><li>保存当前线程状态：将当前线程的寄存器、PC、SP 等保存到它的 TCB 中</li><li>更新线程状态：把当前线程标记为“就绪”或“阻塞”</li><li>选择下一个线程：调度器根据算法（如时间片轮转、优先级）选出下一个线程</li><li>恢复新线程状态：从新线程的 TCB 中恢复寄存器、PC、SP 等，设置为“运行”态，CPU开始执行它的指令</li></ul><h4 id="保存位置"><a href="#保存位置" class="headerlink" title="保存位置"></a>保存位置</h4><ul><li>一般情况下，上下文信息会保存在线程的控制块（Thread Control Block，TCB）中。</li><li>TCB是操作系统用于管理线程的数据结构，包含了线程的状态、寄存器的值、堆栈信息等。</li></ul><h3 id="进程五状态模型"><a href="#进程五状态模型" class="headerlink" title="进程五状态模型"></a>进程五状态模型</h3><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%BF%9B%E7%A8%8B%E4%BA%94%E7%8A%B6%E6%80%81%E6%A8%A1%E5%9E%8B.png" alt="进程五状态模型"></p><ul><li>创建态 → 就绪态系统完成创建进程相关的工作</li><li>就绪态 → 运行态进程被调度</li><li>运行态 → 就绪态时间片到，或CPU被其他高优先级的进程抢占</li><li>运行态 → 阻塞态等待系统资源分配，或等待某事件发生（“系统调用”的方式，主动行为）</li><li>阻塞态 → 就绪态资源分配到位，等待的事件发生（不是进程自身能控制的，被动行为）</li><li>运行态 → 终止态进程运行结束，或运行过程中遇到不可修复的错误</li></ul><h3 id="进程上下文有哪些？"><a href="#进程上下文有哪些？" class="headerlink" title="进程上下文有哪些？"></a>进程上下文有哪些？</h3><ul><li>进程是由内核管理和调度的，所以进程的切换只能发生在内核态。</li><li>所以，进程的上下文切换不仅包含了虚拟内存、栈、全局变量等用户空间的资源，还包括了内核堆栈、寄存器等内核空间的资源。</li></ul><h3 id="进程间通讯有哪些方式？"><a href="#进程间通讯有哪些方式？" class="headerlink" title="进程间通讯有哪些方式？"></a>进程间通讯有哪些方式？</h3><h4 id="管道"><a href="#管道" class="headerlink" title="管道"></a>管道</h4><ul><li>匿名管道：顾名思义，它没有名字标识，匿名管道是特殊文件只存在于内存，没有存在于文件系统中，shell 命令中的「|」竖线就是匿名管道，通信的数据是无格式的流并且大小受限，通信的方式是单向的，数据只能在一个方向上流动，如果要双向通信，需要创建两个管道，再来匿名管道是只能用于存在父子关系的进程间通信，匿名管道的生命周期随着进程创建而建立，随着进程终止而消失。</li><li>命名管道：突破了匿名管道只能在亲缘关系进程间的通信限制，因为使用命名管道的前提，需要在文件系统创建一个类型为 p 的设备文件，那么毫无关系的进程就可以通过这个设备文件进行通信。另外，不管是匿名管道还是命名管道，进程写入的数据都是缓存在内核中，另一个进程读取数据时候自然也是从内核中获取，同时通信数据都遵循先进先出原则，不支持 lseek 之类的文件定位操作。<ul><li>读取同一个管道文件的进程会从这个文件的inode中找到同一个pipe_inode_info 内核对象，pipe_inode_info 就是真正存放数据和同步信息的内核对象。从而使用同一个内核缓冲区进行通信。</li></ul></li></ul><h4 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h4><ul><li>克服了管道通信的数据是无格式的字节流的问题，消息队列实际上是保存在内核的「消息链表」，消息队列的消息体是可以用户自定义的数据类型，发送数据时，会被分成一个一个独立的消息体，当然接收数据时，也要与发送方发送的消息体的数据类型保持一致，这样才能保证读取的数据是正确的。消息队列通信的速度不是最及时的，毕竟每次数据的写入和读取都需要经过用户态与内核态之间的拷贝过程。</li></ul><h4 id="共享内存"><a href="#共享内存" class="headerlink" title="共享内存"></a>共享内存</h4><ul><li>共享内存可以解决消息队列通信中用户态与内核态之间数据拷贝过程带来的开销，它直接分配一个共享空间，每个进程都可以直接访问，就像访问进程自己的空间一样快捷方便，不需要陷入内核态或者系统调用，大大提高了通信的速度，享有最快的进程间通信方式之名。但是便捷高效的共享内存通信，带来新的问题，多进程竞争同个共享资源会造成数据的错乱。</li></ul><h4 id="信号量"><a href="#信号量" class="headerlink" title="信号量"></a>信号量</h4><ul><li>需要信号量来保护共享资源，以确保任何时刻只能有一个进程访问共享资源，这种方式就是互斥访问。信号量不仅可以实现访问的互斥性，还可以实现进程间的同步，信号量其实是一个计数器，表示的是资源个数，其值可以通过两个原子操作来控制，分别是 P 操作和 V 操作。</li></ul><h4 id="信号"><a href="#信号" class="headerlink" title="信号"></a>信号</h4><ul><li>信号是异步通信机制，信号可以在应用进程和内核之间直接交互，内核也可以利用信号来通知用户空间的进程发生了哪些系统事件，信号事件的来源主要有硬件来源（如键盘 Cltr+C ）和软件来源（如 kill 命令），一旦有信号发生，进程有三种方式响应信号 1. 执行默认操作、2. 捕捉信号、3. 忽略信号。有两个信号是应用进程无法捕捉和忽略的，即 SIGKILL 和 SIGSTOP，这是为了方便我们能在任何时候结束或停止某个进程。</li></ul><h4 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h4><ul><li>如果要与不同主机的进程间通信，那么就需要 Socket 通信了。Socket 实际上不仅用于不同的主机进程间通信，还可以用于本地主机进程间通信，可根据创建 Socket 的类型不同，分为三种常见的通信方式，一个是基于 TCP 协议的通信方式，一个是基于 UDP 协议的通信方式，一个是本地进程间通信方式。</li></ul><h3 id="管道有哪几种？"><a href="#管道有哪几种？" class="headerlink" title="管道有哪几种？"></a>管道有哪几种？</h3><ul><li>匿名管道：是一种在父子进程或者兄弟进程之间进行通信的机制，只能用于具有亲缘关系的进程间通信，通常通过pipe系统调用创建。</li><li>命名管道：是一种允许无关的进程间进行通信的机制，基于文件系统，可以在不相关的进程之间进行通信。</li></ul><h3 id="信号和信号量有什么区别？"><a href="#信号和信号量有什么区别？" class="headerlink" title="信号和信号量有什么区别？"></a>信号和信号量有什么区别？</h3><ul><li>信号：一种处理异步事件的方式。信号是比较复杂的通信方式，用于通知接收进程有某种事件发生，除了用于进程外，还可以发送信号给进程本身。</li><li>信号量：进程间通信处理同步互斥的机制。是在多线程环境下使用的一种设施，它负责协调各个线程，以保证它们能够正确，合理的使用公共资源。</li></ul><h3 id="共享内存怎么实现的？"><a href="#共享内存怎么实现的？" class="headerlink" title="共享内存怎么实现的？"></a>共享内存怎么实现的？</h3><ul><li>共享内存的机制，就是拿出一块虚拟地址空间来，映射到相同的物理内存中。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E5%85%B1%E4%BA%AB%E5%86%85%E5%AD%98.png" alt="共享内存"></li></ul><h3 id="线程通信的方式"><a href="#线程通信的方式" class="headerlink" title="线程通信的方式"></a>线程通信的方式</h3><h4 id="互斥锁"><a href="#互斥锁" class="headerlink" title="互斥锁"></a>互斥锁</h4><ul><li>进入临界区前加锁，退出时解锁。其他线程在锁被占用时会阻塞等待。</li></ul><h4 id="条件变量"><a href="#条件变量" class="headerlink" title="条件变量"></a>条件变量</h4><ul><li>一个线程等待条件成立（阻塞），另一个线程改变条件并发出信号唤醒它。</li><li>常见于生产者-消费者模型：生产者生产数据后通知消费者。</li></ul><h4 id="自旋锁"><a href="#自旋锁" class="headerlink" title="自旋锁"></a>自旋锁</h4><ul><li>线程使用CAS检查锁的状态，不会主动产生上下文切换，如果没有成功获取锁，会一直占用CPU进行忙等</li><li>CAS分为两个步骤：第一步查看锁是否为空闲，第二步若为空闲，则让锁被当前线程持有。这两步是原子的</li></ul><h4 id="信号量-1"><a href="#信号量-1" class="headerlink" title="信号量"></a>信号量</h4><ul><li>内部维护一个计数器，控制可同时访问资源的线程数。</li><li>计数器为 0 时，新的访问线程会阻塞。</li></ul><h4 id="读写锁"><a href="#读写锁" class="headerlink" title="读写锁"></a>读写锁</h4><ul><li>多个线程可同时持有读锁，但写锁是独占的。</li><li>当「写锁」没有被线程持有时，多个线程能够并发地持有读锁，但是，一旦「写锁」被线程持有后，读线程的获取读锁的操作会被阻塞，而且其他写线程的获取写锁的操作也会被阻塞。</li><li>适合“读多写少”的场景。</li></ul><h3 id="进程调度算法"><a href="#进程调度算法" class="headerlink" title="进程调度算法"></a>进程调度算法</h3><h4 id="先来先服务算法"><a href="#先来先服务算法" class="headerlink" title="先来先服务算法"></a>先来先服务算法</h4><ul><li>顾名思义，先来后到，每次从就绪队列选择最先进入队列的进程，然后一直运行，直到进程退出或被阻塞，才会继续从队列中选择第一个进程接着运行。</li><li>这似乎很公平，但是当一个长作业先运行了，那么后面的短作业等待的时间就会很长，不利于短作业。 FCFS 对长作业有利，适用于 CPU 繁忙型作业的系统，而不适用于 I&#x2F;O 繁忙型作业的系统。</li></ul><h4 id="最短作业优先调度算法"><a href="#最短作业优先调度算法" class="headerlink" title="最短作业优先调度算法"></a>最短作业优先调度算法</h4><ul><li>它会优先选择运行时间最短的进程来运行，这有助于提高系统的吞吐量。</li><li>这显然对长作业不利，很容易造成一种极端现象。</li><li>比如，一个长作业在就绪队列等待运行，而这个就绪队列有非常多的短作业，那么就会使得长作业不断的往后推，周转时间变长，致使长作业长期不会被运行。</li></ul><h4 id="高相应比优先调度算法"><a href="#高相应比优先调度算法" class="headerlink" title="高相应比优先调度算法"></a>高相应比优先调度算法</h4><ul><li>每次调度时，计算相应比优先级：优先权&#x3D;（等待时间+要求服务时间）&#x2F;要求服务时间</li><li>如果两个进程的「等待时间」相同时，「要求的服务时间」越短，「响应比」就越高，这样短作业的进程容易被选中运行；</li><li>如果两个进程「要求的服务时间」相同时，「等待时间」越长，「响应比」就越高，这就兼顾到了长作业进程，因为进程的响应比可以随时间等待的增加而提高，当其等待时间足够长时，其响应比便可以升到很高，从而获得运行的机会；</li></ul><h4 id="时间片轮转调度算法"><a href="#时间片轮转调度算法" class="headerlink" title="时间片轮转调度算法"></a>时间片轮转调度算法</h4><ul><li>每个进程被分配一个时间段，称为时间片，即允许该进程在该时间段中运行。若进程在时间片用完前阻塞或结束，则CPU立即切换</li><li>关键是时间片长度，过短导致CPU频繁上下文切换，过长导致短作业进程响应时间变长</li></ul><h4 id="最高优先级调度算法"><a href="#最高优先级调度算法" class="headerlink" title="最高优先级调度算法"></a>最高优先级调度算法</h4><ul><li>从就绪队列中选择最高优先级的进程进行运行</li><li>静态优先级：优先级不会变化，在创建进程时就已确定</li><li>动态优先级：进程运行时间增加则降低优先级，等待时间增加则提高优先级</li><li>抢占式：若就绪队列出现优先级高的进程，立即挂起当前进程</li><li>非抢占式：等运行完当前进程，再调度高优先级进程</li></ul><h4 id="多级反馈队列调度算法"><a href="#多级反馈队列调度算法" class="headerlink" title="多级反馈队列调度算法"></a>多级反馈队列调度算法</h4><ul><li>「多级」表示有多个队列，每个队列优先级从高到低，同时优先级越高时间片越短。</li><li>「反馈」表示如果有新的进程加入优先级高的队列时，立刻停止当前正在运行的进程，转而去运行优先级高的队列；<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E5%A4%9A%E7%BA%A7%E5%8F%8D%E9%A6%88%E9%98%9F%E5%88%97%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95.png" alt="多级反馈队列调度算法"></li><li>设置了多个队列，赋予每个队列不同的优先级，每个队列优先级从高到低，同时优先级越高时间片越短；</li><li>新的进程会被放入到第一级队列的末尾，按先来先服务的原则排队等待被调度，如果在第一级队列规定的时间片没运行完成，则将其转入到第二级队列的末尾，以此类推，直至完成；</li><li>当较高优先级的队列为空，才调度较低优先级的队列中的进程运行。如果进程运行时，有新进程进入较高优先级的队列，则停止当前运行的进程并将其移入到原队列末尾，接着让较高优先级的进程运行；</li><li>对于短作业可能可以在第一级队列很快被处理完。</li><li>对于长作业，如果在第一级队列处理不完，可以移入下次队列等待被执行，虽然等待的时间变长了，但是运行时间也会更长了，所以该算法很好的兼顾了长短作业，同时有较好的响应时间。</li></ul><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="为什么并发执行线程需要加锁？"><a href="#为什么并发执行线程需要加锁？" class="headerlink" title="为什么并发执行线程需要加锁？"></a>为什么并发执行线程需要加锁？</h3><ul><li>为了保护共享数据。确保在任何时刻只有一个线程能够访问共享数据</li></ul><h3 id="自旋锁是什么？应用在哪些场景？"><a href="#自旋锁是什么？应用在哪些场景？" class="headerlink" title="自旋锁是什么？应用在哪些场景？"></a>自旋锁是什么？应用在哪些场景？</h3><ul><li>自旋锁加锁失败后，线程会忙等待，直到它拿到锁。</li><li>自旋锁是通过 CPU 提供的 CAS 函数（Compare And Swap），在「用户态」完成加锁和解锁操作，不会主动产生线程上下文切换，所以相比互斥锁来说，会快一些，开销也小一些。</li><li>自旋锁是最比较简单的一种锁，一直自旋，利用 CPU 周期，直到锁可用。需要注意，在单核 CPU 上，需要抢占式的调度器（即不断通过时钟中断一个线程，运行其他线程）。否则，自旋锁在单 CPU 上无法使用，因为一个自旋的线程永远不会放弃 CPU。</li><li>自旋的时间和被锁住的代码执行的时间是成「正比」的关系</li><li>能确定被锁住的代码执行时间很短，就不应该用互斥锁，而应该选用自旋锁，否则使用互斥锁。</li></ul><h3 id="死锁发生的条件"><a href="#死锁发生的条件" class="headerlink" title="死锁发生的条件"></a>死锁发生的条件</h3><h4 id="互斥条件"><a href="#互斥条件" class="headerlink" title="互斥条件"></a>互斥条件</h4><ul><li>系统中的资源一次只能被一个进程占用，不能共享使用。</li></ul><h4 id="请求并保持条件"><a href="#请求并保持条件" class="headerlink" title="请求并保持条件"></a>请求并保持条件</h4><ul><li>一个进程已经持有至少一个资源，同时又提出新的资源请求，并且在等待新资源的同时不释放自己已经占有的资源。</li></ul><h4 id="不可剥夺条件"><a href="#不可剥夺条件" class="headerlink" title="不可剥夺条件"></a>不可剥夺条件</h4><ul><li>进程已获得的资源，在使用完之前，不能被系统强行剥夺，只能由进程自己主动释放。</li></ul><h4 id="循环等待条件"><a href="#循环等待条件" class="headerlink" title="循环等待条件"></a>循环等待条件</h4><ul><li>存在一个进程等待环</li></ul><h3 id="预防死锁"><a href="#预防死锁" class="headerlink" title="预防死锁"></a>预防死锁</h3><table><thead><tr><th>破坏条件</th><th>方法</th><th>说明</th></tr></thead><tbody><tr><td><strong>互斥条件</strong></td><td>尽量使用可共享资源</td><td>例如只读文件可多个线程同时访问；但很多资源（打印机、写锁）必须互斥，无法彻底破坏</td></tr><tr><td><strong>请求并保持条件</strong></td><td>一次性申请所有资源</td><td>进程启动时就申请全部所需资源，不能边占边等；缺点是资源利用率低</td></tr><tr><td><strong>不可剥夺条件</strong></td><td>支持资源抢占</td><td>如果申请新资源失败，主动释放已占有的资源，稍后重试</td></tr><tr><td><strong>循环等待条件</strong></td><td>资源有序分配法</td><td>给资源编号，进程必须按编号顺序申请资源，释放则反向</td></tr></tbody></table><h3 id="银行家算法"><a href="#银行家算法" class="headerlink" title="银行家算法"></a>银行家算法</h3><ul><li>一个进程的最大需求量不超过系统拥有的总资源数，才会被接纳执行。一个进程可以分期请求资源，但总请求书不可超过最大需求量。当系统现有资源数小于进程需求时，对进程的需求可以延迟分配，但总让进程在有限时间内获取资源。</li><li>维护了几个变量：<ul><li>当前系统剩余的各个资源的数量</li><li>当前系统剩余的被需要的资源数</li><li>每个进程所需要的各个资源的最大数量</li><li>每个进程已分配的各个资源的数量</li></ul></li><li>银行家算法的核心思想，就是在分配给进程资源前，首先判断这个进程的安全性，也就是预执行，判断分配后是否产生死锁现象。如果系统当前资源能满足其执行，则尝试分配，如果不满足则让该进程等待。</li><li>通过不断检查剩余可用资源是否满足某个进程的最大需求，如果可以则加入安全序列，并把该进程当前持有的资源回收；不断重复这个过程，看最后能否实现让所有进程都加入安全序列。安全序列一定不会发生死锁，但没有死锁不一定是安全序列。</li></ul><h3 id="乐观锁和悲观锁有什么区别？"><a href="#乐观锁和悲观锁有什么区别？" class="headerlink" title="乐观锁和悲观锁有什么区别？"></a>乐观锁和悲观锁有什么区别？</h3><h4 id="乐观锁"><a href="#乐观锁" class="headerlink" title="乐观锁"></a>乐观锁</h4><ul><li>乐观锁假设多个事务之间很少发生冲突，因此在读取数据时不会加锁，而是在更新数据时检查数据的版本（如使用版本号或时间戳），如果版本匹配则执行更新操作，否则认为发生了冲突。</li><li>用于读多写少，通过版本控制来处理冲突</li></ul><h4 id="悲观锁"><a href="#悲观锁" class="headerlink" title="悲观锁"></a>悲观锁</h4><ul><li>基本思想：悲观锁假设多个事务之间会频繁发生冲突，因此在读取数据时会加锁，防止其他事务对数据进行修改，直到当前事务完成操作后才释放锁。</li><li>使用场景：悲观锁适用于写多的场景，通过加锁保证数据的一致性。例如，数据库中的行级锁机制可以用于处理并发更新同一行数据的情况。</li></ul><h2 id="内存管理"><a href="#内存管理" class="headerlink" title="内存管理"></a>内存管理</h2><h3 id="介绍一下操作系统内存管理"><a href="#介绍一下操作系统内存管理" class="headerlink" title="介绍一下操作系统内存管理"></a>介绍一下操作系统内存管理</h3><h4 id="虚拟内存"><a href="#虚拟内存" class="headerlink" title="虚拟内存"></a>虚拟内存</h4><ul><li>操作系统设计了虚拟内存，每个进程都有自己的独立的虚拟内存，我们所写的程序不会直接与物理内打交道。</li><li>有了虚拟内存之后，进程的运行内存就可以大于物理内存大小。CPU访问内存有重复访问一定内存的倾向性，对于那些没有经常访问的内存，我们可以将其换到主存中。</li></ul><h4 id="页表"><a href="#页表" class="headerlink" title="页表"></a>页表</h4><ul><li>每个进程都使用各自页表进行进程的内存管理，所以每个进程的虚拟内存空间就是相互独立的。进程也没有办法访问其他进程的页表，所以这些页表是私有的，这就解决了多进程之间地址冲突的问题。</li><li>页表中还有权限等属性，保障了安全性。</li><li>Linux通过对内存分页来管理内存，分页是把整个虚拟和物理内存空间切成一段段固定尺寸的大小。每一个小空间称为页（page），Linux一页为4KB<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E9%A1%B5%E8%A1%A8.png" alt="页表"></li><li>将虚拟内存映射为物理内存</li><li>而当进程访问的虚拟地址在页表中查不到时，系统会产生一个缺页异常，进入系统内核空间分配物理内存、更新进程页表，最后再返回用户空间，恢复进程的运行。</li></ul><h3 id="什么是虚拟内存和物理内存？"><a href="#什么是虚拟内存和物理内存？" class="headerlink" title="什么是虚拟内存和物理内存？"></a>什么是虚拟内存和物理内存？</h3><ul><li>虚拟内存是操作系统为每个进程提供的逻辑内存，进程觉得自己有很大的内存，但其实不是，操作系统只拿出一块真实内存分配给进程，只有被用到的页才会被加载，用不到的页会被置换到主存中，并由页表完成对逻辑地址到物理地址的映射</li><li>物理内存就是内存条上的内存</li></ul><h3 id="页表-1"><a href="#页表-1" class="headerlink" title="页表"></a>页表</h3><ul><li>分页：将虚拟内存分成大小相等的页，物理内存分成同样大小的页框</li><li>页表完成虚拟地址到物理地址的映射，CPU访问内存时，通过MMU（内存管理单元）查页表完成地址转换</li><li>在分页机制下，虚拟地址分为两部分，虚拟页号和页内偏移，MMU会把虚拟页号映射为物理页号，物理页号和页内偏移拼起来就能找到真实物理内存中的位置了<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E9%A1%B5%E8%A1%A8%E6%98%A0%E5%B0%84.png" alt="页表映射"></li></ul><h3 id="讲一下段表"><a href="#讲一下段表" class="headerlink" title="讲一下段表"></a>讲一下段表</h3><ul><li>虚拟地址也可以通过段表与物理地址进行映射的，分段机制会把程序的虚拟地址分成 4 个段：代码段、数据段、堆、栈，每个段在段表中有一个项，在这一项找到段的基地址，再加上偏移量，于是就能找到物理内存中的地址，如下图：<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%AE%B5%E8%A1%A8.png" alt="段表"></li></ul><h3 id="虚拟地址转化为物理地址过程"><a href="#虚拟地址转化为物理地址过程" class="headerlink" title="虚拟地址转化为物理地址过程"></a>虚拟地址转化为物理地址过程</h3><ul><li>将虚拟内存划分为页，物理内存划分为<strong>页框</strong>，页表记录页框和页的映射</li><li>当程序访问一个虚拟地址时，MMU会将虚拟地址分解为页号和页内偏移量。然后，MMU会查找页表，根据页号找到对应的页表项。页表项中包含了物理页的地址或页框号。最后，MMU将物理页的地址与页内偏移量组合，得到对应的物理地址。</li></ul><h3 id="程序的内存布局是怎么样的？"><a href="#程序的内存布局是怎么样的？" class="headerlink" title="程序的内存布局是怎么样的？"></a>程序的内存布局是怎么样的？</h3><p><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E7%A8%8B%E5%BA%8F%E7%9A%84%E5%86%85%E5%AD%98%E5%B8%83%E5%B1%80.png" alt="程序的内存布局"></p><ul><li>代码段，包括二进制可执行代码；</li><li>数据段，包括已初始化的静态常量和全局变量；</li><li>BSS 段，包括未初始化的静态变量和全局变量；</li><li>堆段，包括动态分配的内存，从低地址开始向上增长；</li><li>文件映射段，包括动态库、共享内存等；</li><li>栈段，包括局部变量和函数调用的上下文等。栈的大小是固定的，一般是 8 MB。当然系统也提供了参数，以便我们自定义大小；</li><li>代码段的起始地址不是0，那一灰色区域为<strong>保留区</strong>，这是因为在大多数的系统里，我们认为比较小数值的地址不是一个合法地址，例如，我们通常在 C 的代码里会将无效的指针赋值为 NULL。</li><li>这个过程是虚拟内存</li></ul><h3 id="堆和栈的区别？"><a href="#堆和栈的区别？" class="headerlink" title="堆和栈的区别？"></a>堆和栈的区别？</h3><ul><li>分配方式：堆是动态分配内存，由程序员手动申请和释放内存，通常用于存储动态数据结构和对象。栈是静态分配内存，由编译器自动分配和释放内存，用于存储函数的局部变量和函数调用信息。</li><li>内存管理：堆需要程序员手动管理内存的分配和释放，如果管理不当可能会导致内存泄漏或内存溢出。栈由编译器自动管理内存，遵循后进先出的原则，变量的生命周期由其作用域决定，函数调用时分配内存，函数返回时释放内存。</li><li>大小和速度：堆通常比栈大，内存空间较大，动态分配和释放内存需要时间开销。栈大小有限，通常比较小，内存分配和释放速度较快，因为是编译器自动管理。</li></ul><h3 id="fork-会复制哪些东西？"><a href="#fork-会复制哪些东西？" class="headerlink" title="fork()会复制哪些东西？"></a>fork()会复制哪些东西？</h3><ul><li>fork 阶段会复制父进程的页表（虚拟内存）</li><li>fork 之后，如果有一个进程对共享内存进行修改，发生了写时复制，就会复制物理内存</li></ul><h3 id="介绍copy-on-write写时复制"><a href="#介绍copy-on-write写时复制" class="headerlink" title="介绍copy on write写时复制"></a>介绍copy on write写时复制</h3><ul><li>在fork后页表对应的页表项的属性会标记该物理内存的权限为只读。</li><li>当父进程或者子进程在向这个内存发起写操作时，CPU 就会触发写保护中断，这个写保护中断是由于违反权限导致的，然后操作系统会在「写保护中断处理函数」里进行物理内存的复制，并重新设置其内存映射关系，将父子进程的内存读写权限设置为可读写，最后才会对内存进行写操作，这个过程被称为「写时复制(Copy On Write)」。</li><li>只复制发生改变的页</li></ul><h3 id="copy-on-write节省了什么资源？"><a href="#copy-on-write节省了什么资源？" class="headerlink" title="copy on write节省了什么资源？"></a>copy on write节省了什么资源？</h3><ul><li>节省了物理内存的资源，因为 fork 的时候，子进程不需要复制父进程的物理内存，避免了不必要的内存复制开销，子进程只需要复制父进程的页表，这时候父子进程的页表指向的都是共享的物理内存。</li><li>只有当父子进程任何有一方对这片共享的物理内存发生了修改操作，才会触发写时复制机制，这时候才会复制发生修改操作的物理内存。</li></ul><h3 id="malloc-1KB和1MB-有什么区别？"><a href="#malloc-1KB和1MB-有什么区别？" class="headerlink" title="malloc 1KB和1MB 有什么区别？"></a>malloc 1KB和1MB 有什么区别？</h3><ul><li>如果用户分配的内存小于 128 KB，则通过 brk() 申请内存；<ul><li>在现有堆顶直接向高地址扩展</li></ul></li><li>如果用户分配的内存大于 128 KB，则通过 mmap() 申请内存；<ul><li>在堆和栈之间的“内存映射区”找一块独立虚拟内存</li></ul></li></ul><h3 id="操作系统内存不足的时候会发生什么？"><a href="#操作系统内存不足的时候会发生什么？" class="headerlink" title="操作系统内存不足的时候会发生什么？"></a>操作系统内存不足的时候会发生什么？</h3><ul><li>应用程序通过 malloc 函数申请内存的时候，实际上申请的是虚拟内存，此时并不会分配物理内存。</li><li>当应用程序读写了这块虚拟内存，CPU 就会去访问这个虚拟内存， 这时会发现这个虚拟内存没有映射到物理内存， CPU 就会产生缺页中断，进程会从用户态切换到内核态，并将缺页中断交给内核的 Page Fault Handler （缺页中断函数）处理。</li><li>缺页中断处理函数会看是否有空闲的物理内存，如果有，就直接分配物理内存，并建立虚拟内存与物理内存之间的映射关系。</li><li>若没有空闲的物理内存，内核就会开始回收内存<ul><li>后台内存回收（kswapd）：在物理内存紧张的时候，会唤醒 kswapd 内核线程来回收内存，这个回收内存的过程异步的，不会阻塞进程的执行。</li><li>直接内存回收（direct reclaim）：如果后台异步回收跟不上进程内存申请的速度，就会开始直接回收，这个回收内存的过程是同步的，会阻塞进程的执行。</li><li>若直接内存回收也不行，就会触发OOM（out of memory）机制<ul><li>OOM Killer 机制会根据算法选择一个占用物理内存较高的进程，然后将其杀死，以便释放内存资源，如果物理内存依然不足，OOM Killer 会继续杀死占用物理内存较高的进程，直到释放足够的内存位置。</li></ul></li></ul></li></ul><h3 id="回收内存时，具体哪些内存可以回收？"><a href="#回收内存时，具体哪些内存可以回收？" class="headerlink" title="回收内存时，具体哪些内存可以回收？"></a>回收内存时，具体哪些内存可以回收？</h3><ul><li>文件页（File-backed Page）：内核缓存的磁盘数据（Buffer）和内核缓存的文件数据（Cache）都叫作文件页。大部分文件页，都可以直接释放内存，以后有需要时，再从磁盘重新读取就可以了。而那些被应用程序修改过，并且暂时还没写入磁盘的数据（也就是脏页），就得先写入磁盘，然后才能进行内存释放。所以，回收干净页的方式是直接释放内存，回收脏页的方式是先写回磁盘后再释放内存。</li><li>匿名页（Anonymous Page）：这部分内存没有实际载体，不像文件缓存有硬盘文件这样一个载体，比如堆、栈数据等。这部分内存很可能还要再次被访问，所以不能直接释放内存，它们回收的方式是通过 Linux 的 Swap 机制，Swap 会把不常访问的内存先写到磁盘中，然后释放这些内存，给其他更需要的进程使用。再次访问这些内存时，重新从磁盘读入内存就可以了。</li></ul><h3 id="回收内存时基于什么算法？"><a href="#回收内存时基于什么算法？" class="headerlink" title="回收内存时基于什么算法？"></a>回收内存时基于什么算法？</h3><ul><li>LRU（least rencently used）维护两个双向链表：<ul><li>active_list 活跃内存页链表，这里存放的是最近被访问过（活跃）的内存页；</li><li>inactive_list 不活跃内存页链表，这里存放的是很少被访问（非活跃）的内存页；</li></ul></li></ul><h4 id="过程-3"><a href="#过程-3" class="headerlink" title="过程"></a>过程</h4><ul><li>新分配的页 → 放入 active_list，标记 PG_referenced&#x3D;0</li><li>访问页面时：<ul><li>在 active_list 中：将 PG_referenced 置 1</li><li>在 inactive_list 中：<ul><li>若 PG_referenced&#x3D;0 → 置 1（但不移动）</li><li>若 PG_referenced&#x3D;1 → 移回 active_list，并清零标志</li></ul></li></ul></li><li>回收过程：从 inactive_list 尾部取页：<ul><li>若 PG_referenced&#x3D;1 → 清零并跳过（说明刚被访问过）</li><li>若 PG_referenced&#x3D;0：<ul><li>文件映射页：直接丢弃（脏页需先写回磁盘）</li><li>匿名页：写入 swap 分区&#x2F;文件，再释放物理页</li></ul></li></ul></li></ul><h3 id="页面置换算法"><a href="#页面置换算法" class="headerlink" title="页面置换算法"></a>页面置换算法</h3><h4 id="最佳页面置换算法"><a href="#最佳页面置换算法" class="headerlink" title="最佳页面置换算法"></a>最佳页面置换算法</h4><ul><li>置换在「未来」最长时间不访问的页面。</li><li>需要知道当前物理内存中的页下一次被使用的时间</li><li>取最后一个被使用的页面，将其置换出去</li><li>无法实现，只是做参考</li></ul><h4 id="先进先出"><a href="#先进先出" class="headerlink" title="先进先出"></a>先进先出</h4><ul><li>选择在内存驻留时间很长的页面进行中置换</li></ul><h4 id="最近最久未使用（LRU）"><a href="#最近最久未使用（LRU）" class="headerlink" title="最近最久未使用（LRU）"></a>最近最久未使用（LRU）</h4><ul><li>选择最长时间没有被访问的页面进行置换</li><li>虽然 LRU 在理论上是可以实现的，但代价很高。为了完全实现 LRU，需要在内存中维护一个所有页面的链表，最近最多使用的页面在表头，最近最少使用的页面在表尾。</li><li>困难的是，在每次访问内存时都必须要更新「整个链表」。在链表中找到一个页面，删除它，然后把它移动到表头是一个非常费时的操作。</li><li>所以，LRU 虽然看上去不错，但是由于开销比较大，实际应用中比较少使用。</li></ul><h4 id="时钟页面置换算法"><a href="#时钟页面置换算法" class="headerlink" title="时钟页面置换算法"></a>时钟页面置换算法</h4><ul><li>把所有的页面都保存在一个类似钟面的「环形链表」中，一个表针指向最老的页面。</li><li>当发生缺页中断时，算法首先检查表针指向的页面：<ul><li>如果它的访问位位是 0 就淘汰该页面，并把新的页面插入这个位置，然后把表针前移一个位置；</li><li>如果访问位是 1 就清除访问位，并把表针前移一个位置，重复这个过程直到找到了一个访问位为 0 的页面为止；<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%97%B6%E9%92%9F%E7%AE%97%E6%B3%95.png" alt="时钟算法"></li></ul></li></ul><h4 id="最不常用算法（LFU）"><a href="#最不常用算法（LFU）" class="headerlink" title="最不常用算法（LFU）"></a>最不常用算法（LFU）</h4><ul><li>当发生缺页中断时，选择「访问次数」最少的那个页面，并将其淘汰。</li><li>看起来很简单，每个页面加一个计数器就可以实现了，但是在操作系统中实现的时候，我们需要考虑效率和硬件成本的。</li><li>要增加一个计数器来实现，这个硬件成本是比较高的，另外如果要对这个计数器查找哪个页面访问次数最小，查找链表本身，如果链表长度很大，是非常耗时的，效率不高。</li><li>LFU 算法只考虑了频率问题，没考虑时间的问题，比如有些页面在过去时间里访问的频率很高，但是现在已经没有访问了，而当前频繁访问的页面由于没有这些页面访问的次数高，在发生缺页中断时，就会可能会误伤当前刚开始频繁访问，但访问次数还不高的页面。</li></ul><h2 id="中断"><a href="#中断" class="headerlink" title="中断"></a>中断</h2><h3 id="什么是中断"><a href="#什么是中断" class="headerlink" title="什么是中断"></a>什么是中断</h3><ul><li>CPU停下当前的工作任务，去处理其他事情，处理完后回来继续执行刚才的任务</li></ul><h4 id="内中断"><a href="#内中断" class="headerlink" title="内中断"></a>内中断</h4><ul><li>陷入：由陷入指令引发，是应用程序故意引发的，如如系统调用，程序调试功能等。</li><li>故障：由错误条件引起的，可能被内核修复，内核修复故障后会把CPU使用权还给用户程序，让它继续执行，如缺页故障</li><li>终止：由致命错误引起，内核无法修复，直接终止该应用程序，如：除以0、非法使用特权指令</li></ul><h4 id="外中断"><a href="#外中断" class="headerlink" title="外中断"></a>外中断</h4><ul><li>可屏蔽中断：主要来自外部设备如硬盘，打印机，网卡等。此类中断并不会影响系统运行，可随时处理，甚至不处理，所以名为可屏蔽。</li><li>不可屏蔽中断：如电源掉电，硬件线路故障等。这里不可屏蔽的意思不是不可以屏蔽，不建议屏蔽，而是问题太大，屏蔽不了，不能屏蔽的意思。</li></ul><h3 id="中断的流程"><a href="#中断的流程" class="headerlink" title="中断的流程"></a>中断的流程</h3><h4 id="发生中断"><a href="#发生中断" class="headerlink" title="发生中断"></a>发生中断</h4><ul><li>可能是外设（键盘、网卡、定时器等）、CPU 内部异常（除零、缺页）或软件指令（int 指令）触发，向CPU发送中断信号</li></ul><h4 id="中断响应"><a href="#中断响应" class="headerlink" title="中断响应"></a>中断响应</h4><ul><li>CPU 检查当前是否允许中断（看中断使能标志 IF 位）。如果允许，会在当前指令执行完后响应中断。</li></ul><h4 id="保护现场（Save-Context）"><a href="#保护现场（Save-Context）" class="headerlink" title="保护现场（Save Context）"></a>保护现场（Save Context）</h4><ul><li>硬件自动保存：PC、标志寄存器</li><li>软件：将通用寄存器、浮点寄存器等压入栈中，确保中断返回后能恢复原状态。</li></ul><h4 id="识别中断源"><a href="#识别中断源" class="headerlink" title="识别中断源"></a>识别中断源</h4><ul><li>CPU在中断向量表中找到对应的中断服务程序入口地址。</li></ul><h4 id="执行中断服务程序"><a href="#执行中断服务程序" class="headerlink" title="执行中断服务程序"></a>执行中断服务程序</h4><ul><li>跳转到 中断服务程序 入口执行。</li></ul><h4 id="恢复现场"><a href="#恢复现场" class="headerlink" title="恢复现场"></a>恢复现场</h4><ul><li>将之前保存的寄存器、标志位等从栈中恢复。</li><li>确保 CPU 状态与中断发生前一致。</li></ul><h3 id="中断的作用"><a href="#中断的作用" class="headerlink" title="中断的作用"></a>中断的作用</h3><ul><li>中断使得计算机系统具备应对对处理突发事件的能力，提高了CPU的工作效率，如果没有中断系统，CPU就只能按照原来的程序编写的先后顺序，对各个外设进行查询和处理，即轮询工作方式，轮询方法貌似公平，但实际工作效率却很低，却不能及时响应紧急事件。</li></ul><h2 id="网络IO"><a href="#网络IO" class="headerlink" title="网络IO"></a>网络IO</h2><h3 id="了解过哪些IO模型？"><a href="#了解过哪些IO模型？" class="headerlink" title="了解过哪些IO模型？"></a>了解过哪些IO模型？</h3><ul><li>阻塞I&#x2F;O模型：应用程序发起I&#x2F;O操作后会被阻塞，直到操作完成才返回结果。适用于对实时性要求不高的场景。</li><li>非阻塞I&#x2F;O模型：应用程序发起I&#x2F;O操作后立即返回，不会被阻塞，但需要不断轮询或者使用select&#x2F;poll&#x2F;epoll等系统调用来检查I&#x2F;O操作是否完成。适合于需要进行多路复用的场景，例如需要同时处理多个socket连接的服务器程序。</li><li>I&#x2F;O复用模型：通过select、poll、epoll等系统调用，应用程序可以同时等待多个I&#x2F;O操作，当其中任何一个I&#x2F;O操作准备就绪时，应用程序会被通知。适合于需要同时处理多个I&#x2F;O操作的场景，比如高并发的服务端程序。</li><li>信号驱动I&#x2F;O模型：应用程序发起I&#x2F;O操作后，可以继续做其他事情，当I&#x2F;O操作完成时，操作系统会向应用程序发送信号来通知其完成。适合于需要异步I&#x2F;O通知的场景，可以提高系统的并发能力。</li><li>异步I&#x2F;O模型：应用程序发起I&#x2F;O操作后可以立即做其他事情，当I&#x2F;O操作完成时，应用程序会得到通知。异步I&#x2F;O模型由操作系统内核完成I&#x2F;O操作，应用程序只需等待通知即可。适合于需要大量并发连接和高性能的场景，能够减少系统调用次数，提高系统效率。<br><a href="https://blog.csdn.net/bojinyuan00/article/details/149501058">这个文章写得很好</a></li></ul><h3 id="服务器处理并发请求有哪几种方式？"><a href="#服务器处理并发请求有哪几种方式？" class="headerlink" title="服务器处理并发请求有哪几种方式？"></a>服务器处理并发请求有哪几种方式？</h3><ul><li>单线程web服务器方式：web服务器一次处理一个请求，结束后读取并处理下一个请求，性能比较低，一次只能处理一个请求。</li><li>多进程&#x2F;多线程web服务器：web服务器生成多个进程或线程并行处理多个用户请求，进程或线程可以按需或事先生成。有的web服务器应用程序为每个用户请求生成一个单独的进程或线程来进行响应，不过，一旦并发请求数量达到成千上万时，多个同时运行的进程或线程将会消耗大量的系统资源。（即每个进程只能响应一个请求，并且一个进程对应一个线程）</li><li>I&#x2F;O多路复用web服务器：web服务器可以I&#x2F;O多路复用，达到只用一个线程就能监听和处理多个客户端的 i&#x2F;o 事件。</li><li>多路复用多线程web服务器：将多进程和多路复用的功能结合起来形成的web服务器架构，其避免了让一个进程服务于过多的用户请求，并能充分利用多CPU主机所提供的计算能力。（这种架构可以理解为有多个进程，并且一个进程又生成多个线程，每个线程处理一个请求）</li></ul><h3 id="讲一下io多路复用"><a href="#讲一下io多路复用" class="headerlink" title="讲一下io多路复用"></a>讲一下io多路复用</h3><ul><li>指的是复用一个线程，处理多个socket中的事件。能够资源复用，防止创建过多线程导致的上下文切换的开销。<pre><code class=" mermaid">sequenceDiagram    autonumber    participant App as 应用程序1    participant Kernel as 内核    participant Mon1 as 描述符1    participant Mon2 as 描述符2    Note over App: 应用程序发起 IO 多路复用，阻塞等待任一 fd 就绪    App-&gt;&gt;Kernel: select/poll/epoll(fd1, fd2, ..., fdN)    par 并行监控        Kernel--&gt;&gt;Mon1: 监控收发/事件订阅        Mon1-&gt;&gt;Kernel: 数据准备好/事件就绪        Mon1--&gt;&gt;App: 通知/唤醒    and        Kernel--&gt;&gt;Mon2: 监控收发/事件订阅        Mon2-&gt;&gt;Kernel: 数据准备好/事件就绪        Mon2--&gt;&gt;App: 通知/唤醒    end    Kernel--&gt;&gt;App: 返回就绪的 fd（例如 fd2）    App-&gt;&gt;Kernel: read(fd2)    Kernel--&gt;&gt;App: 返回数据    App-&gt;&gt;App: 处理数据    App-&gt;&gt;Kernel: 下一轮 select/poll/epoll(fd1, fd2, ..., fdN)</code></pre></li></ul><h3 id="select、poll、epoll-的区别是什么？"><a href="#select、poll、epoll-的区别是什么？" class="headerlink" title="select、poll、epoll 的区别是什么？"></a>select、poll、epoll 的区别是什么？</h3><ul><li>内核提供给用户态的多路复用系统调用，进程可以通过一个系统调用函数从内核中获取多个事件。</li></ul><h4 id="select-poll"><a href="#select-poll" class="headerlink" title="select&#x2F;poll"></a>select&#x2F;poll</h4><ul><li>将已连接的 Socket 都放到一个文件描述符集合</li><li>然后调用 select 函数将文件描述符集合拷贝到内核里，让内核来检查是否有网络事件产生</li><li>通过遍历文件描述符集合的方式，当检查到有事件产生后，将此 Socket 标记为可读或可写， 接着再把整个文件描述符集合拷贝回用户态里，然后用户态还需要再通过遍历的方法找到可读或可写的 Socket，然后再对其处理。<ul><li>一共两次遍历和两次拷贝</li><li>select 使用固定长度的 BitsMap，表示文件描述符集合，而且所支持的文件描述符的个数是有限制的，在 Linux 系统中，由内核中的 FD_SETSIZE 限制， 默认最大值为 1024，只能监听 0~1023 的文件描述符。</li></ul></li><li>poll 不再用 BitsMap 来存储所关注的文件描述符，取而代之用动态数组，突破了 select 的文件描述符个数限制，当然还会受到系统文件描述符限制。</li><li>总结：都是使用「线性结构」存储进程关注的 Socket 集合，因此都需要遍历文件描述符集合来找到可读或可写的 Socket，时间复杂度为 O(n)，而且也需要在用户态与内核态之间拷贝文件描述符集合</li></ul><h4 id="epoll"><a href="#epoll" class="headerlink" title="epoll"></a>epoll</h4><ul><li>epoll 在内核里使用红黑树来跟踪进程所有待检测的文件描述字，把需要监控的 socket 通过 epoll_ctl() 函数加入内核中的红黑树里，红黑树是个高效的数据结构，增删改一般时间复杂度是 O(logn)。而 select&#x2F;poll 内核里没有类似 epoll 红黑树这种保存所有待检测的 socket 的数据结构，所以 select&#x2F;poll 每次操作时都传入整个 socket 集合给内核，而 epoll 因为在内核维护了红黑树，可以保存所有待检测的 socket ，所以只需要传入一个待检测的 socket，减少了内核和用户空间大量的数据拷贝和内存分配。</li><li>epoll 使用事件驱动的机制，内核里维护了一个链表来记录就绪事件，当某个 socket 有事件发生时，通过回调函数内核会将其加入到这个就绪事件列表中（不会删除红黑树中的），当用户调用 epoll_wait() 函数时，只会返回有事件发生的文件描述符的个数，不需要像 select&#x2F;poll 那样轮询扫描整个 socket 集合，大大提高了检测的效率。</li><li></li></ul><h3 id="epoll-的-边缘触发和水平触发有什么区别？"><a href="#epoll-的-边缘触发和水平触发有什么区别？" class="headerlink" title="epoll 的 边缘触发和水平触发有什么区别？"></a>epoll 的 边缘触发和水平触发有什么区别？</h3><h4 id="边缘触发"><a href="#边缘触发" class="headerlink" title="边缘触发"></a>边缘触发</h4><ul><li>使用边缘触发模式时，当被监控的 Socket 描述符上有可读事件发生时，服务器端只会从 epoll_wait 中苏醒一次，即使进程没有调用 read 函数从内核读取数据，也依然只苏醒一次，因此我们程序要保证一次性将内核缓冲区的数据读取完；</li><li>如果使用边缘触发模式，I&#x2F;O 事件发生时只会通知一次，而且我们不知道到底能读写多少数据，所以在收到通知后应尽可能地读写数据，以免错失读写的机会。因此，我们会循环从文件描述符读写数据，那么如果文件描述符是阻塞的，没有数据可读写时，进程会阻塞在读写函数那里，程序就没办法继续往下执行。所以，边缘触发模式一般和非阻塞 I&#x2F;O 搭配使用，程序会一直执行 I&#x2F;O 操作，直到系统调用（如 read 和 write）返回错误，错误类型为 EAGAIN 或 EWOULDBLOCK。</li></ul><h4 id="水平触发"><a href="#水平触发" class="headerlink" title="水平触发"></a>水平触发</h4><ul><li>使用水平触发模式时，当被监控的 Socket 上有可读事件发生时，服务器端不断地从 epoll_wait 中苏醒，直到内核缓冲区数据被 read 函数读完才结束，目的是告诉我们有数据需要读取；</li><li>如果使用水平触发模式，当内核通知文件描述符可读写时，接下来还可以继续去检测它的状态，看它是否依然可读或可写。所以在收到通知后，没必要一次执行尽可能多的读写操作。</li><li>一般来说，边缘触发的效率比水平触发的效率要高，因为边缘触发可以减少 epoll_wait 的系统调用次数，系统调用也是有一定的开销的的，毕竟也存在上下文的切换。</li></ul><h3 id="零拷贝是什么？"><a href="#零拷贝是什么？" class="headerlink" title="零拷贝是什么？"></a>零拷贝是什么？</h3><ul><li>传统 IO 的工作方式，从硬盘读取数据，然后再通过网卡向外发送，我们需要进行 4 上下文切换，和 4 次数据拷贝，其中 2 次数据拷贝发生在内存里的缓冲区和对应的硬件设备之间，这个是由 DMA 完成，另外 2 次则发生在内核态和用户态之间，这个数据搬移工作是由 CPU 完成的。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E4%BC%A0%E7%BB%9FIO.png" alt="传统IO"></li><li>为了提高文件传输的性能，于是就出现了零拷贝技术，它通过一次系统调用（sendfile 方法）合并了磁盘读取与网络发送两个操作，降低了上下文切换次数。另外，拷贝数据都是发生在内核中的，天然就降低了数据拷贝的次数。<br><img src="/2025/08/28/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E8%AE%A1%E7%BD%91OS%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E9%9B%B6%E6%8B%B7%E8%B4%9D.png" alt="零拷贝"></li><li>零拷贝技术的文件传输方式相比传统文件传输的方式，减少了 2 次上下文切换和数据拷贝次数，只需要 2 次上下文切换和数据拷贝次数，就可以完成文件的传输，而且 2 次的数据拷贝过程，都不需要通过 CPU，2 次都是由 DMA 来搬运。</li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>面试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据库相关知识</title>
    <link href="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库相关知识"><a href="#数据库相关知识" class="headerlink" title="数据库相关知识"></a>数据库相关知识</h1><h2 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h2><h3 id="NOSQL和SQL的区别"><a href="#NOSQL和SQL的区别" class="headerlink" title="NOSQL和SQL的区别"></a>NOSQL和SQL的区别</h3><h4 id="ACID和BASE"><a href="#ACID和BASE" class="headerlink" title="ACID和BASE"></a>ACID和BASE</h4><ul><li>ACID 即原子性，一致性，隔离性和持续性。</li><li>BASE 即基本可用，软状态和最终一致性。</li><li>从实用的角度出发，我们需要考虑对于面对的应用场景，ACID 是否是必须的。比如银行应用就必须保证 ACID，否则一笔钱可能被使用两次；又比如社交软件不必保证 ACID，因为一条状态的更新对于所有用户读取先后时间有数秒不同并不影响使用。</li></ul><h4 id="扩展性"><a href="#扩展性" class="headerlink" title="扩展性"></a>扩展性</h4><ul><li>NoSQL数据之间无关系，这样就非常容易扩展，也无形之间，在架构的层面上带来了可扩展的能力。比如 redis 自带主从复制模式、哨兵模式、切片集群模式。</li><li>相反关系型数据库的数据之间存在关联性，水平扩展较难 ，需要解决跨服务器 JOIN，分布式事务等问题。</li></ul><h3 id="三大范式"><a href="#三大范式" class="headerlink" title="三大范式"></a>三大范式</h3><ul><li>1NF：要求数据库表的每一列都是不可分割的原子数据项。</li><li>2NF：在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）<ul><li>需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。</li></ul></li><li>3NF：在2NF基础上，任何非主属性 (opens new window)不依赖于其它非主属性（在2NF基础上消除传递依赖）<ul><li>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。</li></ul></li></ul><h3 id="MySQL连表查询"><a href="#MySQL连表查询" class="headerlink" title="MySQL连表查询"></a>MySQL连表查询</h3><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><ul><li>返回两个表中有匹配关系的行</li></ul><h4 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h4><ul><li>左外连接返回左表中的所有行，即使在右表中没有匹配的行。未匹配的右表列会包含NULL。</li></ul><h4 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h4><ul><li>右外连接返回右表中的所有行，即使左表中没有匹配的行。未匹配的左表列会包含NULL。</li></ul><h4 id="全外连接（MySQL不支持）"><a href="#全外连接（MySQL不支持）" class="headerlink" title="全外连接（MySQL不支持）"></a>全外连接（MySQL不支持）</h4><ul><li>全外连接返回两个表中所有行，包括非匹配行，在MySQL中，FULL JOIN 需要使用左外连接 UNION 右外连接来实现，因为 MySQL 不直接支持 FULL JOIN。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> c.id, c.name, o.product<br><span class="hljs-keyword">FROM</span> customers c<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> orders o <span class="hljs-keyword">ON</span> c.id <span class="hljs-operator">=</span> o.customer_id<br><span class="hljs-keyword">UNION</span><br><span class="hljs-keyword">SELECT</span> c.id, c.name, o.product<br><span class="hljs-keyword">FROM</span> customers c<br><span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">JOIN</span> orders o <span class="hljs-keyword">ON</span> c.id <span class="hljs-operator">=</span> o.customer_id;<br></code></pre></td></tr></table></figure></li></ul><h3 id="MySQL如何避免插入重复数据"><a href="#MySQL如何避免插入重复数据" class="headerlink" title="MySQL如何避免插入重复数据"></a>MySQL如何避免插入重复数据</h3><h4 id="使用UNIQUE约束"><a href="#使用UNIQUE约束" class="headerlink" title="使用UNIQUE约束"></a>使用UNIQUE约束</h4><ul><li>在表的相关列上添加UNIQUE约束，确保每个值在该列中唯一。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> users (<br>    id <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT,<br>    email <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">UNIQUE</span>,<br>);<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用INSERT-…-ON-DUPLICATE-KEY-UPDATE"><a href="#使用INSERT-…-ON-DUPLICATE-KEY-UPDATE" class="headerlink" title="使用INSERT … ON DUPLICATE KEY UPDATE"></a>使用INSERT … ON DUPLICATE KEY UPDATE</h4><ul><li>这种语句允许在插入记录时处理重复键的情况。如果插入的记录与现有记录冲突，可以选择更新现有记录：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> users (email, name) <br><span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;example@example.com&#x27;</span>, <span class="hljs-string">&#x27;John Doe&#x27;</span>)<br><span class="hljs-keyword">ON</span> DUPLICATE KEY <span class="hljs-keyword">UPDATE</span> name <span class="hljs-operator">=</span> <span class="hljs-keyword">VALUES</span>(name);<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用INSERT-IGNORE"><a href="#使用INSERT-IGNORE" class="headerlink" title="使用INSERT IGNORE"></a>使用INSERT IGNORE</h4><ul><li>该语句会在插入记录时忽略那些因重复键而导致的插入错误。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> IGNORE <span class="hljs-keyword">INTO</span> users (email, name) <br><span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;example@example.com&#x27;</span>, <span class="hljs-string">&#x27;John Doe&#x27;</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="CHAR-和-VARCHAR有什么区别"><a href="#CHAR-和-VARCHAR有什么区别" class="headerlink" title="CHAR 和 VARCHAR有什么区别"></a>CHAR 和 VARCHAR有什么区别</h3><ul><li>CHAR固定长度，定义时需要指定长度，存储时会在末尾补足空格</li><li>VARCHAR可变长第，定义时需要指定最大长度</li></ul><h3 id="INT-1-和INT-10-区别"><a href="#INT-1-和INT-10-区别" class="headerlink" title="INT(1)和INT(10)区别"></a>INT(1)和INT(10)区别</h3><ul><li>区别为显示宽度，常与ZEROFILL配合使用，比如，字段类型为 INT(4) ZEROFILL，实际存入 5 → 显示为 0005，实际存入 12345 → 显示仍为 12345（宽度超限时不截断）。</li></ul><h3 id="说一下外键约束"><a href="#说一下外键约束" class="headerlink" title="说一下外键约束"></a>说一下外键约束</h3><ul><li>外键约束的作用是维护表与表之间的关系，确保数据的完整性和一致性。若A表中有一个B表的外键，则保证了A表中的每一个B字段都存在于B表中，从而维护了数据的完整性和一致性。</li></ul><h3 id="MySQL的关键字in和exist"><a href="#MySQL的关键字in和exist" class="headerlink" title="MySQL的关键字in和exist"></a>MySQL的关键字in和exist</h3><ul><li>IN：用于检查左边的表达式是否存在于右边的列表或子查询的结果集中。如果存在，则IN 返回TRUE，否则返回FALSE。</li><li>EXIST：用于判断子查询是否至少能返回一行数据。它不关心子查询返回什么数据，只关心是否有结果。如果子查询有结果，则EXISTS 返回TRUE，否则返回FALSE。</li><li>在很多情况下，EXISTS 的性能优于 IN，特别是当子查询的表很大时。这是因为EXISTS 一旦找到匹配项就会立即停止查询，而IN可能会扫描整个子查询结果集。</li><li>IN 能够正确处理子查询中包含NULL值的情况，而EXISTS 不受子查询结果中NULL值的影响，因为它关注的是行的存在性，而不是具体值。</li></ul><h3 id="MySQL中的一些函数"><a href="#MySQL中的一些函数" class="headerlink" title="MySQL中的一些函数"></a>MySQL中的一些函数</h3><h4 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h4><ul><li>CONCAT(str1, str2, …)：连接多个字符串，返回一个合并后的字符串。</li><li>LENGTH(str)：返回字符串的长度（字符数）。</li><li>SUBSTRING(str, pos, len)：从指定位置开始，截取指定长度的子字符串。</li><li>REPLACE(str, from_str, to_str)：将字符串中的某部分替换为另一个字符串。</li></ul><h4 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h4><ul><li>ABS(num)：返回数字的绝对值。</li><li>POWER(num, exponent)：返回指定数字的指定幂次方。</li></ul><h4 id="日期和时间函数"><a href="#日期和时间函数" class="headerlink" title="日期和时间函数"></a>日期和时间函数</h4><ul><li>NOW()：返回当前日期和时间。</li><li>CURDATE()：返回当前日期。</li></ul><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><ul><li>COUNT(column)：计算指定列中的非NULL值的个数。</li><li>SUM(column)：计算指定列的总和。</li><li>AVG(column)：计算指定列的平均值。</li><li>MAX(column)：返回指定列的最大值。</li><li>MIN(column)：返回指定列的最小值。</li></ul><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><h3 id="执行一条SQL请求的过程是什么？"><a href="#执行一条SQL请求的过程是什么？" class="headerlink" title="执行一条SQL请求的过程是什么？"></a>执行一条SQL请求的过程是什么？</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">客户端 → 连接器 → 查询缓存 → 分析器 → 优化器 → 执行器 → 存储引擎 → 返回结果<br></code></pre></td></tr></table></figure><h4 id="连接器"><a href="#连接器" class="headerlink" title="连接器"></a>连接器</h4><ul><li>建立客户端与 MySQL 服务器的 TCP 连接，并进行身份认证和权限验证。</li></ul><h4 id="查询缓存"><a href="#查询缓存" class="headerlink" title="查询缓存"></a>查询缓存</h4><ul><li>MySQL 8.0 已移除该功能，但在旧版本中存在。</li><li>如果缓存中有完全相同的 SQL 结果，直接返回，跳过后续步骤。</li></ul><h4 id="分析器"><a href="#分析器" class="headerlink" title="分析器"></a>分析器</h4><ul><li>词法分析：识别 SQL 中的关键字、表名、列名等。</li><li>语法分析：检查 SQL 是否符合语法规则，不合法会直接报错。</li><li>语义检查：确认表、列是否存在，数据类型是否匹配。</li></ul><h4 id="优化器"><a href="#优化器" class="headerlink" title="优化器"></a>优化器</h4><ul><li>决定执行计划：选择使用哪个索引、表的连接顺序等。</li><li>目标是成本最小化（I&#x2F;O + CPU）。</li></ul><h4 id="执行器"><a href="#执行器" class="headerlink" title="执行器"></a>执行器</h4><ul><li>检查执行权限（SELECT、UPDATE 等）。</li><li>调用存储引擎 API（如 InnoDB、MyISAM）去读取或写入数据。</li><li>对于写操作，会记录到 binlog（归档日志）和 redo log（事务日志）。</li></ul><h3 id="讲一讲MySQL的引擎"><a href="#讲一讲MySQL的引擎" class="headerlink" title="讲一讲MySQL的引擎"></a>讲一讲MySQL的引擎</h3><ul><li>InnoDB：InnoDB是MySQL的默认存储引擎，具有ACID事务支持、行级锁、外键约束等特性。它适用于高并发的读写操作，支持较好的数据完整性和并发控制。</li><li>MyISAM：MyISAM是MySQL的另一种常见的存储引擎，具有较低的存储空间和内存消耗，适用于大量读操作的场景。然而，MyISAM不支持事务、行级锁和外键约束，因此在并发写入和数据完整性方面有一定的限制。</li><li>Memory：Memory引擎将数据存储在内存中，适用于对性能要求较高的读操作，但是在服务器重启或崩溃时数据会丢失。它不支持事务、行级锁和外键约束。</li></ul><h3 id="MySQL为什么InnoDB是默认引擎"><a href="#MySQL为什么InnoDB是默认引擎" class="headerlink" title="MySQL为什么InnoDB是默认引擎"></a>MySQL为什么InnoDB是默认引擎</h3><ul><li>事务支持：InnoDB引擎提供了对事务的支持，可以进行ACID（原子性、一致性、隔离性、持久性）属性的操作。Myisam存储引擎是不支持事务的。</li><li>并发性能：InnoDB引擎采用了行级锁定的机制，可以提供更好的并发性能，Myisam存储引擎只支持表锁，锁的粒度比较大。</li><li>崩溃恢复：InnoDB引引擎通过 redolog 日志实现了崩溃恢复，可以在数据库发生异常情况（如断电）时，通过日志文件进行恢复，保证数据的持久性和一致性。Myisam是不支持崩溃恢复的。</li></ul><h3 id="说一下MySQL的innodb与MyISAM的区别"><a href="#说一下MySQL的innodb与MyISAM的区别" class="headerlink" title="说一下MySQL的innodb与MyISAM的区别"></a>说一下MySQL的innodb与MyISAM的区别</h3><ul><li>事务：InnoDB 支持事务，MyISAM 不支持事务，这是 MySQL 将默认存储引擎从 MyISAM 变成 InnoDB 的重要原因之一。</li><li>索引结构：InnoDB 是聚簇索引，MyISAM 是非聚簇索引。聚簇索引的文件存放在主键索引的叶子节点上，因此 InnoDB 必须要有主键，通过主键索引效率很高。但是辅助索引需要两次查询，先查询到主键，然后再通过主键查询到数据。因此，主键不应该过大，因为主键太大，其他索引也都会很大。而 MyISAM 是非聚簇索引，数据文件是分离的，索引保存的是数据文件的指针。主键索引和辅助索引是独立的。</li><li>锁粒度：InnoDB 最小的锁粒度是行锁，MyISAM 最小的锁粒度是表锁。一个更新语句会锁住整张表，导致其他查询和更新都会被阻塞，因此并发访问受限。</li><li>count 的效率：InnoDB 不保存表的具体行数，执行 select count(*) from table 时需要全表扫描。而MyISAM 用一个变量保存了整个表的行数，执行上述语句时只需要读出该变量即可，速度很快。</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><h4 id="所有分类"><a href="#所有分类" class="headerlink" title="所有分类"></a>所有分类</h4><ul><li>按「数据结构」分类：B+tree索引、Hash索引、Full-text索引。</li><li>按「物理存储」分类：聚簇索引（主键索引）、二级索引（辅助索引）。</li><li>按「字段特性」分类：主键索引、唯一索引、普通索引、前缀索引。</li><li>按「字段个数」分类：单列索引、联合索引。</li></ul><h4 id="按数据结构分类"><a href="#按数据结构分类" class="headerlink" title="按数据结构分类"></a>按数据结构分类</h4><p><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%8C%89%E6%95%B0%E6%8D%AE%E6%9C%BA%E6%9E%84%E5%88%86%E7%B1%BB.png" alt="按数据机构分类"></p><ul><li>InnoDB 是在 MySQL 5.5 之后成为默认的 MySQL 存储引擎，B+Tree 索引类型也是 MySQL 存储引擎采用最多的索引类型。</li><li>在创建表时，InnoDB 存储引擎会根据不同的场景选择不同的列作为索引：<ul><li>如果有主键，默认会使用主键作为聚簇索引的索引键（key）；</li><li>如果没有主键，就选择第一个不包含 NULL 值的唯一列作为聚簇索引的索引键（key）；</li><li>在上面两个都没有的情况下，InnoDB 将自动生成一个隐式自增 id 列作为聚簇索引的索引键（key）；</li></ul></li><li>其它索引都属于辅助索引（Secondary Index），也被称为二级索引或非聚簇索引。创建的主键索引和二级索引默认使用的是 B+Tree 索引。</li></ul><h4 id="按物理存储分类"><a href="#按物理存储分类" class="headerlink" title="按物理存储分类"></a>按物理存储分类</h4><ul><li>从物理存储的角度来看，索引分为聚簇索引（主键索引）、二级索引（辅助索引）。<ul><li>主键索引的 B+Tree 的叶子节点存放的是实际数据，所有完整的用户记录都存放在主键索引的 B+Tree 的叶子节点里；</li><li>二级索引的 B+Tree 的叶子节点存放的是主键值，而不是实际数据。</li></ul></li><li>所以，在查询时使用了二级索引，如果查询的数据能在二级索引里查询的到，那么就不需要回表，这个过程就是覆盖索引。如果查询的数据不在二级索引里，就会先检索二级索引，找到对应的叶子节点，获取到主键值后，然后再检索主键索引，就能查询到数据了，这个过程就是回表。</li></ul><h4 id="按字段特性分类"><a href="#按字段特性分类" class="headerlink" title="按字段特性分类"></a>按字段特性分类</h4><ul><li>主键索引<ul><li>主键索引就是建立在主键字段上的索引，通常在创建表的时候一起创建，一张表最多只有一个主键索引，索引列的值不允许有空值。</li><li>在创建表时，创建主键索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name  (<br>  <span class="hljs-keyword">PRIMARY</span> KEY (index_column_1) <span class="hljs-keyword">USING</span> BTREE<br>);<br></code></pre></td></tr></table></figure></li></ul></li><li>唯一索引<ul><li>唯一索引建立在 UNIQUE 字段上的索引，一张表可以有多个唯一索引，索引列的值必须唯一，但是允许有空值。</li><li>在创建表时，创建唯一索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name  (<br>  ....<br>  <span class="hljs-keyword">UNIQUE</span> KEY(index_column_1,index_column_2,...) <br>);<br></code></pre></td></tr></table></figure></li><li>建表后，如果要创建唯一索引，可以使用这面这条命令：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">UNIQUE</span> INDEX index_name<br><span class="hljs-keyword">ON</span> table_name(index_column_1,index_column_2,...);<br></code></pre></td></tr></table></figure></li></ul></li><li>普通索引<ul><li>普通索引就是建立在普通字段上的索引，既不要求字段为主键，也不要求字段为 UNIQUE。</li><li>在创建表时，创建普通索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name  (<br>  INDEX(index_column_1,index_column_2,...) <br>);<br></code></pre></td></tr></table></figure></li><li>建表后，如果要创建普通索引，可以使用这面这条命令：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> INDEX index_name<br><span class="hljs-keyword">ON</span> table_name(index_column_1,index_column_2,...);<br></code></pre></td></tr></table></figure></li></ul></li><li>前缀索引<ul><li>前缀索引是指对字符类型字段的前几个字符建立的索引，而不是在整个字段上建立的索引，前缀索引可以建立在字段类型为 char、 varchar、binary、varbinary 的列上。</li><li>使用前缀索引的目的是为了减少索引占用的存储空间，提升查询效率。</li><li>在创建表时，创建前缀索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name(<br>    column_list,<br>    INDEX(column_name(length))<br>);<br></code></pre></td></tr></table></figure></li><li>建表后，如果要创建前缀索引，可以使用这面这条命令：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> INDEX index_name<br><span class="hljs-keyword">ON</span> table_name(column_name(length));<br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="按字段个数分类"><a href="#按字段个数分类" class="headerlink" title="按字段个数分类"></a>按字段个数分类</h4><ul><li>从字段个数的角度来看，索引分为单列索引、联合索引（复合索引）。<ul><li>建立在单列上的索引称为单列索引，比如主键索引；</li><li>建立在多列上的索引称为联合索引；</li></ul></li></ul><h3 id="MySQL聚簇索引和非聚簇索引的区别是什么"><a href="#MySQL聚簇索引和非聚簇索引的区别是什么" class="headerlink" title="MySQL聚簇索引和非聚簇索引的区别是什么"></a>MySQL聚簇索引和非聚簇索引的区别是什么</h3><ul><li>数据存储：在聚簇索引中，数据行按照索引键值的顺序存储，也就是说，索引的叶子节点包含了实际的数据行。这意味着索引结构本身就是数据的物理存储结构。非聚簇索引的叶子节点不包含完整的数据行，而是包含指向数据行的指针或主键值。数据行本身存储在聚簇索引中。</li><li>索引与数据关系：由于数据与索引紧密相连，当通过聚簇索引查找数据时，可以直接从索引中获得数据行，而不需要额外的步骤去查找数据所在的位置。当通过非聚簇索引查找数据时，首先在非聚簇索引中找到对应的主键值，然后通过这个主键值回溯到聚簇索引中查找实际的数据行，这个过程称为“回表”。</li><li>唯一性：聚簇索引通常是基于主键构建的，因此每个表只能有一个聚簇索引，因为数据只能有一种物理排序方式。一个表可以有多个非聚簇索引，因为它们不直接影响数据的物理存储位置。</li><li>效率：对于范围查询和排序查询，聚簇索引通常更有效率，因为它避免了额外的寻址开销。非聚簇索引在使用覆盖索引进行查询时效率更高，因为它不需要读取完整的数据行。但是需要进行回表的操作，使用非聚簇索引效率比较低，因为需要进行额外的回表操作。</li></ul><h3 id="如果聚簇索引的数据更新，它的存储要不要变化"><a href="#如果聚簇索引的数据更新，它的存储要不要变化" class="headerlink" title="如果聚簇索引的数据更新，它的存储要不要变化"></a>如果聚簇索引的数据更新，它的存储要不要变化</h3><ul><li>如果更新的数据是非索引数据，也就是普通的用户记录，那么存储结构是不会发生变化</li><li>如果更新的数据是索引数据，那么存储结构是有变化的，因为要维护 b+树的有序性</li></ul><h3 id="MySQL主键是聚簇索引吗"><a href="#MySQL主键是聚簇索引吗" class="headerlink" title="MySQL主键是聚簇索引吗"></a>MySQL主键是聚簇索引吗</h3><ul><li>在MySQL的InnoDB存储引擎中，主键确实是以聚簇索引的形式存储的。</li><li>InnoDB将数据存储在B+树的结构中，其中主键索引的B+树就是所谓的聚簇索引。这意味着表中的数据行在物理上是按照主键的顺序排列的，聚簇索引的叶节点包含了实际的数据行。</li><li>InnoDB 在创建聚簇索引时，会根据不同的场景选择不同的列作为索引：<ul><li>如果有主键，默认会使用主键作为聚簇索引的索引键；</li><li>如果没有主键，就选择第一个不包含 NULL 值的唯一列作为聚簇索引的索引键；</li><li>在上面两个都没有的情况下，InnoDB 将自动生成一个隐式自增 id 列作为聚簇索引的索引键；</li></ul></li><li>一张表只能有一个聚簇索引，那为了实现非主键字段的快速搜索，就引出了二级索引（非聚簇索引&#x2F;辅助索引），它也是利用了 B+ 树的数据结构，但是二级索引的叶子节点存放的是主键值，不是实际数据。</li></ul><h3 id="表中十个字段，你主键用自增ID还是UUID，为什么？"><a href="#表中十个字段，你主键用自增ID还是UUID，为什么？" class="headerlink" title="表中十个字段，你主键用自增ID还是UUID，为什么？"></a>表中十个字段，你主键用自增ID还是UUID，为什么？</h3><ul><li>用的是自增 id。</li><li>因为 uuid 相对顺序的自增 id 来说是毫无规律可言的，新行的值不一定要比之前的主键的值要大，所以 innodb 无法做到总是把新行插入到索引的最后，而是需要为新行寻找新的合适的位置从而来分配新的空间。</li><li>这个过程需要做很多额外的操作，数据的毫无顺序会导致数据分布散乱，将会导致以下的问题：<ul><li>写入的目标页很可能已经刷新到磁盘上并且从缓存上移除，或者还没有被加载到缓存中，innodb 在插入之前不得不先找到并从磁盘读取目标页到内存中，这将导致大量的随机 IO。</li><li>因为写入是乱序的，innodb 不得不频繁的做页分裂操作，以便为新的行分配空间，页分裂导致移动大量的数据，影响性能。</li><li>由于频繁的页分裂，页会变得稀疏并被不规则的填充，最终会导致数据会有碎片。</li></ul></li><li>结论：使用 InnoDB 应该尽可能的按主键的自增顺序插入，并且尽可能使用单调的增加的聚簇键的值来插入新行。</li></ul><h3 id="什么自增ID更快一些，UUID不快吗，它在B-树里面存储是有序的吗"><a href="#什么自增ID更快一些，UUID不快吗，它在B-树里面存储是有序的吗" class="headerlink" title="什么自增ID更快一些，UUID不快吗，它在B+树里面存储是有序的吗"></a>什么自增ID更快一些，UUID不快吗，它在B+树里面存储是有序的吗</h3><ul><li>自增的主键的值是顺序的，所以 Innodb 把每一条记录都存储在一条记录的后面，所以自增 id 更快的原因：<ul><li>下一条记录就会写入新的页中，一旦数据按照这种顺序的方式加载，主键页就会近乎于顺序的记录填满，提升了页面的最大填充率，不会有页的浪费</li><li>新插入的行一定会在原有的最大数据行下一行，mysql定位和寻址很快，不会为计算新行的位置而做出额外的消耗</li><li>减少了页分裂和碎片的产生</li></ul></li><li>但是 UUID 不是递增的，MySQL 中索引的数据结构是 B+Tree，这种数据结构的特点是索引树上的节点的数据是有序的，而如果使用 UUID 作为主键，那么每次插入数据时，因为无法保证每次产生的 UUID 有序，所以就会出现新的 UUID 需要插入到索引树的中间去，这样可能会频繁地导致页分裂，使性能下降。</li><li>而且，UUID 太占用内存。每个 UUID 由 36 个字符组成，在字符串进行比较时，需要从前往后比较，字符串越长，性能越差。另外字符串越长，占用的内存越大，由于页的大小是固定的，这样一个页上能存放的关键字数量就会越少，这样最终就会导致索引树的高度越大，在索引搜索的时候，发生的磁盘 IO 次数越多，性能越差。</li></ul><h3 id="Mysql中的索引是怎么实现的"><a href="#Mysql中的索引是怎么实现的" class="headerlink" title="Mysql中的索引是怎么实现的"></a>Mysql中的索引是怎么实现的</h3><ul><li>MySQL InnoDB 引擎是用了B+树作为了索引的数据结构。</li><li>B+Tree 是一种多叉树，叶子节点才存放数据，非叶子节点只存放索引，而且每个节点里的数据是按主键顺序存放的。每一层父节点的索引值都会出现在下层子节点的索引值中，因此在叶子节点中，包括了所有的索引值信息，并且每一个叶子节点都有两个指针，分别指向下一个叶子节点和上一个叶子节点，形成一个双向链表。</li></ul><h3 id="B-树的特性是什么"><a href="#B-树的特性是什么" class="headerlink" title="B+树的特性是什么"></a>B+树的特性是什么</h3><ul><li>所有叶子节点都在同一层：这是B+树的一个重要特性，确保了所有数据项的检索都具有相同的I&#x2F;O延迟，提高了搜索效率。每个叶子节点都包含指向相邻叶子节点的指针，形成一个链表，由于叶子节点之间的链接，B+树非常适合进行范围查询和排序扫描。可以沿着叶子节点的链表顺序访问数据，而无需进行多次随机访问。</li><li>非叶子节点存储键值：非叶子节点仅存储键值和指向子节点的指针，不包含数据记录。这些键值用于指导搜索路径，帮助快速定位到正确的叶子节点。并且，由于非叶子节点只存放键值，当数据量比较大时，相对于B树，B+树的层高更少，查找效率也就更高。</li><li>叶子节点存储数据记录：与B树不同，B+树的叶子节点存储实际的数据记录或指向数据记录的指针。这意味着每次搜索都会到达叶子节点，才能找到所需数据。</li><li>自平衡：B+树在插入、删除和更新操作后会自动重新平衡，确保树的高度保持相对稳定，从而保持良好的搜索性能。每个节点最多可以有M个子节点，最少可以有ceil(M&#x2F;2，M为阶数)个子节点（除了根节点），这里的M是树的阶数。</li></ul><h3 id="说说B-树和B树的区别"><a href="#说说B-树和B树的区别" class="headerlink" title="说说B+树和B树的区别"></a>说说B+树和B树的区别</h3><ul><li>在B+树中，数据都存储在叶子节点上，而非叶子节点只存储索引信息；而B树的非叶子节点既存储索引信息也存储部分数据。</li><li>B+树的叶子节点使用链表相连，便于范围查询和顺序访问；B树的叶子节点没有链表连接。</li><li>B+树的查找性能更稳定，每次查找都需要查找到叶子节点；而B树的查找可能会在非叶子节点找到数据，性能相对不稳定。</li></ul><h3 id="B-树的好处是什么"><a href="#B-树的好处是什么" class="headerlink" title="B+树的好处是什么"></a>B+树的好处是什么</h3><ul><li>B+ 树的非叶子节点不存放实际的记录数据，仅存放索引，因此数据量相同的情况下，相比存储即存索引又存记录的 B 树，B+树的非叶子节点可以存放更多的索引，因此 B+ 树可以比 B 树更「矮胖」，查询底层节点的磁盘 I&#x2F;O次数会更少。</li><li>B+ 树有大量的冗余节点（所有非叶子节点都是冗余索引），这些冗余索引让 B+ 树在插入、删除的效率都更高，比如删除根节点的时候，不会像 B 树那样会发生复杂的树的变化；</li><li>B+ 树叶子节点之间用链表连接了起来，有利于范围查询，而 B 树要实现范围查询，因此只能通过树的遍历来完成范围查询，这会涉及多个节点的磁盘 I&#x2F;O 操作，范围查询效率不如 B+ 树。</li></ul><h3 id="为什么-MysSQL-不用跳表？"><a href="#为什么-MysSQL-不用跳表？" class="headerlink" title="为什么 MysSQL 不用跳表？"></a>为什么 MysSQL 不用跳表？</h3><ul><li>B+树的高度在3层时存储的数据可能已达千万级别，但对于跳表而言同样去维护千万的数据量那么所造成的跳表层数过高而导致的磁盘io次数增多，也就是使用B+树在存储同样的数据下磁盘io次数更少。</li></ul><h3 id="联合索引的实现原理"><a href="#联合索引的实现原理" class="headerlink" title="联合索引的实现原理"></a>联合索引的实现原理</h3><ul><li>使用多个字段值作为key值</li><li>需要满足最左匹配，因为除了最左边的属性，剩下的属性都是全局无序，局部有序的，利用索引的前提时索引里的key时有序的</li></ul><h3 id="索引失效有哪些情况"><a href="#索引失效有哪些情况" class="headerlink" title="索引失效有哪些情况"></a>索引失效有哪些情况</h3><ul><li>当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx%这两种方式都会造成索引失效；</li><li>当我们在查询条件中对索引列使用函数，就会导致索引失效。</li><li>当我们在查询条件中对索引列进行表达式计算，也是无法走索引的。</li><li>MySQL 在遇到字符串和数字比较的时候，会自动把字符串转为数字，然后再进行比较。如果字符串是索引列，而条件语句中的输入参数是数字的话，那么索引列会发生隐式类型转换，由于隐式类型转换是通过 CAST 函数实现的，等同于对索引列使用了函数，所以就会导致索引失效。</li><li>联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配，否则就会导致索引失效。</li><li>在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列，那么索引会失效。</li></ul><h3 id="什么情况下会回表查询"><a href="#什么情况下会回表查询" class="headerlink" title="什么情况下会回表查询"></a>什么情况下会回表查询</h3><ul><li><p>从物理存储的角度来看，索引分为聚簇索引（主键索引）、二级索引（辅助索引）。</p></li><li><p>它们的主要区别如下：</p><ul><li>主键索引的 B+Tree 的叶子节点存放的是实际数据，所有完整的用户记录都存放在主键索引的 B+Tree 的叶子节点里；</li><li>二级索引的 B+Tree 的叶子节点存放的是主键值，而不是实际数据。</li></ul></li><li><p>所以，在查询时使用了二级索引，如果查询的数据能在二级索引里查询的到，那么就不需要回表，这个过程就是覆盖索引。</p></li><li><p>如果查询的数据不在二级索引里，就会先检索二级索引，找到对应的叶子节点，获取到主键值后，然后再检索主键索引，就能查询到数据了，这个过程就是回表。</p></li></ul><h3 id="什么是覆盖索引？"><a href="#什么是覆盖索引？" class="headerlink" title="什么是覆盖索引？"></a>什么是覆盖索引？</h3><ul><li><p>覆盖索引是指一个索引包含了查询所需的所有列，因此不需要访问表中的数据行就能完成查询。</p></li><li><p>换句话说，查询所需的所有数据都能从索引中直接获取，而不需要进行回表查询。覆盖索引能够显著提高查询性能，因为减少了访问数据页的次数，从而减少了I&#x2F;O操作。</p></li></ul><h3 id="如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？"><a href="#如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？" class="headerlink" title="如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？"></a>如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？</h3><ul><li><p>mysql 优化器会分析每个索引的查询成本，然后选择成本最低的方案来执行 sql。</p></li><li><p>如果单列索引是 a，联合索引是（a ，b），那么针对下面这个查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> a, b <span class="hljs-keyword">from</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">where</span> a <span class="hljs-operator">=</span> ? <span class="hljs-keyword">and</span> b <span class="hljs-operator">=</span>?<br></code></pre></td></tr></table></figure></li><li><p>优化器会选择联合索引，因为查询成本更低，查询也不需要回表，直接索引覆盖了。</p></li></ul><h3 id="索引已经建好了，那我再插入一条数据，索引会有哪些变化？"><a href="#索引已经建好了，那我再插入一条数据，索引会有哪些变化？" class="headerlink" title="索引已经建好了，那我再插入一条数据，索引会有哪些变化？"></a>索引已经建好了，那我再插入一条数据，索引会有哪些变化？</h3><ul><li><p>插入新数据可能导致B+树结构的调整和索引信息的更新，以保持B+树的平衡性和正确性，这些变化通常由数据库系统自动处理，确保数据的一致性和索引的有效性。</p></li><li><p>如果插入的数据导致叶子节点已满，可能会触发叶子节点的分裂操作，以保持B+树的平衡性。</p></li></ul><h3 id="索引的缺点"><a href="#索引的缺点" class="headerlink" title="索引的缺点"></a>索引的缺点</h3><ul><li>需要占用物理空间，数量越大，占用空间越大；</li><li>创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增大；</li><li>会降低表的增删改的效率，因为每次增删改索引，B+ 树为了维护索引有序性，都需要进行动态维护。</li></ul><h3 id="怎么决定建立哪些索引"><a href="#怎么决定建立哪些索引" class="headerlink" title="怎么决定建立哪些索引"></a>怎么决定建立哪些索引</h3><h4 id="什么时候适合使用索引"><a href="#什么时候适合使用索引" class="headerlink" title="什么时候适合使用索引"></a>什么时候适合使用索引</h4><ul><li>字段有唯一性限制的，比如商品编码；</li><li>经常用于 WHERE 查询条件的字段，这样能够提高整个表的查询速度，如果查询条件不是一个字段，可以建立联合索引。</li><li>经常用于 GROUP BY 和 ORDER BY 的字段，这样在查询的时候就不需要再去做一次排序了，因为我们都已经知道了建立索引之后在 B+Tree 中的记录都是排序好的。</li></ul><h4 id="什么时候不需要创建索引"><a href="#什么时候不需要创建索引" class="headerlink" title="什么时候不需要创建索引"></a>什么时候不需要创建索引</h4><ul><li>WHERE 条件，GROUP BY，ORDER BY 里用不到的字段，索引的价值是快速定位，如果起不到定位的字段通常是不需要创建索引的，因为索引是会占用物理空间的。</li><li>字段中存在大量重复数据，不需要创建索引，比如性别字段，只有男女，如果数据库表中，男女的记录分布均匀，那么无论搜索哪个值都可能得到一半的数据。在这些情况下，还不如不要索引，因为 MySQL 还有一个查询优化器，查询优化器发现某个值出现在表的数据行中的百分比很高的时候，它一般会忽略索引，进行全表扫描。</li><li>表数据太少的时候，不需要创建索引；</li><li>经常更新的字段不用创建索引</li></ul><h3 id="索引优化详细讲讲"><a href="#索引优化详细讲讲" class="headerlink" title="索引优化详细讲讲"></a>索引优化详细讲讲</h3><ul><li>前缀索引优化：使用前缀索引是为了减小索引字段大小，可以增加一个索引页中存储的索引值的数量，有效提高索引的查询速度。在一些大字符串的字段作为索引时，使用前缀索引可以帮助我们减小索引项的大小。</li><li>覆盖索引优化：覆盖索引是指 SQL 中 query 的所有字段，在索引 B+Tree 的叶子节点上都能找得到的那些索引，从二级索引中查询得到记录，而不需要通过聚簇索引查询获得，可以避免回表的操作。</li><li>主键索引最好是自增的：<ul><li>如果我们使用自增主键，那么每次插入的新数据就会按顺序添加到当前索引节点的位置，不需要移动已有的数据，当页面写满，就会自动开辟一个新页面。因为每次插入一条新记录，都是追加操作，不需要重新移动数据，因此这种插入数据的方法效率非常高。</li><li>如果我们使用非自增主键，由于每次插入主键的索引值都是随机的，因此每次插入新的数据时，就可能会插入到现有数据页中间的某个位置，这将不得不移动其它数据来满足新数据的插入，甚至需要从一个页面复制数据到另外一个页面，我们通常将这种情况称为页分裂。页分裂还有可能会造成大量的内存碎片，导致索引结构不紧凑，从而影响查询效率。</li></ul></li><li>防止索引失效：<ul><li>当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx%这两种方式都会造成索引失效；</li><li>当我们在查询条件中对索引列做了计算、函数、类型转换操作，这些情况下都会造成索引失效；</li><li>联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配，否则就会导致索引失效。</li><li>在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列，那么索引会失效。</li></ul></li></ul><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="事务的特性"><a href="#事务的特性" class="headerlink" title="事务的特性"></a>事务的特性</h3><h4 id="原子性"><a href="#原子性" class="headerlink" title="原子性"></a>原子性</h4><ul><li>一个事务中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节，而且事务在执行过程中发生错误，会被回滚到事务开始前的状态，就像这个事务从来没有执行过一样，就好比买一件商品，购买成功时，则给商家付了钱，商品到手；购买失败时，则商品在商家手中，消费者的钱也没花出去。</li><li>通过 Undo log 来保证的；每个事务的操作都会记录一份“撤销日志”（Undo Log），用于回滚。</li></ul><h4 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h4><ul><li>事务执行前后，数据库必须保持一致的状态，符合所有的约束规则。</li></ul><h4 id="隔离性"><a href="#隔离性" class="headerlink" title="隔离性"></a>隔离性</h4><ul><li>数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致，因为多个事务同时使用相同的数据时，不会相互干扰，每个事务都有一个完整的数据空间，对其他并发事务是隔离的。也就是说，消费者购买商品这个事务，是不影响其他消费者购买的。</li><li>通过 MVCC（多版本并发控制） 或锁机制来保证的；</li></ul><h4 id="持久性"><a href="#持久性" class="headerlink" title="持久性"></a>持久性</h4><ul><li>事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</li><li>所有事务提交前，都会将修改记录写入 Redo Log（重做日志），即使系统崩溃也能恢复。</li></ul><h3 id="MySQL可能出现的并发问题"><a href="#MySQL可能出现的并发问题" class="headerlink" title="MySQL可能出现的并发问题"></a>MySQL可能出现的并发问题</h3><h4 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h4><ul><li>一个事务读取了另一个事务尚未提交的数据。</li><li>事务A将余额从100修改为200，但还未提交，事务B读到了200，事务A回滚到100。事务B读到的是脏数据，因为它读取了一个最终被撤销的值</li></ul><h4 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h4><ul><li>一个事务在读取某个范围的数据时，另一个事务插入了新数据，导致前后读取结果不一致。</li><li>事务A：查询所有价格大于100的商品，发现有5条。事务B：插入了一条价格为150的新商品，并提交。事务A再次查询，发现有6条记录。事务A“看到了幻影”，因为它在执行过程中，数据集合发生了变化。</li></ul><h4 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h4><ul><li>一个事务在读取同一条记录时，前后读到的值不一致。</li><li>事务A：读取订单状态，发现是“未支付”。事务B：将该订单状态改为“已支付”，并提交。事务A再次读取该订单，发现状态变成了“已支付”。事务A在执行过程中，数据发生了变化，导致前后不一致。</li></ul><h3 id="MySQL如何解决并发问题的"><a href="#MySQL如何解决并发问题的" class="headerlink" title="MySQL如何解决并发问题的"></a>MySQL如何解决并发问题的</h3><ul><li>锁机制：Mysql提供了多种锁机制来保证数据的一致性，包括行级锁、表级锁、页级锁等。通过锁机制，可以在读写操作时对数据进行加锁，确保同时只有一个操作能够访问或修改数据。</li><li>事务隔离级别：Mysql提供了多种事务隔离级别，包括读未提交、读已提交、可重复读和串行化。通过设置合适的事务隔离级别，可以在多个事务并发执行时，控制事务之间的隔离程度，以避免数据不一致的问题。</li><li>MVCC（多版本并发控制）：Mysql使用MVCC来管理并发访问，它通过在数据库中保存不同版本的数据来实现不同事务之间的隔离。在读取数据时，Mysql会根据事务的隔离级别来选择合适的数据版本，从而保证数据的一致性。</li></ul><h3 id="事务的隔离级别有哪些"><a href="#事务的隔离级别有哪些" class="headerlink" title="事务的隔离级别有哪些"></a>事务的隔离级别有哪些</h3><ul><li>读未提交（read uncommitted），指一个事务还没提交时，它做的变更就能被其他事务看到；可能发生脏读、不可重复读和幻读现象；</li><li>读提交（read committed），指一个事务提交之后，它做的变更才能被其他事务看到；可能发生不可重复读和幻读现象，但是不可能发生脏读现象；</li><li>可重复读（repeatable read），指一个事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，MySQL InnoDB 引擎的默认隔离级别；可能发生幻读现象，但是不可能脏读和不可重复读现象；</li><li>串行化（serializable）；会对记录加上读写锁，在多个事务对这条记录进行读写操作时，如果发生了读写冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行；脏读、不可重复读和幻读现象都不可能会发生。</li></ul><h3 id="四种隔离级别如何实现的"><a href="#四种隔离级别如何实现的" class="headerlink" title="四种隔离级别如何实现的"></a>四种隔离级别如何实现的</h3><ul><li>对于「读未提交」隔离级别的事务来说，因为可以读到未提交事务修改的数据，所以直接读取最新的数据就好了；</li><li>对于「串行化」隔离级别的事务来说，通过加读写锁的方式来避免并行访问；</li><li>对于「读提交」和「可重复读」隔离级别的事务来说，它们是通过 Read View来实现的，它们的区别在于创建 Read View 的时机不同，「读提交」隔离级别是在「每个语句执行前」都会重新生成一个 Read View，而「可重复读」隔离级别是「启动事务时」生成一个 Read View，然后整个事务期间都在用这个 Read View。</li></ul><h3 id="可重复读下的幻读问题"><a href="#可重复读下的幻读问题" class="headerlink" title="可重复读下的幻读问题"></a>可重复读下的幻读问题</h3><ul><li>我做了个实验去测试可重复读会不会出现幻读： <ul><li>事务A开启事务，搜索班级id为1的学生，此时为两条记录； </li><li>事务B开启事务，插入一条数据进入表中，并提交； </li><li>事务A再次搜索班级id为1的学生，此时为两条记录； </li><li>事务A将所有名字改为“修改名字”； </li><li>事务A再次搜索班级id为1的学生，此时为三条记录；</li></ul></li><li>原因：事务A进行更新时，使用的是当前读，当前读不再用事务开始时的快照，而是直接去读最新数据，并对符合条件的行加锁，此时会把这条新插入的记录也读出来一起更新</li><li>🧩 关键原理<ul><li>事务的快照没变<ul><li>在 Repeatable Read 下，事务第一次做快照读时建立的一致性视图（snapshot）不会因为 UPDATE 而重建。</li><li>这个视图仍然屏蔽掉事务开始后，其他事务提交的新行。</li></ul></li><li>本事务的修改优先可见<ul><li>MVCC 有个规则：同一行如果存在本事务写过的版本，那即使这个版本在最初快照里不可见，也必须返回给本事务（Read-Your-Writes）。</li><li>所以当你 UPDATE 时，假设它命中了原来快照中看不到的新行（比如被别的事务插入的小刚），此刻它被你生成了一个“由自己写的版本”。</li></ul></li><li>普通 SELECT 也会“看到”它<ul><li>虽然 SELECT 本身还是走快照读的逻辑，但会先检查“这行有没有我自己写的版本”。</li><li>于是这条原本不在快照中的记录被“补进了”结果集，看起来就像快照更新了，实际上是可见性规则在起作用。</li></ul></li></ul></li></ul><h3 id="Mysql-设置了可重读隔离级后，怎么保证不发生幻读？"><a href="#Mysql-设置了可重读隔离级后，怎么保证不发生幻读？" class="headerlink" title="Mysql 设置了可重读隔离级后，怎么保证不发生幻读？"></a>Mysql 设置了可重读隔离级后，怎么保证不发生幻读？</h3><ul><li>尽量在开启事务之后，马上执行 select … for update 这类锁定读的语句，因为它会对记录加 next-key lock，从而避免其他事务插入一条新记录，就避免了幻读的问题。</li></ul><h3 id="串行化隔离级别是通过什么实现的？"><a href="#串行化隔离级别是通过什么实现的？" class="headerlink" title="串行化隔离级别是通过什么实现的？"></a>串行化隔离级别是通过什么实现的？</h3><ul><li>是通过行级锁来实现的，序列化隔离级别下，普通的 select 查询是会对记录加 S 型的 next-key 锁，其他事务就没没办法对这些已经加锁的记录进行增删改操作了，从而避免了脏读、不可重复读和幻读现象。</li></ul><h3 id="MVCC实现原理"><a href="#MVCC实现原理" class="headerlink" title="MVCC实现原理"></a>MVCC实现原理</h3><h4 id="MVCC定义"><a href="#MVCC定义" class="headerlink" title="MVCC定义"></a>MVCC定义</h4><ul><li>是 InnoDB 在不加读锁的情况下，实现读写互不阻塞的关键机制。核心思路是：每行数据维护多个历史版本，读操作基于一致性快照获取可见版本，从而提高并发性能。</li></ul><h4 id="核心原理"><a href="#核心原理" class="headerlink" title="核心原理"></a>核心原理</h4><ul><li>隐藏列：针对每一行数据的聚簇索引，每行有 DB_TRX_ID（最后修改事务ID）和 DB_ROLL_PTR（指向 Undo 日志的上一个版本）。</li><li>版本链：旧数据不会直接覆盖，而是写入 Undo 日志，并通过 DB_ROLL_PTR 串成链。</li><li>Read View：快照读时生成，有四个字段：<ul><li>creator_trx_id：创建该Read View的事务ID</li><li>m_ids：创建时，当前数据库中活跃但未提交的事务ID列表</li><li>up_limit_id（min_trx_id）：创建时，当前数据库中活跃但未提交的最小事务ID</li><li>low_limit_id（max_trx_id）：创建时，当前数据库应该给下一个事务的ID值</li></ul></li><li>可见性判断：根据事务ID和活跃事务列表决定读哪个版本。<ul><li>版本事务 ID &lt; up_limit_id → 该事务早已提交，可见。</li><li>版本事务 ID ≥ low_limit_id → 该事务在视图创建后才产生，不可见。</li><li>up_limit_id ≤ 版本事务 ID &lt; low_limit_id<ul><li>如果 DB_TRX_ID 不在 m_ids（说明视图生成时它已经提交） → 可见。</li><li>如果在 m_ids（说明当时事务还活跃） → 不可见。</li></ul></li><li>如果 DB_TRX_ID &#x3D;&#x3D; creator_trx_id → 即使未提交，也对本事务可见（读你所写）。</li><li>“小于最小 ID 看得见，大于等于最大 ID 看不见；夹在中间要查表，表里有就看不见；自己永远能看到自己。”</li></ul></li><li>Purge 清理：无事务再引用的历史版本会被后台线程物理删除，释放空间。</li></ul><h3 id="一条update是不是原子性的？为什么？"><a href="#一条update是不是原子性的？为什么？" class="headerlink" title="一条update是不是原子性的？为什么？"></a>一条update是不是原子性的？为什么？</h3><ul><li>是原子性，主要通过锁+undolog 日志保证原子性的</li><li>执行 update 的时候，会加行级别锁，保证了一个事务更新一条记录的时候，不会被其他事务干扰。</li><li>事务执行过程中，会生成 undolog，如果事务执行失败，就可以通过 undolog 日志进行回滚。</li></ul><h3 id="滥用事务，或者一个事务里有特别多sql的弊端"><a href="#滥用事务，或者一个事务里有特别多sql的弊端" class="headerlink" title="滥用事务，或者一个事务里有特别多sql的弊端"></a>滥用事务，或者一个事务里有特别多sql的弊端</h3><ul><li>锁时间过长，导致并发性能下降<ul><li>事务未提交前，持有的锁会一直占着资源，其他会话只能干等</li><li>高并发场景下，会放大阻塞甚至形成死锁</li></ul></li><li>资源消耗大<ul><li>数据库需要保存事务的中间状态（Undo&#x2F;Redo 日志、版本信息）</li><li>SQL 多、事务长，内存和磁盘压力都会上去</li></ul></li><li>回滚成本高<ul><li>出错时需要撤销整个事务</li><li>SQL 数量多时，回滚耗时长，甚至可能产生锁等待的连锁反应</li></ul></li><li>不利于扩展与分布式场景<ul><li>长事务会拖慢分布式事务协调器，增加跨节点一致性开销</li></ul></li></ul><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="讲一下mysql里有哪些锁？"><a href="#讲一下mysql里有哪些锁？" class="headerlink" title="讲一下mysql里有哪些锁？"></a>讲一下mysql里有哪些锁？</h3><ul><li>全局锁：通过flush tables with read lock 语句会将整个数据库就处于只读状态了，这时其他线程执行以下操作，增删改或者表结构修改都会阻塞。全局锁主要应用于做全库逻辑备份，这样在备份数据库期间，不会因为数据或表结构的更新，而出现备份文件的数据与预期的不一样。</li><li>表级锁：MySQL 里面表级别的锁有这几种：<ul><li>表锁：通过lock tables 语句可以对表加表锁，表锁除了会限制别的线程的读写外，也会限制本线程接下来的读写操作。</li><li>元数据锁：当我们对数据库表进行操作时，会自动给这个表加上 MDL，对一张表进行 CRUD 操作时，加的是 MDL 读锁；对一张表做结构变更操作的时候，加的是 MDL 写锁；MDL 是为了保证当用户对表执行 CRUD 操作时，防止其他线程对这个表结构做了变更。</li><li>意向锁：当执行插入、更新、删除操作，需要先对表加上「意向独占锁」，然后对该记录加独占锁。意向锁的目的是为了快速判断表里是否有记录被加锁。</li></ul></li><li>行级锁：InnoDB 引擎是支持行级锁的，而 MyISAM 引擎并不支持行级锁。<ul><li>记录锁，锁住的是一条记录。而且记录锁是有 S 锁和 X 锁之分的，满足读写互斥，写写互斥</li><li>间隙锁，只存在于可重复读隔离级别，目的是为了解决可重复读隔离级别下幻读的现象。</li><li>Next-Key Lock 称为临键锁，是 Record Lock + Gap Lock 的组合，锁定一个范围，并且锁定记录本身。</li></ul></li></ul><h3 id="数据库的表锁和行锁有什么作用？"><a href="#数据库的表锁和行锁有什么作用？" class="headerlink" title="数据库的表锁和行锁有什么作用？"></a>数据库的表锁和行锁有什么作用？</h3><h4 id="表锁"><a href="#表锁" class="headerlink" title="表锁"></a>表锁</h4><ul><li>整体控制：表锁可以用来控制整个表的并发访问，当一个事务获取了表锁时，其他事务无法对该表进行任何读写操作，从而确保数据的完整性和一致性。</li><li>适用于大批量操作：表锁适合于需要大批量操作表中数据的场景，例如表的重建、大量数据的加载等。</li></ul><h4 id="行锁"><a href="#行锁" class="headerlink" title="行锁"></a>行锁</h4><ul><li>细粒度控制：行锁可以精确控制对表中某行数据的访问，使得其他事务可以同时访问表中的其他行数据，在并发量大的系统中能够提高并发性能。</li><li>适用于频繁单行操作：行锁适合于需要频繁对表中单独行进行操作的场景，例如订单系统中的订单修改、删除等操作</li></ul><h3 id="MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？"><a href="#MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？" class="headerlink" title="MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？"></a>MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？</h3><ul><li>会，因为行级锁，陷入阻塞</li></ul><h3 id="两条update语句处理一张表的不同的主键范围的记录，一个15，会不会遇到阻塞？底层是为什么的？"><a href="#两条update语句处理一张表的不同的主键范围的记录，一个15，会不会遇到阻塞？底层是为什么的？" class="headerlink" title="两条update语句处理一张表的不同的主键范围的记录，一个&lt;10，一个&gt;15，会不会遇到阻塞？底层是为什么的？"></a>两条update语句处理一张表的不同的主键范围的记录，一个&lt;10，一个&gt;15，会不会遇到阻塞？底层是为什么的？</h3><ul><li>不会，因为锁的范围不同，一个是小于10加锁，另一个是大于15加锁</li></ul><h3 id="如果2个范围不是主键或索引？还会阻塞吗？"><a href="#如果2个范围不是主键或索引？还会阻塞吗？" class="headerlink" title="如果2个范围不是主键或索引？还会阻塞吗？"></a>如果2个范围不是主键或索引？还会阻塞吗？</h3><ul><li><p>如果2个范围查询的字段不是索引的话，那就代表 update 没有用到索引，这时候触发了全表扫描，全部索引都会加行级锁，这时候第二条 update 执行的时候，就会阻塞了。</p></li><li><p>因为如果 update 没有用到索引，在扫描过程中会对索引加锁，所以全表扫描的场景下，所有记录都会被加锁。</p></li></ul><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="日志文件是分成了哪几种？"><a href="#日志文件是分成了哪几种？" class="headerlink" title="日志文件是分成了哪几种？"></a>日志文件是分成了哪几种？</h3><ul><li>redo log 重做日志，是 Innodb 存储引擎层生成的日志，实现了事务中的持久性，主要用于掉电等故障恢复；</li><li>undo log 回滚日志，是 Innodb 存储引擎层生成的日志，实现了事务中的原子性，主要用于事务回滚和 MVCC。</li><li>bin log 二进制日志，是 Server 层生成的日志，主要用于数据备份和主从复制；</li><li>relay log 中继日志，用于主从复制场景下，slave通过io线程拷贝master的bin log后本地生成的日志</li><li>慢查询日志，用于记录执行时间过长的sql，需要设置阈值后手动开启</li></ul><h3 id="讲一下binlog"><a href="#讲一下binlog" class="headerlink" title="讲一下binlog"></a>讲一下binlog</h3><ul><li><p>MySQL 在完成一条更新操作后，Server 层还会生成一条 binlog，等之后事务提交的时候，会将该事物执行过程中产生的所有 binlog 统一写 入 binlog 文件，binlog 是 MySQL 的 Server 层实现的日志，所有存储引擎都可以使用。</p></li><li><p>binlog 是追加写，写满一个文件，就创建一个新的文件继续写，不会覆盖以前的日志，保存的是全量的日志，用于备份恢复、主从复制；</p></li><li><p>binlog 文件是记录了所有数据库表结构变更和表数据修改的日志，不会记录查询类的操作，比如 SELECT 和 SHOW 操作。</p></li><li><p>binlog 有 3 种格式类型，分别是 STATEMENT（默认格式）、ROW、 MIXED，区别如下：</p></li><li><p>STATEMENT：每一条修改数据的 SQL 都会被记录到 binlog 中（相当于记录了逻辑操作，所以针对这种格式， binlog 可以称为逻辑日志），主从复制中 slave 端再根据 SQL 语句重现。但 STATEMENT 有动态函数的问题，比如你用了 uuid 或者 now 这些函数，你在主库上执行的结果并不是你在从库执行的结果，这种随时在变的函数会导致复制的数据不一致；</p></li><li><p>ROW：记录行数据最终被修改成什么样了（这种格式的日志，就不能称为逻辑日志了），不会出现 STATEMENT 下动态函数的问题。但 ROW 的缺点是每行数据的变化结果都会被记录，比如执行批量 update 语句，更新多少行数据就会产生多少条记录，使 binlog 文件过大，而在 STATEMENT 格式下只会记录一个 update 语句而已；</p></li><li><p>MIXED：包含了 STATEMENT 和 ROW 模式，它会根据不同的情况自动使用 ROW 模式和 STATEMENT 模式；</p></li></ul><h3 id="UndoLog日志的作用是什么？"><a href="#UndoLog日志的作用是什么？" class="headerlink" title="UndoLog日志的作用是什么？"></a>UndoLog日志的作用是什么？</h3><ul><li>undo log 是一种用于撤销回退的日志，它保证了事务的 ACID 特性中的原子性（Atomicity）。</li><li>在事务没提交之前，MySQL 会先记录更新前的数据到 undo log 日志文件里面，当事务回滚时，可以利用 undo log 来进行回滚。</li><li>每当 InnoDB 引擎对一条记录进行操作（修改、删除、新增）时，要把回滚时需要的信息都记录到 undo log 里，比如：<ul><li>在插入一条记录时，要把这条记录的主键值记下来，这样之后回滚时只需要把这个主键值对应的记录删掉</li><li>在删除一条记录时，要把这条记录中的内容都记下来，这样之后回滚时再把由这些内容组成的记录插入到表中</li><li>在更新一条记录时，要把被更新的列的旧值记下来，这样之后回滚时再把这些列更新为旧值</li></ul></li></ul><h3 id="有了undolog为啥还需要redolog呢？"><a href="#有了undolog为啥还需要redolog呢？" class="headerlink" title="有了undolog为啥还需要redolog呢？"></a>有了undolog为啥还需要redolog呢？</h3><ul><li>在数据库中，Undo Log 用于回滚未完成事务，保证原子性；Redo Log 用于在系统崩溃后重做已提交事务，保证持久性。两者相辅相成，缺一不可。</li><li>Undo Log记录修改前的旧值，Redo Log记录修改后的新值。</li></ul><h3 id="redo-log怎么保证持久性的？"><a href="#redo-log怎么保证持久性的？" class="headerlink" title="redo log怎么保证持久性的？"></a>redo log怎么保证持久性的？</h3><h4 id="WAL-原则（Write-Ahead-Logging）"><a href="#WAL-原则（Write-Ahead-Logging）" class="headerlink" title="WAL 原则（Write-Ahead Logging）"></a>WAL 原则（Write-Ahead Logging）</h4><ul><li>先写日志，再写数据文件</li><li>当事务提交时，必须先把 Redo Log 刷入磁盘（fsync 确保真正落盘），确认写成功后才算事务提交完成。</li><li>这样即使数据页还停留在缓冲池里没落盘，宕机也可依靠日志恢复。</li></ul><h4 id="顺序写-刷盘确认"><a href="#顺序写-刷盘确认" class="headerlink" title="顺序写 + 刷盘确认"></a>顺序写 + 刷盘确认</h4><ul><li>Redo Log 是顺序追加写（append-only），比随机写快得多，也更容易落盘成功。</li><li>顺序写降低了磁盘寻址开销，减少了因延迟导致的风险。</li></ul><h4 id="组提交（Group-Commit）"><a href="#组提交（Group-Commit）" class="headerlink" title="组提交（Group Commit）"></a>组提交（Group Commit）</h4><ul><li>多个事务的 Redo Log 可一次性刷盘，减少磁盘 I&#x2F;O 次数，但提交确认前必须确保日志写入可靠。</li><li>提升性能的同时保持持久性。</li></ul><h4 id="崩溃恢复流程"><a href="#崩溃恢复流程" class="headerlink" title="崩溃恢复流程"></a>崩溃恢复流程</h4><ul><li>数据库启动时会扫描 Redo Log 中的 已提交事务记录，将对应的修改“重做”到数据文件中。</li><li>因为提交前就已保证日志落盘，所以能准确恢复到崩溃前的最后提交状态。</li></ul><h3 id="binlog-两阶段提交过程"><a href="#binlog-两阶段提交过程" class="headerlink" title="binlog 两阶段提交过程"></a>binlog 两阶段提交过程</h3><ul><li>当客户端执行 commit 语句或者在自动提交的情况下，MySQL 内部开启一个 XA 事务，分两阶段来完成 XA 事务的提交</li><li>事务的提交过程有两个阶段，就是将 redo log 的写入拆成了两个步骤：prepare 和 commit，中间再穿插写入binlog：<ul><li>prepare 阶段：将 XID（内部 XA 事务的 ID） 写入到 redo log，同时将 redo log 对应的事务状态设置为 prepare，然后将 redo log 持久化到磁盘（innodb_flush_log_at_trx_commit &#x3D; 1 的作用）；</li><li>commit 阶段：把 XID 写入到 binlog，然后将 binlog 持久化到磁盘（sync_binlog &#x3D; 1 的作用），接着调用引擎的提交事务接口，将 redo log 状态设置为 commit，此时该状态并不需要持久化到磁盘，只需要 write 到文件系统的 page cache 中就够了，因为只要 binlog 写磁盘成功，就算 redo log 的状态还是 prepare 也没有关系，一样会被认为事务已经执行成功；</li></ul></li><li>两阶段提交是以 binlog 写成功为事务提交成功的标识</li></ul><h3 id="为什么要写RedoLog，而不是直接写到B-树里面？"><a href="#为什么要写RedoLog，而不是直接写到B-树里面？" class="headerlink" title="为什么要写RedoLog，而不是直接写到B+树里面？"></a>为什么要写RedoLog，而不是直接写到B+树里面？</h3><ul><li>因为 redolog 写入磁盘是顺序写，而 b+树里数据页写入磁盘是随机写，顺序写的性能会比随机写好，这样可以提升事务提交的效率。</li><li>最重要的是redolog具备故障恢复的能力，Redo Log 记录的是物理级别的修改，包括页的修改，如插入、更新、删除操作在磁盘上的物理位置和修改内容。例如，当执行一个更新操作时，Redo Log 会记录修改的数据页的地址和更新后的数据，而不是 SQL 语句本身。</li><li>在数据页实际更新之前，先将修改操作写入 Redo Log。当数据库重启时，会进行恢复操作。首先，根据 Redo Log 检查哪些事务已经提交但数据页尚未完全写入磁盘。然后，使用 Redo Log 中的记录对这些事务进行重做（Redo）操作，将未完成的数据页修改完成，确保事务的修改生效。</li></ul><h2 id="Redis数据结构"><a href="#Redis数据结构" class="headerlink" title="Redis数据结构"></a>Redis数据结构</h2><h3 id="Redis有哪些数据结构"><a href="#Redis有哪些数据结构" class="headerlink" title="Redis有哪些数据结构"></a>Redis有哪些数据结构</h3><p><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/Redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" alt="Redis数据结构"></p><h3 id="Zset-底层是怎么实现的？"><a href="#Zset-底层是怎么实现的？" class="headerlink" title="Zset 底层是怎么实现的？"></a>Zset 底层是怎么实现的？</h3><ul><li>Zset 类型的底层数据结构是由压缩列表或跳表实现的：<ul><li>如果有序集合的元素个数小于 128 个，并且每个元素的值小于 64 字节时，Redis 会使用压缩列表作为 Zset 类型的底层数据结构；</li><li>如果有序集合的元素不满足上面的条件，Redis 会使用跳表作为 Zset 类型的底层数据结构；</li></ul></li><li>在 Redis 7.0 中，压缩列表数据结构已经废弃了，交由 listpack 数据结构来实现了。</li></ul><h3 id="跳表是怎么设置层高的"><a href="#跳表是怎么设置层高的" class="headerlink" title="跳表是怎么设置层高的"></a>跳表是怎么设置层高的</h3><ul><li>常见实现（如 Redis 的 zset）是：插入新节点时，从第 1 层开始，丢一枚“硬币”，正面就晋升一层，直到反面为止，或者达到最大层数上限。</li></ul><h3 id="Redis为什么使用跳表而不是用B-树"><a href="#Redis为什么使用跳表而不是用B-树" class="headerlink" title="Redis为什么使用跳表而不是用B+树"></a>Redis为什么使用跳表而不是用B+树</h3><h4 id="内存友好"><a href="#内存友好" class="headerlink" title="内存友好"></a>内存友好</h4><ul><li>B+ 树节点一般需要连续的内存块来存储 key 数组和指针，内存分配与管理更复杂，在频繁插入&#x2F;删除时可能产生碎片。</li><li>Redis 是单线程事件循环模型，越简单的算法越能减少代码复杂度和 CPU 消耗。</li></ul><h4 id="范围查询天然高效"><a href="#范围查询天然高效" class="headerlink" title="范围查询天然高效"></a>范围查询天然高效</h4><ul><li>跳表的“横向+纵向”链表结构，可以非常高效地从某个分数（score）开始顺序遍历范围内的元素。</li><li>在 B+ 树中做范围查询虽然也高效，但涉及节点间的磁盘&#x2F;页式结构优势在 Redis 的内存场景里不明显。</li></ul><h4 id="性能稳定"><a href="#性能稳定" class="headerlink" title="性能稳定"></a>性能稳定</h4><ul><li>跳表查找、插入、删除的平均时间复杂度都是 O(log n)，而且性能波动小。</li><li>B+ 树在节点分裂或合并时有额外的复杂维护成本。</li></ul><h4 id="实现简单"><a href="#实现简单" class="headerlink" title="实现简单"></a>实现简单</h4><ul><li>跳表 基于链表+多层索引结构，用纯指针连接，不需要像 B+ 树那样维护复杂的节点分裂、合并逻辑。</li></ul><h3 id="Redis压缩列表怎么实现的"><a href="#Redis压缩列表怎么实现的" class="headerlink" title="Redis压缩列表怎么实现的"></a>Redis压缩列表怎么实现的</h3><ul><li>是 Redis 为了节约内存而开发的，它是由连续内存块组成的顺序型数据结构，有点类似于数组。</li></ul><h4 id="结构布局"><a href="#结构布局" class="headerlink" title="结构布局"></a>结构布局</h4><table><thead><tr><th>字段</th><th>大小</th><th>作用</th></tr></thead><tbody><tr><td><code>zlbytes</code></td><td>4 字节</td><td>记录整个 ziplist 占用的字节数，方便内存重新分配</td></tr><tr><td><code>zltail</code></td><td>4 字节</td><td>记录最后一个节点相对于列表起始位置的偏移量，快速找到尾节点</td></tr><tr><td><code>zllen</code></td><td>2 字节</td><td>节点数量（&lt; 65535），超过这个值就需要遍历统计</td></tr><tr><td><strong>entry[]</strong></td><td>不定</td><td>存储每个数据节点</td></tr><tr><td><code>zlend</code></td><td>1 字节</td><td>特殊标志 <code>0xFF</code>，表示列表结束</td></tr></tbody></table><h4 id="Entry结点格式"><a href="#Entry结点格式" class="headerlink" title="Entry结点格式"></a>Entry结点格式</h4><ul><li>prevlen<ul><li>记录前一个 entry 的长度（1 字节或 5 字节）</li><li>用来支持从尾向前遍历</li></ul></li><li>encoding<ul><li>记录当前节点数据类型和长度（可以表示字符串或整数）</li><li>如果是小整数，会直接存在 encoding 里而不是单独分配空间</li></ul></li><li>data<ul><li>真正存储的内容（字符串字节数组或整数）</li></ul></li></ul><h4 id="压缩列表的性质"><a href="#压缩列表的性质" class="headerlink" title="压缩列表的性质"></a>压缩列表的性质</h4><ul><li><p>当我们往压缩列表中插入数据时，压缩列表就会根据数据类型是字符串还是整数，以及数据的大小，会使用不同空间大小的 prevlen 和 encoding 这两个元素里保存的信息，这种根据数据大小和类型进行不同的空间大小分配的设计思想，正是 Redis 为了节省内存而采用的。</p></li><li><p>压缩列表的缺点是会发生连锁更新的问题，因此连锁更新一旦发生，就会导致压缩列表占用的内存空间要多次重新分配，这就会直接影响到压缩列表的访问性能。</p></li><li><p>所以说，虽然压缩列表紧凑型的内存布局能节省内存开销，但是如果保存的元素数量增加了，或是元素变大了，会导致内存重新分配，最糟糕的是会有「连锁更新」的问题。</p></li><li><p>因此，压缩列表只会用于保存的节点数量不多的场景，只要节点数量足够小，即使发生连锁更新，也是能接受的。</p></li></ul><h3 id="介绍一下-Redis-中的-listpack"><a href="#介绍一下-Redis-中的-listpack" class="headerlink" title="介绍一下 Redis 中的 listpack"></a>介绍一下 Redis 中的 listpack</h3><h4 id="quicklist"><a href="#quicklist" class="headerlink" title="quicklist"></a>quicklist</h4><ul><li>使用一个双向链表，链表的结点是压缩列表</li><li>quicklist 虽然通过控制 quicklistNode 结构里的压缩列表的大小或者元素个数，来减少连锁更新带来的性能影响，但是并没有完全解决连锁更新的问题。</li><li>因为 quicklistNode 还是用了压缩列表来保存元素，压缩列表连锁更新的问题，来源于它的结构设计，所以要想彻底解决这个问题，需要设计一个新的数据结构。</li></ul><h4 id="listpack"><a href="#listpack" class="headerlink" title="listpack"></a>listpack</h4><ul><li>结构布局<table><thead><tr><th>字段</th><th>大小</th><th>作用</th></tr></thead><tbody><tr><td><code>total_bytes</code></td><td>4 字节</td><td>整个 listpack 占用的总字节数</td></tr><tr><td><code>num_elements</code></td><td>2 字节</td><td>元素数量</td></tr><tr><td><code>entry[]</code></td><td>不定</td><td>依次存放每个数据节点</td></tr><tr><td><code>end</code></td><td>1 字节</td><td>固定值 <code>0xFF</code>，标识结尾</td></tr></tbody></table></li><li>节点格式<ul><li>encoding：存储数据类型及长度信息（变长编码，节省空间）</li><li>content：实际数据，可以是字符串或整数</li><li>backlen：记录整个 entry 占用的字节数，用于反向遍历</li></ul></li></ul><h3 id="哈希表的扩容"><a href="#哈希表的扩容" class="headerlink" title="哈希表的扩容"></a>哈希表的扩容</h3><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E5%93%88%E5%B8%8C%E8%A1%A8%E6%89%A9%E5%AE%B9.png" alt="哈希表扩容"></p><ul><li>问题：如果「哈希表 1 」的数据量非常大，那么在迁移至「哈希表 2 」的时候，因为会涉及大量的数据拷贝，此时可能会对 Redis 造成阻塞，无法服务其他请求。</li></ul><h4 id="渐进式-rehash"><a href="#渐进式-rehash" class="headerlink" title="渐进式 rehash"></a>渐进式 rehash</h4><ul><li>给「哈希表 2」 分配空间；</li><li>在 rehash 进行期间，每次哈希表元素进行新增、删除、查找或者更新操作时，Redis 除了会执行对应的操作之外，还会顺序将「哈希表 1 」中索引位置上的所有 key-value 迁移到「哈希表 2」 上；新增只插入新表；查询时先查原表再查新表</li><li>随着处理客户端发起的哈希表操作请求数量越多，最终在某个时间点会把「哈希表 1 」的所有 key-value 迁移到「哈希表 2」，从而完成 rehash 操作。</li></ul><h3 id="String是用什么存储的？为什么不用-c-语言中的字符串"><a href="#String是用什么存储的？为什么不用-c-语言中的字符串" class="headerlink" title="String是用什么存储的？为什么不用 c 语言中的字符串"></a>String是用什么存储的？为什么不用 c 语言中的字符串</h3><ul><li>Redis 的 String 并不是直接用 C 语言里原生的 char* 字符串来存储的，而是用 SDS（Simple Dynamic String，简单动态字符串） 这个自定义结构来实现的。 这是 Redis 的一个关键设计之一，目的是让字符串操作更高效、更安全、功能更丰富。</li></ul><h4 id="SDS的存储结构"><a href="#SDS的存储结构" class="headerlink" title="SDS的存储结构"></a>SDS的存储结构</h4><table><thead><tr><th>字段</th><th>类型</th><th>含义</th></tr></thead><tbody><tr><td>len</td><td>int &#x2F; uint</td><td>记录当前已使用的字节数（不含末尾的 <code>\0</code>）</td></tr><tr><td>alloc</td><td>int &#x2F; uint</td><td>已分配的缓冲区大小（不含末尾的 <code>\0</code>）</td></tr><tr><td>flags</td><td>unsigned char</td><td>记录 SDS 类型及编码等信息</td></tr><tr><td>buf[]</td><td>char 数组</td><td>实际存储数据的缓冲区，末尾会保留一个 <code>\0</code> 以便与 C 字符串兼容</td></tr></tbody></table><h4 id="不用-C-原生字符串"><a href="#不用-C-原生字符串" class="headerlink" title="不用 C 原生字符串"></a>不用 C 原生字符串</h4><ul><li>C字符串获取长度为O(1)</li><li>支持二进制安全（Binary-safe）<ul><li>C 字符串不能存 \0（会被当作结束符）</li><li>SDS 用 len 记录长度，可以存任意字节（包括 \0）</li></ul></li><li>不会发生缓冲区溢出<ul><li>C 语言的字符串标准库提供的字符串操作函数，大多数（比如 strcat 追加字符串函数）都是不安全的，因为这些函数把缓冲区大小是否满足操作需求的工作交由开发者来保证，程序内部并不会判断缓冲区大小是否足够用，当发生了缓冲区溢出就有可能造成程序异常结束。</li><li>所以，Redis 的 SDS 结构里引入了 alloc 和 len 成员变量，这样 SDS API 通过 alloc - len 计算，可以算出剩余可用的空间大小，这样在对字符串做修改操作的时候，就可以由程序内部判断缓冲区大小是否足够用。</li><li>而且，当判断出缓冲区大小不够用时，Redis 会自动将扩大 SDS 的空间大小，以满足修改所需的大小。</li></ul></li></ul><h2 id="Reids线程模型"><a href="#Reids线程模型" class="headerlink" title="Reids线程模型"></a>Reids线程模型</h2><h3 id="Redis使用单线程为什么快？"><a href="#Redis使用单线程为什么快？" class="headerlink" title="Redis使用单线程为什么快？"></a>Redis使用单线程为什么快？</h3><ul><li>Redis 的大部分操作都在内存中完成，并且采用了高效的数据结构，因此 Redis 瓶颈可能是机器的内存或者网络带宽，而并非 CPU，既然 CPU 不是瓶颈，那么自然就采用单线程的解决方案了；</li><li>Redis 采用单线程模型可以避免了多线程之间的竞争，省去了多线程切换带来的时间和性能上的开销，而且也不会导致死锁问题。</li><li>Redis 采用了 I&#x2F;O 多路复用机制处理大量的客户端 Socket 请求，IO 多路复用机制是指一个线程处理多个 IO 流，就是我们经常听到的 select&#x2F;epoll 机制。简单来说，在 Redis 只运行单线程的情况下，该机制允许内核中，同时存在多个监听 Socket 和已连接 Socket。内核会一直监听这些 Socket 上的连接请求或数据请求。一旦有请求到达，就会交给 Redis 线程处理，这就实现了一个 Redis 线程处理多个 IO 流的效果。</li></ul><h3 id="Redis哪些地方使用了多线程"><a href="#Redis哪些地方使用了多线程" class="headerlink" title="Redis哪些地方使用了多线程?"></a>Redis哪些地方使用了多线程?</h3><h4 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h4><ul><li>Redis 单线程指的是「接收客户端请求-&gt;解析请求 -&gt;进行数据读写等操作-&gt;发送数据给客户端」这个过程是由一个线程（主线程）来完成的，这也是我们常说 Redis 是单线程的原因。</li></ul><h4 id="后台线程"><a href="#后台线程" class="headerlink" title="后台线程"></a>后台线程</h4><ul><li>Redis 在 2.6 版本，会启动 2 个后台线程，分别处理关闭文件、AOF 刷盘这两个任务；</li><li>Redis 在 4.0 版本之后，新增了一个新的后台线程，用来异步释放 Redis 内存，也就是 lazyfree 线程。例如执行 unlink key &#x2F; flushdb async &#x2F; flushall async 等命令，会把这些删除操作交给后台线程来执行，好处是不会导致 Redis 主线程卡顿。因此，当我们要删除一个<strong>大key</strong>的时候，不要使用 del 命令删除，因为 del 是在主线程处理的，这样会导致 Redis 主线程卡顿，因此我们应该使用 unlink 命令来异步删除大key。</li><li>之所以单独创线程，是因为耗时，放在主线程会导致阻塞</li></ul><h4 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h4><ul><li>在 Redis 6.0 版本之后，也采用了多个 I&#x2F;O 线程来处理网络请求，这是因为随着网络硬件的性能提升，Redis 的性能瓶颈有时会出现在网络 I&#x2F;O 的处理上。</li><li>默认情况下，只针对响应数据使用多线程，要想开启多线程处理客户端请求，则需要修改配置</li></ul><h4 id="Redis会额外创建6个线程"><a href="#Redis会额外创建6个线程" class="headerlink" title="Redis会额外创建6个线程"></a>Redis会额外创建6个线程</h4><ul><li>Redis-server ： Redis的主线程，主要负责执行命令；</li><li>bio_close_file、bio_aof_fsync、bio_lazy_free：三个后台线程，分别异步处理关闭文件任务、AOF刷盘任务、释放内存任务；</li><li>io_thd_1、io_thd_2、io_thd_3：三个 I&#x2F;O 线程，io-threads 默认是 4 ，所以会启动 3（4-1）个 I&#x2F;O 多线程，用来分担 Redis 网络 I&#x2F;O 的压力。</li></ul><h3 id="Redis怎么实现的io多路复用"><a href="#Redis怎么实现的io多路复用" class="headerlink" title="Redis怎么实现的io多路复用"></a>Redis怎么实现的io多路复用</h3><ul><li>因为 Redis 是跑在「单线程」中的，所有的操作都是按照顺序线性执行的，但是由于读写操作等待用户输入 或 输出都是阻塞的，所以 I&#x2F;O 操作在一般情况下往往不能直接返回，这会导致某一文件的 I&#x2F;O 阻塞导，致整个进程无法对其它客户提供服务。而 I&#x2F;O 多路复用就是为了解决这个问题而出现的。为了让单线程(进程)的服务端应用同时处理多个客户端的事件，Redis 采用了 IO 多路复用机制。</li><li>这里“多路”指的是多个网络连接客户端，“复用”指的是复用同一个线程(单进程)。I&#x2F;O 多路复用其实是使用一个线程来检查多个 Socket 的就绪状态，在单个线程中通过记录跟踪每一个 socket（I&#x2F;O流）的状态来管理处理多个 I&#x2F;O 流。</li></ul><h2 id="Redis事务"><a href="#Redis事务" class="headerlink" title="Redis事务"></a>Redis事务</h2><h3 id="如何实现Redis原子性"><a href="#如何实现Redis原子性" class="headerlink" title="如何实现Redis原子性"></a>如何实现Redis原子性</h3><ul><li>redis 执行一条命令的时候是具备原子性的，因为 redis 执行命令的时候是单线程来处理的，不存在多线程安全的问题。</li><li>如果要保证 2 条命令的原子性的话，可以考虑用 lua 脚本，将多个操作写到一个 Lua 脚本中，Redis 会把整个 Lua 脚本作为一个整体执行，在执行的过程中不会被其他命令打断，从而保证了 Lua 脚本中操作的原子性。</li></ul><h3 id="除了lua有没有什么也能保证redis的原子性？"><a href="#除了lua有没有什么也能保证redis的原子性？" class="headerlink" title="除了lua有没有什么也能保证redis的原子性？"></a>除了lua有没有什么也能保证redis的原子性？</h3><ul><li><p>redis 事务也可以保证多个操作的原子性。</p></li><li><p>如果 redis 事务正常执行，没有发生任何错误，那么使用 MULTI 和 EXEC 配合使用，就可以保证多个操作都完成。</p></li><li><p>但是，如果事务执行发生错误了，就没办法保证原子性了。比如说 2 个操作，第一个操作执行成果了，但是第二个操作执行的时候，命令出错了，那事务并不会回滚，因为Redis 中并没有提供回滚机制。</p></li></ul><h2 id="Redis日志"><a href="#Redis日志" class="headerlink" title="Redis日志"></a>Redis日志</h2><h3 id="Redis有哪2种持久化方式？分别的优缺点是什么？"><a href="#Redis有哪2种持久化方式？分别的优缺点是什么？" class="headerlink" title="Redis有哪2种持久化方式？分别的优缺点是什么？"></a>Redis有哪2种持久化方式？分别的优缺点是什么？</h3><h4 id="AOF-日志"><a href="#AOF-日志" class="headerlink" title="AOF 日志"></a>AOF 日志</h4><ul><li>Redis 在执行完一条写操作命令后，就会把该命令以追加的方式写入到一个文件里，然后 Redis 重启时，会读取该文件记录的命令，然后逐一执行命令的方式来进行数据恢复。</li><li>Redis写回硬盘策略<ul><li>Always，这个单词的意思是「总是」，所以它的意思是每次写操作命令执行完后，同步将 AOF 日志数据写回硬盘；</li><li>Everysec，这个单词的意思是「每秒」，所以它的意思是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，然后每隔一秒将缓冲区里的内容写回到硬盘；</li><li>No，意味着不由 Redis 控制写回硬盘的时机，转交给操作系统控制写回的时机，也就是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，再由操作系统决定何时将缓冲区内容写回硬盘。</li></ul></li><li>优点：首先，AOF提供了更好的数据安全性，因为它默认每接收到一个写命令就会追加到文件末尾。即使Redis服务器宕机，也只会丢失最后一次写入前的数据。其次，AOF支持多种同步策略（如everysec、always等），可以根据需要调整数据安全性和性能之间的平衡。同时，AOF文件在Redis启动时可以通过重写机制优化，减少文件体积，加快恢复速度。并且，即使文件发生损坏，AOF还提供了redis-check-aof工具来修复损坏的文件。</li><li>缺点：因为记录了每一个写操作，所以AOF文件通常比RDB文件更大，消耗更多的磁盘空间。并且，频繁的磁盘IO操作（尤其是同步策略设置为always时）可能会对Redis的写入性能造成一定影响。而且，当问个文件体积过大时，AOF会进行重写操作，AOF如果没有开启AOF重写或者重写频率较低，恢复过程可能较慢，因为它需要重放所有的操作命令。</li></ul><h4 id="RDB-快照"><a href="#RDB-快照" class="headerlink" title="RDB 快照"></a>RDB 快照</h4><ul><li>因为 AOF 日志记录的是操作命令，不是实际的数据，所以用 AOF 方法做故障恢复时，需要全量把日志都执行一遍，一旦 AOF 日志非常多，势必会造成 Redis 的恢复操作缓慢。为了解决这个问题，Redis 增加了 RDB 快照。</li><li>Redis 提供了两个命令来生成 RDB 文件，分别是 save 和 bgsave，他们的区别就在于是否在「主线程」里执行：<ul><li>执行了 save 命令，就会在主线程生成 RDB 文件，由于和执行操作命令在同一个线程，所以如果写入 RDB 文件的时间太长，会阻塞主线程；</li><li>执行了 bgsave 命令，会创建一个子进程来生成 RDB 文件，这样可以避免主线程的阻塞；</li></ul></li><li>优点：RDB通过快照的形式保存某一时刻的数据状态，文件体积小，备份和恢复的速度非常快。并且，RDB是在主线程之外通过fork子进程来进行的，不会阻塞服务器处理命令请求，对Redis服务的性能影响较小。最后，由于是定期快照，RDB文件通常比AOF文件小得多。</li><li>缺点：RDB方式在两次快照之间，如果Redis服务器发生故障，这段时间的数据将会丢失。并且，如果在RDB创建快照到恢复期间有写操作，恢复后的数据可能与故障前的数据不完全一致</li></ul><h2 id="Redis缓存淘汰和过期删除"><a href="#Redis缓存淘汰和过期删除" class="headerlink" title="Redis缓存淘汰和过期删除"></a>Redis缓存淘汰和过期删除</h2><h3 id="过期删除策略和内存淘汰策略有什么区别？"><a href="#过期删除策略和内存淘汰策略有什么区别？" class="headerlink" title="过期删除策略和内存淘汰策略有什么区别？"></a>过期删除策略和内存淘汰策略有什么区别？</h3><ul><li>内存淘汰策略是在内存满了的时候，redis 会触发内存淘汰策略，来淘汰一些不必要的内存资源，以腾出空间，来保存新的内容</li><li>过期键删除策略是将已过期的键值对进行删除，Redis 采用的删除策略是惰性删除+定期删除。</li></ul><h3 id="介绍一下Redis-内存淘汰策略"><a href="#介绍一下Redis-内存淘汰策略" class="headerlink" title="介绍一下Redis 内存淘汰策略"></a>介绍一下Redis 内存淘汰策略</h3><ul><li>在32位系统中，Redis最大内存默认是3GB，因为32位系统最多只有4GB内存<table><thead><tr><th>策略</th><th>描述</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>noeviction</strong></td><td>不淘汰，写入报错</td><td>适合只读缓存</td></tr><tr><td><strong>volatile-lru</strong></td><td>在设置了过期时间的键中，按 LRU 淘汰</td><td>节约有限空间，保留常用键</td></tr><tr><td><strong>allkeys-lru</strong></td><td>所有键都参与 LRU 淘汰</td><td>通用场景</td></tr><tr><td><strong>volatile-lfu</strong></td><td>在有过期时间的键中，按访问频率最少淘汰</td><td>频率优先</td></tr><tr><td><strong>allkeys-lfu</strong></td><td>所有键按 LFU 淘汰</td><td>高频数据优先保留</td></tr><tr><td><strong>volatile-ttl</strong></td><td>按过期时间最短（TTL 最小）淘汰</td><td>有明确过期时间的临时数据</td></tr><tr><td><strong>volatile-random</strong></td><td>在有过期时间的键中随机淘汰</td><td>较少用</td></tr><tr><td><strong>allkeys-random</strong></td><td>所有键中随机淘汰</td><td>特殊场景测试</td></tr></tbody></table></li></ul><h3 id="介绍一下Redis过期删除策略"><a href="#介绍一下Redis过期删除策略" class="headerlink" title="介绍一下Redis过期删除策略"></a>介绍一下Redis过期删除策略</h3><h4 id="惰性删除"><a href="#惰性删除" class="headerlink" title="惰性删除"></a>惰性删除</h4><ul><li>Redis 的惰性删除策略由 db.c 文件中的 expireIfNeeded 函数实现，代码如下：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">expireIfNeeded</span><span class="hljs-params">(redisDb *db, robj *key)</span> &#123;<br>    <span class="hljs-comment">// 判断 key 是否过期</span><br>    <span class="hljs-keyword">if</span> (!keyIsExpired(db,key)) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    ....<br>    <span class="hljs-comment">/* 删除过期键 */</span><br>    ....<br>    <span class="hljs-comment">// 如果 server.lazyfree_lazy_expire 为 1 表示异步删除，反之同步删除；</span><br>    <span class="hljs-keyword">return</span> server.lazyfree_lazy_expire ? dbAsyncDelete(db,key) :<br>                                         dbSyncDelete(db,key);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>Redis 在访问或者修改 key 之前，都会调用 expireIfNeeded 函数对其进行检查，检查 key 是否过期：<ul><li>如果过期，则删除该 key，至于选择异步删除，还是选择同步删除，根据 lazyfree_lazy_expire 参数配置决定（Redis 4.0版本开始提供参数），然后返回 null 客户端；</li><li>如果没有过期，不做任何处理，然后返回正常的键值对给客户端；</li></ul></li></ul><h4 id="定期删除"><a href="#定期删除" class="headerlink" title="定期删除"></a>定期删除</h4><ul><li>Redis 的定期删除是每隔一段时间「随机」从数据库中取出一定数量的 key 进行检查，并删除其中的过期key。<ul><li>默认每10秒检查一次，随机抽取一定数量的key进行过期检查</li><li>随机抽查的数量默认是20</li></ul></li><li>过程：<ul><li>从过期字典中随机抽取 20 个 key；</li><li>检查这 20 个 key 是否过期，并删除已过期的 key；</li><li>如果本轮检查的已过期 key 的数量，超过 5 个（20&#x2F;4），也就是「已过期 key 的数量」占比「随机抽取 key 的数量」大于 25%，则继续重复步骤 1；如果已过期的 key 比例小于 25%，则停止继续删除过期 key，然后等待下一轮再检查。可以看到，定期删除是一个循环的流程。那 Redis 为了保证定期删除不会出现循环过度，导致线程卡死现象，为此增加了定期删除循环流程的时间上限，默认不会超过 25ms。</li></ul></li></ul><h2 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h2><h3 id="Redis主从同步中的增量和完全同步怎么实现？"><a href="#Redis主从同步中的增量和完全同步怎么实现？" class="headerlink" title="Redis主从同步中的增量和完全同步怎么实现？"></a>Redis主从同步中的增量和完全同步怎么实现？</h3><h4 id="完全同步"><a href="#完全同步" class="headerlink" title="完全同步"></a>完全同步</h4><ul><li>完全同步发生在以下几种情况：<ul><li>初次同步：当一个从服务器（slave）首次连接到主服务器（master）时，会进行一次完全同步。</li><li>从服务器数据丢失：如果从服务器数据由于某种原因（如断电）丢失，它会请求进行完全同步。</li><li>主服务器数据发生变化：如果从服务器长时间未与主服务器同步，导致数据差异太大，也可能触发完全同步。</li></ul></li><li>主从服务器间的第一次同步的过程可分为三个阶段：<ul><li>第一阶段是建立链接、协商同步；</li><li>第二阶段是主服务器同步数据给从服务器；</li><li>第三阶段是主服务器发送新写操作命令给从服务器。</li></ul></li><li>过程：<ul><li>从服务器发送SYNC命令：从服务器向主服务器发送SYNC命令，请求开始同步。</li><li>主服务器生成RDB快照：接收到SYNC命令后，主服务器会保存当前数据集的状态到一个临时文件，这个过程称为RDB（Redis Database）快照。</li><li>传输RDB文件：主服务器将生成的RDB文件发送给从服务器。</li><li>从服务器接收并应用RDB文件：从服务器接收RDB文件后，会清空当前的数据集，并载入RDB文件中的数据。</li><li>主服务器记录写命令：在RDB文件生成和传输期间，主服务器会记录所有接收到的写命令到replication backlog buffer。</li><li>传输写命令：一旦RDB文件传输完成，主服务器会将replication backlog buffer中的命令发送给从服务器，从服务器会执行这些命令，以保证数据的一致性。</li></ul></li></ul><h4 id="增量同步"><a href="#增量同步" class="headerlink" title="增量同步"></a>增量同步</h4><ul><li>量同步允许从服务器从断点处继续同步，而不是每次都进行完全同步。它基于PSYNC命令，使用了运行ID（run ID）和复制偏移量（offset）的概念。</li><li>过程：<ul><li>从节点请求恢复<ul><li>断线重连时，从节点向主节点发送 PSYNC {runid} {offset}</li><li>runid：主节点的运行 ID（上次全量同步时获得）</li><li>offset：从节点当前同步到的字节偏移量</li></ul></li><li>主节点检查条件<ul><li>比对 runid 是否一致（同一个主节点实例）</li><li>检查该 offset 是否仍在 复制积压缓冲区 </li><li>复制积压缓冲区是一个固定大小的环形缓冲区，保存主节点最近一段时间的写命令</li></ul></li><li>满足条件 → 部分重同步（Partial Resync）<ul><li>主节点将从 offset 之后的命令推送给从节点</li><li>从节点应用这些命令，状态追平主节点</li><li>同步完成后继续正常的命令传播阶段</li></ul></li><li>不满足条件 → 全量同步（Full Resync）<ul><li>如果 runid 不一致，或 offset 之前的数据已被环形缓冲区覆盖，就要重新执行 RDB 全量同步</li></ul></li></ul></li></ul><h3 id="redis主从和集群可以保证数据一致性吗-？"><a href="#redis主从和集群可以保证数据一致性吗-？" class="headerlink" title="redis主从和集群可以保证数据一致性吗 ？"></a>redis主从和集群可以保证数据一致性吗 ？</h3><ul><li>redis 主从和集群在CAP理论都属于AP模型，即在面临网络分区时选择保证可用性和分区容忍性，而牺牲了强一致性。这意味着在网络分区的情况下，Redis主从复制和集群可以继续提供服务并保持可用，但可能会出现部分节点之间的数据不一致。</li></ul><h3 id="哨兵机制原理是什么？"><a href="#哨兵机制原理是什么？" class="headerlink" title="哨兵机制原理是什么？"></a>哨兵机制原理是什么？</h3><ul><li>Redis 在 2.8 版本以后提供的哨兵（Sentinel）机制，它的作用是实现主从节点故障转移。它会监测主节点是否存活，如果发现主节点挂了，它就会选举一个从节点切换为主节点，并且把新主节点的相关信息通知给从节点和客户端。</li><li>哨兵其实是一个运行在特殊模式下的 Redis 进程，所以它也是一个节点。从“哨兵”这个名字也可以看得出来，它相当于是“观察者节点”，观察的对象是主从节点。</li><li>哨兵节点主要负责三件事情：监控、选主、通知。</li></ul><h3 id="哨兵机制的选主节点的算法介绍一下"><a href="#哨兵机制的选主节点的算法介绍一下" class="headerlink" title="哨兵机制的选主节点的算法介绍一下"></a>哨兵机制的选主节点的算法介绍一下</h3><ul><li>当redis集群的主节点故障时，Sentinel集群将从剩余的从节点中选举一个新的主节点，有以下步骤：</li></ul><h4 id="故障节点主观下线"><a href="#故障节点主观下线" class="headerlink" title="故障节点主观下线"></a>故障节点主观下线</h4><ul><li>Sentinel集群的每一个Sentinel节点会定时对redis集群的所有节点发心跳包检测节点是否正常。如果一个节点在down-after-milliseconds时间内没有回复Sentinel节点的心跳包，则该redis节点被该Sentinel节点主观下线。</li></ul><h4 id="故障节点客观下线"><a href="#故障节点客观下线" class="headerlink" title="故障节点客观下线"></a>故障节点客观下线</h4><ul><li>当节点被一个Sentinel节点记为主观下线时，并不意味着该节点肯定故障了，还需要Sentinel集群的其他Sentinel节点共同判断为主观下线才行。</li><li>该Sentinel节点会询问其他Sentinel节点，如果Sentinel集群中超过quorum数量的Sentinel节点认为该redis节点主观下线，则该redis客观下线。</li><li>quorum在设置主节点时设置</li><li>如果客观下线的redis节点是从节点或者是Sentinel节点，则操作到此为止，没有后续的操作了；如果客观下线的redis节点为主节点，则开始故障转移，从从节点中选举一个节点升级为主节点。</li></ul><h4 id="Sentinel集群选举Leader"><a href="#Sentinel集群选举Leader" class="headerlink" title="Sentinel集群选举Leader"></a>Sentinel集群选举Leader</h4><ul><li>每一个Sentinel节点都可以成为Leader，当一个Sentinel节点确认redis集群的主节点主观下线后，会请求其他Sentinel节点要求将自己选举为Leader。被请求的Sentinel节点如果没有同意过其他Sentinel节点的选举请求，则同意该请求(选举票数+1)，否则不同意。</li><li>如果一个Sentinel节点获得的选举票数达到Leader最低票数(quorum和Sentinel节点数&#x2F;2+1的最大值)，则该Sentinel节点选举为Leader；否则重新进行选举。</li></ul><h4 id="Sentinel-Leader决定新主节点"><a href="#Sentinel-Leader决定新主节点" class="headerlink" title="Sentinel Leader决定新主节点"></a>Sentinel Leader决定新主节点</h4><ul><li>过滤故障的节点</li><li>选择优先级slave-priority最大的从节点作为主节点，如不存在则继续</li><li>选择复制偏移量（数据写入量的字节，记录写了多少数据。主服务器会把偏移量同步给从服务器，当主从的偏移量一致，则数据是完全同步）最大的从节点作为主节点，如不存在则继续</li><li>选择runid（redis每次启动的时候生成随机的runid作为redis的标识）最小的从节点作为主节点</li></ul><h3 id="Redis集群的模式了解吗-优缺点了解吗"><a href="#Redis集群的模式了解吗-优缺点了解吗" class="headerlink" title="Redis集群的模式了解吗 优缺点了解吗"></a>Redis集群的模式了解吗 优缺点了解吗</h3><h4 id="Redis集群的模式"><a href="#Redis集群的模式" class="headerlink" title="Redis集群的模式"></a>Redis集群的模式</h4><ul><li><p>当 Redis 缓存数据量大到一台服务器无法缓存时，就需要使用 Redis 切片集群（Redis Cluster ）方案，它将数据分布在不同的服务器上，以此来降低系统对单主节点的依赖，从而提高 Redis 服务的读写性能。</p></li><li><p>Redis Cluster 方案采用哈希槽（Hash Slot），来处理数据和节点之间的映射关系。在 Redis Cluster 方案中，一个切片集群共有 16384 个哈希槽，这些哈希槽类似于数据分区，每个键值对都会根据它的 key，被映射到一个哈希槽中，具体执行过程分为两大步：</p><ul><li>根据键值对的 key，按照 CRC16 算法计算一个 16 bit 的值。</li><li>再用 16bit 值对 16384 取模，得到 0~16383 范围内的模数，每个模数代表一个相应编号的哈希槽。</li></ul></li><li><p>接下来的问题就是，这些哈希槽怎么被映射到具体的 Redis 节点上的呢？有两种方案：</p><ul><li>平均分配： 在使用 cluster create 命令创建 Redis 集群时，Redis 会自动把所有哈希槽平均分布到集群节点上。比如集群中有 9 个节点，则每个节点上槽的个数为 16384&#x2F;9 个。</li><li>手动分配： 可以使用 cluster meet 命令手动建立节点间的连接，组成集群，再使用 cluster addslots 命令，指定每个节点上的哈希槽个数。</li></ul></li></ul><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>高可用性：Redis集群最主要的优点是提供了高可用性，节点之间采用主从复制机制，可以保证数据的持久性和容错能力，哪怕其中一个节点挂掉，整个集群还可以继续工作。</li><li>高性能：Redis集群采用分片技术，将数据分散到多个节点，从而提高读写性能。当业务访问量大到单机Redis无法满足时，可以通过添加节点来增加集群的吞吐量。</li><li>扩展性好：Redis集群的扩展性非常好，可以根据实际需求动态增加或减少节点，从而实现可扩展性。集群模式中的某些节点还可以作为代理节点，自动转发请求，增加数据模式的灵活度和可定制性。</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li><strong>部署和维护较复杂：</strong>Redis集群的部署和维护需要考虑到分片规则、节点的布置、主从配置以及故障处理等多个方面，需要较强的技术支持，增加了节点异常处理的复杂性和成本。</li><li><strong>集群同步问题：</strong>当某些节点失败或者网络出故障，集群中数据同步的问题也会出现。数据同步的复杂度和工作量随着节点的增加而增加，同步时间也较长，导致一定的读写延迟。</li><li><strong>数据分片限制：</strong>Redis集群的数据分片也限制了一些功能的实现，如在一个key上修改多次，可能会因为该key所在的节点位置变化而失败。此外，由于将数据分散存储到各个节点，某些操作不能跨节点实现，不同节点之间的一些操作需要额外注意。</li></ul><h3 id="为什么redis比mysql要快？"><a href="#为什么redis比mysql要快？" class="headerlink" title="为什么redis比mysql要快？"></a>为什么redis比mysql要快？</h3><ul><li>内存存储：Redis 是基于内存存储的 NoSQL 数据库，而 MySQL 是基于磁盘存储的关系型数据库。由于内存存储速度快，Redis 能够更快地读取和写入数据，而无需像 MySQL 那样频繁进行磁盘 I&#x2F;O 操作。</li><li>简单数据结构：Redis 是基于键值对存储数据的，支持简单的数据结构（字符串、哈希、列表、集合、有序集合）。相比之下，MySQL 需要定义表结构、索引等复杂的关系型数据结构，因此在某些场景下 Redis 的数据操作更为简单高效，比如 Redis 用哈希表查询， 只需要O1 时间复杂度，而MySQL引擎的底层实现是B+Tree，时间复杂度是O(logn)</li><li>线程模型：Redis 采用单线程模型可以避免了多线程之间的竞争，省去了多线程切换带来的时间和性能上的开销，而且也不会导致死锁问题。</li></ul><h3 id="本地缓存VS-Redis"><a href="#本地缓存VS-Redis" class="headerlink" title="本地缓存VS.Redis"></a>本地缓存VS.Redis</h3><table><thead><tr><th>对比项</th><th>本地缓存（In‑Memory Cache）</th><th>Redis缓存（分布式缓存）</th></tr></thead><tbody><tr><td><strong>存储位置</strong></td><td>应用进程所在服务器的内存</td><td>独立的Redis服务（内存型数据库），可在本机或远程</td></tr><tr><td><strong>访问速度</strong></td><td><strong>极快</strong>（内存直接读写，纳秒&#x2F;微秒级）</td><td>很快，但需网络请求（微秒到毫秒级）</td></tr><tr><td><strong>部署与维护</strong></td><td>简单，无需额外服务</td><td>需要安装和维护Redis服务</td></tr><tr><td><strong>数据共享</strong></td><td><strong>无法跨进程&#x2F;跨服务器共享</strong></td><td>天生支持分布式，多实例间共享数据</td></tr><tr><td><strong>容量限制</strong></td><td>受单机内存限制</td><td>可扩展，通过分片、集群方式扩容</td></tr><tr><td><strong>一致性</strong></td><td>多节点时数据一致性差（每台机器缓存不一样）</td><td>数据集中管理，一致性更好</td></tr><tr><td><strong>常见场景</strong></td><td>高频访问的小量数据、本机计算结果缓存</td><td>跨服务共享数据、大规模缓存、消息队列、分布式锁等</td></tr></tbody></table><h3 id="Redis除了缓存，还有哪些应用"><a href="#Redis除了缓存，还有哪些应用" class="headerlink" title="Redis除了缓存，还有哪些应用?"></a>Redis除了缓存，还有哪些应用?</h3><h4 id="Redis实现消息队列"><a href="#Redis实现消息队列" class="headerlink" title="Redis实现消息队列"></a>Redis实现消息队列</h4><ul><li><strong>使用Pub&#x2F;Sub模式：</strong>Redis的Pub&#x2F;Sub是一种基于发布&#x2F;订阅的消息模式，任何客户端都可以订阅一个或多个频道，发布者可以向特定频道发送消息，所有订阅该频道的客户端都会收到此消息。该方式实现起来比较简单，发布者和订阅者完全解耦，支持模式匹配订阅。但是这种方式不支持消息持久化，消息发布后若无订阅者在线则会被丢弃；不保证消息的顺序和可靠性传输。</li><li>使用List结构：使用List的方式通常是使用LPUSH命令将消息推入一个列表，消费者使用BLPOP或BRPOP阻塞地从列表中取出消息（先进先出FIFO）。这种方式可以实现简单的任务队列。这种方式可以结合Redis的过期时间特性实现消息的TTL；通过Redis事务可以保证操作的原子性。但是需要客户端自己实现消息确认、重试等机制，相比专门的消息队列系统功能较弱。</li></ul><h4 id="Redis实现分布式锁"><a href="#Redis实现分布式锁" class="headerlink" title="Redis实现分布式锁"></a>Redis实现分布式锁</h4><ul><li>set nx方式：Redis提供了几种方式来实现分布式锁，最常用的是基于SET命令的争抢锁机制。客户端可以使用SET resource_name lock_value NX PX milliseconds命令设置锁，其中NX表示只有当键不存在时才设置，PX指定锁的有效时间（毫秒）。如果设置成功，则认为客户端获得锁。客户端完成操作后，解锁的还需要先判断锁是不是自己，再进行删除，这里涉及到 2 个操作，为了保证这两个操作的原子性，可以用 lua 脚本来实现。</li><li><strong>RedLock算法：</strong>为了提高分布式锁的可靠性，Redis作者Antirez提出了RedLock算法，它基于多个独立的Redis实例来实现一个更安全的分布式锁。它的基本原理是客户端尝试在多数（大于半数）Redis实例上同时加锁，只有当在大多数实例上加锁成功时才认为获取锁成功。锁的超时时间应该远小于单个实例的超时时间，以避免死锁。该方式可以通过跨多个节点减少单点故障的影响，提高了锁的可用性和安全性。</li></ul><h3 id="Redis分布式锁的实现原理？什么场景下用到分布式锁？"><a href="#Redis分布式锁的实现原理？什么场景下用到分布式锁？" class="headerlink" title="Redis分布式锁的实现原理？什么场景下用到分布式锁？"></a>Redis分布式锁的实现原理？什么场景下用到分布式锁？</h3><ul><li>分布式锁是用于分布式环境下并发控制的一种机制，用于控制某个资源在同一时刻只能被一个应用所使用。如下图所示：<br><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.png" alt="Redis分布式锁"></li></ul><h4 id="加锁"><a href="#加锁" class="headerlink" title="加锁"></a>加锁</h4><ul><li><p>Redis 本身可以被多个客户端共享访问，正好就是一个共享存储系统，可以用来保存分布式锁，而且 Redis 的读写性能高，可以应对高并发的锁操作场景。Redis 的 SET 命令有个 NX 参数可以实现「key不存在才插入」，所以可以用它来实现分布式锁：</p><ul><li>如果 key 不存在，则显示插入成功，可以用来表示加锁成功；</li><li>如果 key 存在，则会显示插入失败，可以用来表示加锁失败。</li><li>基于 Redis 节点实现分布式锁时，对于加锁操作，我们需要满足三个条件。</li></ul></li><li><p>加锁包括了读取锁变量、检查锁变量值和设置锁变量值三个操作，但需要以原子操作的方式完成，所以，我们使用 SET 命令带上 NX 选项来实现加锁；</p></li><li><p>锁变量需要设置过期时间，以免客户端拿到锁后发生异常，导致锁一直无法释放，所以，我们在 SET 命令执行时加上 EX&#x2F;PX 选项，设置其过期时间；</p></li><li><p>锁变量的值需要能区分来自不同客户端的加锁操作，以免在释放锁时，出现误释放操作，所以，我们使用 SET 命令设置锁变量值时，每个客户端设置的值是一个唯一值，用于标识客户端；</p></li><li><p>满足这三个条件的分布式命令如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">SET</span> lock_key <span class="hljs-comment">unique_value NX PX 10000</span><br></code></pre></td></tr></table></figure></li><li><p>lock_key 就是 key 键；</p></li><li><p>unique_value 是客户端生成的唯一的标识，区分来自不同客户端的锁操作；</p></li><li><p>NX 代表只在 lock_key 不存在时，才对 lock_key 进行设置操作；</p></li><li><p>PX 10000 表示设置 lock_key 的过期时间为 10s，这是为了避免客户端发生异常而无法释放锁。</p></li></ul><h4 id="解锁"><a href="#解锁" class="headerlink" title="解锁"></a>解锁</h4><ul><li><p>解锁的过程就是将 lock_key 键删除（del lock_key），但不能乱删，要保证执行操作的客户端就是加锁的客户端。所以，解锁的时候，我们要先判断锁的 unique_value 是否为加锁客户端，是的话，才将 lock_key 键删除。</p></li><li><p>可以看到，解锁是有两个操作，这时就需要 Lua 脚本来保证解锁的原子性，因为 Redis 在执行 Lua 脚本时，可以以原子性的方式执行，保证了锁释放操作的原子性。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lua">// 释放锁时，先比较 unique_value 是否相等，避免锁的误释放<br><span class="hljs-keyword">if</span> redis.call(<span class="hljs-string">&quot;get&quot;</span>,KEYS[<span class="hljs-number">1</span>]) == ARGV[<span class="hljs-number">1</span>] <span class="hljs-keyword">then</span><br>  <span class="hljs-keyword">return</span> redis.call(<span class="hljs-string">&quot;del&quot;</span>,KEYS[<span class="hljs-number">1</span>])<br><span class="hljs-keyword">else</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure></li><li><p>这样一来，就通过使用 SET 命令和 Lua 脚本在 Redis 单节点上完成了分布式锁的加锁和解锁。</p></li></ul><h3 id="大Key问题的缺点？"><a href="#大Key问题的缺点？" class="headerlink" title="大Key问题的缺点？"></a>大Key问题的缺点？</h3><ul><li>内存占用过高。大Key占用过多的内存空间，可能导致可用内存不足，从而触发内存淘汰策略。在极端情况下，可能导致内存耗尽，Redis实例崩溃，影响系统的稳定性。</li><li>性能下降。大Key会占用大量内存空间，导致内存碎片增加，进而影响Redis的性能。对于大Key的操作，如读取、写入、删除等，都会消耗更多的CPU时间和内存资源，进一步降低系统性能。</li><li>阻塞其他操作。某些对大Key的操作可能会导致Redis实例阻塞。例如，使用DEL命令删除一个大Key时，可能会导致Redis实例在一段时间内无法响应其他客户端请求，从而影响系统的响应时间和吞吐量。</li><li>网络拥塞。每次获取大key产生的网络流量较大，可能造成机器或局域网的带宽被打满，同时波及其他服务。例如：一个大key占用空间是1MB，每秒访问1000次，就有1000MB的流量。</li><li>主从同步延迟。当Redis实例配置了主从同步时，大Key可能导致主从同步延迟。由于大Key占用较多内存，同步过程中需要传输大量数据，这会导致主从之间的网络传输延迟增加，进而影响数据一致性。</li><li>数据倾斜。在Redis集群模式中，某个数据分片的内存使用率远超其他数据分片，无法使数据分片的内存资源达到均衡。另外也可能造成Redis内存达到maxmemory参数定义的上限导致重要的key被逐出，甚至引发内存溢出。</li></ul><h3 id="如何解决大Key问题"><a href="#如何解决大Key问题" class="headerlink" title="如何解决大Key问题"></a>如何解决大Key问题</h3><h4 id="对大Key进行拆分存储"><a href="#对大Key进行拆分存储" class="headerlink" title="对大Key进行拆分存储"></a>对大Key进行拆分存储</h4><ul><li>例如将user:123:profile拆分成<code>user:123:basic</code>、<code>user:123:contact</code>等</li></ul><h4 id="分页存储"><a href="#分页存储" class="headerlink" title="分页存储"></a>分页存储</h4><ul><li>例如order:list 存了用户的所有订单，几百万条，一旦 LRANGE 就阻塞很久。</li><li>拆分成：<ul><li>order:list:1（第 1 页，存最近 100 条）</li><li>order:list:2（第 2 页）…</li></ul></li></ul><h4 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h4><ul><li>例如article:content:999 里存了一篇几十 KB ~ MB 的文章全文，每次访问都直接从 Redis 取全量，浪费流量和 CPU。</li><li>初次访问时，只缓存常用的前几段文字到 Redis，其余段落不立即缓存</li><li>用户滚动到需要的段落时，再去数据库加载，并单独缓存到 article:content:999:part:{n}</li><li>下次再访问该段落时，直接命中缓存</li></ul><h3 id="什么是热Key"><a href="#什么是热Key" class="headerlink" title="什么是热Key"></a>什么是热Key</h3><ul><li>在 Redis 里，热 Key（Hot Key） 指的是某个 Key 被频繁访问，访问量远超其他 Key。热 Key 常见于爆款商品详情、库存、计数器、排行榜、用户会话与配置开关。</li><li>带来的影响：<ul><li><p>CPU&#x2F;网络压力集中：单个 Key 高并发访问，占用大量 CPU 和网络带宽</p></li><li><p>缓存雪崩风险：热 Key 过期瞬间，海量请求直击数据库</p></li><li><p>延迟波动：其他正常请求受到影响，整体响应变慢</p></li><li><p>集群节点失衡：在分布式 Redis 中，热 Key 所在节点压力爆表</p></li></ul></li></ul><h3 id="解决热Key问题"><a href="#解决热Key问题" class="headerlink" title="解决热Key问题"></a>解决热Key问题</h3><h4 id="在Redis集群架构中对热Key进行复制"><a href="#在Redis集群架构中对热Key进行复制" class="headerlink" title="在Redis集群架构中对热Key进行复制"></a>在Redis集群架构中对热Key进行复制</h4><ul><li>假设 item_stock:1001 是热门商品库存 Key，可拆分成：<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">item_stock:</span><span class="hljs-number">1001</span>:<span class="hljs-number">0</span><br><span class="hljs-symbol">item_stock:</span><span class="hljs-number">1001</span>:<span class="hljs-number">1</span><br>...<br></code></pre></td></tr></table></figure></li><li>下单时随机访问一个分片 Key，并在应用层汇总库存。</li></ul><h4 id="使用本地缓存"><a href="#使用本地缓存" class="headerlink" title="使用本地缓存"></a>使用本地缓存</h4><ul><li>先在本地（应用服务器内存，例如 Guava Cache、Caffeine）缓存数据，减少 Redis 请求。</li><li>在分布式情况下需要保证一致性问题，多个服务实例需要保证看到同一个热key，京东开源的hotkey框架采用worker进行分布式计算统一识别，统一下发</li></ul><h4 id="使用读写分离架构"><a href="#使用读写分离架构" class="headerlink" title="使用读写分离架构"></a>使用读写分离架构</h4><ul><li><strong>如果热Key的产生来自于读请求，您可以将实例改造成读写分离架构来降低每个数据分片的读请求压力，甚至可以不断地增加从节点。</strong>但是读写分离架构在增加业务代码复杂度的同时，也会增加Redis集群架构复杂度。不仅要为多个从节点提供转发层（如Proxy，LVS等）来实现负载均衡，还要考虑从节点数量显著增加后带来故障率增加的问题。Redis集群架构变更会为监控、运维、故障处理带来了更大的挑战。</li></ul><h3 id="如何保证-redis-和-mysql-数据缓存一致性问题？"><a href="#如何保证-redis-和-mysql-数据缓存一致性问题？" class="headerlink" title="如何保证 redis 和 mysql 数据缓存一致性问题？"></a>如何保证 redis 和 mysql 数据缓存一致性问题？</h3><h4 id="不一致场景"><a href="#不一致场景" class="headerlink" title="不一致场景"></a>不一致场景</h4><ul><li>先修改数据库，在删除缓存，更新数据库成功，但删除缓存失败</li><li>先删除缓存，再更新数据库，如果删除缓存成功，未来得及更新数据库，此时用户再来一次请求，此时缓存会从数据库中取出旧值</li></ul><h4 id="双写事务"><a href="#双写事务" class="headerlink" title="双写事务"></a>双写事务</h4><ul><li>利用数据库事务和Redis事务放在同一个事务进行处理</li><li>优点是简单，缺点是无法保证完全一致性，适合小型系统简单读写，不适合高并发</li></ul><h4 id="延迟双删"><a href="#延迟双删" class="headerlink" title="延迟双删"></a>延迟双删</h4><ul><li>数据库完成更新时，马上删除Redis缓存，延迟一段时间，再删一次</li><li>优点实现简单，缺点是延迟时间无法控制，可能会发生覆盖的风险</li></ul><h4 id="订阅更新机制"><a href="#订阅更新机制" class="headerlink" title="订阅更新机制"></a>订阅更新机制</h4><ul><li>使用消息队列，数据库更新后向消息队列发送消息，Redis订阅这个消息队列更新缓存</li><li>优点是同步效果非常好，缺点是复杂性增加，需要维护消息队列</li></ul><h4 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h4><ul><li>把写操作全部操作数据库，再通过一个异步线程，更新Redis一致性</li><li>优点是缓存压力降低很多，适合大流量系统，缺点是项目开发复杂，要做好异步逻辑</li></ul><h4 id="Cannal订阅Binlog同步Redis"><a href="#Cannal订阅Binlog同步Redis" class="headerlink" title="Cannal订阅Binlog同步Redis"></a>Cannal订阅Binlog同步Redis</h4><ul><li>修改数据库时，数据库操作会写入bin log，使用Canal中间件订阅binlog变化，监听到变化后将更新的数据同步给redis</li></ul><h3 id="缓存雪崩、缓存击穿、缓存穿透"><a href="#缓存雪崩、缓存击穿、缓存穿透" class="headerlink" title="缓存雪崩、缓存击穿、缓存穿透"></a>缓存雪崩、缓存击穿、缓存穿透</h3><h4 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h4><ul><li>当大量缓存数据在同一时间过期（失效）或者 Redis 故障宕机时，如果此时有大量的用户请求，都无法在 Redis 中处理，于是全部请求都直接访问数据库</li><li>解决方案：<ul><li>避免给大量数据设置同一过期时间，使用随机数</li><li>互斥锁：当业务线程在处理用户请求时，如果发现访问的数据不在 Redis 里，就加个互斥锁，保证同一时间内只有一个请求来构建缓存。未获取锁的请求则等待锁释放或返回默认值或者空值</li><li>后台更新缓存：业务线程不再负责更新缓存，缓存也不设置有效期，而是让缓存“永久有效”，并将更新缓存的工作交由后台线程定时更新。</li></ul></li></ul><h4 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h4><ul><li>如果缓存中的某个热点数据过期了，此时大量的请求访问了该热点数据，就无法从缓存中读取，直接访问数据库，数据库很容易就被高并发的请求冲垮</li><li>解决方案：<ul><li>互斥锁方案，保证同一时间只有一个业务线程更新缓存，未能获取互斥锁的请求，要么等待锁释放后重新读取缓存，要么就返回空值或者默认值。</li><li>不给热点数据设置过期时间，由后台异步更新缓存，或者在热点数据准备要过期前，提前通知后台线程更新缓存以及重新设置过期时间；</li></ul></li></ul><h4 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h4><ul><li>当用户访问的数据，既不在缓存中，也不在数据库中，导致请求在访问缓存时，发现缓存缺失，再去访问数据库时，发现数据库中也没有要访问的数据，没办法构建缓存数据，来服务后续的请求。那么当有大量这样的请求到来时，数据库的压力骤增，这就是缓存穿透的问题。</li><li>解决方案：<ul><li>非法请求的限制：当有大量恶意请求访问不存在的数据的时候，也会发生缓存穿透，因此在 API 入口处我们要判断求请求参数是否合理，请求参数是否含有非法值、请求字段是否存在，如果判断出是恶意请求就直接返回错误，避免进一步访问缓存和数据库。</li><li>缓存空值或者默认值：当我们线上业务发现缓存穿透的现象时，可以针对查询的数据，在缓存中设置一个空值或者默认值，这样后续请求就可以从缓存中读取到空值或者默认值，返回给应用，而不会继续查询数据库。</li><li>布隆过滤器：我们可以在写入数据库数据时，使用布隆过滤器做个标记，然后在用户请求到来时，业务线程确认缓存失效后，可以通过查询布隆过滤器快速判断数据是否存在，如果不存在，就不用通过查询数据库来判断数据是否存在。即使发生了缓存穿透，大量请求只会查询 Redis 和布隆过滤器，而不会查询数据库，保证了数据库能正常运行，Redis 自身也是支持布隆过滤器的。</li></ul></li></ul><h3 id="布隆过滤器原理介绍一下"><a href="#布隆过滤器原理介绍一下" class="headerlink" title="布隆过滤器原理介绍一下"></a>布隆过滤器原理介绍一下</h3><ul><li>布隆过滤器由「初始值都为 0 的位图数组」和「 N 个哈希函数」两部分组成。当我们在写入数据库数据时，在布隆过滤器里做个标记，这样下次查询数据是否在数据库时，只需要查询布隆过滤器，如果查询到数据没有被标记，说明不在数据库中。</li><li>布隆过滤器会通过 3 个操作完成标记：<ul><li>第一步，使用 N 个哈希函数分别对数据做哈希计算，得到 N 个哈希值；</li><li>第二步，将第一步得到的 N 个哈希值对位图数组的长度取模，得到每个哈希值在位图数组的对应位置。</li><li>第三步，将每个哈希值在位图数组的对应位置的值设置为 1；</li></ul></li><li>举个例子，假设有一个位图数组长度为 8，哈希函数 3 个的布隆过滤器。</li><li>在数据库写入数据 x 后，把数据 x 标记在布隆过滤器时，数据 x 会被 3 个哈希函数分别计算出 3 个哈希值，然后在对这 3 个哈希值对 8 取模，假设取模的结果为 1、4、6，然后把位图数组的第 1、4、6 位置的值设置为 1。当应用要查询数据 x 是否数据库时，通过布隆过滤器只要查到位图数组的第 1、4、6 位置的值是否全为 1，只要有一个为 0，就认为数据 x 不在数据库中。</li><li>布隆过滤器由于是基于哈希函数实现查找的，高效查找的同时存在哈希冲突的可能性，比如数据 x 和数据 y 可能都落在第 1、4、6 位置，而事实上，可能数据库中并不存在数据 y，存在误判的情况。</li><li>所以，查询布隆过滤器说数据存在，并不一定证明数据库中存在这个数据，但是查询到数据不存在，数据库中一定就不存在这个数据。</li></ul><h3 id="如何设计秒杀场景处理高并发以及超卖现象？"><a href="#如何设计秒杀场景处理高并发以及超卖现象？" class="headerlink" title="如何设计秒杀场景处理高并发以及超卖现象？"></a>如何设计秒杀场景处理高并发以及超卖现象？</h3><h4 id="使用数据库悲观锁"><a href="#使用数据库悲观锁" class="headerlink" title="使用数据库悲观锁"></a>使用数据库悲观锁</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">BEGIN</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> goods <span class="hljs-keyword">WHERE</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">FOR</span> <span class="hljs-keyword">UPDATE</span>;  <span class="hljs-comment">-- 阶段1：锁行</span><br><span class="hljs-keyword">UPDATE</span> goods <span class="hljs-keyword">SET</span> stock <span class="hljs-operator">=</span> stock <span class="hljs-operator">-</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">WHERE</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">AND</span> stock <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;                <span class="hljs-comment">-- 阶段2：更新</span><br><span class="hljs-keyword">COMMIT</span>;                                            <span class="hljs-comment">-- 释放锁</span><br></code></pre></td></tr></table></figure><ul><li>先对商品行加锁，再进行库存更新</li><li>悲观锁方案在高并发下会串行化对同一行的操作，安全但吞吐量会急剧下降。</li></ul><h4 id="使用数据库乐观锁"><a href="#使用数据库乐观锁" class="headerlink" title="使用数据库乐观锁"></a>使用数据库乐观锁</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> goods<br><span class="hljs-keyword">SET</span> stock <span class="hljs-operator">=</span> stock <span class="hljs-operator">-</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">WHERE</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">AND</span> stock <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><ul><li>这样让数据库自己做并发控制，受影响行数&#x3D;0时再提示库存不足，可大幅减少阻塞。</li></ul><h4 id="使用分布式锁"><a href="#使用分布式锁" class="headerlink" title="使用分布式锁"></a>使用分布式锁</h4><ul><li>同一个锁key，同一时间只能有一个客户端拿到锁，其他客户端会陷入无限的等待来尝试获取那个锁，只有获取到锁的客户端才能执行下面的业务逻辑。</li><li>这种方案的缺点是同一个商品在多用户同时下单的情况下，会基于分布式锁串行化处理，导致没法同时处理同一个商品的大量下单的请求。</li></ul><h4 id="利用分段式锁-分段缓存"><a href="#利用分段式锁-分段缓存" class="headerlink" title="利用分段式锁+分段缓存"></a>利用分段式锁+分段缓存</h4><ul><li><p>把数据分成很多个段，每个段是一个单独的锁，所以多个线程过来并发修改数据的时候，可以并发的修改不同段的数据</p></li><li><p>假设场景：假如你现在商品有100个库存，在redis存放5个库存key，形如:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">key1</span>=goods-<span class="hljs-number">01</span>,value=<span class="hljs-number">20</span><span class="hljs-comment">;</span><br><span class="hljs-attr">key2</span>=goods-<span class="hljs-number">02</span>,value=<span class="hljs-number">20</span><span class="hljs-comment">;</span><br><span class="hljs-attr">key3</span>=goods-<span class="hljs-number">03</span>，value=<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure></li><li><p>用户下单时对用户id进行%5计算，看落在哪个redis的key上，就去取哪个，这样每次就能够处理5个进程请求；或者使用轮询的方式</p></li><li><p>这种方案可以解决同一个商品在多用户同时下单的情况，但有个坑需要解决：当某段锁的库存不足，一定要实现自动释放锁然后换下一个分段库存再次尝试加锁处理，此种方案复杂比较高。</p></li></ul><h4 id="利用redis的incr、decr的原子性-异步队列"><a href="#利用redis的incr、decr的原子性-异步队列" class="headerlink" title="利用redis的incr、decr的原子性 + 异步队列"></a>利用redis的incr、decr的原子性 + 异步队列</h4><ul><li>在系统初始化时，将商品的库存数量加载到redis缓存中</li><li>接收到秒杀请求时，在redis中使用lua脚本进行预减库存（利用redis decr的原子性），当redis中的库存不足时，直接返回秒杀失败，否则继续进行第3步；</li><li>将请求放入异步队列中，返回正在排队中；</li><li>服务端异步队列将请求出队（哪些请求可以出队，可以根据业务来判定，比如：判断对应用户是否已经秒杀过对应商品，防止重复秒杀），出队成功的请求可以生成秒杀订单，减少数据库库存（在扣减库存的sql如下，返回秒杀订单详情）<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> goods <span class="hljs-keyword">set</span> stock <span class="hljs-operator">=</span> stock <span class="hljs-operator">-</span> <span class="hljs-number">1</span> <span class="hljs-keyword">where</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">and</span> stock <span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li>用户在客户端申请秒杀请求后，进行轮询，查看是否秒杀成功，秒杀成功则进入秒杀订单详情，否则秒杀失败</li><li>缺点：由于是通过异步队列写入数据库中，可能存在数据不一致，其次引用多个组件复杂度比较高</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>数据库相关知识</title>
    <link href="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/"/>
    <url>/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="数据库相关知识"><a href="#数据库相关知识" class="headerlink" title="数据库相关知识"></a>数据库相关知识</h1><h2 id="SQL基础"><a href="#SQL基础" class="headerlink" title="SQL基础"></a>SQL基础</h2><h3 id="NOSQL和SQL的区别"><a href="#NOSQL和SQL的区别" class="headerlink" title="NOSQL和SQL的区别"></a>NOSQL和SQL的区别</h3><h4 id="ACID和BASE"><a href="#ACID和BASE" class="headerlink" title="ACID和BASE"></a>ACID和BASE</h4><ul><li>ACID 即原子性，一致性，隔离性和持续性。</li><li>BASE 即基本可用，软状态和最终一致性。</li><li>从实用的角度出发，我们需要考虑对于面对的应用场景，ACID 是否是必须的。比如银行应用就必须保证 ACID，否则一笔钱可能被使用两次；又比如社交软件不必保证 ACID，因为一条状态的更新对于所有用户读取先后时间有数秒不同并不影响使用。</li></ul><h4 id="扩展性"><a href="#扩展性" class="headerlink" title="扩展性"></a>扩展性</h4><ul><li>NoSQL数据之间无关系，这样就非常容易扩展，也无形之间，在架构的层面上带来了可扩展的能力。比如 redis 自带主从复制模式、哨兵模式、切片集群模式。</li><li>相反关系型数据库的数据之间存在关联性，水平扩展较难 ，需要解决跨服务器 JOIN，分布式事务等问题。</li></ul><h3 id="三大范式"><a href="#三大范式" class="headerlink" title="三大范式"></a>三大范式</h3><ul><li>1NF：要求数据库表的每一列都是不可分割的原子数据项。</li><li>2NF：在1NF的基础上，非码属性必须完全依赖于候选码（在1NF基础上消除非主属性对主码的部分函数依赖）<ul><li>需要确保数据库表中的每一列都和主键相关，而不能只与主键的某一部分相关（主要针对联合主键而言）。</li></ul></li><li>3NF：在2NF基础上，任何非主属性 (opens new window)不依赖于其它非主属性（在2NF基础上消除传递依赖）<ul><li>第三范式需要确保数据表中的每一列数据都和主键直接相关，而不能间接相关。</li></ul></li></ul><h3 id="MySQL连表查询"><a href="#MySQL连表查询" class="headerlink" title="MySQL连表查询"></a>MySQL连表查询</h3><h4 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h4><ul><li>返回两个表中有匹配关系的行</li></ul><h4 id="左外连接"><a href="#左外连接" class="headerlink" title="左外连接"></a>左外连接</h4><ul><li>左外连接返回左表中的所有行，即使在右表中没有匹配的行。未匹配的右表列会包含NULL。</li></ul><h4 id="右外连接"><a href="#右外连接" class="headerlink" title="右外连接"></a>右外连接</h4><ul><li>右外连接返回右表中的所有行，即使左表中没有匹配的行。未匹配的左表列会包含NULL。</li></ul><h4 id="全外连接（MySQL不支持）"><a href="#全外连接（MySQL不支持）" class="headerlink" title="全外连接（MySQL不支持）"></a>全外连接（MySQL不支持）</h4><ul><li>全外连接返回两个表中所有行，包括非匹配行，在MySQL中，FULL JOIN 需要使用左外连接 UNION 右外连接来实现，因为 MySQL 不直接支持 FULL JOIN。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">SELECT</span> c.id, c.name, o.product<br><span class="hljs-keyword">FROM</span> customers c<br><span class="hljs-keyword">LEFT</span> <span class="hljs-keyword">JOIN</span> orders o <span class="hljs-keyword">ON</span> c.id <span class="hljs-operator">=</span> o.customer_id<br><span class="hljs-keyword">UNION</span><br><span class="hljs-keyword">SELECT</span> c.id, c.name, o.product<br><span class="hljs-keyword">FROM</span> customers c<br><span class="hljs-keyword">RIGHT</span> <span class="hljs-keyword">JOIN</span> orders o <span class="hljs-keyword">ON</span> c.id <span class="hljs-operator">=</span> o.customer_id;<br></code></pre></td></tr></table></figure></li></ul><h3 id="MySQL如何避免插入重复数据"><a href="#MySQL如何避免插入重复数据" class="headerlink" title="MySQL如何避免插入重复数据"></a>MySQL如何避免插入重复数据</h3><h4 id="使用UNIQUE约束"><a href="#使用UNIQUE约束" class="headerlink" title="使用UNIQUE约束"></a>使用UNIQUE约束</h4><ul><li>在表的相关列上添加UNIQUE约束，确保每个值在该列中唯一。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> users (<br>    id <span class="hljs-type">INT</span> <span class="hljs-keyword">PRIMARY</span> KEY AUTO_INCREMENT,<br>    email <span class="hljs-type">VARCHAR</span>(<span class="hljs-number">255</span>) <span class="hljs-keyword">UNIQUE</span>,<br>);<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用INSERT-…-ON-DUPLICATE-KEY-UPDATE"><a href="#使用INSERT-…-ON-DUPLICATE-KEY-UPDATE" class="headerlink" title="使用INSERT … ON DUPLICATE KEY UPDATE"></a>使用INSERT … ON DUPLICATE KEY UPDATE</h4><ul><li>这种语句允许在插入记录时处理重复键的情况。如果插入的记录与现有记录冲突，可以选择更新现有记录：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> users (email, name) <br><span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;example@example.com&#x27;</span>, <span class="hljs-string">&#x27;John Doe&#x27;</span>)<br><span class="hljs-keyword">ON</span> DUPLICATE KEY <span class="hljs-keyword">UPDATE</span> name <span class="hljs-operator">=</span> <span class="hljs-keyword">VALUES</span>(name);<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用INSERT-IGNORE"><a href="#使用INSERT-IGNORE" class="headerlink" title="使用INSERT IGNORE"></a>使用INSERT IGNORE</h4><ul><li>该语句会在插入记录时忽略那些因重复键而导致的插入错误。<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> IGNORE <span class="hljs-keyword">INTO</span> users (email, name) <br><span class="hljs-keyword">VALUES</span> (<span class="hljs-string">&#x27;example@example.com&#x27;</span>, <span class="hljs-string">&#x27;John Doe&#x27;</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="CHAR-和-VARCHAR有什么区别"><a href="#CHAR-和-VARCHAR有什么区别" class="headerlink" title="CHAR 和 VARCHAR有什么区别"></a>CHAR 和 VARCHAR有什么区别</h3><ul><li>CHAR固定长度，定义时需要指定长度，存储时会在末尾补足空格</li><li>VARCHAR可变长第，定义时需要指定最大长度</li></ul><h3 id="INT-1-和INT-10-区别"><a href="#INT-1-和INT-10-区别" class="headerlink" title="INT(1)和INT(10)区别"></a>INT(1)和INT(10)区别</h3><ul><li>区别为显示宽度，常与ZEROFILL配合使用，比如，字段类型为 INT(4) ZEROFILL，实际存入 5 → 显示为 0005，实际存入 12345 → 显示仍为 12345（宽度超限时不截断）。</li></ul><h3 id="说一下外键约束"><a href="#说一下外键约束" class="headerlink" title="说一下外键约束"></a>说一下外键约束</h3><ul><li>外键约束的作用是维护表与表之间的关系，确保数据的完整性和一致性。若A表中有一个B表的外键，则保证了A表中的每一个B字段都存在于B表中，从而维护了数据的完整性和一致性。</li></ul><h3 id="MySQL的关键字in和exist"><a href="#MySQL的关键字in和exist" class="headerlink" title="MySQL的关键字in和exist"></a>MySQL的关键字in和exist</h3><ul><li>IN：用于检查左边的表达式是否存在于右边的列表或子查询的结果集中。如果存在，则IN 返回TRUE，否则返回FALSE。</li><li>EXIST：用于判断子查询是否至少能返回一行数据。它不关心子查询返回什么数据，只关心是否有结果。如果子查询有结果，则EXISTS 返回TRUE，否则返回FALSE。</li><li>在很多情况下，EXISTS 的性能优于 IN，特别是当子查询的表很大时。这是因为EXISTS 一旦找到匹配项就会立即停止查询，而IN可能会扫描整个子查询结果集。</li><li>IN 能够正确处理子查询中包含NULL值的情况，而EXISTS 不受子查询结果中NULL值的影响，因为它关注的是行的存在性，而不是具体值。</li></ul><h3 id="MySQL中的一些函数"><a href="#MySQL中的一些函数" class="headerlink" title="MySQL中的一些函数"></a>MySQL中的一些函数</h3><h4 id="字符串函数"><a href="#字符串函数" class="headerlink" title="字符串函数"></a>字符串函数</h4><ul><li>CONCAT(str1, str2, …)：连接多个字符串，返回一个合并后的字符串。</li><li>LENGTH(str)：返回字符串的长度（字符数）。</li><li>SUBSTRING(str, pos, len)：从指定位置开始，截取指定长度的子字符串。</li><li>REPLACE(str, from_str, to_str)：将字符串中的某部分替换为另一个字符串。</li></ul><h4 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h4><ul><li>ABS(num)：返回数字的绝对值。</li><li>POWER(num, exponent)：返回指定数字的指定幂次方。</li></ul><h4 id="日期和时间函数"><a href="#日期和时间函数" class="headerlink" title="日期和时间函数"></a>日期和时间函数</h4><ul><li>NOW()：返回当前日期和时间。</li><li>CURDATE()：返回当前日期。</li></ul><h4 id="聚合函数"><a href="#聚合函数" class="headerlink" title="聚合函数"></a>聚合函数</h4><ul><li>COUNT(column)：计算指定列中的非NULL值的个数。</li><li>SUM(column)：计算指定列的总和。</li><li>AVG(column)：计算指定列的平均值。</li><li>MAX(column)：返回指定列的最大值。</li><li>MIN(column)：返回指定列的最小值。</li></ul><h2 id="存储引擎"><a href="#存储引擎" class="headerlink" title="存储引擎"></a>存储引擎</h2><h3 id="执行一条SQL请求的过程是什么？"><a href="#执行一条SQL请求的过程是什么？" class="headerlink" title="执行一条SQL请求的过程是什么？"></a>执行一条SQL请求的过程是什么？</h3><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs">客户端 → 连接器 → 查询缓存 → 分析器 → 优化器 → 执行器 → 存储引擎 → 返回结果<br></code></pre></td></tr></table></figure><h4 id="连接器"><a href="#连接器" class="headerlink" title="连接器"></a>连接器</h4><ul><li>建立客户端与 MySQL 服务器的 TCP 连接，并进行身份认证和权限验证。</li></ul><h4 id="查询缓存"><a href="#查询缓存" class="headerlink" title="查询缓存"></a>查询缓存</h4><ul><li>MySQL 8.0 已移除该功能，但在旧版本中存在。</li><li>如果缓存中有完全相同的 SQL 结果，直接返回，跳过后续步骤。</li></ul><h4 id="分析器"><a href="#分析器" class="headerlink" title="分析器"></a>分析器</h4><ul><li>词法分析：识别 SQL 中的关键字、表名、列名等。</li><li>语法分析：检查 SQL 是否符合语法规则，不合法会直接报错。</li><li>语义检查：确认表、列是否存在，数据类型是否匹配。</li></ul><h4 id="优化器"><a href="#优化器" class="headerlink" title="优化器"></a>优化器</h4><ul><li>决定执行计划：选择使用哪个索引、表的连接顺序等。</li><li>目标是成本最小化（I&#x2F;O + CPU）。</li></ul><h4 id="执行器"><a href="#执行器" class="headerlink" title="执行器"></a>执行器</h4><ul><li>检查执行权限（SELECT、UPDATE 等）。</li><li>调用存储引擎 API（如 InnoDB、MyISAM）去读取或写入数据。</li><li>对于写操作，会记录到 binlog（归档日志）和 redo log（事务日志）。</li></ul><h3 id="讲一讲MySQL的引擎"><a href="#讲一讲MySQL的引擎" class="headerlink" title="讲一讲MySQL的引擎"></a>讲一讲MySQL的引擎</h3><ul><li>InnoDB：InnoDB是MySQL的默认存储引擎，具有ACID事务支持、行级锁、外键约束等特性。它适用于高并发的读写操作，支持较好的数据完整性和并发控制。</li><li>MyISAM：MyISAM是MySQL的另一种常见的存储引擎，具有较低的存储空间和内存消耗，适用于大量读操作的场景。然而，MyISAM不支持事务、行级锁和外键约束，因此在并发写入和数据完整性方面有一定的限制。</li><li>Memory：Memory引擎将数据存储在内存中，适用于对性能要求较高的读操作，但是在服务器重启或崩溃时数据会丢失。它不支持事务、行级锁和外键约束。</li></ul><h3 id="MySQL为什么InnoDB是默认引擎"><a href="#MySQL为什么InnoDB是默认引擎" class="headerlink" title="MySQL为什么InnoDB是默认引擎"></a>MySQL为什么InnoDB是默认引擎</h3><ul><li>事务支持：InnoDB引擎提供了对事务的支持，可以进行ACID（原子性、一致性、隔离性、持久性）属性的操作。Myisam存储引擎是不支持事务的。</li><li>并发性能：InnoDB引擎采用了行级锁定的机制，可以提供更好的并发性能，Myisam存储引擎只支持表锁，锁的粒度比较大。</li><li>崩溃恢复：InnoDB引引擎通过 redolog 日志实现了崩溃恢复，可以在数据库发生异常情况（如断电）时，通过日志文件进行恢复，保证数据的持久性和一致性。Myisam是不支持崩溃恢复的。</li></ul><h3 id="说一下MySQL的innodb与MyISAM的区别"><a href="#说一下MySQL的innodb与MyISAM的区别" class="headerlink" title="说一下MySQL的innodb与MyISAM的区别"></a>说一下MySQL的innodb与MyISAM的区别</h3><ul><li>事务：InnoDB 支持事务，MyISAM 不支持事务，这是 MySQL 将默认存储引擎从 MyISAM 变成 InnoDB 的重要原因之一。</li><li>索引结构：InnoDB 是聚簇索引，MyISAM 是非聚簇索引。聚簇索引的文件存放在主键索引的叶子节点上，因此 InnoDB 必须要有主键，通过主键索引效率很高。但是辅助索引需要两次查询，先查询到主键，然后再通过主键查询到数据。因此，主键不应该过大，因为主键太大，其他索引也都会很大。而 MyISAM 是非聚簇索引，数据文件是分离的，索引保存的是数据文件的指针。主键索引和辅助索引是独立的。</li><li>锁粒度：InnoDB 最小的锁粒度是行锁，MyISAM 最小的锁粒度是表锁。一个更新语句会锁住整张表，导致其他查询和更新都会被阻塞，因此并发访问受限。</li><li>count 的效率：InnoDB 不保存表的具体行数，执行 select count(*) from table 时需要全表扫描。而MyISAM 用一个变量保存了整个表的行数，执行上述语句时只需要读出该变量即可，速度很快。</li></ul><h2 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h2><h3 id="索引分类"><a href="#索引分类" class="headerlink" title="索引分类"></a>索引分类</h3><h4 id="所有分类"><a href="#所有分类" class="headerlink" title="所有分类"></a>所有分类</h4><ul><li>按「数据结构」分类：B+tree索引、Hash索引、Full-text索引。</li><li>按「物理存储」分类：聚簇索引（主键索引）、二级索引（辅助索引）。</li><li>按「字段特性」分类：主键索引、唯一索引、普通索引、前缀索引。</li><li>按「字段个数」分类：单列索引、联合索引。</li></ul><h4 id="按数据结构分类"><a href="#按数据结构分类" class="headerlink" title="按数据结构分类"></a>按数据结构分类</h4><p><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%8C%89%E6%95%B0%E6%8D%AE%E6%9C%BA%E6%9E%84%E5%88%86%E7%B1%BB.png" alt="按数据机构分类"></p><ul><li>InnoDB 是在 MySQL 5.5 之后成为默认的 MySQL 存储引擎，B+Tree 索引类型也是 MySQL 存储引擎采用最多的索引类型。</li><li>在创建表时，InnoDB 存储引擎会根据不同的场景选择不同的列作为索引：<ul><li>如果有主键，默认会使用主键作为聚簇索引的索引键（key）；</li><li>如果没有主键，就选择第一个不包含 NULL 值的唯一列作为聚簇索引的索引键（key）；</li><li>在上面两个都没有的情况下，InnoDB 将自动生成一个隐式自增 id 列作为聚簇索引的索引键（key）；</li></ul></li><li>其它索引都属于辅助索引（Secondary Index），也被称为二级索引或非聚簇索引。创建的主键索引和二级索引默认使用的是 B+Tree 索引。</li></ul><h4 id="按物理存储分类"><a href="#按物理存储分类" class="headerlink" title="按物理存储分类"></a>按物理存储分类</h4><ul><li>从物理存储的角度来看，索引分为聚簇索引（主键索引）、二级索引（辅助索引）。<ul><li>主键索引的 B+Tree 的叶子节点存放的是实际数据，所有完整的用户记录都存放在主键索引的 B+Tree 的叶子节点里；</li><li>二级索引的 B+Tree 的叶子节点存放的是主键值，而不是实际数据。</li></ul></li><li>所以，在查询时使用了二级索引，如果查询的数据能在二级索引里查询的到，那么就不需要回表，这个过程就是覆盖索引。如果查询的数据不在二级索引里，就会先检索二级索引，找到对应的叶子节点，获取到主键值后，然后再检索主键索引，就能查询到数据了，这个过程就是回表。</li></ul><h4 id="按字段特性分类"><a href="#按字段特性分类" class="headerlink" title="按字段特性分类"></a>按字段特性分类</h4><ul><li>主键索引<ul><li>主键索引就是建立在主键字段上的索引，通常在创建表的时候一起创建，一张表最多只有一个主键索引，索引列的值不允许有空值。</li><li>在创建表时，创建主键索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name  (<br>  <span class="hljs-keyword">PRIMARY</span> KEY (index_column_1) <span class="hljs-keyword">USING</span> BTREE<br>);<br></code></pre></td></tr></table></figure></li></ul></li><li>唯一索引<ul><li>唯一索引建立在 UNIQUE 字段上的索引，一张表可以有多个唯一索引，索引列的值必须唯一，但是允许有空值。</li><li>在创建表时，创建唯一索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name  (<br>  ....<br>  <span class="hljs-keyword">UNIQUE</span> KEY(index_column_1,index_column_2,...) <br>);<br></code></pre></td></tr></table></figure></li><li>建表后，如果要创建唯一索引，可以使用这面这条命令：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">UNIQUE</span> INDEX index_name<br><span class="hljs-keyword">ON</span> table_name(index_column_1,index_column_2,...);<br></code></pre></td></tr></table></figure></li></ul></li><li>普通索引<ul><li>普通索引就是建立在普通字段上的索引，既不要求字段为主键，也不要求字段为 UNIQUE。</li><li>在创建表时，创建普通索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name  (<br>  INDEX(index_column_1,index_column_2,...) <br>);<br></code></pre></td></tr></table></figure></li><li>建表后，如果要创建普通索引，可以使用这面这条命令：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> INDEX index_name<br><span class="hljs-keyword">ON</span> table_name(index_column_1,index_column_2,...);<br></code></pre></td></tr></table></figure></li></ul></li><li>前缀索引<ul><li>前缀索引是指对字符类型字段的前几个字符建立的索引，而不是在整个字段上建立的索引，前缀索引可以建立在字段类型为 char、 varchar、binary、varbinary 的列上。</li><li>使用前缀索引的目的是为了减少索引占用的存储空间，提升查询效率。</li><li>在创建表时，创建前缀索引的方式如下：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> table_name(<br>    column_list,<br>    INDEX(column_name(length))<br>);<br></code></pre></td></tr></table></figure></li><li>建表后，如果要创建前缀索引，可以使用这面这条命令：<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> INDEX index_name<br><span class="hljs-keyword">ON</span> table_name(column_name(length));<br></code></pre></td></tr></table></figure></li></ul></li></ul><h4 id="按字段个数分类"><a href="#按字段个数分类" class="headerlink" title="按字段个数分类"></a>按字段个数分类</h4><ul><li>从字段个数的角度来看，索引分为单列索引、联合索引（复合索引）。<ul><li>建立在单列上的索引称为单列索引，比如主键索引；</li><li>建立在多列上的索引称为联合索引；</li></ul></li></ul><h3 id="MySQL聚簇索引和非聚簇索引的区别是什么"><a href="#MySQL聚簇索引和非聚簇索引的区别是什么" class="headerlink" title="MySQL聚簇索引和非聚簇索引的区别是什么"></a>MySQL聚簇索引和非聚簇索引的区别是什么</h3><ul><li>数据存储：在聚簇索引中，数据行按照索引键值的顺序存储，也就是说，索引的叶子节点包含了实际的数据行。这意味着索引结构本身就是数据的物理存储结构。非聚簇索引的叶子节点不包含完整的数据行，而是包含指向数据行的指针或主键值。数据行本身存储在聚簇索引中。</li><li>索引与数据关系：由于数据与索引紧密相连，当通过聚簇索引查找数据时，可以直接从索引中获得数据行，而不需要额外的步骤去查找数据所在的位置。当通过非聚簇索引查找数据时，首先在非聚簇索引中找到对应的主键值，然后通过这个主键值回溯到聚簇索引中查找实际的数据行，这个过程称为“回表”。</li><li>唯一性：聚簇索引通常是基于主键构建的，因此每个表只能有一个聚簇索引，因为数据只能有一种物理排序方式。一个表可以有多个非聚簇索引，因为它们不直接影响数据的物理存储位置。</li><li>效率：对于范围查询和排序查询，聚簇索引通常更有效率，因为它避免了额外的寻址开销。非聚簇索引在使用覆盖索引进行查询时效率更高，因为它不需要读取完整的数据行。但是需要进行回表的操作，使用非聚簇索引效率比较低，因为需要进行额外的回表操作。</li></ul><h3 id="如果聚簇索引的数据更新，它的存储要不要变化"><a href="#如果聚簇索引的数据更新，它的存储要不要变化" class="headerlink" title="如果聚簇索引的数据更新，它的存储要不要变化"></a>如果聚簇索引的数据更新，它的存储要不要变化</h3><ul><li>如果更新的数据是非索引数据，也就是普通的用户记录，那么存储结构是不会发生变化</li><li>如果更新的数据是索引数据，那么存储结构是有变化的，因为要维护 b+树的有序性</li></ul><h3 id="MySQL主键是聚簇索引吗"><a href="#MySQL主键是聚簇索引吗" class="headerlink" title="MySQL主键是聚簇索引吗"></a>MySQL主键是聚簇索引吗</h3><ul><li>在MySQL的InnoDB存储引擎中，主键确实是以聚簇索引的形式存储的。</li><li>InnoDB将数据存储在B+树的结构中，其中主键索引的B+树就是所谓的聚簇索引。这意味着表中的数据行在物理上是按照主键的顺序排列的，聚簇索引的叶节点包含了实际的数据行。</li><li>InnoDB 在创建聚簇索引时，会根据不同的场景选择不同的列作为索引：<ul><li>如果有主键，默认会使用主键作为聚簇索引的索引键；</li><li>如果没有主键，就选择第一个不包含 NULL 值的唯一列作为聚簇索引的索引键；</li><li>在上面两个都没有的情况下，InnoDB 将自动生成一个隐式自增 id 列作为聚簇索引的索引键；</li></ul></li><li>一张表只能有一个聚簇索引，那为了实现非主键字段的快速搜索，就引出了二级索引（非聚簇索引&#x2F;辅助索引），它也是利用了 B+ 树的数据结构，但是二级索引的叶子节点存放的是主键值，不是实际数据。</li></ul><h3 id="表中十个字段，你主键用自增ID还是UUID，为什么？"><a href="#表中十个字段，你主键用自增ID还是UUID，为什么？" class="headerlink" title="表中十个字段，你主键用自增ID还是UUID，为什么？"></a>表中十个字段，你主键用自增ID还是UUID，为什么？</h3><ul><li>用的是自增 id。</li><li>因为 uuid 相对顺序的自增 id 来说是毫无规律可言的，新行的值不一定要比之前的主键的值要大，所以 innodb 无法做到总是把新行插入到索引的最后，而是需要为新行寻找新的合适的位置从而来分配新的空间。</li><li>这个过程需要做很多额外的操作，数据的毫无顺序会导致数据分布散乱，将会导致以下的问题：<ul><li>写入的目标页很可能已经刷新到磁盘上并且从缓存上移除，或者还没有被加载到缓存中，innodb 在插入之前不得不先找到并从磁盘读取目标页到内存中，这将导致大量的随机 IO。</li><li>因为写入是乱序的，innodb 不得不频繁的做页分裂操作，以便为新的行分配空间，页分裂导致移动大量的数据，影响性能。</li><li>由于频繁的页分裂，页会变得稀疏并被不规则的填充，最终会导致数据会有碎片。</li></ul></li><li>结论：使用 InnoDB 应该尽可能的按主键的自增顺序插入，并且尽可能使用单调的增加的聚簇键的值来插入新行。</li></ul><h3 id="什么自增ID更快一些，UUID不快吗，它在B-树里面存储是有序的吗"><a href="#什么自增ID更快一些，UUID不快吗，它在B-树里面存储是有序的吗" class="headerlink" title="什么自增ID更快一些，UUID不快吗，它在B+树里面存储是有序的吗"></a>什么自增ID更快一些，UUID不快吗，它在B+树里面存储是有序的吗</h3><ul><li>自增的主键的值是顺序的，所以 Innodb 把每一条记录都存储在一条记录的后面，所以自增 id 更快的原因：<ul><li>下一条记录就会写入新的页中，一旦数据按照这种顺序的方式加载，主键页就会近乎于顺序的记录填满，提升了页面的最大填充率，不会有页的浪费</li><li>新插入的行一定会在原有的最大数据行下一行，mysql定位和寻址很快，不会为计算新行的位置而做出额外的消耗</li><li>减少了页分裂和碎片的产生</li></ul></li><li>但是 UUID 不是递增的，MySQL 中索引的数据结构是 B+Tree，这种数据结构的特点是索引树上的节点的数据是有序的，而如果使用 UUID 作为主键，那么每次插入数据时，因为无法保证每次产生的 UUID 有序，所以就会出现新的 UUID 需要插入到索引树的中间去，这样可能会频繁地导致页分裂，使性能下降。</li><li>而且，UUID 太占用内存。每个 UUID 由 36 个字符组成，在字符串进行比较时，需要从前往后比较，字符串越长，性能越差。另外字符串越长，占用的内存越大，由于页的大小是固定的，这样一个页上能存放的关键字数量就会越少，这样最终就会导致索引树的高度越大，在索引搜索的时候，发生的磁盘 IO 次数越多，性能越差。</li></ul><h3 id="Mysql中的索引是怎么实现的"><a href="#Mysql中的索引是怎么实现的" class="headerlink" title="Mysql中的索引是怎么实现的"></a>Mysql中的索引是怎么实现的</h3><ul><li>MySQL InnoDB 引擎是用了B+树作为了索引的数据结构。</li><li>B+Tree 是一种多叉树，叶子节点才存放数据，非叶子节点只存放索引，而且每个节点里的数据是按主键顺序存放的。每一层父节点的索引值都会出现在下层子节点的索引值中，因此在叶子节点中，包括了所有的索引值信息，并且每一个叶子节点都有两个指针，分别指向下一个叶子节点和上一个叶子节点，形成一个双向链表。</li></ul><h3 id="B-树的特性是什么"><a href="#B-树的特性是什么" class="headerlink" title="B+树的特性是什么"></a>B+树的特性是什么</h3><ul><li>所有叶子节点都在同一层：这是B+树的一个重要特性，确保了所有数据项的检索都具有相同的I&#x2F;O延迟，提高了搜索效率。每个叶子节点都包含指向相邻叶子节点的指针，形成一个链表，由于叶子节点之间的链接，B+树非常适合进行范围查询和排序扫描。可以沿着叶子节点的链表顺序访问数据，而无需进行多次随机访问。</li><li>非叶子节点存储键值：非叶子节点仅存储键值和指向子节点的指针，不包含数据记录。这些键值用于指导搜索路径，帮助快速定位到正确的叶子节点。并且，由于非叶子节点只存放键值，当数据量比较大时，相对于B树，B+树的层高更少，查找效率也就更高。</li><li>叶子节点存储数据记录：与B树不同，B+树的叶子节点存储实际的数据记录或指向数据记录的指针。这意味着每次搜索都会到达叶子节点，才能找到所需数据。</li><li>自平衡：B+树在插入、删除和更新操作后会自动重新平衡，确保树的高度保持相对稳定，从而保持良好的搜索性能。每个节点最多可以有M个子节点，最少可以有ceil(M&#x2F;2，M为阶数)个子节点（除了根节点），这里的M是树的阶数。</li></ul><h3 id="说说B-树和B树的区别"><a href="#说说B-树和B树的区别" class="headerlink" title="说说B+树和B树的区别"></a>说说B+树和B树的区别</h3><ul><li>在B+树中，数据都存储在叶子节点上，而非叶子节点只存储索引信息；而B树的非叶子节点既存储索引信息也存储部分数据。</li><li>B+树的叶子节点使用链表相连，便于范围查询和顺序访问；B树的叶子节点没有链表连接。</li><li>B+树的查找性能更稳定，每次查找都需要查找到叶子节点；而B树的查找可能会在非叶子节点找到数据，性能相对不稳定。</li></ul><h3 id="B-树的好处是什么"><a href="#B-树的好处是什么" class="headerlink" title="B+树的好处是什么"></a>B+树的好处是什么</h3><ul><li>B+ 树的非叶子节点不存放实际的记录数据，仅存放索引，因此数据量相同的情况下，相比存储即存索引又存记录的 B 树，B+树的非叶子节点可以存放更多的索引，因此 B+ 树可以比 B 树更「矮胖」，查询底层节点的磁盘 I&#x2F;O次数会更少。</li><li>B+ 树有大量的冗余节点（所有非叶子节点都是冗余索引），这些冗余索引让 B+ 树在插入、删除的效率都更高，比如删除根节点的时候，不会像 B 树那样会发生复杂的树的变化；</li><li>B+ 树叶子节点之间用链表连接了起来，有利于范围查询，而 B 树要实现范围查询，因此只能通过树的遍历来完成范围查询，这会涉及多个节点的磁盘 I&#x2F;O 操作，范围查询效率不如 B+ 树。</li></ul><h3 id="为什么-MysSQL-不用跳表？"><a href="#为什么-MysSQL-不用跳表？" class="headerlink" title="为什么 MysSQL 不用跳表？"></a>为什么 MysSQL 不用跳表？</h3><ul><li>B+树的高度在3层时存储的数据可能已达千万级别，但对于跳表而言同样去维护千万的数据量那么所造成的跳表层数过高而导致的磁盘io次数增多，也就是使用B+树在存储同样的数据下磁盘io次数更少。</li></ul><h3 id="联合索引的实现原理"><a href="#联合索引的实现原理" class="headerlink" title="联合索引的实现原理"></a>联合索引的实现原理</h3><ul><li>使用多个字段值作为key值</li><li>需要满足最左匹配，因为除了最左边的属性，剩下的属性都是全局无序，局部有序的，利用索引的前提时索引里的key时有序的</li></ul><h3 id="索引失效有哪些情况"><a href="#索引失效有哪些情况" class="headerlink" title="索引失效有哪些情况"></a>索引失效有哪些情况</h3><ul><li>当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx%这两种方式都会造成索引失效；</li><li>当我们在查询条件中对索引列使用函数，就会导致索引失效。</li><li>当我们在查询条件中对索引列进行表达式计算，也是无法走索引的。</li><li>MySQL 在遇到字符串和数字比较的时候，会自动把字符串转为数字，然后再进行比较。如果字符串是索引列，而条件语句中的输入参数是数字的话，那么索引列会发生隐式类型转换，由于隐式类型转换是通过 CAST 函数实现的，等同于对索引列使用了函数，所以就会导致索引失效。</li><li>联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配，否则就会导致索引失效。</li><li>在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列，那么索引会失效。</li></ul><h3 id="什么情况下会回表查询"><a href="#什么情况下会回表查询" class="headerlink" title="什么情况下会回表查询"></a>什么情况下会回表查询</h3><ul><li><p>从物理存储的角度来看，索引分为聚簇索引（主键索引）、二级索引（辅助索引）。</p></li><li><p>它们的主要区别如下：</p><ul><li>主键索引的 B+Tree 的叶子节点存放的是实际数据，所有完整的用户记录都存放在主键索引的 B+Tree 的叶子节点里；</li><li>二级索引的 B+Tree 的叶子节点存放的是主键值，而不是实际数据。</li></ul></li><li><p>所以，在查询时使用了二级索引，如果查询的数据能在二级索引里查询的到，那么就不需要回表，这个过程就是覆盖索引。</p></li><li><p>如果查询的数据不在二级索引里，就会先检索二级索引，找到对应的叶子节点，获取到主键值后，然后再检索主键索引，就能查询到数据了，这个过程就是回表。</p></li></ul><h3 id="什么是覆盖索引？"><a href="#什么是覆盖索引？" class="headerlink" title="什么是覆盖索引？"></a>什么是覆盖索引？</h3><ul><li><p>覆盖索引是指一个索引包含了查询所需的所有列，因此不需要访问表中的数据行就能完成查询。</p></li><li><p>换句话说，查询所需的所有数据都能从索引中直接获取，而不需要进行回表查询。覆盖索引能够显著提高查询性能，因为减少了访问数据页的次数，从而减少了I&#x2F;O操作。</p></li></ul><h3 id="如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？"><a href="#如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？" class="headerlink" title="如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？"></a>如果一个列即使单列索引，又是联合索引，单独查它的话先走哪个？</h3><ul><li><p>mysql 优化器会分析每个索引的查询成本，然后选择成本最低的方案来执行 sql。</p></li><li><p>如果单列索引是 a，联合索引是（a ，b），那么针对下面这个查询：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">select</span> a, b <span class="hljs-keyword">from</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">where</span> a <span class="hljs-operator">=</span> ? <span class="hljs-keyword">and</span> b <span class="hljs-operator">=</span>?<br></code></pre></td></tr></table></figure></li><li><p>优化器会选择联合索引，因为查询成本更低，查询也不需要回表，直接索引覆盖了。</p></li></ul><h3 id="索引已经建好了，那我再插入一条数据，索引会有哪些变化？"><a href="#索引已经建好了，那我再插入一条数据，索引会有哪些变化？" class="headerlink" title="索引已经建好了，那我再插入一条数据，索引会有哪些变化？"></a>索引已经建好了，那我再插入一条数据，索引会有哪些变化？</h3><ul><li><p>插入新数据可能导致B+树结构的调整和索引信息的更新，以保持B+树的平衡性和正确性，这些变化通常由数据库系统自动处理，确保数据的一致性和索引的有效性。</p></li><li><p>如果插入的数据导致叶子节点已满，可能会触发叶子节点的分裂操作，以保持B+树的平衡性。</p></li></ul><h3 id="索引的缺点"><a href="#索引的缺点" class="headerlink" title="索引的缺点"></a>索引的缺点</h3><ul><li>需要占用物理空间，数量越大，占用空间越大；</li><li>创建索引和维护索引要耗费时间，这种时间随着数据量的增加而增大；</li><li>会降低表的增删改的效率，因为每次增删改索引，B+ 树为了维护索引有序性，都需要进行动态维护。</li></ul><h3 id="怎么决定建立哪些索引"><a href="#怎么决定建立哪些索引" class="headerlink" title="怎么决定建立哪些索引"></a>怎么决定建立哪些索引</h3><h4 id="什么时候适合使用索引"><a href="#什么时候适合使用索引" class="headerlink" title="什么时候适合使用索引"></a>什么时候适合使用索引</h4><ul><li>字段有唯一性限制的，比如商品编码；</li><li>经常用于 WHERE 查询条件的字段，这样能够提高整个表的查询速度，如果查询条件不是一个字段，可以建立联合索引。</li><li>经常用于 GROUP BY 和 ORDER BY 的字段，这样在查询的时候就不需要再去做一次排序了，因为我们都已经知道了建立索引之后在 B+Tree 中的记录都是排序好的。</li></ul><h4 id="什么时候不需要创建索引"><a href="#什么时候不需要创建索引" class="headerlink" title="什么时候不需要创建索引"></a>什么时候不需要创建索引</h4><ul><li>WHERE 条件，GROUP BY，ORDER BY 里用不到的字段，索引的价值是快速定位，如果起不到定位的字段通常是不需要创建索引的，因为索引是会占用物理空间的。</li><li>字段中存在大量重复数据，不需要创建索引，比如性别字段，只有男女，如果数据库表中，男女的记录分布均匀，那么无论搜索哪个值都可能得到一半的数据。在这些情况下，还不如不要索引，因为 MySQL 还有一个查询优化器，查询优化器发现某个值出现在表的数据行中的百分比很高的时候，它一般会忽略索引，进行全表扫描。</li><li>表数据太少的时候，不需要创建索引；</li><li>经常更新的字段不用创建索引</li></ul><h3 id="索引优化详细讲讲"><a href="#索引优化详细讲讲" class="headerlink" title="索引优化详细讲讲"></a>索引优化详细讲讲</h3><ul><li>前缀索引优化：使用前缀索引是为了减小索引字段大小，可以增加一个索引页中存储的索引值的数量，有效提高索引的查询速度。在一些大字符串的字段作为索引时，使用前缀索引可以帮助我们减小索引项的大小。</li><li>覆盖索引优化：覆盖索引是指 SQL 中 query 的所有字段，在索引 B+Tree 的叶子节点上都能找得到的那些索引，从二级索引中查询得到记录，而不需要通过聚簇索引查询获得，可以避免回表的操作。</li><li>主键索引最好是自增的：<ul><li>如果我们使用自增主键，那么每次插入的新数据就会按顺序添加到当前索引节点的位置，不需要移动已有的数据，当页面写满，就会自动开辟一个新页面。因为每次插入一条新记录，都是追加操作，不需要重新移动数据，因此这种插入数据的方法效率非常高。</li><li>如果我们使用非自增主键，由于每次插入主键的索引值都是随机的，因此每次插入新的数据时，就可能会插入到现有数据页中间的某个位置，这将不得不移动其它数据来满足新数据的插入，甚至需要从一个页面复制数据到另外一个页面，我们通常将这种情况称为页分裂。页分裂还有可能会造成大量的内存碎片，导致索引结构不紧凑，从而影响查询效率。</li></ul></li><li>防止索引失效：<ul><li>当我们使用左或者左右模糊匹配的时候，也就是 like %xx 或者 like %xx%这两种方式都会造成索引失效；</li><li>当我们在查询条件中对索引列做了计算、函数、类型转换操作，这些情况下都会造成索引失效；</li><li>联合索引要能正确使用需要遵循最左匹配原则，也就是按照最左优先的方式进行索引的匹配，否则就会导致索引失效。</li><li>在 WHERE 子句中，如果在 OR 前的条件列是索引列，而在 OR 后的条件列不是索引列，那么索引会失效。</li></ul></li></ul><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="事务的特性"><a href="#事务的特性" class="headerlink" title="事务的特性"></a>事务的特性</h3><h4 id="原子性"><a href="#原子性" class="headerlink" title="原子性"></a>原子性</h4><ul><li>一个事务中的所有操作，要么全部完成，要么全部不完成，不会结束在中间某个环节，而且事务在执行过程中发生错误，会被回滚到事务开始前的状态，就像这个事务从来没有执行过一样，就好比买一件商品，购买成功时，则给商家付了钱，商品到手；购买失败时，则商品在商家手中，消费者的钱也没花出去。</li><li>通过 Undo log 来保证的；每个事务的操作都会记录一份“撤销日志”（Undo Log），用于回滚。</li></ul><h4 id="一致性"><a href="#一致性" class="headerlink" title="一致性"></a>一致性</h4><ul><li>事务执行前后，数据库必须保持一致的状态，符合所有的约束规则。</li></ul><h4 id="隔离性"><a href="#隔离性" class="headerlink" title="隔离性"></a>隔离性</h4><ul><li>数据库允许多个并发事务同时对其数据进行读写和修改的能力，隔离性可以防止多个事务并发执行时由于交叉执行而导致数据的不一致，因为多个事务同时使用相同的数据时，不会相互干扰，每个事务都有一个完整的数据空间，对其他并发事务是隔离的。也就是说，消费者购买商品这个事务，是不影响其他消费者购买的。</li><li>通过 MVCC（多版本并发控制） 或锁机制来保证的；</li></ul><h4 id="持久性"><a href="#持久性" class="headerlink" title="持久性"></a>持久性</h4><ul><li>事务处理结束后，对数据的修改就是永久的，即便系统故障也不会丢失。</li><li>所有事务提交前，都会将修改记录写入 Redo Log（重做日志），即使系统崩溃也能恢复。</li></ul><h3 id="MySQL可能出现的并发问题"><a href="#MySQL可能出现的并发问题" class="headerlink" title="MySQL可能出现的并发问题"></a>MySQL可能出现的并发问题</h3><h4 id="脏读"><a href="#脏读" class="headerlink" title="脏读"></a>脏读</h4><ul><li>一个事务读取了另一个事务尚未提交的数据。</li><li>事务A将余额从100修改为200，但还未提交，事务B读到了200，事务A回滚到100。事务B读到的是脏数据，因为它读取了一个最终被撤销的值</li></ul><h4 id="幻读"><a href="#幻读" class="headerlink" title="幻读"></a>幻读</h4><ul><li>一个事务在读取某个范围的数据时，另一个事务插入了新数据，导致前后读取结果不一致。</li><li>事务A：查询所有价格大于100的商品，发现有5条。事务B：插入了一条价格为150的新商品，并提交。事务A再次查询，发现有6条记录。事务A“看到了幻影”，因为它在执行过程中，数据集合发生了变化。</li></ul><h4 id="不可重复读"><a href="#不可重复读" class="headerlink" title="不可重复读"></a>不可重复读</h4><ul><li>一个事务在读取同一条记录时，前后读到的值不一致。</li><li>事务A：读取订单状态，发现是“未支付”。事务B：将该订单状态改为“已支付”，并提交。事务A再次读取该订单，发现状态变成了“已支付”。事务A在执行过程中，数据发生了变化，导致前后不一致。</li></ul><h3 id="MySQL如何解决并发问题的"><a href="#MySQL如何解决并发问题的" class="headerlink" title="MySQL如何解决并发问题的"></a>MySQL如何解决并发问题的</h3><ul><li>锁机制：Mysql提供了多种锁机制来保证数据的一致性，包括行级锁、表级锁、页级锁等。通过锁机制，可以在读写操作时对数据进行加锁，确保同时只有一个操作能够访问或修改数据。</li><li>事务隔离级别：Mysql提供了多种事务隔离级别，包括读未提交、读已提交、可重复读和串行化。通过设置合适的事务隔离级别，可以在多个事务并发执行时，控制事务之间的隔离程度，以避免数据不一致的问题。</li><li>MVCC（多版本并发控制）：Mysql使用MVCC来管理并发访问，它通过在数据库中保存不同版本的数据来实现不同事务之间的隔离。在读取数据时，Mysql会根据事务的隔离级别来选择合适的数据版本，从而保证数据的一致性。</li></ul><h3 id="事务的隔离级别有哪些"><a href="#事务的隔离级别有哪些" class="headerlink" title="事务的隔离级别有哪些"></a>事务的隔离级别有哪些</h3><ul><li>读未提交（read uncommitted），指一个事务还没提交时，它做的变更就能被其他事务看到；可能发生脏读、不可重复读和幻读现象；</li><li>读提交（read committed），指一个事务提交之后，它做的变更才能被其他事务看到；可能发生不可重复读和幻读现象，但是不可能发生脏读现象；</li><li>可重复读（repeatable read），指一个事务执行过程中看到的数据，一直跟这个事务启动时看到的数据是一致的，MySQL InnoDB 引擎的默认隔离级别；可能发生幻读现象，但是不可能脏读和不可重复读现象；</li><li>串行化（serializable）；会对记录加上读写锁，在多个事务对这条记录进行读写操作时，如果发生了读写冲突的时候，后访问的事务必须等前一个事务执行完成，才能继续执行；脏读、不可重复读和幻读现象都不可能会发生。</li></ul><h3 id="四种隔离级别如何实现的"><a href="#四种隔离级别如何实现的" class="headerlink" title="四种隔离级别如何实现的"></a>四种隔离级别如何实现的</h3><ul><li>对于「读未提交」隔离级别的事务来说，因为可以读到未提交事务修改的数据，所以直接读取最新的数据就好了；</li><li>对于「串行化」隔离级别的事务来说，通过加读写锁的方式来避免并行访问；</li><li>对于「读提交」和「可重复读」隔离级别的事务来说，它们是通过 Read View来实现的，它们的区别在于创建 Read View 的时机不同，「读提交」隔离级别是在「每个语句执行前」都会重新生成一个 Read View，而「可重复读」隔离级别是「启动事务时」生成一个 Read View，然后整个事务期间都在用这个 Read View。</li></ul><h3 id="可重复读下的幻读问题"><a href="#可重复读下的幻读问题" class="headerlink" title="可重复读下的幻读问题"></a>可重复读下的幻读问题</h3><ul><li>我做了个实验去测试可重复读会不会出现幻读： <ul><li>事务A开启事务，搜索班级id为1的学生，此时为两条记录； </li><li>事务B开启事务，插入一条数据进入表中，并提交； </li><li>事务A再次搜索班级id为1的学生，此时为两条记录； </li><li>事务A将所有名字改为“修改名字”； </li><li>事务A再次搜索班级id为1的学生，此时为三条记录；</li></ul></li><li>原因：事务A进行更新时，使用的是当前读，当前读不再用事务开始时的快照，而是直接去读最新数据，并对符合条件的行加锁，此时会把这条新插入的记录也读出来一起更新</li><li>🧩 关键原理<ul><li>事务的快照没变<ul><li>在 Repeatable Read 下，事务第一次做快照读时建立的一致性视图（snapshot）不会因为 UPDATE 而重建。</li><li>这个视图仍然屏蔽掉事务开始后，其他事务提交的新行。</li></ul></li><li>本事务的修改优先可见<ul><li>MVCC 有个规则：同一行如果存在本事务写过的版本，那即使这个版本在最初快照里不可见，也必须返回给本事务（Read-Your-Writes）。</li><li>所以当你 UPDATE 时，假设它命中了原来快照中看不到的新行（比如被别的事务插入的小刚），此刻它被你生成了一个“由自己写的版本”。</li></ul></li><li>普通 SELECT 也会“看到”它<ul><li>虽然 SELECT 本身还是走快照读的逻辑，但会先检查“这行有没有我自己写的版本”。</li><li>于是这条原本不在快照中的记录被“补进了”结果集，看起来就像快照更新了，实际上是可见性规则在起作用。</li></ul></li></ul></li></ul><h3 id="Mysql-设置了可重读隔离级后，怎么保证不发生幻读？"><a href="#Mysql-设置了可重读隔离级后，怎么保证不发生幻读？" class="headerlink" title="Mysql 设置了可重读隔离级后，怎么保证不发生幻读？"></a>Mysql 设置了可重读隔离级后，怎么保证不发生幻读？</h3><ul><li>尽量在开启事务之后，马上执行 select … for update 这类锁定读的语句，因为它会对记录加 next-key lock，从而避免其他事务插入一条新记录，就避免了幻读的问题。</li></ul><h3 id="串行化隔离级别是通过什么实现的？"><a href="#串行化隔离级别是通过什么实现的？" class="headerlink" title="串行化隔离级别是通过什么实现的？"></a>串行化隔离级别是通过什么实现的？</h3><ul><li>是通过行级锁来实现的，序列化隔离级别下，普通的 select 查询是会对记录加 S 型的 next-key 锁，其他事务就没没办法对这些已经加锁的记录进行增删改操作了，从而避免了脏读、不可重复读和幻读现象。</li></ul><h3 id="MVCC实现原理"><a href="#MVCC实现原理" class="headerlink" title="MVCC实现原理"></a>MVCC实现原理</h3><h4 id="MVCC定义"><a href="#MVCC定义" class="headerlink" title="MVCC定义"></a>MVCC定义</h4><ul><li>是 InnoDB 在不加读锁的情况下，实现读写互不阻塞的关键机制。核心思路是：每行数据维护多个历史版本，读操作基于一致性快照获取可见版本，从而提高并发性能。</li></ul><h4 id="核心原理"><a href="#核心原理" class="headerlink" title="核心原理"></a>核心原理</h4><ul><li>隐藏列：针对每一行数据的聚簇索引，每行有 DB_TRX_ID（最后修改事务ID）和 DB_ROLL_PTR（指向 Undo 日志的上一个版本）。</li><li>版本链：旧数据不会直接覆盖，而是写入 Undo 日志，并通过 DB_ROLL_PTR 串成链。</li><li>Read View：快照读时生成，有四个字段：<ul><li>creator_trx_id：创建该Read View的事务ID</li><li>m_ids：创建时，当前数据库中活跃但未提交的事务ID列表</li><li>up_limit_id（min_trx_id）：创建时，当前数据库中活跃但未提交的最小事务ID</li><li>low_limit_id（max_trx_id）：创建时，当前数据库应该给下一个事务的ID值</li></ul></li><li>可见性判断：根据事务ID和活跃事务列表决定读哪个版本。<ul><li>版本事务 ID &lt; up_limit_id → 该事务早已提交，可见。</li><li>版本事务 ID ≥ low_limit_id → 该事务在视图创建后才产生，不可见。</li><li>up_limit_id ≤ 版本事务 ID &lt; low_limit_id<ul><li>如果 DB_TRX_ID 不在 m_ids（说明视图生成时它已经提交） → 可见。</li><li>如果在 m_ids（说明当时事务还活跃） → 不可见。</li></ul></li><li>如果 DB_TRX_ID &#x3D;&#x3D; creator_trx_id → 即使未提交，也对本事务可见（读你所写）。</li><li>“小于最小 ID 看得见，大于等于最大 ID 看不见；夹在中间要查表，表里有就看不见；自己永远能看到自己。”</li></ul></li><li>Purge 清理：无事务再引用的历史版本会被后台线程物理删除，释放空间。</li></ul><h3 id="一条update是不是原子性的？为什么？"><a href="#一条update是不是原子性的？为什么？" class="headerlink" title="一条update是不是原子性的？为什么？"></a>一条update是不是原子性的？为什么？</h3><ul><li>是原子性，主要通过锁+undolog 日志保证原子性的</li><li>执行 update 的时候，会加行级别锁，保证了一个事务更新一条记录的时候，不会被其他事务干扰。</li><li>事务执行过程中，会生成 undolog，如果事务执行失败，就可以通过 undolog 日志进行回滚。</li></ul><h3 id="滥用事务，或者一个事务里有特别多sql的弊端"><a href="#滥用事务，或者一个事务里有特别多sql的弊端" class="headerlink" title="滥用事务，或者一个事务里有特别多sql的弊端"></a>滥用事务，或者一个事务里有特别多sql的弊端</h3><ul><li>锁时间过长，导致并发性能下降<ul><li>事务未提交前，持有的锁会一直占着资源，其他会话只能干等</li><li>高并发场景下，会放大阻塞甚至形成死锁</li></ul></li><li>资源消耗大<ul><li>数据库需要保存事务的中间状态（Undo&#x2F;Redo 日志、版本信息）</li><li>SQL 多、事务长，内存和磁盘压力都会上去</li></ul></li><li>回滚成本高<ul><li>出错时需要撤销整个事务</li><li>SQL 数量多时，回滚耗时长，甚至可能产生锁等待的连锁反应</li></ul></li><li>不利于扩展与分布式场景<ul><li>长事务会拖慢分布式事务协调器，增加跨节点一致性开销</li></ul></li></ul><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="讲一下mysql里有哪些锁？"><a href="#讲一下mysql里有哪些锁？" class="headerlink" title="讲一下mysql里有哪些锁？"></a>讲一下mysql里有哪些锁？</h3><ul><li>全局锁：通过flush tables with read lock 语句会将整个数据库就处于只读状态了，这时其他线程执行以下操作，增删改或者表结构修改都会阻塞。全局锁主要应用于做全库逻辑备份，这样在备份数据库期间，不会因为数据或表结构的更新，而出现备份文件的数据与预期的不一样。</li><li>表级锁：MySQL 里面表级别的锁有这几种：<ul><li>表锁：通过lock tables 语句可以对表加表锁，表锁除了会限制别的线程的读写外，也会限制本线程接下来的读写操作。</li><li>元数据锁：当我们对数据库表进行操作时，会自动给这个表加上 MDL，对一张表进行 CRUD 操作时，加的是 MDL 读锁；对一张表做结构变更操作的时候，加的是 MDL 写锁；MDL 是为了保证当用户对表执行 CRUD 操作时，防止其他线程对这个表结构做了变更。</li><li>意向锁：当执行插入、更新、删除操作，需要先对表加上「意向独占锁」，然后对该记录加独占锁。意向锁的目的是为了快速判断表里是否有记录被加锁。</li></ul></li><li>行级锁：InnoDB 引擎是支持行级锁的，而 MyISAM 引擎并不支持行级锁。<ul><li>记录锁，锁住的是一条记录。而且记录锁是有 S 锁和 X 锁之分的，满足读写互斥，写写互斥</li><li>间隙锁，只存在于可重复读隔离级别，目的是为了解决可重复读隔离级别下幻读的现象。</li><li>Next-Key Lock 称为临键锁，是 Record Lock + Gap Lock 的组合，锁定一个范围，并且锁定记录本身。</li></ul></li></ul><h3 id="数据库的表锁和行锁有什么作用？"><a href="#数据库的表锁和行锁有什么作用？" class="headerlink" title="数据库的表锁和行锁有什么作用？"></a>数据库的表锁和行锁有什么作用？</h3><h4 id="表锁"><a href="#表锁" class="headerlink" title="表锁"></a>表锁</h4><ul><li>整体控制：表锁可以用来控制整个表的并发访问，当一个事务获取了表锁时，其他事务无法对该表进行任何读写操作，从而确保数据的完整性和一致性。</li><li>适用于大批量操作：表锁适合于需要大批量操作表中数据的场景，例如表的重建、大量数据的加载等。</li></ul><h4 id="行锁"><a href="#行锁" class="headerlink" title="行锁"></a>行锁</h4><ul><li>细粒度控制：行锁可以精确控制对表中某行数据的访问，使得其他事务可以同时访问表中的其他行数据，在并发量大的系统中能够提高并发性能。</li><li>适用于频繁单行操作：行锁适合于需要频繁对表中单独行进行操作的场景，例如订单系统中的订单修改、删除等操作</li></ul><h3 id="MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？"><a href="#MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？" class="headerlink" title="MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？"></a>MySQL两个线程的update语句同时处理一条数据，会不会有阻塞？</h3><ul><li>会，因为行级锁，陷入阻塞</li></ul><h3 id="两条update语句处理一张表的不同的主键范围的记录，一个15，会不会遇到阻塞？底层是为什么的？"><a href="#两条update语句处理一张表的不同的主键范围的记录，一个15，会不会遇到阻塞？底层是为什么的？" class="headerlink" title="两条update语句处理一张表的不同的主键范围的记录，一个&lt;10，一个&gt;15，会不会遇到阻塞？底层是为什么的？"></a>两条update语句处理一张表的不同的主键范围的记录，一个&lt;10，一个&gt;15，会不会遇到阻塞？底层是为什么的？</h3><ul><li>不会，因为锁的范围不同，一个是小于10加锁，另一个是大于15加锁</li></ul><h3 id="如果2个范围不是主键或索引？还会阻塞吗？"><a href="#如果2个范围不是主键或索引？还会阻塞吗？" class="headerlink" title="如果2个范围不是主键或索引？还会阻塞吗？"></a>如果2个范围不是主键或索引？还会阻塞吗？</h3><ul><li><p>如果2个范围查询的字段不是索引的话，那就代表 update 没有用到索引，这时候触发了全表扫描，全部索引都会加行级锁，这时候第二条 update 执行的时候，就会阻塞了。</p></li><li><p>因为如果 update 没有用到索引，在扫描过程中会对索引加锁，所以全表扫描的场景下，所有记录都会被加锁。</p></li></ul><h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><h3 id="日志文件是分成了哪几种？"><a href="#日志文件是分成了哪几种？" class="headerlink" title="日志文件是分成了哪几种？"></a>日志文件是分成了哪几种？</h3><ul><li>redo log 重做日志，是 Innodb 存储引擎层生成的日志，实现了事务中的持久性，主要用于掉电等故障恢复；</li><li>undo log 回滚日志，是 Innodb 存储引擎层生成的日志，实现了事务中的原子性，主要用于事务回滚和 MVCC。</li><li>bin log 二进制日志，是 Server 层生成的日志，主要用于数据备份和主从复制；</li><li>relay log 中继日志，用于主从复制场景下，slave通过io线程拷贝master的bin log后本地生成的日志</li><li>慢查询日志，用于记录执行时间过长的sql，需要设置阈值后手动开启</li></ul><h3 id="讲一下binlog"><a href="#讲一下binlog" class="headerlink" title="讲一下binlog"></a>讲一下binlog</h3><ul><li><p>MySQL 在完成一条更新操作后，Server 层还会生成一条 binlog，等之后事务提交的时候，会将该事物执行过程中产生的所有 binlog 统一写 入 binlog 文件，binlog 是 MySQL 的 Server 层实现的日志，所有存储引擎都可以使用。</p></li><li><p>binlog 是追加写，写满一个文件，就创建一个新的文件继续写，不会覆盖以前的日志，保存的是全量的日志，用于备份恢复、主从复制；</p></li><li><p>binlog 文件是记录了所有数据库表结构变更和表数据修改的日志，不会记录查询类的操作，比如 SELECT 和 SHOW 操作。</p></li><li><p>binlog 有 3 种格式类型，分别是 STATEMENT（默认格式）、ROW、 MIXED，区别如下：</p></li><li><p>STATEMENT：每一条修改数据的 SQL 都会被记录到 binlog 中（相当于记录了逻辑操作，所以针对这种格式， binlog 可以称为逻辑日志），主从复制中 slave 端再根据 SQL 语句重现。但 STATEMENT 有动态函数的问题，比如你用了 uuid 或者 now 这些函数，你在主库上执行的结果并不是你在从库执行的结果，这种随时在变的函数会导致复制的数据不一致；</p></li><li><p>ROW：记录行数据最终被修改成什么样了（这种格式的日志，就不能称为逻辑日志了），不会出现 STATEMENT 下动态函数的问题。但 ROW 的缺点是每行数据的变化结果都会被记录，比如执行批量 update 语句，更新多少行数据就会产生多少条记录，使 binlog 文件过大，而在 STATEMENT 格式下只会记录一个 update 语句而已；</p></li><li><p>MIXED：包含了 STATEMENT 和 ROW 模式，它会根据不同的情况自动使用 ROW 模式和 STATEMENT 模式；</p></li></ul><h3 id="UndoLog日志的作用是什么？"><a href="#UndoLog日志的作用是什么？" class="headerlink" title="UndoLog日志的作用是什么？"></a>UndoLog日志的作用是什么？</h3><ul><li>undo log 是一种用于撤销回退的日志，它保证了事务的 ACID 特性中的原子性（Atomicity）。</li><li>在事务没提交之前，MySQL 会先记录更新前的数据到 undo log 日志文件里面，当事务回滚时，可以利用 undo log 来进行回滚。</li><li>每当 InnoDB 引擎对一条记录进行操作（修改、删除、新增）时，要把回滚时需要的信息都记录到 undo log 里，比如：<ul><li>在插入一条记录时，要把这条记录的主键值记下来，这样之后回滚时只需要把这个主键值对应的记录删掉</li><li>在删除一条记录时，要把这条记录中的内容都记下来，这样之后回滚时再把由这些内容组成的记录插入到表中</li><li>在更新一条记录时，要把被更新的列的旧值记下来，这样之后回滚时再把这些列更新为旧值</li></ul></li></ul><h3 id="有了undolog为啥还需要redolog呢？"><a href="#有了undolog为啥还需要redolog呢？" class="headerlink" title="有了undolog为啥还需要redolog呢？"></a>有了undolog为啥还需要redolog呢？</h3><ul><li>在数据库中，Undo Log 用于回滚未完成事务，保证原子性；Redo Log 用于在系统崩溃后重做已提交事务，保证持久性。两者相辅相成，缺一不可。</li><li>Undo Log记录修改前的旧值，Redo Log记录修改后的新值。</li></ul><h3 id="redo-log怎么保证持久性的？"><a href="#redo-log怎么保证持久性的？" class="headerlink" title="redo log怎么保证持久性的？"></a>redo log怎么保证持久性的？</h3><h4 id="WAL-原则（Write-Ahead-Logging）"><a href="#WAL-原则（Write-Ahead-Logging）" class="headerlink" title="WAL 原则（Write-Ahead Logging）"></a>WAL 原则（Write-Ahead Logging）</h4><ul><li>先写日志，再写数据文件</li><li>当事务提交时，必须先把 Redo Log 刷入磁盘（fsync 确保真正落盘），确认写成功后才算事务提交完成。</li><li>这样即使数据页还停留在缓冲池里没落盘，宕机也可依靠日志恢复。</li></ul><h4 id="顺序写-刷盘确认"><a href="#顺序写-刷盘确认" class="headerlink" title="顺序写 + 刷盘确认"></a>顺序写 + 刷盘确认</h4><ul><li>Redo Log 是顺序追加写（append-only），比随机写快得多，也更容易落盘成功。</li><li>顺序写降低了磁盘寻址开销，减少了因延迟导致的风险。</li></ul><h4 id="组提交（Group-Commit）"><a href="#组提交（Group-Commit）" class="headerlink" title="组提交（Group Commit）"></a>组提交（Group Commit）</h4><ul><li>多个事务的 Redo Log 可一次性刷盘，减少磁盘 I&#x2F;O 次数，但提交确认前必须确保日志写入可靠。</li><li>提升性能的同时保持持久性。</li></ul><h4 id="崩溃恢复流程"><a href="#崩溃恢复流程" class="headerlink" title="崩溃恢复流程"></a>崩溃恢复流程</h4><ul><li>数据库启动时会扫描 Redo Log 中的 已提交事务记录，将对应的修改“重做”到数据文件中。</li><li>因为提交前就已保证日志落盘，所以能准确恢复到崩溃前的最后提交状态。</li></ul><h3 id="binlog-两阶段提交过程"><a href="#binlog-两阶段提交过程" class="headerlink" title="binlog 两阶段提交过程"></a>binlog 两阶段提交过程</h3><ul><li>当客户端执行 commit 语句或者在自动提交的情况下，MySQL 内部开启一个 XA 事务，分两阶段来完成 XA 事务的提交</li><li>事务的提交过程有两个阶段，就是将 redo log 的写入拆成了两个步骤：prepare 和 commit，中间再穿插写入binlog：<ul><li>prepare 阶段：将 XID（内部 XA 事务的 ID） 写入到 redo log，同时将 redo log 对应的事务状态设置为 prepare，然后将 redo log 持久化到磁盘（innodb_flush_log_at_trx_commit &#x3D; 1 的作用）；</li><li>commit 阶段：把 XID 写入到 binlog，然后将 binlog 持久化到磁盘（sync_binlog &#x3D; 1 的作用），接着调用引擎的提交事务接口，将 redo log 状态设置为 commit，此时该状态并不需要持久化到磁盘，只需要 write 到文件系统的 page cache 中就够了，因为只要 binlog 写磁盘成功，就算 redo log 的状态还是 prepare 也没有关系，一样会被认为事务已经执行成功；</li></ul></li><li>两阶段提交是以 binlog 写成功为事务提交成功的标识</li></ul><h3 id="为什么要写RedoLog，而不是直接写到B-树里面？"><a href="#为什么要写RedoLog，而不是直接写到B-树里面？" class="headerlink" title="为什么要写RedoLog，而不是直接写到B+树里面？"></a>为什么要写RedoLog，而不是直接写到B+树里面？</h3><ul><li>因为 redolog 写入磁盘是顺序写，而 b+树里数据页写入磁盘是随机写，顺序写的性能会比随机写好，这样可以提升事务提交的效率。</li><li>最重要的是redolog具备故障恢复的能力，Redo Log 记录的是物理级别的修改，包括页的修改，如插入、更新、删除操作在磁盘上的物理位置和修改内容。例如，当执行一个更新操作时，Redo Log 会记录修改的数据页的地址和更新后的数据，而不是 SQL 语句本身。</li><li>在数据页实际更新之前，先将修改操作写入 Redo Log。当数据库重启时，会进行恢复操作。首先，根据 Redo Log 检查哪些事务已经提交但数据页尚未完全写入磁盘。然后，使用 Redo Log 中的记录对这些事务进行重做（Redo）操作，将未完成的数据页修改完成，确保事务的修改生效。</li></ul><h2 id="Redis数据结构"><a href="#Redis数据结构" class="headerlink" title="Redis数据结构"></a>Redis数据结构</h2><h3 id="Redis有哪些数据结构"><a href="#Redis有哪些数据结构" class="headerlink" title="Redis有哪些数据结构"></a>Redis有哪些数据结构</h3><p><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/Redis%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84.png" alt="Redis数据结构"></p><h3 id="Zset-底层是怎么实现的？"><a href="#Zset-底层是怎么实现的？" class="headerlink" title="Zset 底层是怎么实现的？"></a>Zset 底层是怎么实现的？</h3><ul><li>Zset 类型的底层数据结构是由压缩列表或跳表实现的：<ul><li>如果有序集合的元素个数小于 128 个，并且每个元素的值小于 64 字节时，Redis 会使用压缩列表作为 Zset 类型的底层数据结构；</li><li>如果有序集合的元素不满足上面的条件，Redis 会使用跳表作为 Zset 类型的底层数据结构；</li></ul></li><li>在 Redis 7.0 中，压缩列表数据结构已经废弃了，交由 listpack 数据结构来实现了。</li></ul><h3 id="跳表是怎么设置层高的"><a href="#跳表是怎么设置层高的" class="headerlink" title="跳表是怎么设置层高的"></a>跳表是怎么设置层高的</h3><ul><li>常见实现（如 Redis 的 zset）是：插入新节点时，从第 1 层开始，丢一枚“硬币”，正面就晋升一层，直到反面为止，或者达到最大层数上限。</li></ul><h3 id="Redis为什么使用跳表而不是用B-树"><a href="#Redis为什么使用跳表而不是用B-树" class="headerlink" title="Redis为什么使用跳表而不是用B+树"></a>Redis为什么使用跳表而不是用B+树</h3><h4 id="内存友好"><a href="#内存友好" class="headerlink" title="内存友好"></a>内存友好</h4><ul><li>B+ 树节点一般需要连续的内存块来存储 key 数组和指针，内存分配与管理更复杂，在频繁插入&#x2F;删除时可能产生碎片。</li><li>Redis 是单线程事件循环模型，越简单的算法越能减少代码复杂度和 CPU 消耗。</li></ul><h4 id="范围查询天然高效"><a href="#范围查询天然高效" class="headerlink" title="范围查询天然高效"></a>范围查询天然高效</h4><ul><li>跳表的“横向+纵向”链表结构，可以非常高效地从某个分数（score）开始顺序遍历范围内的元素。</li><li>在 B+ 树中做范围查询虽然也高效，但涉及节点间的磁盘&#x2F;页式结构优势在 Redis 的内存场景里不明显。</li></ul><h4 id="性能稳定"><a href="#性能稳定" class="headerlink" title="性能稳定"></a>性能稳定</h4><ul><li>跳表查找、插入、删除的平均时间复杂度都是 O(log n)，而且性能波动小。</li><li>B+ 树在节点分裂或合并时有额外的复杂维护成本。</li></ul><h4 id="实现简单"><a href="#实现简单" class="headerlink" title="实现简单"></a>实现简单</h4><ul><li>跳表 基于链表+多层索引结构，用纯指针连接，不需要像 B+ 树那样维护复杂的节点分裂、合并逻辑。</li></ul><h3 id="Redis压缩列表怎么实现的"><a href="#Redis压缩列表怎么实现的" class="headerlink" title="Redis压缩列表怎么实现的"></a>Redis压缩列表怎么实现的</h3><ul><li>是 Redis 为了节约内存而开发的，它是由连续内存块组成的顺序型数据结构，有点类似于数组。</li></ul><h4 id="结构布局"><a href="#结构布局" class="headerlink" title="结构布局"></a>结构布局</h4><table><thead><tr><th>字段</th><th>大小</th><th>作用</th></tr></thead><tbody><tr><td><code>zlbytes</code></td><td>4 字节</td><td>记录整个 ziplist 占用的字节数，方便内存重新分配</td></tr><tr><td><code>zltail</code></td><td>4 字节</td><td>记录最后一个节点相对于列表起始位置的偏移量，快速找到尾节点</td></tr><tr><td><code>zllen</code></td><td>2 字节</td><td>节点数量（&lt; 65535），超过这个值就需要遍历统计</td></tr><tr><td><strong>entry[]</strong></td><td>不定</td><td>存储每个数据节点</td></tr><tr><td><code>zlend</code></td><td>1 字节</td><td>特殊标志 <code>0xFF</code>，表示列表结束</td></tr></tbody></table><h4 id="Entry结点格式"><a href="#Entry结点格式" class="headerlink" title="Entry结点格式"></a>Entry结点格式</h4><ul><li>prevlen<ul><li>记录前一个 entry 的长度（1 字节或 5 字节）</li><li>用来支持从尾向前遍历</li></ul></li><li>encoding<ul><li>记录当前节点数据类型和长度（可以表示字符串或整数）</li><li>如果是小整数，会直接存在 encoding 里而不是单独分配空间</li></ul></li><li>data<ul><li>真正存储的内容（字符串字节数组或整数）</li></ul></li></ul><h4 id="压缩列表的性质"><a href="#压缩列表的性质" class="headerlink" title="压缩列表的性质"></a>压缩列表的性质</h4><ul><li><p>当我们往压缩列表中插入数据时，压缩列表就会根据数据类型是字符串还是整数，以及数据的大小，会使用不同空间大小的 prevlen 和 encoding 这两个元素里保存的信息，这种根据数据大小和类型进行不同的空间大小分配的设计思想，正是 Redis 为了节省内存而采用的。</p></li><li><p>压缩列表的缺点是会发生连锁更新的问题，因此连锁更新一旦发生，就会导致压缩列表占用的内存空间要多次重新分配，这就会直接影响到压缩列表的访问性能。</p></li><li><p>所以说，虽然压缩列表紧凑型的内存布局能节省内存开销，但是如果保存的元素数量增加了，或是元素变大了，会导致内存重新分配，最糟糕的是会有「连锁更新」的问题。</p></li><li><p>因此，压缩列表只会用于保存的节点数量不多的场景，只要节点数量足够小，即使发生连锁更新，也是能接受的。</p></li></ul><h3 id="介绍一下-Redis-中的-listpack"><a href="#介绍一下-Redis-中的-listpack" class="headerlink" title="介绍一下 Redis 中的 listpack"></a>介绍一下 Redis 中的 listpack</h3><h4 id="quicklist"><a href="#quicklist" class="headerlink" title="quicklist"></a>quicklist</h4><ul><li>使用一个双向链表，链表的结点是压缩列表</li><li>quicklist 虽然通过控制 quicklistNode 结构里的压缩列表的大小或者元素个数，来减少连锁更新带来的性能影响，但是并没有完全解决连锁更新的问题。</li><li>因为 quicklistNode 还是用了压缩列表来保存元素，压缩列表连锁更新的问题，来源于它的结构设计，所以要想彻底解决这个问题，需要设计一个新的数据结构。</li></ul><h4 id="listpack"><a href="#listpack" class="headerlink" title="listpack"></a>listpack</h4><ul><li>结构布局<table><thead><tr><th>字段</th><th>大小</th><th>作用</th></tr></thead><tbody><tr><td><code>total_bytes</code></td><td>4 字节</td><td>整个 listpack 占用的总字节数</td></tr><tr><td><code>num_elements</code></td><td>2 字节</td><td>元素数量</td></tr><tr><td><code>entry[]</code></td><td>不定</td><td>依次存放每个数据节点</td></tr><tr><td><code>end</code></td><td>1 字节</td><td>固定值 <code>0xFF</code>，标识结尾</td></tr></tbody></table></li><li>节点格式<ul><li>encoding：存储数据类型及长度信息（变长编码，节省空间）</li><li>content：实际数据，可以是字符串或整数</li><li>backlen：记录整个 entry 占用的字节数，用于反向遍历</li></ul></li></ul><h3 id="哈希表的扩容"><a href="#哈希表的扩容" class="headerlink" title="哈希表的扩容"></a>哈希表的扩容</h3><h4 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h4><p><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E5%93%88%E5%B8%8C%E8%A1%A8%E6%89%A9%E5%AE%B9.png" alt="哈希表扩容"></p><ul><li>问题：如果「哈希表 1 」的数据量非常大，那么在迁移至「哈希表 2 」的时候，因为会涉及大量的数据拷贝，此时可能会对 Redis 造成阻塞，无法服务其他请求。</li></ul><h4 id="渐进式-rehash"><a href="#渐进式-rehash" class="headerlink" title="渐进式 rehash"></a>渐进式 rehash</h4><ul><li>给「哈希表 2」 分配空间；</li><li>在 rehash 进行期间，每次哈希表元素进行新增、删除、查找或者更新操作时，Redis 除了会执行对应的操作之外，还会顺序将「哈希表 1 」中索引位置上的所有 key-value 迁移到「哈希表 2」 上；新增只插入新表；查询时先查原表再查新表</li><li>随着处理客户端发起的哈希表操作请求数量越多，最终在某个时间点会把「哈希表 1 」的所有 key-value 迁移到「哈希表 2」，从而完成 rehash 操作。</li></ul><h3 id="String是用什么存储的？为什么不用-c-语言中的字符串"><a href="#String是用什么存储的？为什么不用-c-语言中的字符串" class="headerlink" title="String是用什么存储的？为什么不用 c 语言中的字符串"></a>String是用什么存储的？为什么不用 c 语言中的字符串</h3><ul><li>Redis 的 String 并不是直接用 C 语言里原生的 char* 字符串来存储的，而是用 SDS（Simple Dynamic String，简单动态字符串） 这个自定义结构来实现的。 这是 Redis 的一个关键设计之一，目的是让字符串操作更高效、更安全、功能更丰富。</li></ul><h4 id="SDS的存储结构"><a href="#SDS的存储结构" class="headerlink" title="SDS的存储结构"></a>SDS的存储结构</h4><table><thead><tr><th>字段</th><th>类型</th><th>含义</th></tr></thead><tbody><tr><td>len</td><td>int &#x2F; uint</td><td>记录当前已使用的字节数（不含末尾的 <code>\0</code>）</td></tr><tr><td>alloc</td><td>int &#x2F; uint</td><td>已分配的缓冲区大小（不含末尾的 <code>\0</code>）</td></tr><tr><td>flags</td><td>unsigned char</td><td>记录 SDS 类型及编码等信息</td></tr><tr><td>buf[]</td><td>char 数组</td><td>实际存储数据的缓冲区，末尾会保留一个 <code>\0</code> 以便与 C 字符串兼容</td></tr></tbody></table><h4 id="不用-C-原生字符串"><a href="#不用-C-原生字符串" class="headerlink" title="不用 C 原生字符串"></a>不用 C 原生字符串</h4><ul><li>C字符串获取长度为O(1)</li><li>支持二进制安全（Binary-safe）<ul><li>C 字符串不能存 \0（会被当作结束符）</li><li>SDS 用 len 记录长度，可以存任意字节（包括 \0）</li></ul></li><li>不会发生缓冲区溢出<ul><li>C 语言的字符串标准库提供的字符串操作函数，大多数（比如 strcat 追加字符串函数）都是不安全的，因为这些函数把缓冲区大小是否满足操作需求的工作交由开发者来保证，程序内部并不会判断缓冲区大小是否足够用，当发生了缓冲区溢出就有可能造成程序异常结束。</li><li>所以，Redis 的 SDS 结构里引入了 alloc 和 len 成员变量，这样 SDS API 通过 alloc - len 计算，可以算出剩余可用的空间大小，这样在对字符串做修改操作的时候，就可以由程序内部判断缓冲区大小是否足够用。</li><li>而且，当判断出缓冲区大小不够用时，Redis 会自动将扩大 SDS 的空间大小，以满足修改所需的大小。</li></ul></li></ul><h2 id="Reids线程模型"><a href="#Reids线程模型" class="headerlink" title="Reids线程模型"></a>Reids线程模型</h2><h3 id="Redis使用单线程为什么快？"><a href="#Redis使用单线程为什么快？" class="headerlink" title="Redis使用单线程为什么快？"></a>Redis使用单线程为什么快？</h3><ul><li>Redis 的大部分操作都在内存中完成，并且采用了高效的数据结构，因此 Redis 瓶颈可能是机器的内存或者网络带宽，而并非 CPU，既然 CPU 不是瓶颈，那么自然就采用单线程的解决方案了；</li><li>Redis 采用单线程模型可以避免了多线程之间的竞争，省去了多线程切换带来的时间和性能上的开销，而且也不会导致死锁问题。</li><li>Redis 采用了 I&#x2F;O 多路复用机制处理大量的客户端 Socket 请求，IO 多路复用机制是指一个线程处理多个 IO 流，就是我们经常听到的 select&#x2F;epoll 机制。简单来说，在 Redis 只运行单线程的情况下，该机制允许内核中，同时存在多个监听 Socket 和已连接 Socket。内核会一直监听这些 Socket 上的连接请求或数据请求。一旦有请求到达，就会交给 Redis 线程处理，这就实现了一个 Redis 线程处理多个 IO 流的效果。</li></ul><h3 id="Redis哪些地方使用了多线程"><a href="#Redis哪些地方使用了多线程" class="headerlink" title="Redis哪些地方使用了多线程?"></a>Redis哪些地方使用了多线程?</h3><h4 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h4><ul><li>Redis 单线程指的是「接收客户端请求-&gt;解析请求 -&gt;进行数据读写等操作-&gt;发送数据给客户端」这个过程是由一个线程（主线程）来完成的，这也是我们常说 Redis 是单线程的原因。</li></ul><h4 id="后台线程"><a href="#后台线程" class="headerlink" title="后台线程"></a>后台线程</h4><ul><li>Redis 在 2.6 版本，会启动 2 个后台线程，分别处理关闭文件、AOF 刷盘这两个任务；</li><li>Redis 在 4.0 版本之后，新增了一个新的后台线程，用来异步释放 Redis 内存，也就是 lazyfree 线程。例如执行 unlink key &#x2F; flushdb async &#x2F; flushall async 等命令，会把这些删除操作交给后台线程来执行，好处是不会导致 Redis 主线程卡顿。因此，当我们要删除一个<strong>大key</strong>的时候，不要使用 del 命令删除，因为 del 是在主线程处理的，这样会导致 Redis 主线程卡顿，因此我们应该使用 unlink 命令来异步删除大key。</li><li>之所以单独创线程，是因为耗时，放在主线程会导致阻塞</li></ul><h4 id="网络请求"><a href="#网络请求" class="headerlink" title="网络请求"></a>网络请求</h4><ul><li>在 Redis 6.0 版本之后，也采用了多个 I&#x2F;O 线程来处理网络请求，这是因为随着网络硬件的性能提升，Redis 的性能瓶颈有时会出现在网络 I&#x2F;O 的处理上。</li><li>默认情况下，只针对响应数据使用多线程，要想开启多线程处理客户端请求，则需要修改配置</li></ul><h4 id="Redis会额外创建6个线程"><a href="#Redis会额外创建6个线程" class="headerlink" title="Redis会额外创建6个线程"></a>Redis会额外创建6个线程</h4><ul><li>Redis-server ： Redis的主线程，主要负责执行命令；</li><li>bio_close_file、bio_aof_fsync、bio_lazy_free：三个后台线程，分别异步处理关闭文件任务、AOF刷盘任务、释放内存任务；</li><li>io_thd_1、io_thd_2、io_thd_3：三个 I&#x2F;O 线程，io-threads 默认是 4 ，所以会启动 3（4-1）个 I&#x2F;O 多线程，用来分担 Redis 网络 I&#x2F;O 的压力。</li></ul><h3 id="Redis怎么实现的io多路复用"><a href="#Redis怎么实现的io多路复用" class="headerlink" title="Redis怎么实现的io多路复用"></a>Redis怎么实现的io多路复用</h3><ul><li>因为 Redis 是跑在「单线程」中的，所有的操作都是按照顺序线性执行的，但是由于读写操作等待用户输入 或 输出都是阻塞的，所以 I&#x2F;O 操作在一般情况下往往不能直接返回，这会导致某一文件的 I&#x2F;O 阻塞导，致整个进程无法对其它客户提供服务。而 I&#x2F;O 多路复用就是为了解决这个问题而出现的。为了让单线程(进程)的服务端应用同时处理多个客户端的事件，Redis 采用了 IO 多路复用机制。</li><li>这里“多路”指的是多个网络连接客户端，“复用”指的是复用同一个线程(单进程)。I&#x2F;O 多路复用其实是使用一个线程来检查多个 Socket 的就绪状态，在单个线程中通过记录跟踪每一个 socket（I&#x2F;O流）的状态来管理处理多个 I&#x2F;O 流。</li></ul><h2 id="Redis事务"><a href="#Redis事务" class="headerlink" title="Redis事务"></a>Redis事务</h2><h3 id="如何实现Redis原子性"><a href="#如何实现Redis原子性" class="headerlink" title="如何实现Redis原子性"></a>如何实现Redis原子性</h3><ul><li>redis 执行一条命令的时候是具备原子性的，因为 redis 执行命令的时候是单线程来处理的，不存在多线程安全的问题。</li><li>如果要保证 2 条命令的原子性的话，可以考虑用 lua 脚本，将多个操作写到一个 Lua 脚本中，Redis 会把整个 Lua 脚本作为一个整体执行，在执行的过程中不会被其他命令打断，从而保证了 Lua 脚本中操作的原子性。</li></ul><h3 id="除了lua有没有什么也能保证redis的原子性？"><a href="#除了lua有没有什么也能保证redis的原子性？" class="headerlink" title="除了lua有没有什么也能保证redis的原子性？"></a>除了lua有没有什么也能保证redis的原子性？</h3><ul><li><p>redis 事务也可以保证多个操作的原子性。</p></li><li><p>如果 redis 事务正常执行，没有发生任何错误，那么使用 MULTI 和 EXEC 配合使用，就可以保证多个操作都完成。</p></li><li><p>但是，如果事务执行发生错误了，就没办法保证原子性了。比如说 2 个操作，第一个操作执行成果了，但是第二个操作执行的时候，命令出错了，那事务并不会回滚，因为Redis 中并没有提供回滚机制。</p></li></ul><h2 id="Redis日志"><a href="#Redis日志" class="headerlink" title="Redis日志"></a>Redis日志</h2><h3 id="Redis有哪2种持久化方式？分别的优缺点是什么？"><a href="#Redis有哪2种持久化方式？分别的优缺点是什么？" class="headerlink" title="Redis有哪2种持久化方式？分别的优缺点是什么？"></a>Redis有哪2种持久化方式？分别的优缺点是什么？</h3><h4 id="AOF-日志"><a href="#AOF-日志" class="headerlink" title="AOF 日志"></a>AOF 日志</h4><ul><li>Redis 在执行完一条写操作命令后，就会把该命令以追加的方式写入到一个文件里，然后 Redis 重启时，会读取该文件记录的命令，然后逐一执行命令的方式来进行数据恢复。</li><li>Redis写回硬盘策略<ul><li>Always，这个单词的意思是「总是」，所以它的意思是每次写操作命令执行完后，同步将 AOF 日志数据写回硬盘；</li><li>Everysec，这个单词的意思是「每秒」，所以它的意思是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，然后每隔一秒将缓冲区里的内容写回到硬盘；</li><li>No，意味着不由 Redis 控制写回硬盘的时机，转交给操作系统控制写回的时机，也就是每次写操作命令执行完后，先将命令写入到 AOF 文件的内核缓冲区，再由操作系统决定何时将缓冲区内容写回硬盘。</li></ul></li><li>优点：首先，AOF提供了更好的数据安全性，因为它默认每接收到一个写命令就会追加到文件末尾。即使Redis服务器宕机，也只会丢失最后一次写入前的数据。其次，AOF支持多种同步策略（如everysec、always等），可以根据需要调整数据安全性和性能之间的平衡。同时，AOF文件在Redis启动时可以通过重写机制优化，减少文件体积，加快恢复速度。并且，即使文件发生损坏，AOF还提供了redis-check-aof工具来修复损坏的文件。</li><li>缺点：因为记录了每一个写操作，所以AOF文件通常比RDB文件更大，消耗更多的磁盘空间。并且，频繁的磁盘IO操作（尤其是同步策略设置为always时）可能会对Redis的写入性能造成一定影响。而且，当问个文件体积过大时，AOF会进行重写操作，AOF如果没有开启AOF重写或者重写频率较低，恢复过程可能较慢，因为它需要重放所有的操作命令。</li></ul><h4 id="RDB-快照"><a href="#RDB-快照" class="headerlink" title="RDB 快照"></a>RDB 快照</h4><ul><li>因为 AOF 日志记录的是操作命令，不是实际的数据，所以用 AOF 方法做故障恢复时，需要全量把日志都执行一遍，一旦 AOF 日志非常多，势必会造成 Redis 的恢复操作缓慢。为了解决这个问题，Redis 增加了 RDB 快照。</li><li>Redis 提供了两个命令来生成 RDB 文件，分别是 save 和 bgsave，他们的区别就在于是否在「主线程」里执行：<ul><li>执行了 save 命令，就会在主线程生成 RDB 文件，由于和执行操作命令在同一个线程，所以如果写入 RDB 文件的时间太长，会阻塞主线程；</li><li>执行了 bgsave 命令，会创建一个子进程来生成 RDB 文件，这样可以避免主线程的阻塞；</li></ul></li><li>优点：RDB通过快照的形式保存某一时刻的数据状态，文件体积小，备份和恢复的速度非常快。并且，RDB是在主线程之外通过fork子进程来进行的，不会阻塞服务器处理命令请求，对Redis服务的性能影响较小。最后，由于是定期快照，RDB文件通常比AOF文件小得多。</li><li>缺点：RDB方式在两次快照之间，如果Redis服务器发生故障，这段时间的数据将会丢失。并且，如果在RDB创建快照到恢复期间有写操作，恢复后的数据可能与故障前的数据不完全一致</li></ul><h2 id="Redis缓存淘汰和过期删除"><a href="#Redis缓存淘汰和过期删除" class="headerlink" title="Redis缓存淘汰和过期删除"></a>Redis缓存淘汰和过期删除</h2><h3 id="过期删除策略和内存淘汰策略有什么区别？"><a href="#过期删除策略和内存淘汰策略有什么区别？" class="headerlink" title="过期删除策略和内存淘汰策略有什么区别？"></a>过期删除策略和内存淘汰策略有什么区别？</h3><ul><li>内存淘汰策略是在内存满了的时候，redis 会触发内存淘汰策略，来淘汰一些不必要的内存资源，以腾出空间，来保存新的内容</li><li>过期键删除策略是将已过期的键值对进行删除，Redis 采用的删除策略是惰性删除+定期删除。</li></ul><h3 id="介绍一下Redis-内存淘汰策略"><a href="#介绍一下Redis-内存淘汰策略" class="headerlink" title="介绍一下Redis 内存淘汰策略"></a>介绍一下Redis 内存淘汰策略</h3><ul><li>在32位系统中，Redis最大内存默认是3GB，因为32位系统最多只有4GB内存<table><thead><tr><th>策略</th><th>描述</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>noeviction</strong></td><td>不淘汰，写入报错</td><td>适合只读缓存</td></tr><tr><td><strong>volatile-lru</strong></td><td>在设置了过期时间的键中，按 LRU 淘汰</td><td>节约有限空间，保留常用键</td></tr><tr><td><strong>allkeys-lru</strong></td><td>所有键都参与 LRU 淘汰</td><td>通用场景</td></tr><tr><td><strong>volatile-lfu</strong></td><td>在有过期时间的键中，按访问频率最少淘汰</td><td>频率优先</td></tr><tr><td><strong>allkeys-lfu</strong></td><td>所有键按 LFU 淘汰</td><td>高频数据优先保留</td></tr><tr><td><strong>volatile-ttl</strong></td><td>按过期时间最短（TTL 最小）淘汰</td><td>有明确过期时间的临时数据</td></tr><tr><td><strong>volatile-random</strong></td><td>在有过期时间的键中随机淘汰</td><td>较少用</td></tr><tr><td><strong>allkeys-random</strong></td><td>所有键中随机淘汰</td><td>特殊场景测试</td></tr></tbody></table></li></ul><h3 id="介绍一下Redis过期删除策略"><a href="#介绍一下Redis过期删除策略" class="headerlink" title="介绍一下Redis过期删除策略"></a>介绍一下Redis过期删除策略</h3><h4 id="惰性删除"><a href="#惰性删除" class="headerlink" title="惰性删除"></a>惰性删除</h4><ul><li>Redis 的惰性删除策略由 db.c 文件中的 expireIfNeeded 函数实现，代码如下：<figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">int</span> <span class="hljs-title function_">expireIfNeeded</span><span class="hljs-params">(redisDb *db, robj *key)</span> &#123;<br>    <span class="hljs-comment">// 判断 key 是否过期</span><br>    <span class="hljs-keyword">if</span> (!keyIsExpired(db,key)) <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>    ....<br>    <span class="hljs-comment">/* 删除过期键 */</span><br>    ....<br>    <span class="hljs-comment">// 如果 server.lazyfree_lazy_expire 为 1 表示异步删除，反之同步删除；</span><br>    <span class="hljs-keyword">return</span> server.lazyfree_lazy_expire ? dbAsyncDelete(db,key) :<br>                                         dbSyncDelete(db,key);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>Redis 在访问或者修改 key 之前，都会调用 expireIfNeeded 函数对其进行检查，检查 key 是否过期：<ul><li>如果过期，则删除该 key，至于选择异步删除，还是选择同步删除，根据 lazyfree_lazy_expire 参数配置决定（Redis 4.0版本开始提供参数），然后返回 null 客户端；</li><li>如果没有过期，不做任何处理，然后返回正常的键值对给客户端；</li></ul></li></ul><h4 id="定期删除"><a href="#定期删除" class="headerlink" title="定期删除"></a>定期删除</h4><ul><li>Redis 的定期删除是每隔一段时间「随机」从数据库中取出一定数量的 key 进行检查，并删除其中的过期key。<ul><li>默认每10秒检查一次，随机抽取一定数量的key进行过期检查</li><li>随机抽查的数量默认是20</li></ul></li><li>过程：<ul><li>从过期字典中随机抽取 20 个 key；</li><li>检查这 20 个 key 是否过期，并删除已过期的 key；</li><li>如果本轮检查的已过期 key 的数量，超过 5 个（20&#x2F;4），也就是「已过期 key 的数量」占比「随机抽取 key 的数量」大于 25%，则继续重复步骤 1；如果已过期的 key 比例小于 25%，则停止继续删除过期 key，然后等待下一轮再检查。可以看到，定期删除是一个循环的流程。那 Redis 为了保证定期删除不会出现循环过度，导致线程卡死现象，为此增加了定期删除循环流程的时间上限，默认不会超过 25ms。</li></ul></li></ul><h2 id="集群"><a href="#集群" class="headerlink" title="集群"></a>集群</h2><h3 id="Redis主从同步中的增量和完全同步怎么实现？"><a href="#Redis主从同步中的增量和完全同步怎么实现？" class="headerlink" title="Redis主从同步中的增量和完全同步怎么实现？"></a>Redis主从同步中的增量和完全同步怎么实现？</h3><h4 id="完全同步"><a href="#完全同步" class="headerlink" title="完全同步"></a>完全同步</h4><ul><li>完全同步发生在以下几种情况：<ul><li>初次同步：当一个从服务器（slave）首次连接到主服务器（master）时，会进行一次完全同步。</li><li>从服务器数据丢失：如果从服务器数据由于某种原因（如断电）丢失，它会请求进行完全同步。</li><li>主服务器数据发生变化：如果从服务器长时间未与主服务器同步，导致数据差异太大，也可能触发完全同步。</li></ul></li><li>主从服务器间的第一次同步的过程可分为三个阶段：<ul><li>第一阶段是建立链接、协商同步；</li><li>第二阶段是主服务器同步数据给从服务器；</li><li>第三阶段是主服务器发送新写操作命令给从服务器。</li></ul></li><li>过程：<ul><li>从服务器发送SYNC命令：从服务器向主服务器发送SYNC命令，请求开始同步。</li><li>主服务器生成RDB快照：接收到SYNC命令后，主服务器会保存当前数据集的状态到一个临时文件，这个过程称为RDB（Redis Database）快照。</li><li>传输RDB文件：主服务器将生成的RDB文件发送给从服务器。</li><li>从服务器接收并应用RDB文件：从服务器接收RDB文件后，会清空当前的数据集，并载入RDB文件中的数据。</li><li>主服务器记录写命令：在RDB文件生成和传输期间，主服务器会记录所有接收到的写命令到replication backlog buffer。</li><li>传输写命令：一旦RDB文件传输完成，主服务器会将replication backlog buffer中的命令发送给从服务器，从服务器会执行这些命令，以保证数据的一致性。</li></ul></li></ul><h4 id="增量同步"><a href="#增量同步" class="headerlink" title="增量同步"></a>增量同步</h4><ul><li>量同步允许从服务器从断点处继续同步，而不是每次都进行完全同步。它基于PSYNC命令，使用了运行ID（run ID）和复制偏移量（offset）的概念。</li><li>过程：<ul><li>从节点请求恢复<ul><li>断线重连时，从节点向主节点发送 PSYNC {runid} {offset}</li><li>runid：主节点的运行 ID（上次全量同步时获得）</li><li>offset：从节点当前同步到的字节偏移量</li></ul></li><li>主节点检查条件<ul><li>比对 runid 是否一致（同一个主节点实例）</li><li>检查该 offset 是否仍在 复制积压缓冲区 </li><li>复制积压缓冲区是一个固定大小的环形缓冲区，保存主节点最近一段时间的写命令</li></ul></li><li>满足条件 → 部分重同步（Partial Resync）<ul><li>主节点将从 offset 之后的命令推送给从节点</li><li>从节点应用这些命令，状态追平主节点</li><li>同步完成后继续正常的命令传播阶段</li></ul></li><li>不满足条件 → 全量同步（Full Resync）<ul><li>如果 runid 不一致，或 offset 之前的数据已被环形缓冲区覆盖，就要重新执行 RDB 全量同步</li></ul></li></ul></li></ul><h3 id="redis主从和集群可以保证数据一致性吗-？"><a href="#redis主从和集群可以保证数据一致性吗-？" class="headerlink" title="redis主从和集群可以保证数据一致性吗 ？"></a>redis主从和集群可以保证数据一致性吗 ？</h3><ul><li>redis 主从和集群在CAP理论都属于AP模型，即在面临网络分区时选择保证可用性和分区容忍性，而牺牲了强一致性。这意味着在网络分区的情况下，Redis主从复制和集群可以继续提供服务并保持可用，但可能会出现部分节点之间的数据不一致。</li></ul><h3 id="哨兵机制原理是什么？"><a href="#哨兵机制原理是什么？" class="headerlink" title="哨兵机制原理是什么？"></a>哨兵机制原理是什么？</h3><ul><li>Redis 在 2.8 版本以后提供的哨兵（Sentinel）机制，它的作用是实现主从节点故障转移。它会监测主节点是否存活，如果发现主节点挂了，它就会选举一个从节点切换为主节点，并且把新主节点的相关信息通知给从节点和客户端。</li><li>哨兵其实是一个运行在特殊模式下的 Redis 进程，所以它也是一个节点。从“哨兵”这个名字也可以看得出来，它相当于是“观察者节点”，观察的对象是主从节点。</li><li>哨兵节点主要负责三件事情：监控、选主、通知。</li></ul><h3 id="哨兵机制的选主节点的算法介绍一下"><a href="#哨兵机制的选主节点的算法介绍一下" class="headerlink" title="哨兵机制的选主节点的算法介绍一下"></a>哨兵机制的选主节点的算法介绍一下</h3><ul><li>当redis集群的主节点故障时，Sentinel集群将从剩余的从节点中选举一个新的主节点，有以下步骤：</li></ul><h4 id="故障节点主观下线"><a href="#故障节点主观下线" class="headerlink" title="故障节点主观下线"></a>故障节点主观下线</h4><ul><li>Sentinel集群的每一个Sentinel节点会定时对redis集群的所有节点发心跳包检测节点是否正常。如果一个节点在down-after-milliseconds时间内没有回复Sentinel节点的心跳包，则该redis节点被该Sentinel节点主观下线。</li></ul><h4 id="故障节点客观下线"><a href="#故障节点客观下线" class="headerlink" title="故障节点客观下线"></a>故障节点客观下线</h4><ul><li>当节点被一个Sentinel节点记为主观下线时，并不意味着该节点肯定故障了，还需要Sentinel集群的其他Sentinel节点共同判断为主观下线才行。</li><li>该Sentinel节点会询问其他Sentinel节点，如果Sentinel集群中超过quorum数量的Sentinel节点认为该redis节点主观下线，则该redis客观下线。</li><li>quorum在设置主节点时设置</li><li>如果客观下线的redis节点是从节点或者是Sentinel节点，则操作到此为止，没有后续的操作了；如果客观下线的redis节点为主节点，则开始故障转移，从从节点中选举一个节点升级为主节点。</li></ul><h4 id="Sentinel集群选举Leader"><a href="#Sentinel集群选举Leader" class="headerlink" title="Sentinel集群选举Leader"></a>Sentinel集群选举Leader</h4><ul><li>每一个Sentinel节点都可以成为Leader，当一个Sentinel节点确认redis集群的主节点主观下线后，会请求其他Sentinel节点要求将自己选举为Leader。被请求的Sentinel节点如果没有同意过其他Sentinel节点的选举请求，则同意该请求(选举票数+1)，否则不同意。</li><li>如果一个Sentinel节点获得的选举票数达到Leader最低票数(quorum和Sentinel节点数&#x2F;2+1的最大值)，则该Sentinel节点选举为Leader；否则重新进行选举。</li></ul><h4 id="Sentinel-Leader决定新主节点"><a href="#Sentinel-Leader决定新主节点" class="headerlink" title="Sentinel Leader决定新主节点"></a>Sentinel Leader决定新主节点</h4><ul><li>过滤故障的节点</li><li>选择优先级slave-priority最大的从节点作为主节点，如不存在则继续</li><li>选择复制偏移量（数据写入量的字节，记录写了多少数据。主服务器会把偏移量同步给从服务器，当主从的偏移量一致，则数据是完全同步）最大的从节点作为主节点，如不存在则继续</li><li>选择runid（redis每次启动的时候生成随机的runid作为redis的标识）最小的从节点作为主节点</li></ul><h3 id="Redis集群的模式了解吗-优缺点了解吗"><a href="#Redis集群的模式了解吗-优缺点了解吗" class="headerlink" title="Redis集群的模式了解吗 优缺点了解吗"></a>Redis集群的模式了解吗 优缺点了解吗</h3><h4 id="Redis集群的模式"><a href="#Redis集群的模式" class="headerlink" title="Redis集群的模式"></a>Redis集群的模式</h4><ul><li><p>当 Redis 缓存数据量大到一台服务器无法缓存时，就需要使用 Redis 切片集群（Redis Cluster ）方案，它将数据分布在不同的服务器上，以此来降低系统对单主节点的依赖，从而提高 Redis 服务的读写性能。</p></li><li><p>Redis Cluster 方案采用哈希槽（Hash Slot），来处理数据和节点之间的映射关系。在 Redis Cluster 方案中，一个切片集群共有 16384 个哈希槽，这些哈希槽类似于数据分区，每个键值对都会根据它的 key，被映射到一个哈希槽中，具体执行过程分为两大步：</p><ul><li>根据键值对的 key，按照 CRC16 算法计算一个 16 bit 的值。</li><li>再用 16bit 值对 16384 取模，得到 0~16383 范围内的模数，每个模数代表一个相应编号的哈希槽。</li></ul></li><li><p>接下来的问题就是，这些哈希槽怎么被映射到具体的 Redis 节点上的呢？有两种方案：</p><ul><li>平均分配： 在使用 cluster create 命令创建 Redis 集群时，Redis 会自动把所有哈希槽平均分布到集群节点上。比如集群中有 9 个节点，则每个节点上槽的个数为 16384&#x2F;9 个。</li><li>手动分配： 可以使用 cluster meet 命令手动建立节点间的连接，组成集群，再使用 cluster addslots 命令，指定每个节点上的哈希槽个数。</li></ul></li></ul><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>高可用性：Redis集群最主要的优点是提供了高可用性，节点之间采用主从复制机制，可以保证数据的持久性和容错能力，哪怕其中一个节点挂掉，整个集群还可以继续工作。</li><li>高性能：Redis集群采用分片技术，将数据分散到多个节点，从而提高读写性能。当业务访问量大到单机Redis无法满足时，可以通过添加节点来增加集群的吞吐量。</li><li>扩展性好：Redis集群的扩展性非常好，可以根据实际需求动态增加或减少节点，从而实现可扩展性。集群模式中的某些节点还可以作为代理节点，自动转发请求，增加数据模式的灵活度和可定制性。</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li><strong>部署和维护较复杂：</strong>Redis集群的部署和维护需要考虑到分片规则、节点的布置、主从配置以及故障处理等多个方面，需要较强的技术支持，增加了节点异常处理的复杂性和成本。</li><li><strong>集群同步问题：</strong>当某些节点失败或者网络出故障，集群中数据同步的问题也会出现。数据同步的复杂度和工作量随着节点的增加而增加，同步时间也较长，导致一定的读写延迟。</li><li><strong>数据分片限制：</strong>Redis集群的数据分片也限制了一些功能的实现，如在一个key上修改多次，可能会因为该key所在的节点位置变化而失败。此外，由于将数据分散存储到各个节点，某些操作不能跨节点实现，不同节点之间的一些操作需要额外注意。</li></ul><h3 id="为什么redis比mysql要快？"><a href="#为什么redis比mysql要快？" class="headerlink" title="为什么redis比mysql要快？"></a>为什么redis比mysql要快？</h3><ul><li>内存存储：Redis 是基于内存存储的 NoSQL 数据库，而 MySQL 是基于磁盘存储的关系型数据库。由于内存存储速度快，Redis 能够更快地读取和写入数据，而无需像 MySQL 那样频繁进行磁盘 I&#x2F;O 操作。</li><li>简单数据结构：Redis 是基于键值对存储数据的，支持简单的数据结构（字符串、哈希、列表、集合、有序集合）。相比之下，MySQL 需要定义表结构、索引等复杂的关系型数据结构，因此在某些场景下 Redis 的数据操作更为简单高效，比如 Redis 用哈希表查询， 只需要O1 时间复杂度，而MySQL引擎的底层实现是B+Tree，时间复杂度是O(logn)</li><li>线程模型：Redis 采用单线程模型可以避免了多线程之间的竞争，省去了多线程切换带来的时间和性能上的开销，而且也不会导致死锁问题。</li></ul><h3 id="本地缓存VS-Redis"><a href="#本地缓存VS-Redis" class="headerlink" title="本地缓存VS.Redis"></a>本地缓存VS.Redis</h3><table><thead><tr><th>对比项</th><th>本地缓存（In‑Memory Cache）</th><th>Redis缓存（分布式缓存）</th></tr></thead><tbody><tr><td><strong>存储位置</strong></td><td>应用进程所在服务器的内存</td><td>独立的Redis服务（内存型数据库），可在本机或远程</td></tr><tr><td><strong>访问速度</strong></td><td><strong>极快</strong>（内存直接读写，纳秒&#x2F;微秒级）</td><td>很快，但需网络请求（微秒到毫秒级）</td></tr><tr><td><strong>部署与维护</strong></td><td>简单，无需额外服务</td><td>需要安装和维护Redis服务</td></tr><tr><td><strong>数据共享</strong></td><td><strong>无法跨进程&#x2F;跨服务器共享</strong></td><td>天生支持分布式，多实例间共享数据</td></tr><tr><td><strong>容量限制</strong></td><td>受单机内存限制</td><td>可扩展，通过分片、集群方式扩容</td></tr><tr><td><strong>一致性</strong></td><td>多节点时数据一致性差（每台机器缓存不一样）</td><td>数据集中管理，一致性更好</td></tr><tr><td><strong>常见场景</strong></td><td>高频访问的小量数据、本机计算结果缓存</td><td>跨服务共享数据、大规模缓存、消息队列、分布式锁等</td></tr></tbody></table><h3 id="Redis除了缓存，还有哪些应用"><a href="#Redis除了缓存，还有哪些应用" class="headerlink" title="Redis除了缓存，还有哪些应用?"></a>Redis除了缓存，还有哪些应用?</h3><h4 id="Redis实现消息队列"><a href="#Redis实现消息队列" class="headerlink" title="Redis实现消息队列"></a>Redis实现消息队列</h4><ul><li><strong>使用Pub&#x2F;Sub模式：</strong>Redis的Pub&#x2F;Sub是一种基于发布&#x2F;订阅的消息模式，任何客户端都可以订阅一个或多个频道，发布者可以向特定频道发送消息，所有订阅该频道的客户端都会收到此消息。该方式实现起来比较简单，发布者和订阅者完全解耦，支持模式匹配订阅。但是这种方式不支持消息持久化，消息发布后若无订阅者在线则会被丢弃；不保证消息的顺序和可靠性传输。</li><li>使用List结构：使用List的方式通常是使用LPUSH命令将消息推入一个列表，消费者使用BLPOP或BRPOP阻塞地从列表中取出消息（先进先出FIFO）。这种方式可以实现简单的任务队列。这种方式可以结合Redis的过期时间特性实现消息的TTL；通过Redis事务可以保证操作的原子性。但是需要客户端自己实现消息确认、重试等机制，相比专门的消息队列系统功能较弱。</li></ul><h4 id="Redis实现分布式锁"><a href="#Redis实现分布式锁" class="headerlink" title="Redis实现分布式锁"></a>Redis实现分布式锁</h4><ul><li>set nx方式：Redis提供了几种方式来实现分布式锁，最常用的是基于SET命令的争抢锁机制。客户端可以使用SET resource_name lock_value NX PX milliseconds命令设置锁，其中NX表示只有当键不存在时才设置，PX指定锁的有效时间（毫秒）。如果设置成功，则认为客户端获得锁。客户端完成操作后，解锁的还需要先判断锁是不是自己，再进行删除，这里涉及到 2 个操作，为了保证这两个操作的原子性，可以用 lua 脚本来实现。</li><li><strong>RedLock算法：</strong>为了提高分布式锁的可靠性，Redis作者Antirez提出了RedLock算法，它基于多个独立的Redis实例来实现一个更安全的分布式锁。它的基本原理是客户端尝试在多数（大于半数）Redis实例上同时加锁，只有当在大多数实例上加锁成功时才认为获取锁成功。锁的超时时间应该远小于单个实例的超时时间，以避免死锁。该方式可以通过跨多个节点减少单点故障的影响，提高了锁的可用性和安全性。</li></ul><h3 id="Redis分布式锁的实现原理？什么场景下用到分布式锁？"><a href="#Redis分布式锁的实现原理？什么场景下用到分布式锁？" class="headerlink" title="Redis分布式锁的实现原理？什么场景下用到分布式锁？"></a>Redis分布式锁的实现原理？什么场景下用到分布式锁？</h3><ul><li>分布式锁是用于分布式环境下并发控制的一种机制，用于控制某个资源在同一时刻只能被一个应用所使用。如下图所示：<br><img src="/2025/08/23/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.png" alt="Redis分布式锁"></li></ul><h4 id="加锁"><a href="#加锁" class="headerlink" title="加锁"></a>加锁</h4><ul><li><p>Redis 本身可以被多个客户端共享访问，正好就是一个共享存储系统，可以用来保存分布式锁，而且 Redis 的读写性能高，可以应对高并发的锁操作场景。Redis 的 SET 命令有个 NX 参数可以实现「key不存在才插入」，所以可以用它来实现分布式锁：</p><ul><li>如果 key 不存在，则显示插入成功，可以用来表示加锁成功；</li><li>如果 key 存在，则会显示插入失败，可以用来表示加锁失败。</li><li>基于 Redis 节点实现分布式锁时，对于加锁操作，我们需要满足三个条件。</li></ul></li><li><p>加锁包括了读取锁变量、检查锁变量值和设置锁变量值三个操作，但需要以原子操作的方式完成，所以，我们使用 SET 命令带上 NX 选项来实现加锁；</p></li><li><p>锁变量需要设置过期时间，以免客户端拿到锁后发生异常，导致锁一直无法释放，所以，我们在 SET 命令执行时加上 EX&#x2F;PX 选项，设置其过期时间；</p></li><li><p>锁变量的值需要能区分来自不同客户端的加锁操作，以免在释放锁时，出现误释放操作，所以，我们使用 SET 命令设置锁变量值时，每个客户端设置的值是一个唯一值，用于标识客户端；</p></li><li><p>满足这三个条件的分布式命令如下：</p><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gams"><span class="hljs-keyword">SET</span> lock_key <span class="hljs-comment">unique_value NX PX 10000</span><br></code></pre></td></tr></table></figure></li><li><p>lock_key 就是 key 键；</p></li><li><p>unique_value 是客户端生成的唯一的标识，区分来自不同客户端的锁操作；</p></li><li><p>NX 代表只在 lock_key 不存在时，才对 lock_key 进行设置操作；</p></li><li><p>PX 10000 表示设置 lock_key 的过期时间为 10s，这是为了避免客户端发生异常而无法释放锁。</p></li></ul><h4 id="解锁"><a href="#解锁" class="headerlink" title="解锁"></a>解锁</h4><ul><li><p>解锁的过程就是将 lock_key 键删除（del lock_key），但不能乱删，要保证执行操作的客户端就是加锁的客户端。所以，解锁的时候，我们要先判断锁的 unique_value 是否为加锁客户端，是的话，才将 lock_key 键删除。</p></li><li><p>可以看到，解锁是有两个操作，这时就需要 Lua 脚本来保证解锁的原子性，因为 Redis 在执行 Lua 脚本时，可以以原子性的方式执行，保证了锁释放操作的原子性。</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs lua">// 释放锁时，先比较 unique_value 是否相等，避免锁的误释放<br><span class="hljs-keyword">if</span> redis.call(<span class="hljs-string">&quot;get&quot;</span>,KEYS[<span class="hljs-number">1</span>]) == ARGV[<span class="hljs-number">1</span>] <span class="hljs-keyword">then</span><br>  <span class="hljs-keyword">return</span> redis.call(<span class="hljs-string">&quot;del&quot;</span>,KEYS[<span class="hljs-number">1</span>])<br><span class="hljs-keyword">else</span><br>  <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure></li><li><p>这样一来，就通过使用 SET 命令和 Lua 脚本在 Redis 单节点上完成了分布式锁的加锁和解锁。</p></li></ul><h3 id="大Key问题的缺点？"><a href="#大Key问题的缺点？" class="headerlink" title="大Key问题的缺点？"></a>大Key问题的缺点？</h3><ul><li>内存占用过高。大Key占用过多的内存空间，可能导致可用内存不足，从而触发内存淘汰策略。在极端情况下，可能导致内存耗尽，Redis实例崩溃，影响系统的稳定性。</li><li>性能下降。大Key会占用大量内存空间，导致内存碎片增加，进而影响Redis的性能。对于大Key的操作，如读取、写入、删除等，都会消耗更多的CPU时间和内存资源，进一步降低系统性能。</li><li>阻塞其他操作。某些对大Key的操作可能会导致Redis实例阻塞。例如，使用DEL命令删除一个大Key时，可能会导致Redis实例在一段时间内无法响应其他客户端请求，从而影响系统的响应时间和吞吐量。</li><li>网络拥塞。每次获取大key产生的网络流量较大，可能造成机器或局域网的带宽被打满，同时波及其他服务。例如：一个大key占用空间是1MB，每秒访问1000次，就有1000MB的流量。</li><li>主从同步延迟。当Redis实例配置了主从同步时，大Key可能导致主从同步延迟。由于大Key占用较多内存，同步过程中需要传输大量数据，这会导致主从之间的网络传输延迟增加，进而影响数据一致性。</li><li>数据倾斜。在Redis集群模式中，某个数据分片的内存使用率远超其他数据分片，无法使数据分片的内存资源达到均衡。另外也可能造成Redis内存达到maxmemory参数定义的上限导致重要的key被逐出，甚至引发内存溢出。</li></ul><h3 id="如何解决大Key问题"><a href="#如何解决大Key问题" class="headerlink" title="如何解决大Key问题"></a>如何解决大Key问题</h3><h4 id="对大Key进行拆分存储"><a href="#对大Key进行拆分存储" class="headerlink" title="对大Key进行拆分存储"></a>对大Key进行拆分存储</h4><ul><li>例如将user:123:profile拆分成<code>user:123:basic</code>、<code>user:123:contact</code>等</li></ul><h4 id="分页存储"><a href="#分页存储" class="headerlink" title="分页存储"></a>分页存储</h4><ul><li>例如order:list 存了用户的所有订单，几百万条，一旦 LRANGE 就阻塞很久。</li><li>拆分成：<ul><li>order:list:1（第 1 页，存最近 100 条）</li><li>order:list:2（第 2 页）…</li></ul></li></ul><h4 id="懒加载"><a href="#懒加载" class="headerlink" title="懒加载"></a>懒加载</h4><ul><li>例如article:content:999 里存了一篇几十 KB ~ MB 的文章全文，每次访问都直接从 Redis 取全量，浪费流量和 CPU。</li><li>初次访问时，只缓存常用的前几段文字到 Redis，其余段落不立即缓存</li><li>用户滚动到需要的段落时，再去数据库加载，并单独缓存到 article:content:999:part:{n}</li><li>下次再访问该段落时，直接命中缓存</li></ul><h3 id="什么是热Key"><a href="#什么是热Key" class="headerlink" title="什么是热Key"></a>什么是热Key</h3><ul><li>在 Redis 里，热 Key（Hot Key） 指的是某个 Key 被频繁访问，访问量远超其他 Key。热 Key 常见于爆款商品详情、库存、计数器、排行榜、用户会话与配置开关。</li><li>带来的影响：<ul><li><p>CPU&#x2F;网络压力集中：单个 Key 高并发访问，占用大量 CPU 和网络带宽</p></li><li><p>缓存雪崩风险：热 Key 过期瞬间，海量请求直击数据库</p></li><li><p>延迟波动：其他正常请求受到影响，整体响应变慢</p></li><li><p>集群节点失衡：在分布式 Redis 中，热 Key 所在节点压力爆表</p></li></ul></li></ul><h3 id="解决热Key问题"><a href="#解决热Key问题" class="headerlink" title="解决热Key问题"></a>解决热Key问题</h3><h4 id="在Redis集群架构中对热Key进行复制"><a href="#在Redis集群架构中对热Key进行复制" class="headerlink" title="在Redis集群架构中对热Key进行复制"></a>在Redis集群架构中对热Key进行复制</h4><ul><li>假设 item_stock:1001 是热门商品库存 Key，可拆分成：<figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs avrasm"><span class="hljs-symbol">item_stock:</span><span class="hljs-number">1001</span>:<span class="hljs-number">0</span><br><span class="hljs-symbol">item_stock:</span><span class="hljs-number">1001</span>:<span class="hljs-number">1</span><br>...<br></code></pre></td></tr></table></figure></li><li>下单时随机访问一个分片 Key，并在应用层汇总库存。</li></ul><h4 id="使用本地缓存"><a href="#使用本地缓存" class="headerlink" title="使用本地缓存"></a>使用本地缓存</h4><ul><li>先在本地（应用服务器内存，例如 Guava Cache、Caffeine）缓存数据，减少 Redis 请求。</li><li>在分布式情况下需要保证一致性问题，多个服务实例需要保证看到同一个热key，京东开源的hotkey框架采用worker进行分布式计算统一识别，统一下发</li></ul><h4 id="使用读写分离架构"><a href="#使用读写分离架构" class="headerlink" title="使用读写分离架构"></a>使用读写分离架构</h4><ul><li><strong>如果热Key的产生来自于读请求，您可以将实例改造成读写分离架构来降低每个数据分片的读请求压力，甚至可以不断地增加从节点。</strong>但是读写分离架构在增加业务代码复杂度的同时，也会增加Redis集群架构复杂度。不仅要为多个从节点提供转发层（如Proxy，LVS等）来实现负载均衡，还要考虑从节点数量显著增加后带来故障率增加的问题。Redis集群架构变更会为监控、运维、故障处理带来了更大的挑战。</li></ul><h3 id="如何保证-redis-和-mysql-数据缓存一致性问题？"><a href="#如何保证-redis-和-mysql-数据缓存一致性问题？" class="headerlink" title="如何保证 redis 和 mysql 数据缓存一致性问题？"></a>如何保证 redis 和 mysql 数据缓存一致性问题？</h3><h4 id="不一致场景"><a href="#不一致场景" class="headerlink" title="不一致场景"></a>不一致场景</h4><ul><li>先修改数据库，在删除缓存，更新数据库成功，但删除缓存失败</li><li>先删除缓存，再更新数据库，如果删除缓存成功，未来得及更新数据库，此时用户再来一次请求，此时缓存会从数据库中取出旧值</li></ul><h4 id="双写事务"><a href="#双写事务" class="headerlink" title="双写事务"></a>双写事务</h4><ul><li>利用数据库事务和Redis事务放在同一个事务进行处理</li><li>优点是简单，缺点是无法保证完全一致性，适合小型系统简单读写，不适合高并发</li></ul><h4 id="延迟双删"><a href="#延迟双删" class="headerlink" title="延迟双删"></a>延迟双删</h4><ul><li>数据库完成更新时，马上删除Redis缓存，延迟一段时间，再删一次</li><li>优点实现简单，缺点是延迟时间无法控制，可能会发生覆盖的风险</li></ul><h4 id="订阅更新机制"><a href="#订阅更新机制" class="headerlink" title="订阅更新机制"></a>订阅更新机制</h4><ul><li>使用消息队列，数据库更新后向消息队列发送消息，Redis订阅这个消息队列更新缓存</li><li>优点是同步效果非常好，缺点是复杂性增加，需要维护消息队列</li></ul><h4 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h4><ul><li>把写操作全部操作数据库，再通过一个异步线程，更新Redis一致性</li><li>优点是缓存压力降低很多，适合大流量系统，缺点是项目开发复杂，要做好异步逻辑</li></ul><h4 id="Cannal订阅Binlog同步Redis"><a href="#Cannal订阅Binlog同步Redis" class="headerlink" title="Cannal订阅Binlog同步Redis"></a>Cannal订阅Binlog同步Redis</h4><ul><li>修改数据库时，数据库操作会写入bin log，使用Canal中间件订阅binlog变化，监听到变化后将更新的数据同步给redis</li></ul><h3 id="缓存雪崩、缓存击穿、缓存穿透"><a href="#缓存雪崩、缓存击穿、缓存穿透" class="headerlink" title="缓存雪崩、缓存击穿、缓存穿透"></a>缓存雪崩、缓存击穿、缓存穿透</h3><h4 id="缓存雪崩"><a href="#缓存雪崩" class="headerlink" title="缓存雪崩"></a>缓存雪崩</h4><ul><li>当大量缓存数据在同一时间过期（失效）或者 Redis 故障宕机时，如果此时有大量的用户请求，都无法在 Redis 中处理，于是全部请求都直接访问数据库</li><li>解决方案：<ul><li>避免给大量数据设置同一过期时间，使用随机数</li><li>互斥锁：当业务线程在处理用户请求时，如果发现访问的数据不在 Redis 里，就加个互斥锁，保证同一时间内只有一个请求来构建缓存。未获取锁的请求则等待锁释放或返回默认值或者空值</li><li>后台更新缓存：业务线程不再负责更新缓存，缓存也不设置有效期，而是让缓存“永久有效”，并将更新缓存的工作交由后台线程定时更新。</li></ul></li></ul><h4 id="缓存击穿"><a href="#缓存击穿" class="headerlink" title="缓存击穿"></a>缓存击穿</h4><ul><li>如果缓存中的某个热点数据过期了，此时大量的请求访问了该热点数据，就无法从缓存中读取，直接访问数据库，数据库很容易就被高并发的请求冲垮</li><li>解决方案：<ul><li>互斥锁方案，保证同一时间只有一个业务线程更新缓存，未能获取互斥锁的请求，要么等待锁释放后重新读取缓存，要么就返回空值或者默认值。</li><li>不给热点数据设置过期时间，由后台异步更新缓存，或者在热点数据准备要过期前，提前通知后台线程更新缓存以及重新设置过期时间；</li></ul></li></ul><h4 id="缓存穿透"><a href="#缓存穿透" class="headerlink" title="缓存穿透"></a>缓存穿透</h4><ul><li>当用户访问的数据，既不在缓存中，也不在数据库中，导致请求在访问缓存时，发现缓存缺失，再去访问数据库时，发现数据库中也没有要访问的数据，没办法构建缓存数据，来服务后续的请求。那么当有大量这样的请求到来时，数据库的压力骤增，这就是缓存穿透的问题。</li><li>解决方案：<ul><li>非法请求的限制：当有大量恶意请求访问不存在的数据的时候，也会发生缓存穿透，因此在 API 入口处我们要判断求请求参数是否合理，请求参数是否含有非法值、请求字段是否存在，如果判断出是恶意请求就直接返回错误，避免进一步访问缓存和数据库。</li><li>缓存空值或者默认值：当我们线上业务发现缓存穿透的现象时，可以针对查询的数据，在缓存中设置一个空值或者默认值，这样后续请求就可以从缓存中读取到空值或者默认值，返回给应用，而不会继续查询数据库。</li><li>布隆过滤器：我们可以在写入数据库数据时，使用布隆过滤器做个标记，然后在用户请求到来时，业务线程确认缓存失效后，可以通过查询布隆过滤器快速判断数据是否存在，如果不存在，就不用通过查询数据库来判断数据是否存在。即使发生了缓存穿透，大量请求只会查询 Redis 和布隆过滤器，而不会查询数据库，保证了数据库能正常运行，Redis 自身也是支持布隆过滤器的。</li></ul></li></ul><h3 id="布隆过滤器原理介绍一下"><a href="#布隆过滤器原理介绍一下" class="headerlink" title="布隆过滤器原理介绍一下"></a>布隆过滤器原理介绍一下</h3><ul><li>布隆过滤器由「初始值都为 0 的位图数组」和「 N 个哈希函数」两部分组成。当我们在写入数据库数据时，在布隆过滤器里做个标记，这样下次查询数据是否在数据库时，只需要查询布隆过滤器，如果查询到数据没有被标记，说明不在数据库中。</li><li>布隆过滤器会通过 3 个操作完成标记：<ul><li>第一步，使用 N 个哈希函数分别对数据做哈希计算，得到 N 个哈希值；</li><li>第二步，将第一步得到的 N 个哈希值对位图数组的长度取模，得到每个哈希值在位图数组的对应位置。</li><li>第三步，将每个哈希值在位图数组的对应位置的值设置为 1；</li></ul></li><li>举个例子，假设有一个位图数组长度为 8，哈希函数 3 个的布隆过滤器。</li><li>在数据库写入数据 x 后，把数据 x 标记在布隆过滤器时，数据 x 会被 3 个哈希函数分别计算出 3 个哈希值，然后在对这 3 个哈希值对 8 取模，假设取模的结果为 1、4、6，然后把位图数组的第 1、4、6 位置的值设置为 1。当应用要查询数据 x 是否数据库时，通过布隆过滤器只要查到位图数组的第 1、4、6 位置的值是否全为 1，只要有一个为 0，就认为数据 x 不在数据库中。</li><li>布隆过滤器由于是基于哈希函数实现查找的，高效查找的同时存在哈希冲突的可能性，比如数据 x 和数据 y 可能都落在第 1、4、6 位置，而事实上，可能数据库中并不存在数据 y，存在误判的情况。</li><li>所以，查询布隆过滤器说数据存在，并不一定证明数据库中存在这个数据，但是查询到数据不存在，数据库中一定就不存在这个数据。</li></ul><h3 id="如何设计秒杀场景处理高并发以及超卖现象？"><a href="#如何设计秒杀场景处理高并发以及超卖现象？" class="headerlink" title="如何设计秒杀场景处理高并发以及超卖现象？"></a>如何设计秒杀场景处理高并发以及超卖现象？</h3><h4 id="使用数据库悲观锁"><a href="#使用数据库悲观锁" class="headerlink" title="使用数据库悲观锁"></a>使用数据库悲观锁</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">BEGIN</span>;<br><span class="hljs-keyword">SELECT</span> <span class="hljs-operator">*</span> <span class="hljs-keyword">FROM</span> goods <span class="hljs-keyword">WHERE</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">FOR</span> <span class="hljs-keyword">UPDATE</span>;  <span class="hljs-comment">-- 阶段1：锁行</span><br><span class="hljs-keyword">UPDATE</span> goods <span class="hljs-keyword">SET</span> stock <span class="hljs-operator">=</span> stock <span class="hljs-operator">-</span> <span class="hljs-number">1</span><br>  <span class="hljs-keyword">WHERE</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">AND</span> stock <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;                <span class="hljs-comment">-- 阶段2：更新</span><br><span class="hljs-keyword">COMMIT</span>;                                            <span class="hljs-comment">-- 释放锁</span><br></code></pre></td></tr></table></figure><ul><li>先对商品行加锁，再进行库存更新</li><li>悲观锁方案在高并发下会串行化对同一行的操作，安全但吞吐量会急剧下降。</li></ul><h4 id="使用数据库乐观锁"><a href="#使用数据库乐观锁" class="headerlink" title="使用数据库乐观锁"></a>使用数据库乐观锁</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">UPDATE</span> goods<br><span class="hljs-keyword">SET</span> stock <span class="hljs-operator">=</span> stock <span class="hljs-operator">-</span> <span class="hljs-number">1</span><br><span class="hljs-keyword">WHERE</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">AND</span> stock <span class="hljs-operator">&gt;</span> <span class="hljs-number">0</span>;<br></code></pre></td></tr></table></figure><ul><li>这样让数据库自己做并发控制，受影响行数&#x3D;0时再提示库存不足，可大幅减少阻塞。</li></ul><h4 id="使用分布式锁"><a href="#使用分布式锁" class="headerlink" title="使用分布式锁"></a>使用分布式锁</h4><ul><li>同一个锁key，同一时间只能有一个客户端拿到锁，其他客户端会陷入无限的等待来尝试获取那个锁，只有获取到锁的客户端才能执行下面的业务逻辑。</li><li>这种方案的缺点是同一个商品在多用户同时下单的情况下，会基于分布式锁串行化处理，导致没法同时处理同一个商品的大量下单的请求。</li></ul><h4 id="利用分段式锁-分段缓存"><a href="#利用分段式锁-分段缓存" class="headerlink" title="利用分段式锁+分段缓存"></a>利用分段式锁+分段缓存</h4><ul><li><p>把数据分成很多个段，每个段是一个单独的锁，所以多个线程过来并发修改数据的时候，可以并发的修改不同段的数据</p></li><li><p>假设场景：假如你现在商品有100个库存，在redis存放5个库存key，形如:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">key1</span>=goods-<span class="hljs-number">01</span>,value=<span class="hljs-number">20</span><span class="hljs-comment">;</span><br><span class="hljs-attr">key2</span>=goods-<span class="hljs-number">02</span>,value=<span class="hljs-number">20</span><span class="hljs-comment">;</span><br><span class="hljs-attr">key3</span>=goods-<span class="hljs-number">03</span>，value=<span class="hljs-number">20</span><br></code></pre></td></tr></table></figure></li><li><p>用户下单时对用户id进行%5计算，看落在哪个redis的key上，就去取哪个，这样每次就能够处理5个进程请求；或者使用轮询的方式</p></li><li><p>这种方案可以解决同一个商品在多用户同时下单的情况，但有个坑需要解决：当某段锁的库存不足，一定要实现自动释放锁然后换下一个分段库存再次尝试加锁处理，此种方案复杂比较高。</p></li></ul><h4 id="利用redis的incr、decr的原子性-异步队列"><a href="#利用redis的incr、decr的原子性-异步队列" class="headerlink" title="利用redis的incr、decr的原子性 + 异步队列"></a>利用redis的incr、decr的原子性 + 异步队列</h4><ul><li>在系统初始化时，将商品的库存数量加载到redis缓存中</li><li>接收到秒杀请求时，在redis中使用lua脚本进行预减库存（利用redis decr的原子性），当redis中的库存不足时，直接返回秒杀失败，否则继续进行第3步；</li><li>将请求放入异步队列中，返回正在排队中；</li><li>服务端异步队列将请求出队（哪些请求可以出队，可以根据业务来判定，比如：判断对应用户是否已经秒杀过对应商品，防止重复秒杀），出队成功的请求可以生成秒杀订单，减少数据库库存（在扣减库存的sql如下，返回秒杀订单详情）<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">update</span> goods <span class="hljs-keyword">set</span> stock <span class="hljs-operator">=</span> stock <span class="hljs-operator">-</span> <span class="hljs-number">1</span> <span class="hljs-keyword">where</span> goods_id <span class="hljs-operator">=</span> ? <span class="hljs-keyword">and</span> stock <span class="hljs-operator">&gt;</span><span class="hljs-number">0</span><br></code></pre></td></tr></table></figure></li><li>用户在客户端申请秒杀请求后，进行轮询，查看是否秒杀成功，秒杀成功则进入秒杀订单详情，否则秒杀失败</li><li>缺点：由于是通过异步队列写入数据库中，可能存在数据不一致，其次引用多个组件复杂度比较高</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Java基础知识</title>
    <link href="/2025/08/18/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2025/08/18/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="Java基础知识"><a href="#Java基础知识" class="headerlink" title="Java基础知识"></a>Java基础知识</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="Java的特点"><a href="#Java的特点" class="headerlink" title="Java的特点"></a>Java的特点</h3><ul><li>跨平台性<ul><li>Java编译器将源代码编译成字节码（bytecode），该字节码可以在任何安装了Java虚拟机（JVM）的系统上运行。</li></ul></li><li>面向对象<ul><li>Java是一门严格的面向对象编程语言，几乎一切都是对象。面向对象编程（OOP）特性使得代码更易于维护和重用，包括类（class）、对象（object）、继承（inheritance）、多态（polymorphism）、抽象（abstraction）和封装（encapsulation）。</li></ul></li><li>垃圾回收机制<ul><li>Java有自己的垃圾回收机制，自动管理内存和回收不再使用的对象。这样，开发者不需要手动管理内存，从而减少内存泄漏和其他内存相关的问题。</li></ul></li></ul><h3 id="Java为什么是跨平台的"><a href="#Java为什么是跨平台的" class="headerlink" title="Java为什么是跨平台的"></a>Java为什么是跨平台的</h3><ul><li>我们编写的Java源码，编译后会生成一种 .class 文件，称为字节码文件。Java虚拟机就是负责将字节码文件翻译成特定平台下的机器码然后运行。也就是说，只要在不同平台上安装对应的JVM，就可以运行字节码文件，运行我们编写的Java程序。</li><li>跨平台的是Java程序，不是JVM。JVM是用C&#x2F;C++开发的，是编译后的机器码，不能跨平台，不同平台下需要安装不同版本的JVM。</li></ul><h3 id="JVM、JDK、JRE三者关系"><a href="#JVM、JDK、JRE三者关系" class="headerlink" title="JVM、JDK、JRE三者关系"></a>JVM、JDK、JRE三者关系</h3><ul><li>JVM是Java虚拟机，是Java程序运行的环境。它负责将Java字节码（由Java编译器生成）解释或编译成机器码，并执行程序。JVM提供了内存管理、垃圾回收、安全性等功能，使得Java程序具备跨平台性。</li><li>JDK是Java开发工具包，是开发Java程序所需的工具集合。它包含了JVM、编译器（javac）、调试器（jdb）等开发工具，以及一系列的类库（如Java标准库和开发工具库）。JDK提供了开发、编译、调试和运行Java程序所需的全部工具和环境。</li><li>JRE是Java运行时环境，是Java程序运行所需的最小环境。它包含了JVM和一组Java类库，用于支持Java程序的执行。JRE不包含开发工具，只提供Java程序运行所需的运行环境。</li></ul><h3 id="为什么Java解释和编译都有？"><a href="#为什么Java解释和编译都有？" class="headerlink" title="为什么Java解释和编译都有？"></a>为什么Java解释和编译都有？</h3><ul><li>编译：<ul><li>javac将Java源文件编译为字节码文件（.class文件）</li><li>JIT将字节码中的热门代码编译为机器码，直接在CPU运行，并会保存在进程内存中（code cache）</li></ul></li><li>解释性<ul><li>JVM逐条解释代码，边翻译边生成机器码上CPU运行，运行完不会保存</li></ul></li><li>JIT编译的启动速度慢，但运行一段时间后速度较快；JVM解释启动快，但遇到重复代码较多时速度较慢。</li></ul><h3 id="编译型语言和解释型语言的区别？"><a href="#编译型语言和解释型语言的区别？" class="headerlink" title="编译型语言和解释型语言的区别？"></a>编译型语言和解释型语言的区别？</h3><ul><li>编译型语言：在程序执行之前，整个源代码会被编译成机器码或者字节码，生成可执行文件。执行时直接运行编译后的代码，速度快，但跨平台性较差。</li><li>解释型语言：在程序执行时，逐行解释执行源代码，不生成独立的可执行文件。通常由解释器动态解释并执行代码，跨平台性好，但执行速度相对较慢。</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="Java-数据类型一览表"><a href="#Java-数据类型一览表" class="headerlink" title="Java 数据类型一览表"></a>Java 数据类型一览表</h3><table><thead><tr><th>分类</th><th>数据类型</th><th>占用内存（字节）</th><th>取值范围 &#x2F; 精度</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><strong>整数型</strong></td><td>byte</td><td>1</td><td>-128 ~ 127</td><td>0</td><td>最小的整数类型，适合节省内存</td></tr><tr><td></td><td>short</td><td>2</td><td>-32,768 ~ 32,767</td><td>0</td><td>比 byte 大一档的整数</td></tr><tr><td></td><td>int</td><td>4</td><td>-2^31 ~ 2^31-1</td><td>0</td><td>默认的整数类型</td></tr><tr><td></td><td>long</td><td>8</td><td>-2^63 ~ 2^63-1</td><td>0L</td><td>表示长整型，需加 <code>L</code> 后缀</td></tr><tr><td><strong>浮点型</strong></td><td>float</td><td>4</td><td>约 ±3.40282347E+38F（6~7 位小数精度）</td><td>0.0f</td><td>单精度浮点，需加 <code>f</code> 后缀</td></tr><tr><td></td><td>double</td><td>8</td><td>约 ±1.79769313486231570E+308（15~16 位精度）</td><td>0.0d</td><td>双精度浮点，默认浮点类型</td></tr><tr><td><strong>字符型</strong></td><td>char</td><td>2</td><td>单个 Unicode 字符（’\u0000’ ~ ‘\uffff’）</td><td>‘\u0000’</td><td>支持存储中文、英文及符号</td></tr><tr><td><strong>布尔型</strong></td><td>boolean</td><td>1（规范未固定）</td><td>true &#x2F; false</td><td>false</td><td>表示逻辑值</td></tr><tr><td><strong>引用型</strong></td><td>类（Class）</td><td>-</td><td>-</td><td>null</td><td>由类创建的对象</td></tr><tr><td></td><td>接口（Interface）</td><td>-</td><td>-</td><td>null</td><td>实现多态的契约</td></tr><tr><td></td><td>数组（Array）</td><td>-</td><td>-</td><td>null</td><td>存放相同类型数据的集合</td></tr><tr><td></td><td>枚举（Enum）</td><td>-</td><td>-</td><td>null</td><td>固定常量的集合</td></tr><tr><td></td><td>注解（Annotation）</td><td>-</td><td>-</td><td>null</td><td>用于元数据描述</td></tr></tbody></table><blockquote><p>💡 注意：</p><ul><li><strong>基本数据类型</strong> 存储在栈上，速度快。</li><li><strong>引用数据类型</strong> 存储在堆上，变量保存对象的地址（引用）。</li><li>boolean 的存储大小在 JVM 规范中未固定，但实际实现通常用 1 个字节或更小的位来表示。</li></ul></blockquote><h3 id="数据类型转换方式"><a href="#数据类型转换方式" class="headerlink" title="数据类型转换方式"></a>数据类型转换方式</h3><ul><li>自动类型转换（隐式转换）：当目标类型的范围大于源类型时，Java会自动将源类型转换为目标类型，不需要显式的类型转换。例如，将int转换为long、将float转换为double等。</li><li>强制类型转换（显式转换）：当目标类型的范围小于源类型时，需要使用强制类型转换将源类型转换为目标类型。这可能导致数据丢失或溢出。例如，将long转换为int、将double转换为int等。语法为：目标类型 变量名 &#x3D; (目标类型) 源类型。</li><li>字符串转换：Java提供了将字符串表示的数据转换为其他类型数据的方法。例如，将字符串转换为整型int，可以使用Integer.parseInt()方法；将字符串转换为浮点型double，可以使用Double.parseDouble()方法等。</li><li>数值之间的转换：Java提供了一些数值类型之间的转换方法，如将整型转换为字符型、将字符型转换为整型等。这些转换方式可以通过类型的包装类来实现，例如Character类、Integer类等提供了相应的转换方法。</li></ul><h3 id="类型互转会出现什么问题"><a href="#类型互转会出现什么问题" class="headerlink" title="类型互转会出现什么问题"></a>类型互转会出现什么问题</h3><h4 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h4><ul><li>小范围到大范围（向上转型）：没有问题，一般是安全的</li><li>大范围到小范围（向下转型）：需要进行强制类型转换，且容易丢失高位或者精度</li></ul><h4 id="对象引用转换"><a href="#对象引用转换" class="headerlink" title="对象引用转换"></a>对象引用转换</h4><ul><li>向上转型：子类的对象赋值给父类的引用，是安全的</li><li>向下转型：父类的对象赋值给子类的引用，需要手动进行，且存在风险，如果实例实际上不是子类的实例，则会抛出ClassCastException异常，解决方式是需要使用 instanceof 检查：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (animal <span class="hljs-keyword">instanceof</span> Dog) &#123; <br><span class="hljs-type">Dog</span> <span class="hljs-variable">dog</span> <span class="hljs-operator">=</span> (Dog) animal;<br>&#125; <span class="hljs-comment">// 只有确认animal是Dog的实例时才进行转型 &#125;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="为什么用bigDecimal-不用double"><a href="#为什么用bigDecimal-不用double" class="headerlink" title="为什么用bigDecimal 不用double"></a>为什么用bigDecimal 不用double</h3><ul><li>double使用二进制表示，只能表示1&#x2F;2^n的任意和，会有精度问题</li></ul><h3 id="装箱和拆箱"><a href="#装箱和拆箱" class="headerlink" title="装箱和拆箱"></a>装箱和拆箱</h3><ul><li>装箱：基本数据类型 → 对应的包装类对象<ul><li>自动装箱：编译器自动完成，例如<code>Integer i=5;</code></li><li>手动装箱：<code>Integer b = Integer.valueOf(5);</code></li></ul></li><li>拆箱：包装类对象 → 对应的基本数据类型<ul><li>自动拆箱：编译器自动完成，例如：<code>Integer a = 5;int c = a; // Integer → int（自动拆箱）</code></li><li>手动拆箱：调用包装类的取值方法：<code>int d = a.intValue();</code></li></ul></li><li>记忆口诀<ul><li>“装进盒子是装箱，从盒子里取出来是拆箱” 基本类型进盒子，成了对象；对象开盒子，变回基本类型。</li></ul></li></ul><h3 id="装箱装箱弊端"><a href="#装箱装箱弊端" class="headerlink" title="装箱装箱弊端"></a>装箱装箱弊端</h3><ul><li>当循环里有自动拆箱时，会有额外对象生成</li></ul><h3 id="Java为什么要有Integer"><a href="#Java为什么要有Integer" class="headerlink" title="Java为什么要有Integer"></a>Java为什么要有Integer</h3><h4 id="泛型中的应用"><a href="#泛型中的应用" class="headerlink" title="泛型中的应用"></a>泛型中的应用</h4><ul><li>Java中泛型只能用引用类型，不能用基本数据类型</li></ul><h4 id="转换中的应用"><a href="#转换中的应用" class="headerlink" title="转换中的应用"></a>转换中的应用</h4><ul><li>在Java中，基本类型和引用类型不能直接进行转换，必须使用包装类来实现。例如，将一个int类型的值转换为String类型，必须首先将其转换为Integer类型，然后再转换为String类型。</li></ul><h4 id="工具方法支持"><a href="#工具方法支持" class="headerlink" title="工具方法支持"></a>工具方法支持</h4><ul><li>包装类封装了很多实用的静态方法和常量，方便类型转换、比较、解析，比如Integer.parseInt(“123”)、Double.isNaN(x)</li></ul><h3 id="那为什么还要保留int类型"><a href="#那为什么还要保留int类型" class="headerlink" title="那为什么还要保留int类型"></a>那为什么还要保留int类型</h3><ul><li>包装类是引用类型，对象的引用和对象本身是分开存储的，而对于基本类型数据，变量对应的内存块直接存储数据本身。</li><li>因此，基本类型数据在读写效率方面，要比包装类高效。除此之外，在64位JVM上，在开启引用压缩的情况下，一个Integer对象占用16个字节的内存空间，而一个int类型数据只占用4字节的内存空间，前者对空间的占用是后者的4倍。</li><li>也就是说，不管是读写效率，还是存储效率，基本类型都比包装类高效。</li></ul><h3 id="说一下-integer的缓存"><a href="#说一下-integer的缓存" class="headerlink" title="说一下 integer的缓存"></a>说一下 integer的缓存</h3><ul><li>Java的Integer类内部实现了一个静态缓存池，用于存储特定范围内的整数值对应的Integer对象。 </li><li>默认情况下，这个范围是-128至127。当通过Integer.valueOf(int)方法创建一个在这个范围内的整数对象时，并不会每次都生成新的对象实例，而是复用缓存中的现有对象，会直接从内存中取出，不需要新建一个对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//==比地址</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">100</span>);<br><span class="hljs-type">Integer</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">100</span>);<br>System.out.println(a == b); <span class="hljs-comment">// 输出 true，因为复用了缓存池中的对象</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">200</span>);<br><span class="hljs-type">Integer</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">200</span>);<br>System.out.println(a == b); <span class="hljs-comment">// 输出 false，因为创建了两个不同的对象</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="怎么理解面向对象？"><a href="#怎么理解面向对象？" class="headerlink" title="怎么理解面向对象？"></a>怎么理解面向对象？</h3><ul><li>面向对象是一种编程方法，将现实的具体事物抽象为对象，对象封装数据和行为，通过消息（方法调用）彼此协作</li></ul><h3 id="面向对象三大特性"><a href="#面向对象三大特性" class="headerlink" title="面向对象三大特性"></a>面向对象三大特性</h3><ul><li>封装：封装是指将对象的属性（数据）和行为（方法）结合在一起，对外隐藏对象的内部细节，仅通过对象提供的接口与外界交互。封装的目的是增强安全性和简化编程，使得对象更加独立。</li><li>继承：继承是一种可以使得子类自动共享父类数据结构和方法的机制。它是代码复用的重要手段，通过继承可以建立类与类之间的层次关系，使得结构更加清晰。 </li><li>多态：多态是指允许不同类的对象对同一消息作出响应。即同一个接口，使用不同的实例而执行不同操作。多态性可以分为编译时多态（重载）和运行时多态（重写）。它使得程序具有良好的灵活性和扩展性。</li></ul><h3 id="多态体现在哪几个方面？"><a href="#多态体现在哪几个方面？" class="headerlink" title="多态体现在哪几个方面？"></a>多态体现在哪几个方面？</h3><ul><li>方法重载： <ul><li>方法重载是指同一类中可以有多个同名方法，它们具有不同的参数列表（参数类型、数量或顺序不同）。虽然方法名相同，但根据传入的参数不同，编译器会在编译时确定调用哪个方法。 </li><li>示例：对于一个 add 方法，可以定义为 add(int a, int b) 和 add(double a, double b)。</li></ul></li><li>方法重写： <ul><li>方法重写是指子类能够提供对父类中同名方法的具体实现。在运行时，JVM会根据对象的实际类型确定调用哪个版本的方法。这是实现多态的主要方式。 </li><li>示例：在一个动物类中，定义一个 sound 方法，子类 Dog 可以重写该方法以实现 bark，而 Cat 可以实现 meow。</li></ul></li><li>接口与实现： 多态也体现在接口的使用上，多个类可以实现同一个接口，并且用接口类型的引用来调用这些类的方法。这使得程序在面对不同具体实现时保持一贯的调用方式。 <ul><li>示例：多个类（如 Dog, Cat）都实现了一个 Animal 接口，当用 Animal 类型的引用来调用 makeSound 方法时，会触发对应的实现。</li></ul></li><li>向上转型和向下转型： <ul><li>在Java中，可以使用父类类型的引用指向子类对象，这是向上转型。通过这种方式，可以在运行时期采用不同的子类实现。 </li><li>向下转型是将父类引用转回其子类类型，但在执行前需要确认引用实际指向的对象类型以避免 ClassCastException。</li></ul></li></ul><h3 id="多态解决了什么问题"><a href="#多态解决了什么问题" class="headerlink" title="多态解决了什么问题"></a>多态解决了什么问题</h3><ul><li>多态可以提高代码的扩展性和复用性，是很多设计模式、设计原则、编程技巧的代码实现基础。</li></ul><h3 id="面向对象的设计原则"><a href="#面向对象的设计原则" class="headerlink" title="面向对象的设计原则"></a>面向对象的设计原则</h3><ul><li>单一职责原则（S）：一个类只负责一项职责（一个变化原因）</li><li>开闭原则（O）：对扩展开放，对修改关闭</li><li>里氏替换原则（L）：所有父类都可以被子类替换</li><li>接口隔离原则（I）：多个专用接口优于一个万能大接口</li><li>依赖倒置原则（D）：高层模块依赖抽象，底层模块也依赖于抽象</li></ul><h3 id="重载与重写有什么区别？"><a href="#重载与重写有什么区别？" class="headerlink" title="重载与重写有什么区别？"></a>重载与重写有什么区别？</h3><ul><li>重载（Overloading）指的是在同一个类中，可以有多个同名方法，它们具有不同的参数列表（参数类型、参数个数或参数顺序不同），编译器根据调用时的参数类型来决定调用哪个方法。 </li><li>重写（Overriding）指的是子类可以重新定义父类中的方法，方法名、参数列表和返回类型必须与父类中的方法一致，通过@override注解来明确表示这是对父类方法的重写。 </li><li>重载是指在同一个类中定义多个同名方法，而重写是指子类重新定义父类中的方法。</li></ul><h3 id="抽象类和普通类区别"><a href="#抽象类和普通类区别" class="headerlink" title="抽象类和普通类区别"></a>抽象类和普通类区别</h3><table><thead><tr><th>对比维度</th><th>抽象类 (abstract class)</th><th>普通类 (concrete class)</th></tr></thead><tbody><tr><td><strong>是否可实例化</strong></td><td>❌ 不能直接创建对象</td><td>✅ 可以直接 <code>new</code> 对象</td></tr><tr><td><strong>是否可包含抽象方法</strong></td><td>✅ 可以（未实现的方法，只有方法签名）</td><td>❌ 不允许包含抽象方法</td></tr><tr><td><strong>是否必须实现所有方法</strong></td><td>❌ 子类实现抽象类时，必须实现其所有抽象方法（除非子类也是抽象类）</td><td>✅ 自己实现了所有方法</td></tr><tr><td><strong>构造方法</strong></td><td>✅ 可以有构造方法，用于子类调用</td><td>✅ 可以有构造方法</td></tr><tr><td><strong>成员</strong></td><td>可包含成员变量、已实现方法、抽象方法</td><td>可包含成员变量和已实现方法</td></tr><tr><td><strong>继承限制</strong></td><td>只能单继承，但可实现多个接口</td><td>同样只能单继承，可实现多个接口</td></tr><tr><td><strong>修饰符</strong></td><td>必须用 <code>abstract</code> 修饰</td><td>无需 <code>abstract</code> 修饰</td></tr><tr><td><strong>用途</strong></td><td>定义通用模板，部分方法延迟到子类实现</td><td>定义具体可用的类，提供完整实现</td></tr></tbody></table><h3 id="Java抽象类和接口的区别是什么"><a href="#Java抽象类和接口的区别是什么" class="headerlink" title="Java抽象类和接口的区别是什么"></a>Java抽象类和接口的区别是什么</h3><h4 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h4><ul><li>抽象类用于描述类的共同特性和行为，可以有成员变量、构造方法和具体方法。适用于有明显继承关系的场景。</li><li>关键字：extends</li><li>抽象类可以有定义与实现，方法可在抽象类中实现</li><li>访问修饰符：抽象类中成员变量默认default，可在子类中被重新定义，也可被重新赋值；抽象方法被abstract修饰，不能被private、static、synchronized和native等修饰，必须以分号结尾，不带花括号。</li><li>抽象类可以包含实例变量和静态变量。</li></ul><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><ul><li>接口用于定义行为规范，可以多实现，只能有常量和抽象方法（Java 8 以后可以有默认方法和静态方法）。适用于定义类的能力或功能。</li><li>关键字：implements</li><li>接口只有定义，不能有方法的实现，java 1.8中可以定义default方法体</li><li>访问修饰符：接口成员变量默认为public static final，必须赋初值，不能被修改；其所有的成员方法都是public、abstract的。</li><li>接口只能包含常量（即静态常量）。</li></ul><h3 id="接口里面可以定义哪些方法"><a href="#接口里面可以定义哪些方法" class="headerlink" title="接口里面可以定义哪些方法"></a>接口里面可以定义哪些方法</h3><h4 id="抽象方法"><a href="#抽象方法" class="headerlink" title="抽象方法"></a>抽象方法</h4><ul><li>抽象方法是接口的核心部分，所有实现接口的类都必须实现这些方法。抽象方法默认是 public 和 abstract，这些修饰符可以省略。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="默认方法"><a href="#默认方法" class="headerlink" title="默认方法"></a>默认方法</h4><ul><li>默认方法是在 Java 8 中引入的，允许接口提供具体实现。实现类可以选择重写默认方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">default</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sleep</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Sleeping...&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h4><ul><li>静态方法也是在 Java 8 中引入的，它们属于接口本身，可以通过接口名直接调用，而不需要实现类的对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">staticMethod</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Static method in interface&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="私有方法"><a href="#私有方法" class="headerlink" title="私有方法"></a>私有方法</h4><ul><li>私有方法是在 Java 9 中引入的，用于在接口中为默认方法或其他私有方法提供辅助功能。这些方法不能被实现类访问，只能在接口内部使用。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>    <br>    <span class="hljs-keyword">default</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sleep</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Sleeping...&quot;</span>);<br>        logSleep();<br>    &#125;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">logSleep</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Logging sleep&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="接口可以包含构造函数吗"><a href="#接口可以包含构造函数吗" class="headerlink" title="接口可以包含构造函数吗"></a>接口可以包含构造函数吗</h3><ul><li>在接口中，不可以有构造方法,在接口里写入构造方法时，编译器提示：Interfaces cannot have constructors，因为接口不会有自己的实例的，所以不需要有构造函数。</li><li>为什么呢？构造函数就是初始化class的属性或者方法，在new的一瞬间自动调用，那么问题来了Java的接口，都不能new 那么要构造函数干嘛呢？根本就没法调用</li></ul><h3 id="Java中的静态变量和静态方法"><a href="#Java中的静态变量和静态方法" class="headerlink" title="Java中的静态变量和静态方法"></a>Java中的静态变量和静态方法</h3><h4 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h4><ul><li>在类中使用static关键字声明的变量。它们属于类而不是任何具体的对象。</li><li>所有该类的实例共享同一个静态变量。如果一个实例修改了静态变量的值，其他实例也会看到这个更改。</li><li>静态变量在类被加载时初始化，只会对其进行一次分配内存。</li><li>静态变量可以直接通过类名访问，也可以通过实例访问，但推荐使用类名。</li></ul><h4 id="静态方法-1"><a href="#静态方法-1" class="headerlink" title="静态方法"></a>静态方法</h4><ul><li>静态方法也属于类，而不是任何具体的对象。</li><li>静态方法可以在没有创建类实例的情况下调用。对于静态方法来说，不能直接访问非静态的成员变量或方法，因为静态方法没有上下文的实例。</li><li>静态方法可以直接调用其他静态变量和静态方法，但不能直接访问非静态成员。</li><li>静态方法不支持重写（Override），但可以被隐藏（Hide）（子类声明了一个与父类静态方法完全相同签名的静态方法）。</li></ul><h3 id="非静态内部类和静态内部类的区别"><a href="#非静态内部类和静态内部类的区别" class="headerlink" title="非静态内部类和静态内部类的区别"></a>非静态内部类和静态内部类的区别</h3><ul><li>非静态内部类依赖于外部类的实例，而静态内部类不依赖于外部类的实例。</li><li>非静态内部类可以访问外部类的实例变量和方法，而静态内部类只能访问外部类的静态成员。</li><li>非静态内部类不能定义静态成员，而静态内部类可以定义静态成员。</li><li>非静态内部类在外部类实例化后才能实例化，而静态内部类可以独立实例化。</li><li>非静态内部类可以访问外部类的私有成员，而静态内部类不能直接访问外部类的私有成员，需要通过实例化外部类来访问。</li></ul><h3 id="非静态内部类可以直接访问外部方法，编译器是怎么做到的"><a href="#非静态内部类可以直接访问外部方法，编译器是怎么做到的" class="headerlink" title="非静态内部类可以直接访问外部方法，编译器是怎么做到的"></a>非静态内部类可以直接访问外部方法，编译器是怎么做到的</h3><ul><li>非静态内部类可以直接访问外部方法是因为编译器在生成字节码时会为非静态内部类维护一个指向外部类实例的引用。</li><li>这个引用使得非静态内部类能够访问外部类的实例变量和方法。编译器会在生成非静态内部类的构造方法时，将外部类实例作为参数传入，并在内部类的实例化过程中建立外部类实例与内部类实例之间的联系，从而实现直接访问外部方法的功能。</li></ul><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><h3 id="final的作用"><a href="#final的作用" class="headerlink" title="final的作用"></a>final的作用</h3><ul><li>修饰类：当final修饰一个类时，表示这个类不能被继承，是类继承体系中的最终形态。例如，Java 中的String类就是用final修饰的，这保证了String类的不可变性和安全性，防止其他类通过继承来改变String类的行为和特性。</li><li>修饰方法：用final修饰的方法不能在子类中被重写。比如，java.lang.Object类中的getClass方法就是final的，因为这个方法的行为是由 Java 虚拟机底层实现来保证的，不应该被子类修改。</li><li>修饰变量：当final修饰基本数据类型的变量时，该变量一旦被赋值就不能再改变。例如，final int num &#x3D; 10;，这里的num就是一个常量，不能再对其进行重新赋值操作，否则会导致编译错误。对于引用数据类型，final修饰意味着这个引用变量不能再指向其他对象，但对象本身的内容是可以改变的。例如，final StringBuilder sb &#x3D; new StringBuilder(“Hello”);，不能让sb再指向其他StringBuilder对象，但可以通过sb.append(“ World”);来修改字符串的内容。</li></ul><h2 id="深拷贝和浅拷贝"><a href="#深拷贝和浅拷贝" class="headerlink" title="深拷贝和浅拷贝"></a>深拷贝和浅拷贝</h2><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><h4 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h4><ul><li>浅拷贝是指只复制对象本身和其内部的值类型字段，但不会复制对象内部的引用类型字段。换句话说，浅拷贝只是创建一个新的对象，然后将原对象的字段值复制到新对象中，但如果原对象内部有引用类型的字段，只是将引用复制到新对象中，两个对象指向的是同一个引用对象。</li></ul><h4 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h4><ul><li>深拷贝是指在复制对象的同时，将对象内部的所有引用类型字段的内容也复制一份，而不是共享引用。换句话说，深拷贝会递归复制对象内部所有引用类型的字段，生成一个全新的对象以及其内部的所有对象。</li></ul><h3 id="实现深拷贝的方式"><a href="#实现深拷贝的方式" class="headerlink" title="实现深拷贝的方式"></a>实现深拷贝的方式</h3><h4 id="实现-Cloneable-接口并重写-clone-方法"><a href="#实现-Cloneable-接口并重写-clone-方法" class="headerlink" title="实现 Cloneable 接口并重写 clone() 方法"></a>实现 Cloneable 接口并重写 clone() 方法</h4><ul><li>在 clone() 方法中，通过递归克隆引用类型字段来实现深拷贝。</li></ul><h4 id="使用序列化和反序列化"><a href="#使用序列化和反序列化" class="headerlink" title="使用序列化和反序列化"></a>使用序列化和反序列化</h4><ul><li>通过将对象序列化为字节流，再从字节流反序列化为对象来实现深拷贝。要求对象及其所有引用类型字段都实现 Serializable 接口。</li></ul><h4 id="手动递归复制"><a href="#手动递归复制" class="headerlink" title="手动递归复制"></a>手动递归复制</h4><ul><li>针对特定对象结构，手动递归复制对象及其引用类型字段。适用于对象结构复杂度不高的情况。</li></ul><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><h3 id="java创建对象有哪些方式"><a href="#java创建对象有哪些方式" class="headerlink" title="java创建对象有哪些方式"></a>java创建对象有哪些方式</h3><h4 id="new关键字"><a href="#new关键字" class="headerlink" title="new关键字"></a>new关键字</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyClass</span>();<br></code></pre></td></tr></table></figure><h4 id="使用Class类的newInstance-方法"><a href="#使用Class类的newInstance-方法" class="headerlink" title="使用Class类的newInstance()方法"></a>使用Class类的newInstance()方法</h4><ul><li>通过反射机制，可以使用Class类的newInstance()方法创建对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> (MyClass) Class.forName(<span class="hljs-string">&quot;com.example.MyClass&quot;</span>).newInstance();<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用Constructor类的newInstance-方法"><a href="#使用Constructor类的newInstance-方法" class="headerlink" title="使用Constructor类的newInstance()方法"></a>使用Constructor类的newInstance()方法</h4><ul><li>同样是通过反射机制，可以使用Constructor类的newInstance()方法创建对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">Constructor&lt;MyClass&gt; constructor = MyClass.class.getConstructor();<br><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> constructor.newInstance();<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用clone-方法"><a href="#使用clone-方法" class="headerlink" title="使用clone()方法"></a>使用clone()方法</h4><ul><li>如果类实现了Cloneable接口，可以使用clone()方法复制对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyClass</span>();<br><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj2</span> <span class="hljs-operator">=</span> (MyClass) obj1.clone();<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用反序列化"><a href="#使用反序列化" class="headerlink" title="使用反序列化"></a>使用反序列化</h4><ul><li>通过将对象序列化到文件或流中，然后再进行反序列化来创建对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// SerializedObject.java</span><br><span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;object.ser&quot;</span>));<br>out.writeObject(obj);<br>out.close();<br><br><span class="hljs-comment">// DeserializedObject.java</span><br><span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;object.ser&quot;</span>));<br><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> (MyClass) in.readObject();<br>in.close();<br></code></pre></td></tr></table></figure></li></ul><h3 id="New出的对象什么时候回收"><a href="#New出的对象什么时候回收" class="headerlink" title="New出的对象什么时候回收"></a>New出的对象什么时候回收</h3><ul><li>通过过关键字new创建的对象，由Java的垃圾回收器（Garbage Collector）负责回收。</li></ul><h3 id="垃圾回收方法"><a href="#垃圾回收方法" class="headerlink" title="垃圾回收方法"></a>垃圾回收方法</h3><h4 id="引用计数法"><a href="#引用计数法" class="headerlink" title="引用计数法"></a>引用计数法</h4><ul><li>某个对象的引用计数为0时，表示该对象不再被引用，可以被回收。</li></ul><h4 id="可达性分析算法"><a href="#可达性分析算法" class="headerlink" title="可达性分析算法"></a>可达性分析算法</h4><ul><li>从根对象（如方法区中的类静态属性、方法中的局部变量等）出发，通过对象之间的引用链进行遍历，如果存在一条引用链到达某个对象，则说明该对象是可达的，反之不可达，不可达的对象将被回收。</li></ul><h4 id="终结器"><a href="#终结器" class="headerlink" title="终结器"></a>终结器</h4><ul><li>如果对象重写了finalize()方法，垃圾回收器会在回收该对象之前调用finalize()方法，对象可以在finalize()方法中进行一些清理操作。然而，终结器机制的使用不被推荐，因为它的执行时间是不确定的，可能会导致不可预测的性能问题。</li></ul><h3 id="如何获取私有对象"><a href="#如何获取私有对象" class="headerlink" title="如何获取私有对象"></a>如何获取私有对象</h3><h4 id="使用公共访问器方法（getter-方法）"><a href="#使用公共访问器方法（getter-方法）" class="headerlink" title="使用公共访问器方法（getter 方法）"></a>使用公共访问器方法（getter 方法）</h4><ul><li>如果类的设计者遵循良好的编程规范，通常会为私有成员变量提供公共的访问器方法（即 getter 方法），通过调用这些方法可以安全地获取私有对象。</li></ul><h4 id="反射机制"><a href="#反射机制" class="headerlink" title="反射机制"></a>反射机制</h4><ul><li>反射机制允许在运行时检查和修改类、方法、字段等信息，通过反射可以绕过 private 访问修饰符的限制来获取私有对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">privateField</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;私有字段的值&quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;<br>        <span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyClass</span>();<br>        <span class="hljs-comment">// 获取 Class 对象</span><br>        Class&lt;?&gt; clazz = obj.getClass();<br>        <span class="hljs-comment">// 获取私有字段</span><br>        <span class="hljs-type">Field</span> <span class="hljs-variable">privateField</span> <span class="hljs-operator">=</span> clazz.getDeclaredField(<span class="hljs-string">&quot;privateField&quot;</span>);<br>        <span class="hljs-comment">// 设置可访问性</span><br>        privateField.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">// 获取私有字段的值</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> (String) privateField.get(obj);<br>        System.out.println(value); <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><h3 id="什么是反射"><a href="#什么是反射" class="headerlink" title="什么是反射"></a>什么是反射</h3><h4 id="反射概念"><a href="#反射概念" class="headerlink" title="反射概念"></a>反射概念</h4><ul><li>Java 反射机制是在运行状态中，对于任意一个类，都能够知道这个类中的所有属性和方法，对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为 Java 语言的反射机制。</li></ul><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ul><li>运行时类信息访问：反射机制允许程序在运行时获取类的完整结构信息，包括类名、包名、父类、实现的接口、构造函数、方法和字段等。</li><li>动态对象创建：可以使用反射API动态地创建对象实例，即使在编译时不知道具体的类名。这是通过Class类的newInstance()方法或Constructor对象的newInstance()方法实现的。</li><li>动态方法调用：可以在运行时动态地调用对象的方法，包括私有方法。这通过Method类的invoke()方法实现，允许你传入对象实例和参数值来执行方法。</li><li>访问和修改字段值：反射还允许程序在运行时访问和修改对象的字段值，即使是私有的。这是通过Field类的get()和set()方法完成的。</li></ul><h3 id="反射用到的地方"><a href="#反射用到的地方" class="headerlink" title="反射用到的地方"></a>反射用到的地方</h3><h4 id="实例化Bean"><a href="#实例化Bean" class="headerlink" title="实例化Bean"></a>实例化Bean</h4><ul><li>将程序中所有XML或properties配置文件加载入内存</li><li>Java类里面解析xml或者properties里面的内容，得到对应实体类的字节码字符串以及相关的属性信息</li><li>通过 clazz.getDeclaredConstructor().newInstance() 创建实例</li><li>动态配置实例的属性</li></ul><h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><ul><li>通过 clazz.isAnnotationPresent() &#x2F; clazz.getAnnotation() 获取注解实例</li><li>调用注解方法拿到属性值（比如 @RequestMapping 的路径、@Value 的配置值）</li></ul><h2 id="注解-1"><a href="#注解-1" class="headerlink" title="注解"></a>注解</h2><h3 id="讲一讲Java注解的原理"><a href="#讲一讲Java注解的原理" class="headerlink" title="讲一讲Java注解的原理"></a>讲一讲Java注解的原理</h3><ul><li>注解本质是一个继承了Annotation的特殊接口，其具体实现类是Java运行时生成的动态代理类。</li><li>我们通过反射获取注解时，返回的是Java运行时生成的动态代理对象。通过代理对象调用自定义注解的方法，会最终调用AnnotationInvocationHandler的invoke方法。该方法会从memberValues这个Map中索引出对应的值。而memberValues的来源是Java常量池。</li></ul><h3 id="注解的底层实现"><a href="#注解的底层实现" class="headerlink" title="注解的底层实现"></a>注解的底层实现</h3><h4 id="定义一个注解"><a href="#定义一个注解" class="headerlink" title="定义一个注解"></a>定义一个注解</h4><ul><li>注解本质上是一种特殊的接口，它继承自 java.lang.annotation.Annotation 接口，所以注解也叫声明式接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><span class="hljs-keyword">import</span> java.lang.annotation.ElementType;<br><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-meta">@Target(ElementType.TYPE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Task &#123;<br>    String <span class="hljs-title function_">name</span><span class="hljs-params">()</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">priority</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-number">5</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li>根据注解的作用范围，Java注解分为：<ul><li>源码级：仅存在源码中，编译后丢弃<code>@Retention(RetentionPolicy.SOURCE)</code></li><li>类文件级别注解：保留在<code>.class</code>文件中，但运行时不可见<code>@Retention(RetentionPolicy.CLASS)</code></li><li>运行时注解 ：保留在 <code>.class</code> 文件中，并且可以通过反射在运行时访问<code>@Retention(RetentionPolicy.RUNTIME)</code></li></ul></li><li>只有运行时注解使用反射机制进行解析</li></ul><h4 id="在类上使用注解"><a href="#在类上使用注解" class="headerlink" title="在类上使用注解"></a>在类上使用注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Task(name = &quot;ExampleTask&quot;, priority = 10)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Example</span> &#123;<br>    <span class="hljs-comment">// 类的业务逻辑…</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="触发反射API读取注解"><a href="#触发反射API读取注解" class="headerlink" title="触发反射API读取注解"></a>触发反射API读取注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AnnotationReader</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        Class&lt;Example&gt; cls = Example.class;<br><br>        <span class="hljs-comment">// 触发：检查注解是否存在</span><br>        <span class="hljs-keyword">if</span> (cls.isAnnotationPresent(Task.class)) &#123;<br>            <span class="hljs-comment">// 触发：获取注解实例</span><br>            <span class="hljs-type">Task</span> <span class="hljs-variable">task</span> <span class="hljs-operator">=</span> cls.getAnnotation(Task.class);<br><br>            <span class="hljs-comment">// 使用注解值</span><br>            System.out.printf(<br>                <span class="hljs-string">&quot;Task name: %s, priority: %d%n&quot;</span>,<br>                task.name(),<br>                task.priority()<br>            );<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;No Task annotation on class Example.&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>调用 isAnnotationPresent(Task.class) 时，JVM 会查找 RuntimeVisibleAnnotations 属性。</li><li>调用 getAnnotation(Task.class) 时，JVM 调用 AnnotationParser 解析字节码，生成一个动态代理实例。</li></ul><h4 id="Java编译器在生成的-class文件中保存注解信息，并进行分类"><a href="#Java编译器在生成的-class文件中保存注解信息，并进行分类" class="headerlink" title="Java编译器在生成的.class文件中保存注解信息，并进行分类"></a>Java编译器在生成的.class文件中保存注解信息，并进行分类</h4><ul><li>RuntimeVisibleAnnotations ：存储运行时可见的注解信息。</li><li>RuntimeInvisibleAnnotations ：存储运行时不可见的注解信息。</li><li>RuntimeVisibleParameterAnnotations 和RuntimeInvisibleParameterAnnotations ：存储方法参数上的注解信息。</li><li>类加载阶段，.class 文件中携带的注解字节数据随着字节码一起进入内存。</li><li>当 isAnnotationPresent 或 getAnnotation 被调用时，JVM 才会：<ul><li>从 RuntimeVisibleAnnotations 属性提取原始字节流</li><li>用 sun.reflect.annotation.AnnotationParser 生成属性名→属性值的映射</li><li>基于 Proxy 动态创建一个实现 Task 接口的注解实例</li></ul></li><li>注解实例会被缓存，下次读取同一个注解不再重复解析。</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>因此，注解解析的底层实现主要依赖于 Java 的反射机制和字节码文件的存储。通过 @Retention 元注解可以控制注解的保留策略，当使用 RetentionPolicy.RUNTIME 时，可以在运行时通过反射 API 来解析注解信息。在 JVM 层面，会从字节码文件中读取注解信息，并创建注解的代理对象来获取注解的属性值。</li></ul><h3 id="Java注解的作用域"><a href="#Java注解的作用域" class="headerlink" title="Java注解的作用域"></a>Java注解的作用域</h3><ul><li>类级别作用域：用于描述类的注解，通常放置在类定义的上面，可以用来指定类的一些属性，如类的访问级别、继承关系、注释等。</li><li>方法级别作用域：用于描述方法的注解，通常放置在方法定义的上面，可以用来指定方法的一些属性，如方法的访问级别、返回值类型、异常类型、注释等。</li><li>字段级别作用域：用于描述字段的注解，通常放置在字段定义的上面，可以用来指定字段的一些属性，如字段的访问级别、默认值、注释等。</li></ul><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="介绍一下Java异常"><a href="#介绍一下Java异常" class="headerlink" title="介绍一下Java异常"></a>介绍一下Java异常</h3><p><img src="/2025/08/18/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Java%E5%BC%82%E5%B8%B8.png" alt="Java异常"></p><ul><li>Error（错误）：表示运行时环境的错误。错误是程序无法处理的严重问题，如系统崩溃、虚拟机错误、动态链接失败等。通常，程序不应该尝试捕获这类错误。例如，OutOfMemoryError、StackOverflowError等。</li><li>Exception（异常）：表示程序本身可以处理的异常条件。异常分为两大类：<ul><li>非运行时异常：这类异常在编译时期就必须被捕获或者声明抛出。它们通常是外部错误，如文件不存在（FileNotFoundException）、类未找到（ClassNotFoundException）等。非运行时异常强制程序员处理这些可能出现的问题，增强了程序的健壮性。</li><li>运行时异常：这类异常包括运行时异常（RuntimeException）和错误（Error）。运行时异常由程序错误导致，如空指针访问（NullPointerException）、数组越界（ArrayIndexOutOfBoundsException）等。运行时异常是不需要在编译时强制捕获或声明的。</li></ul></li></ul><h3 id="异常处理方式"><a href="#异常处理方式" class="headerlink" title="异常处理方式"></a>异常处理方式</h3><h4 id="try-catch语句"><a href="#try-catch语句" class="headerlink" title="try-catch语句"></a>try-catch语句</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readFile</span><span class="hljs-params">(String path)</span> &#123;<br>    <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>(path));<br>        String line;<br>        <span class="hljs-keyword">while</span> ((line = reader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(line);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (FileNotFoundException e) &#123;<br>        System.err.println(<span class="hljs-string">&quot;文件未找到：&quot;</span> + e.getMessage());<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>        System.err.println(<span class="hljs-string">&quot;读取出错：&quot;</span> + e.getMessage());<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-keyword">if</span> (reader != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                reader.close();<br>            &#125; <span class="hljs-keyword">catch</span> (IOException ignored) &#123; &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>finally语句无论是否发生异常都会执行</li><li>try块中的代码将按顺序执行，如果抛出异常，将在catch块中进行匹配和处理，然后程序将继续执行catch块之后的代码。如果没有匹配的catch块，异常将被传递给上一层调用的方法。</li></ul><h4 id="throws关键字"><a href="#throws关键字" class="headerlink" title="throws关键字"></a>throws关键字</h4><ul><li>在方法签名上使用 throws，把受检异常抛给调用者处理，简化当前方法逻辑。</li><li>只有“非运行时异常”需要在方法签名中声明，运行时异常可以不声明</li><li>调用方必须显式捕获或继续声明抛出</li></ul><h4 id="throw语句"><a href="#throw语句" class="headerlink" title="throw语句"></a>throw语句</h4><ul><li>在代码中利用 throw 手动抛出一个异常实例，常用于校验参数或状态。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">divide</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<br>    <span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;除数不能为零&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> a / b;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>throw 后必须是 Throwable 的子类实例</li><li>用于主动报告错误或非法状态</li></ul><h3 id="抛出异常为什么不用throws"><a href="#抛出异常为什么不用throws" class="headerlink" title="抛出异常为什么不用throws"></a>抛出异常为什么不用throws</h3><ul><li>Unchecked Exceptions：未检查异常（unchecked exceptions）是继承自RuntimeException类或Error类的异常，编译器不强制要求进行异常处理。因此，对于这些异常，不需要在方法签名中使用throws来声明。示例包括NullPointerException、ArrayIndexOutOfBoundsException等。</li><li>异常被捕获和处理：另一种常见情况是，在方法内部捕获了可能抛出的异常，并在方法内部处理它们，而不是通过throws子句将它们传递到调用者。这种情况下，方法可以处理异常而无需在方法签名中使用throws。</li></ul><h3 id="try-return-“a”-fianlly-return-“b”-这条语句返回啥"><a href="#try-return-“a”-fianlly-return-“b”-这条语句返回啥" class="headerlink" title="try{return “a”} fianlly{return “b”}这条语句返回啥"></a>try{return “a”} fianlly{return “b”}这条语句返回啥</h3><ul><li>当执行到 return “a” 时，JVM 会先把要返回的值（即字符串常量 “a”）暂存起来，然后进入 finally 块。</li><li>在 finally 中又执行了 return “b”，这会直接覆盖之前暂存的返回值。方法最后返回的，就是 “b”。</li></ul><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><h3 id="与-equals-有什么区别"><a href="#与-equals-有什么区别" class="headerlink" title="&#x3D;&#x3D; 与 equals 有什么区别"></a>&#x3D;&#x3D; 与 equals 有什么区别</h3><ul><li>对于字符串来说，&#x3D;&#x3D;比较值，equals比较地址</li><li>对于非字符串来说，如果没有进行重写，&#x3D;&#x3D;和equals作用相同，都是比较地址</li></ul><h3 id="hashcode和equals方法有什么关系"><a href="#hashcode和equals方法有什么关系" class="headerlink" title="hashcode和equals方法有什么关系"></a>hashcode和equals方法有什么关系</h3><ul><li>在 Java 中，对于重写 equals 方法的类，通常也需要重写 hashCode 方法，并且需要遵循以下规定：<ul><li>若equals方法返回true，则hashCode值必须相等</li><li>若hashCode值相等，equals方法不一定，如果不相等，则为哈希冲突</li></ul></li></ul><h3 id="String、StringBuffer、StringBuilder的区别和联系"><a href="#String、StringBuffer、StringBuilder的区别和联系" class="headerlink" title="String、StringBuffer、StringBuilder的区别和联系"></a>String、StringBuffer、StringBuilder的区别和联系</h3><table><thead><tr><th>特性</th><th>String</th><th>StringBuffer</th><th>StringBuilder</th></tr></thead><tbody><tr><td>可变性</td><td>不可变（Immutable），每次修改生成新对象</td><td>可变（Mutable），在原对象上直接修改</td><td>可变（Mutable），在原对象上直接修改</td></tr><tr><td>线程安全性</td><td>天然线程安全</td><td>同步（方法级 <code>synchronized</code>），线程安全</td><td>非同步，线程不安全</td></tr><tr><td>性能</td><td>拼接时不断创建新对象，性能最差</td><td>有同步锁开销，性能中等</td><td>无同步锁开销，性能最好</td></tr><tr><td>使用场景</td><td>字符串常量、少量拼接、用作 Map Key （静态字符串）等</td><td>多线程环境下需要频繁修改字符串（多线程动态字符串）</td><td>单线程或方法内部频繁拼接（单线程动态字符串）</td></tr><tr><td>联系</td><td>实现 <code>CharSequence</code>、<code>Appendable</code> 接口，基于字符数组实现，提供类似 <code>length()</code>、<code>charAt()</code>、<code>substring()</code> 等 API</td><td>实现 <code>CharSequence</code>、<code>Appendable</code> 接口，基于字符数组实现，提供类似 <code>length()</code>、<code>charAt()</code>、<code>substring()</code> 等 API</td><td>实现 <code>CharSequence</code>、<code>Appendable</code> 接口，基于字符数组实现，提供类似 <code>length()</code>、<code>charAt()</code>、<code>substring()</code> 等 API</td></tr></tbody></table><h2 id="Java新特性"><a href="#Java新特性" class="headerlink" title="Java新特性"></a>Java新特性</h2><h3 id="Java8新特性"><a href="#Java8新特性" class="headerlink" title="Java8新特性"></a>Java8新特性</h3><table><thead><tr><th>新特性</th><th>描述</th></tr></thead><tbody><tr><td>Lambda 表达式</td><td>支持函数式编程，简化匿名内部类和回调</td></tr><tr><td>函数式接口</td><td>使用 <code>@FunctionalInterface</code> 标记仅含一个抽象方法的接口</td></tr><tr><td>Stream API</td><td>声明式集合处理，支持链式调用及并行流（<code>java.util.stream</code>）</td></tr><tr><td>Optional 类</td><td>包装可能为 <code>null</code> 的值，避免显式的空指针检查</td></tr><tr><td>默认方法 &amp; 静态方法</td><td>接口中可定义带实现的默认方法和静态方法，增强向后兼容性</td></tr><tr><td>重复注解</td><td>使用 <code>@Repeatable</code> 支持对同一个程序元素多次使用同一注解</td></tr><tr><td>CompletableFuture</td><td>异步编程增强，支持链式、非阻塞的任务组合与回调</td></tr><tr><td>并行数组操作</td><td><code>Arrays.parallelSort</code>、<code>parallelPrefix</code> 等方法支持多核并行处理</td></tr></tbody></table><h3 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><ul><li>函数式接口是只包含一个抽象方法的接口。Lambda 表达式必须绑定到一个函数式接口上</li><li>可以有默认方法和静态方法和从Object类继承来的public方法</li><li>通常用 @FunctionalInterface 注解标识（可选，但推荐）</li></ul><h4 id="Java内置的四个函数式接口"><a href="#Java内置的四个函数式接口" class="headerlink" title="Java内置的四个函数式接口"></a>Java内置的四个函数式接口</h4><table><thead><tr><th>接口名</th><th>参数类型</th><th>返回类型</th><th>作用说明</th></tr></thead><tbody><tr><td><code>Function&lt;T, R&gt;</code></td><td>T</td><td>R</td><td>接收一个参数，返回一个结果。常用于数据转换、映射等操作。</td></tr><tr><td><code>Consumer&lt;T&gt;</code></td><td>T</td><td>void</td><td>接收一个参数，不返回结果。常用于打印、保存、处理数据等副作用操作。</td></tr><tr><td><code>Supplier&lt;T&gt;</code></td><td>无</td><td>T</td><td>不接收参数，返回一个结果。常用于延迟加载、生成数据等。</td></tr><tr><td><code>Predicate&lt;T&gt;</code></td><td>T</td><td>boolean</td><td>接收一个参数，返回布尔值。常用于条件判断、过滤等。</td></tr></tbody></table><h3 id="Lambda-表达式"><a href="#Lambda-表达式" class="headerlink" title="Lambda 表达式"></a>Lambda 表达式</h3><h4 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h4><ul><li>Lambda 表达式它是一种简洁的语法，用于创建匿名函数，主要用于简化函数式接口（只有一个抽象方法的接口）的使用。</li><li>传统的匿名内部类实现方式代码较为冗长，而 Lambda 表达式可以用更简洁的语法实现相同的功能。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//以前的匿名内部类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AnonymousClassExample</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Thread</span> <span class="hljs-variable">t1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>                System.out.println(<span class="hljs-string">&quot;Running using anonymous class&quot;</span>);<br>            &#125;<br>        &#125;);<br>        t1.start();<br>    &#125;<br>&#125;<br><span class="hljs-comment">//lambda表达式</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LambdaExample</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Thread</span> <span class="hljs-variable">t1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(() -&gt; System.out.println(<span class="hljs-string">&quot;Running using lambda expression&quot;</span>));<br>        t1.start();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>虽然有很多好处，但是增加了调试困难。因为 Lambda 表达式是匿名的，在调试时很难定位具体是哪个 Lambda 表达式出现了问题。</li></ul><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><ul><li>(parameters) -&gt; expression：当 Lambda 体只有一个表达式时使用，表达式的结果会作为返回值。</li><li>(parameters) -&gt; { statements; }：当 Lambda 体包含多条语句时，需要使用大括号将语句括起来，若有返回值则需要使用 return 语句。</li></ul><h3 id="Java中stream的API介绍一下"><a href="#Java中stream的API介绍一下" class="headerlink" title="Java中stream的API介绍一下"></a>Java中stream的API介绍一下</h3><ul><li>Stream 是对集合对象功能的增强，它允许你以声明式方式处理数据。</li><li>它提供了一种高效且易于使用的数据处理方式，特别适合集合对象的操作，如过滤、映射、排序等。Stream API不仅可以提高代码的可读性和简洁性，还能利用多核处理器的优势进行并行处理。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//选出长度大于三的串</span><br>List&lt;String&gt; originalList = Arrays.asList(<span class="hljs-string">&quot;apple&quot;</span>, <span class="hljs-string">&quot;fig&quot;</span>, <span class="hljs-string">&quot;banana&quot;</span>, <span class="hljs-string">&quot;kiwi&quot;</span>);<br>List&lt;String&gt; filteredList = originalList.stream()<br>                                        .filter(s -&gt; s.length() &gt; <span class="hljs-number">3</span>)<br>                                        .collect(Collectors.toList());<br><span class="hljs-comment">//求数组中元素的和</span><br>List&lt;Integer&gt; numbers = Arrays.asList(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> numbers.stream()<br>                 .mapToInt(Integer::intValue)<br>                 .sum();<br></code></pre></td></tr></table></figure></li></ul><h3 id="Java流的并行API"><a href="#Java流的并行API" class="headerlink" title="Java流的并行API"></a>Java流的并行API</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li>并行流（ParallelStream）就是将源数据分为多个子流对象进行多线程操作，然后将处理的结果再汇总为一个流对象，底层是使用通用的 fork&#x2F;join 池来实现，即将一个任务拆分成多个“小任务”并行计算，再把多个“小任务”的结果合并成总的计算结果</li></ul><h4 id="底层机制"><a href="#底层机制" class="headerlink" title="底层机制"></a>底层机制</h4><ul><li>使用 Java 的 ForkJoinPool.commonPool（默认线程数为 CPU 核心数）</li><li>自动将数据拆分为多个任务</li><li>每个任务在不同线程中执行</li><li>最终将结果合并</li></ul><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><ul><li>CPU密集的任务而不是IO密集的任务，因为IO密集的任务会导致线程阻塞等待资源返回，CPU利用率低</li></ul><h3 id="completableFuture怎么用的"><a href="#completableFuture怎么用的" class="headerlink" title="completableFuture怎么用的"></a>completableFuture怎么用的</h3><ul><li>CompletableFuture实现了两个接口：Future、CompletionStage。</li><li>Future用于表示异步计算的结果，只能通过阻塞或者轮询的方式获取结果，而且不支持设置回调方法，Java 8之前若要设置回调一般会使用guava的ListenableFuture，回调的引入又会导致臭名昭著的回调地狱（下面的例子会通过ListenableFuture的使用来具体进行展示）。</li><li>CompletableFuture对Future进行了扩展，可以通过设置回调的方式处理计算结果，同时也支持组合操作，支持进一步的编排，同时一定程度解决了回调地狱的问题。<ul><li>回调地狱：在处理多个异步任务时，每个任务都依赖前一个任务的结果，导致回调函数层层嵌套，这种结构不仅难读、难维护，还容易出错<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">doA(resultA -&gt; &#123;<br>    doB(resultB -&gt; &#123;<br>        doC(resultC -&gt; &#123;<br>            <span class="hljs-comment">// 处理最终结果，嵌套很多，导致回调地狱</span><br>        &#125;);<br>    &#125;);<br>&#125;);<br><br></code></pre></td></tr></table></figure></li><li>CompletableFuture使用链式组合，避免嵌套，提供了 thenApply、thenCompose、thenAccept 等方法，可以像流水线一样组合异步任务</li></ul></li><li>CompletionStage提供了三种方法（CompletableFuture是它的具体实现类）：<ul><li>thenApply —— 对结果进行转换（同步）<ul><li>接收上一个任务的结果，进行处理并返回一个新的值。</li><li>返回的是一个新的 CompletableFuture，但处理逻辑是同步的。</li></ul></li><li>thenCompose —— 链式异步任务（扁平化）<ul><li>接收上一个任务的结果，并返回一个新的 CompletableFuture（异步任务）。</li></ul></li><li>thenAccept —— 消费结果（无返回值）<ul><li>接收上一个任务的结果，进行处理，但不返回新值。</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        CompletableFuture&lt;Void&gt; workflow = getUserAsync(<span class="hljs-string">&quot;user123&quot;</span>)<br>            .thenCompose(user -&gt; getOrdersAsync(user))                  <span class="hljs-comment">// 获取订单</span><br>            .thenCompose(orders -&gt; getLogisticsAsync(orders))          <span class="hljs-comment">// 获取物流</span><br>            .thenAccept(logistics -&gt; &#123;<br>                <span class="hljs-comment">// ✅ 处理最终结果</span><br>                System.out.println(<span class="hljs-string">&quot;物流信息：&quot;</span> + logistics);<br>            &#125;)<br>            .exceptionally(ex -&gt; &#123;<br>                <span class="hljs-comment">// ❌ 集中处理异常</span><br>                System.err.println(<span class="hljs-string">&quot;处理失败：&quot;</span> + ex.getMessage());<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;);<br><br>        workflow.join(); <span class="hljs-comment">// 等待流程执行完毕</span><br>        executor.shutdown();<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="Java21新特性"><a href="#Java21新特性" class="headerlink" title="Java21新特性"></a>Java21新特性</h3><ul><li>虚拟线程：这是 Java 21 引入的一种轻量级并发的新选择。它通过共享堆栈的方式，大大降低了内存消耗，同时提高了应用程序的吞吐量和响应速度。可以使用静态构建方法、构建器或ExecutorService来创建和使用虚拟线程。</li><li>Scoped Values（范围值）：提供了一种在线程间共享不可变数据的新方式，避免使用传统的线程局部存储，促进了更好的封装性和线程安全，可用于在不通过方法参数传递的情况下，传递上下文信息，如用户会话或配置设置。</li></ul><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><h3 id="怎么把一个对象从一个jvm转移到另一个jvm"><a href="#怎么把一个对象从一个jvm转移到另一个jvm" class="headerlink" title="怎么把一个对象从一个jvm转移到另一个jvm"></a>怎么把一个对象从一个jvm转移到另一个jvm</h3><h4 id="将对象序列化"><a href="#将对象序列化" class="headerlink" title="将对象序列化"></a>将对象序列化</h4><ul><li>把对象转成字节流（可以是 JSON、XML 或 Java 原生二进制），通过网络&#x2F;文件传到另一 JVM，再反序列化成新的对象。这可以通过 Java 的 ObjectOutputStream 和 ObjectInputStream 来实现。对象类需要实现Serializable接口</li></ul><h4 id="远程过程调用"><a href="#远程过程调用" class="headerlink" title="远程过程调用"></a>远程过程调用</h4><ul><li>通过远程方法调用，将对象的调用和数据传到另一个 JVM。</li></ul><h4 id="持久化中转"><a href="#持久化中转" class="headerlink" title="持久化中转"></a>持久化中转</h4><ul><li>对象先持久化到数据库&#x2F;缓存系统（如 Redis、Kafka），另一 JVM 读取并反序列化</li></ul><h4 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h4><ul><li>对象转成消息（序列化），通过 RabbitMQ、ActiveMQ、Kafka 等中间件在 JVM 之间传送</li></ul><h3 id="序列化和反序列化让你自己实现你会怎么做"><a href="#序列化和反序列化让你自己实现你会怎么做" class="headerlink" title="序列化和反序列化让你自己实现你会怎么做"></a>序列化和反序列化让你自己实现你会怎么做</h3><h4 id="Java的原生序列化有很多弊端"><a href="#Java的原生序列化有很多弊端" class="headerlink" title="Java的原生序列化有很多弊端"></a>Java的原生序列化有很多弊端</h4><ul><li>无法跨语言： Java 序列化目前只适用基于 Java 语言实现的框架，其它语言大部分都没有使用 Java 的序列化框架，也没有实现 Java 序列化这套协议。因此，如果是两个基于不同语言编写的应用程序相互通信，则无法实现两个应用服务之间传输对象的序列化与反序列化。</li><li>容易被攻击：Java 序列化是不安全的，我们知道对象是通过在 ObjectInputStream 上调用 readObject() 方法进行反序列化的，这个方法其实是一个神奇的构造器，它可以将类路径上几乎所有实现了 Serializable 接口的对象都实例化。这也就意味着，在反序列化字节流的过程中，该方法可以执行任意类型的代码，这是非常危险的。</li><li>序列化后的流太大：序列化后的二进制流大小能体现序列化的性能。序列化后的二进制数组越大，占用的存储空间就越多，存储硬件的成本就越高。如果我们是进行网络传输，则占用的带宽就更多，这时就会影响到系统的吞吐量。</li></ul><h4 id="使用json"><a href="#使用json" class="headerlink" title="使用json"></a>使用json</h4><ul><li>使用Fastjson</li></ul><h3 id="将对象转为二进制字节流"><a href="#将对象转为二进制字节流" class="headerlink" title="将对象转为二进制字节流"></a>将对象转为二进制字节流</h3><h4 id="对象类需要实现Serializable接口"><a href="#对象类需要实现Serializable接口" class="headerlink" title="对象类需要实现Serializable接口"></a>对象类需要实现Serializable接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Person</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="序列化为字节数组"><a href="#序列化为字节数组" class="headerlink" title="序列化为字节数组"></a>序列化为字节数组</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 序列化：对象 -&gt; 字节数组</span><br><span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">bos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br><span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(bos);<br>oos.writeObject(p);<br>oos.flush();<br><span class="hljs-type">byte</span>[] bytes = bos.toByteArray();<br></code></pre></td></tr></table></figure><ul><li>创建输出流：先用 ByteArrayOutputStream（写到内存）或者 FileOutputStream（写到文件）作为基础流。</li><li>包装为对象输出流：使用 ObjectOutputStream 将普通输出流封装成可以处理对象的流。</li><li>写出对象：调用 writeObject(Object obj)，将对象转换成字节序列并写入底层流。</li><li>关闭资源：调用 close() 释放系统资源。（或者try-with-resources自动关闭）</li></ul><h4 id="反序列化为对象"><a href="#反序列化为对象" class="headerlink" title="反序列化为对象"></a>反序列化为对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 反序列化：字节数组 -&gt; 对象</span><br><span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bis</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(bytes);<br><span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bis);<br><span class="hljs-type">Person</span> <span class="hljs-variable">restored</span> <span class="hljs-operator">=</span> (Person) ois.readObject();<br></code></pre></td></tr></table></figure><ul><li>确保类可用：反序列化时需要该类的 .class 文件</li><li>创建输入流：先用 ByteArrayInputStream（内存读取）或 FileInputStream（文件读取）作为基础流。</li><li>包装为对象输入流：使用 ObjectInputStream 将普通输入流封装成可以读取对象的流。</li><li>读取对象：调用 readObject() 方法，将字节序列转回 Java 对象。需要强制类型转换 (YourClass)。</li><li>关闭资源：调用 close() 释放系统资源。</li></ul><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><ul><li>无论在代码的哪个位置调用，都得到同一个对象。</li><li>将构造方法用private修饰，这样能够防止外部实例化。</li><li>通过getInstance()方法获取唯一实例<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Singleton</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Singleton instance;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Singleton</span><span class="hljs-params">()</span> &#123;&#125;  <span class="hljs-comment">// 私有构造方法，防止外部实例化</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Singleton <span class="hljs-title function_">getInstance</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>) &#123;<br>            instance = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Singleton</span>();  <span class="hljs-comment">// 第一次调用时创建</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="单例模式多线程下出现的问题"><a href="#单例模式多线程下出现的问题" class="headerlink" title="单例模式多线程下出现的问题"></a>单例模式多线程下出现的问题</h3><h4 id="不使用volatile：指令重排序"><a href="#不使用volatile：指令重排序" class="headerlink" title="不使用volatile：指令重排序"></a>不使用volatile：指令重排序</h4><ul><li>编译器和CPU为了提高执行效率而做的优化：它会在不改变单线程语义的前提下，调整指令的执行顺序，让处理器的流水线、缓存等硬件资源发挥到极致。</li><li>当创建单例的实例时，会执行：<code>instance = new Singleton();</code>，分为三步：<ul><li>分配内存空间</li><li>调用构造函数初始化对象</li><li>将内存地址赋值给 instance 引用</li></ul></li><li>指令重排序可能会变成<ul><li>分配内存空间</li><li>将内存地址赋值给 instance</li><li>调用构造函数初始化对象</li></ul></li><li>这样就导致另一个线程第一次检查 instance !&#x3D; null 时，可能拿到的是一个未初始化的对象。</li></ul><h4 id="不用synchronized"><a href="#不用synchronized" class="headerlink" title="不用synchronized"></a>不用synchronized</h4><ul><li>竞态创建：多个线程同时通过 null 判断，重复执行构造，产生多个实例，违反单例唯一性。</li><li>半初始化可见：new 并非原子：分配内存 → 赋值给引用 → 执行构造。指令重排序可能让“赋值给引用”先于“执行构造”，其他线程读到非 null 的引用，却拿到未完全构造的对象。</li><li>可见性缺失：一个线程把 instance 设为非 null 后，其他线程未必立刻可见，可能继续创建或读到旧状态。</li></ul><h4 id="解决方式：volatile-双重检查锁（DCL）"><a href="#解决方式：volatile-双重检查锁（DCL）" class="headerlink" title="解决方式：volatile+双重检查锁（DCL）"></a>解决方式：volatile+双重检查锁（DCL）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Singleton</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">volatile</span> Singleton instance;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Singleton</span><span class="hljs-params">()</span> &#123;&#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Singleton <span class="hljs-title function_">getInstance</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>) &#123;           <span class="hljs-comment">// 第一次检查</span><br>            <span class="hljs-keyword">synchronized</span> (Singleton.class) &#123;<br>                <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>) &#123;   <span class="hljs-comment">// 第二次检查</span><br>                    instance = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Singleton</span>();<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>volatile 的作用<ul><li>禁止指令重排序：对象在创建过程中可能会被编译器或 CPU 重排序，导致其他线程看到一个“未完全初始化”的对象。</li><li>保证可见性：一个线程对 instance 的修改，对其他线程立即可见。<blockquote><p>没有 volatile，即使用 synchronized 也可能遇到“半初始化”的情况。</p></blockquote></li></ul></li><li>synchronized 的作用<ul><li>保证互斥访问：同一时间只有一个线程能进入临界区（创建实例的代码）。</li><li>避免重复创建实例：确保第一次初始化后不会被并发干扰。</li></ul></li></ul><h2 id="I-O"><a href="#I-O" class="headerlink" title="I&#x2F;O"></a>I&#x2F;O</h2><h3 id="BIO、NIO、AIO区别是什么"><a href="#BIO、NIO、AIO区别是什么" class="headerlink" title="BIO、NIO、AIO区别是什么"></a>BIO、NIO、AIO区别是什么</h3><h4 id="BIO（Blocking-IO）"><a href="#BIO（Blocking-IO）" class="headerlink" title="BIO（Blocking IO）"></a>BIO（Blocking IO）</h4><ul><li>就是传统的 java.io 包，它是基于流模型实现的，交互的方式是同步、阻塞方式，也就是说在读入输入流或者输出流时，在读写动作完成之前，线程会一直阻塞在那里，它们之间的调用是可靠的线性顺序。优点是代码比较简单、直观；缺点是 IO 的效率和扩展性很低，容易成为应用性能瓶颈。</li></ul><h4 id="NIO（Non-Blocking-IO）"><a href="#NIO（Non-Blocking-IO）" class="headerlink" title="NIO（Non-Blocking IO）"></a>NIO（Non-Blocking IO）</h4><ul><li>Java 1.4 引入的 java.nio 包，提供了 Channel、Selector、Buffer 等新的抽象，可以构建多路复用的、同步非阻塞 IO 程序，同时提供了更接近操作系统底层高性能的数据操作方式。Selector代替了线程本身轮询IO事件，避免了阻塞同时减少了不必要的线程消耗；非阻塞的核心就是通道和缓冲区，当IO事件就绪时，可以通过写到缓冲区，保证IO的成功，而无需线程阻塞式地等待。<ul><li>Channel（通道）<ul><li>类似流（Stream），但 Channel 同时支持读和写。</li></ul></li><li>Buffer（缓冲区）<ul><li>数据读写通过 Buffer 进行。</li></ul></li><li>Selector（选择器）<ul><li>核心组件，用于监听多个通道的事件，如连接就绪、读就绪、写就绪等。通过多路复用机制实现一个线程管理多个通道。用于监听多个通道的事件（比如：连接打开，数据到达）。因此，单个线程可以监听多个数据通道。</li></ul></li></ul></li><li>实现NIO的框架<ul><li>Netty 的 I&#x2F;O 模型是基于非阻塞 I&#x2F;O 实现的，底层依赖的是 NIO 框架的多路复用器 Selector。采用 epoll 模式后，只需要一个线程负责 Selector 的轮询。当有数据处于就绪状态后，需要一个事件分发器（Event Dispather），它负责将读写事件分发给对应的读写事件处理器（Event Handler）。</li></ul></li></ul><h4 id="AIO（Asynchronous-IO）"><a href="#AIO（Asynchronous-IO）" class="headerlink" title="AIO（Asynchronous IO）"></a>AIO（Asynchronous IO）</h4><ul><li>是 Java 1.7 之后引入的包，是 NIO 的升级版本，提供了异步非堵塞的 IO 操作方式，所以人们叫它 AIO（Asynchronous IO），异步 IO 是基于事件和回调机制实现的，也就是应用操作之后会直接返回，不会堵塞在那里，当后台处理完成，操作系统会通知相应的线程进行后续的操作。</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="有一个学生类，想按照分数排序，再按学号排序，应该怎么做？"><a href="#有一个学生类，想按照分数排序，再按学号排序，应该怎么做？" class="headerlink" title="有一个学生类，想按照分数排序，再按学号排序，应该怎么做？"></a>有一个学生类，想按照分数排序，再按学号排序，应该怎么做？</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compareTo</span><span class="hljs-params">(Student other)</span> &#123;<br>        <span class="hljs-comment">// 1) 分数降序</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">byScoreDesc</span> <span class="hljs-operator">=</span> Integer.compare(other.score, <span class="hljs-built_in">this</span>.score);<br>        <span class="hljs-keyword">if</span> (byScoreDesc != <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> byScoreDesc;<br><br>        <span class="hljs-comment">// 2) 学号升序（注意：如果学号是“纯数字且不补零”，可考虑按数值比较）</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.id.compareTo(other.id);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>实现Comparable接口</li><li>重写compareTo方法</li><li>Integer.compare：前大于后返回正数，等于返回0，小于返回负数<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;Student&gt; list = Arrays.asList(<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023003&quot;</span>, <span class="hljs-number">90</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023001&quot;</span>, <span class="hljs-number">95</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023002&quot;</span>, <span class="hljs-number">90</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023004&quot;</span>, <span class="hljs-number">80</span>)<br>);<br><span class="hljs-comment">// 直接排序（使用天然顺序）</span><br>Collections.sort(list);<br>System.out.println(list);<br><span class="hljs-comment">// 输出顺序：score 降序，同分按 id 升序</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="Native方法解释一下"><a href="#Native方法解释一下" class="headerlink" title="Native方法解释一下"></a>Native方法解释一下</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">NativeExample</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">native</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">nativeMethod</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在Java类中，native方法看起来与其他方法相似，只是其方法体由native关键字代替，没有实际的实现代码。</li></ul><h3 id="实现Native方法步骤"><a href="#实现Native方法步骤" class="headerlink" title="实现Native方法步骤"></a>实现Native方法步骤</h3><ul><li>生成JNI头文件：使用javah工具从你的Java类生成C&#x2F;C++的头文件，这个头文件包含了所有native方法的原型。</li><li>编写本地代码：使用C&#x2F;C++编写本地方法的实现，并确保方法签名与生成的头文件中的原型匹配。</li><li>编译本地代码：将C&#x2F;C++代码编译成动态链接库（DLL，在Windows上），共享库（SO，在Linux上）</li><li>加载本地库：在Java程序中，使用System.loadLibrary()方法来加载你编译好的本地库，这样JVM就能找到并调用native方法的实现了。</li></ul><h2 id="集合概念"><a href="#集合概念" class="headerlink" title="集合概念"></a>集合概念</h2><h3 id="数组与集合区别，用过哪些？"><a href="#数组与集合区别，用过哪些？" class="headerlink" title="数组与集合区别，用过哪些？"></a>数组与集合区别，用过哪些？</h3><table><thead><tr><th></th><th>数组</th><th>集合</th></tr></thead><tbody><tr><td>大小</td><td>固定长度，一旦创建长度无法改变</td><td>动态长度，可以根据需要动态增加或减少元素</td></tr><tr><td>元素</td><td>基本数据类型或对象</td><td>对象</td></tr><tr><td>访问方式</td><td>直接索引访问</td><td>通过迭代器或者方法</td></tr></tbody></table><h4 id="一些Java集合"><a href="#一些Java集合" class="headerlink" title="一些Java集合"></a>一些Java集合</h4><ul><li>ArrayList： 动态数组，实现了List接口，支持动态增长。</li><li>LinkedList： 双向链表，也实现了List接口，支持快速的插入和删除操作。</li><li>HashMap： 基于哈希表的Map实现，存储键值对，通过键快速查找值。</li><li>HashSet： 基于HashMap实现的Set集合，用于存储唯一元素。</li><li>TreeMap： 基于红黑树实现的有序Map集合，可以按照键的顺序进行排序。</li><li>LinkedHashMap： 基于哈希表和双向链表实现的Map集合，保持插入顺序或访问顺序。</li><li>PriorityQueue： 优先队列，可以按照比较器或元素的自然顺序进行排序。</li></ul><h3 id="说说Java集合"><a href="#说说Java集合" class="headerlink" title="说说Java集合"></a>说说Java集合</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">Collection</span><br>├── <span class="hljs-built_in">List</span><br>│   ├── <span class="hljs-variable">ArrayList</span><br>│   ├── <span class="hljs-variable">LinkedList</span><br>│   └── <span class="hljs-variable">Vector</span><br>├── <span class="hljs-built_in">Set</span><br>│   ├── <span class="hljs-variable">HashSet</span><br>│   ├── <span class="hljs-variable">LinkedHashSet</span><br>│   └── <span class="hljs-variable">TreeSet</span><br>└── <span class="hljs-variable">Queue</span><br>    ├── <span class="hljs-variable">LinkedList</span><br>    ├── <span class="hljs-variable">PriorityQueue</span><br>    └── <span class="hljs-variable">ArrayDeque</span><br><br><span class="hljs-built_in">Map</span><br>├── <span class="hljs-variable">HashMap</span><br>├── <span class="hljs-variable">LinkedHashMap</span><br>├── <span class="hljs-built_in">TreeMap</span><br>└── <span class="hljs-variable">ConcurrentHashMap</span><br></code></pre></td></tr></table></figure><h4 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h4><ul><li>可变容量，数组实现，扩容时，将原数组复制，支持随机访问，增删性能较差</li></ul><h4 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h4><ul><li>双向链表，增删更快，随机读取慢</li></ul><h4 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h4><ul><li>通过HashMap实现，HashMap的Key即HashSet存储的元素，所有Key都是用相同的Value，一个名为PRESENT的Object类型常量。使用Key保证元素唯一性，但不保证有序性。由于HashSet是HashMap实现的，因此线程不安全。</li></ul><h4 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h4><ul><li>继承自HashSet，通过LinkedHashMap实现，使用额外的双向链表维护元素插入顺序。</li></ul><h4 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h4><ul><li>基于红黑树，通过TreeMap实现的，自动排序</li></ul><h4 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h4><ul><li>JDK1.8 之前由数组+链表组成的，JDK1.8 以后当链表长度大于阈值（默认为 8）时，将链表转化为红黑树</li></ul><h4 id="LinkedHashMap"><a href="#LinkedHashMap" class="headerlink" title="LinkedHashMap"></a>LinkedHashMap</h4><ul><li>继承自 HashMap，额外维护一个双向链表记录顺序</li></ul><h4 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h4><ul><li>红黑树（自平衡的排序二叉树）</li></ul><h4 id="ConcurrentHashMap"><a href="#ConcurrentHashMap" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h4><ul><li>Node数组+链表+红黑树实现，线程安全的（jdk1.8以前Segment锁，1.8以后volatile + CAS 或者 synchronized）</li></ul><h4 id="PriorityQueue"><a href="#PriorityQueue" class="headerlink" title="PriorityQueue"></a>PriorityQueue</h4><ul><li>小根堆，根据优先级排序</li></ul><h4 id="ArrayDeque"><a href="#ArrayDeque" class="headerlink" title="ArrayDeque"></a>ArrayDeque</h4><ul><li>基于循环数组</li></ul><h3 id="Java中线程安全的集合"><a href="#Java中线程安全的集合" class="headerlink" title="Java中线程安全的集合"></a>Java中线程安全的集合</h3><h4 id="ConcurrentHashMap-1"><a href="#ConcurrentHashMap-1" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h4><ul><li>分段锁机制（JDK8 后使用 CAS + synchronized）</li></ul><h4 id="CopyOnWriteArrayList"><a href="#CopyOnWriteArrayList" class="headerlink" title="CopyOnWriteArrayList"></a>CopyOnWriteArrayList</h4><ul><li>写时复制机制，适合读多写少场景。每次写操作都会复制整个数组，读操作不会被写操作阻塞，写操作通过ReentrantLock加锁来确保原子性，volatile 保证新数组对所有线程立即可见。</li></ul><h4 id="CopyOnWriteArraySet"><a href="#CopyOnWriteArraySet" class="headerlink" title="CopyOnWriteArraySet"></a>CopyOnWriteArraySet</h4><ul><li>基于 CopyOnWriteArrayList 实现的线程安全 Set</li></ul><h4 id="ConcurrentLinkedQueue"><a href="#ConcurrentLinkedQueue" class="headerlink" title="ConcurrentLinkedQueue"></a>ConcurrentLinkedQueue</h4><ul><li>非阻塞队列，基于链表。使用 CAS 实现高并发入队&#x2F;出队</li></ul><h4 id="ConcurrentLinkedDeque"><a href="#ConcurrentLinkedDeque" class="headerlink" title="ConcurrentLinkedDeque"></a>ConcurrentLinkedDeque</h4><ul><li>双端非阻塞队列，支持头尾操作</li></ul><h4 id="BlockingQueue"><a href="#BlockingQueue" class="headerlink" title="BlockingQueue"></a>BlockingQueue</h4><table><thead><tr><th>类名</th><th>特点</th></tr></thead><tbody><tr><td>ArrayBlockingQueue</td><td>有界阻塞队列，数组实现</td></tr><tr><td>LinkedBlockingQueue</td><td>可选容量，链表实现</td></tr><tr><td>PriorityBlockingQueue</td><td>带优先级的阻塞队列</td></tr><tr><td>DelayQueue</td><td>延迟队列，元素按时间出队</td></tr><tr><td>SynchronousQueue</td><td>不存储元素，直接交接</td></tr></tbody></table><h3 id="Collections和Collection的区别"><a href="#Collections和Collection的区别" class="headerlink" title="Collections和Collection的区别"></a>Collections和Collection的区别</h3><ul><li>Collections是工具类，提供了一系列方法对集合进行操作</li><li>Collection是接口，定义了集合应该具备的功能</li></ul><h3 id="集合的遍历"><a href="#集合的遍历" class="headerlink" title="集合的遍历"></a>集合的遍历</h3><ul><li>for循环</li><li>for-each</li><li>迭代器<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Iterator&lt;String&gt; iterator = list.iterator();<br><span class="hljs-keyword">while</span>(iterator.hasNext()) &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">element</span> <span class="hljs-operator">=</span> iterator.next();<br>    System.out.println(element);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>ListIterator列表迭代器:是迭代器的子类，可以双向访问列表并在迭代过程中修改元素。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">ListIterator&lt;String&gt; listIterator= list.listIterator();<br><span class="hljs-keyword">while</span>(listIterator.hasNext()) &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">element</span> <span class="hljs-operator">=</span> listIterator.next();<br>    System.out.println(element);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>forEach方法： Java 8引入了 forEach 方法，可以对集合进行快速遍历。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">list.forEach(element -&gt; System.out.println(element));<br></code></pre></td></tr></table></figure></li><li>Stream API： Java 8的Stream API提供了丰富的功能，可以对集合进行函数式操作，如过滤、映射等。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">list.stream().forEach(element -&gt; System.out.println(element));<br></code></pre></td></tr></table></figure></li></ul><h3 id="list可以一边遍历一边修改元素吗"><a href="#list可以一边遍历一边修改元素吗" class="headerlink" title="list可以一边遍历一边修改元素吗"></a>list可以一边遍历一边修改元素吗</h3><ul><li>for循环：可以修改</li><li>for-each：可以修改值，不能改变结构，例如删除</li><li>迭代器可以删除，修改值需要通过迭代器的set方法，不能用list的set方法</li></ul><h3 id="把ArrayList变成线程安全有哪些方法"><a href="#把ArrayList变成线程安全有哪些方法" class="headerlink" title="把ArrayList变成线程安全有哪些方法"></a>把ArrayList变成线程安全有哪些方法</h3><ul><li>使用Collections类的synchronizedList方法将ArrayList包装成线程安全的List：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;String&gt; synchronizedList = Collections.synchronizedList(arrayList);<br></code></pre></td></tr></table></figure></li><li>使用CopyOnWriteArrayList类代替ArrayList，它是一个线程安全的List实现：</li><li>使用Vector（×）</li></ul><h3 id="ArrayList的扩容机制说一下"><a href="#ArrayList的扩容机制说一下" class="headerlink" title="ArrayList的扩容机制说一下"></a>ArrayList的扩容机制说一下</h3><ul><li>计算新的容量：一般情况下，新的容量会扩大为原容量的1.5倍（在JDK 10之后，扩容策略做了调整），然后检查是否超过了最大容量限制。</li><li>创建新的数组：根据计算得到的新容量，创建一个新的更大的数组。</li><li>将元素复制：将原来数组中的元素逐个复制到新数组中。</li><li>更新引用：将ArrayList内部指向原数组的引用指向新数组。</li><li>完成扩容：扩容完成后，可以继续添加新元素。</li><li>之所以扩容是 1.5 倍，是因为 1.5 可以充分利用移位操作，减少浮点数或者运算时间和运算次数。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 新容量计算</span><br><span class="hljs-type">int</span> <span class="hljs-variable">newCapacity</span> <span class="hljs-operator">=</span> oldCapacity + (oldCapacity &gt;&gt; <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="CopyonWriteArraylist是如何实现线程安全的"><a href="#CopyonWriteArraylist是如何实现线程安全的" class="headerlink" title="CopyonWriteArraylist是如何实现线程安全的"></a>CopyonWriteArraylist是如何实现线程安全的</h3><h4 id="使用volatile关键字修饰数组"><a href="#使用volatile关键字修饰数组" class="headerlink" title="使用volatile关键字修饰数组"></a>使用volatile关键字修饰数组</h4><ul><li>保证当前线程对数组对象重新赋值后，其他线程可以及时感知到。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">transient</span> <span class="hljs-keyword">volatile</span> Object[] array;<br></code></pre></td></tr></table></figure></li></ul><h4 id="写操作加锁"><a href="#写操作加锁" class="headerlink" title="写操作加锁"></a>写操作加锁</h4><ul><li>加了一把互斥锁ReentrantLock以保证线程安全。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">add</span><span class="hljs-params">(E e)</span> &#123;<br>    <span class="hljs-comment">//获取锁</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-type">ReentrantLock</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.lock;<br>    <span class="hljs-comment">//加锁</span><br>    lock.lock();<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//获取到当前List集合保存数据的数组</span><br>        Object[] elements = getArray();<br>        <span class="hljs-comment">//获取该数组的长度（这是一个伏笔，同时len也是新数组的最后一个元素的索引值）</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> elements.length;<br>        <span class="hljs-comment">//将当前数组拷贝一份的同时，让其长度加1</span><br>        Object[] newElements = Arrays.copyOf(elements, len + <span class="hljs-number">1</span>);<br>        <span class="hljs-comment">//将加入的元素放在新数组最后一位，len不是旧数组长度吗，为什么现在用它当成新数组的最后一个元素的下标？建议自行画图推演，就很容易理解。</span><br>        newElements[len] = e;<br>        <span class="hljs-comment">//替换引用，将数组的引用指向给新数组的地址</span><br>        setArray(newElements);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-comment">//释放锁</span><br>        lock.unlock();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>现在我们来看读操作，读是没有加锁的，所以读是一直都能读<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> E <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-type">int</span> index)</span> &#123;<br>    <span class="hljs-keyword">return</span> get(getArray(), index);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="遍历map"><a href="#遍历map" class="headerlink" title="遍历map"></a>遍历map</h3><h4 id="for-each循环和entrySet方法"><a href="#for-each循环和entrySet方法" class="headerlink" title="for-each循环和entrySet方法"></a>for-each循环和entrySet方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用for-each循环和entrySet()遍历Map</span><br><span class="hljs-keyword">for</span> (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) &#123;<br>    System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + entry.getKey() + <span class="hljs-string">&quot;, Value: &quot;</span> + entry.getValue());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="for-each循环和keySet-方法"><a href="#for-each循环和keySet-方法" class="headerlink" title="for-each循环和keySet()方法"></a>for-each循环和keySet()方法</h4><ul><li>只遍历键<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用for-each循环和keySet()遍历Map的键</span><br><span class="hljs-keyword">for</span> (String key : map.keySet()) &#123;<br>    System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + key + <span class="hljs-string">&quot;, Value: &quot;</span> + map.get(key));<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用迭代器遍历Map</span><br>Iterator&lt;Entry&lt;String, Integer&gt;&gt; iterator = map.entrySet().iterator();<br>    <span class="hljs-keyword">while</span> (iterator.hasNext()) &#123;<br>        Entry&lt;String, Integer&gt; entry = iterator.next();<br>        System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + entry.getKey() + <span class="hljs-string">&quot;, Value: &quot;</span> + entry.getValue());<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="Lambda表达式和forEach-方法"><a href="#Lambda表达式和forEach-方法" class="headerlink" title="Lambda表达式和forEach()方法"></a>Lambda表达式和forEach()方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">map.forEach((key, value) -&gt; System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + key + <span class="hljs-string">&quot;, Value: &quot;</span> + value));<br></code></pre></td></tr></table></figure><h4 id="使用Stream-API"><a href="#使用Stream-API" class="headerlink" title="使用Stream API"></a>使用Stream API</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用Stream API遍历Map</span><br>map.entrySet().stream().forEach(entry -&gt; System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + entry.getKey() + <span class="hljs-string">&quot;, Value: &quot;</span> + entry.getValue()));<br></code></pre></td></tr></table></figure><h3 id="哈希冲突的解决方案有哪些"><a href="#哈希冲突的解决方案有哪些" class="headerlink" title="哈希冲突的解决方案有哪些"></a>哈希冲突的解决方案有哪些</h3><ul><li>链接法：使用链表或其他数据结构来存储冲突的键值对，将它们链接在同一个哈希桶中。</li><li>开放寻址法：在哈希表中找到另一个可用的位置来存储冲突的键值对，而不是存储在链表中。常见的开放寻址方法包括线性探测、二次探测和双重散列。</li><li>再哈希法（Rehashing）：当发生冲突时，使用另一个哈希函数再次计算键的哈希值，直到找到一个空槽来存储键值对。</li><li>哈希桶扩容：当哈希冲突过多时，可以动态地扩大哈希桶的数量，重新分配键值对，以减少冲突的概率。</li></ul><h3 id="Hashmap的put过程"><a href="#Hashmap的put过程" class="headerlink" title="Hashmap的put过程"></a>Hashmap的put过程</h3><ul><li>计算key的hashcode</li><li>使用哈希函数确定数组索引</li><li>若桶为空，直接创建结点将值放入</li><li>若不为空，且key已存在，直接覆盖value</li><li>若不为空，key不存在，则插入到链表或者红黑树中</li><li>判断是否树化：链表长度大于8且数组长度大于等于64</li><li>判断是否扩容：若元素数量超过现在的容量*负载因子，则扩容。负载因子默认0.75。容量乘2。</li></ul><h3 id="Hashmap调用get方法一定安全吗"><a href="#Hashmap调用get方法一定安全吗" class="headerlink" title="Hashmap调用get方法一定安全吗"></a>Hashmap调用get方法一定安全吗</h3><h4 id="get方法"><a href="#get方法" class="headerlink" title="get方法"></a>get方法</h4><ul><li>获取对象时，我们将K传给get，它调用hashCode计算hash从而得到bucket位置，并进一步调用equals()方法确定键值对。</li></ul><h4 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h4><ul><li>空指针异常（NullPointerException）：如果你尝试用 null 作为键调用 get 方法，而 HashMap 没有被初始化（即为 null），那么会抛出空指针异常。不过，如果 HashMap 已经初始化，使用 null 作为键是允许的，因为 HashMap 支持 null 键。</li><li>线程安全：HashMap 本身不是线程安全的。如果在多线程环境中，没有适当的同步措施，同时对 HashMap 进行读写操作可能会导致不可预测的行为。例如，在一个线程中调用 get 方法读取数据，而另一个线程同时修改了结构（如增加或删除元素），可能会导致读取操作得到错误的结果或抛出 ConcurrentModificationException。</li></ul><h3 id="HashMap为啥String适合做Key呢？"><a href="#HashMap为啥String适合做Key呢？" class="headerlink" title="HashMap为啥String适合做Key呢？"></a>HashMap为啥String适合做Key呢？</h3><ul><li>用 string 做 key，因为 String对象是不可变的，一旦创建就不能被修改，这确保了Key的稳定性。如果Key是可变的，可能会导致hashCode和equals方法的不一致，进而影响HashMap的正确性。</li></ul><h3 id="为什么使用红黑树而不是AVL树"><a href="#为什么使用红黑树而不是AVL树" class="headerlink" title="为什么使用红黑树而不是AVL树"></a>为什么使用红黑树而不是AVL树</h3><ul><li>平衡二叉树追求的是一种 “完全平衡” 状态：任何结点的左右子树的高度差不会超过 1，优势是树的结点是很平均分配的。当增删元素时，基本会破坏结构，导致左旋和右旋。</li><li>红黑树不追求这种完全平衡状态，而是追求一种 “弱平衡” 状态：整个树最长路径不会超过最短路径的 2 倍。优势是虽然牺牲了一部分查找的性能效率，但是能够换取一部分维持树平衡状态的成本，调整的频率。</li></ul><h3 id="重写HashMap的equal和hashcode方法需要注意什么？"><a href="#重写HashMap的equal和hashcode方法需要注意什么？" class="headerlink" title="重写HashMap的equal和hashcode方法需要注意什么？"></a>重写HashMap的equal和hashcode方法需要注意什么？</h3><ul><li>如果o1.equals(o2)，那么o1.hashCode() &#x3D;&#x3D; o2.hashCode()总是为true的。</li><li>如果o1.hashCode() &#x3D;&#x3D; o2.hashCode()，并不意味着o1.equals(o2)会为true。</li></ul><h3 id="重写HashMap的equal方法不当会出现什么问题"><a href="#重写HashMap的equal方法不当会出现什么问题" class="headerlink" title="重写HashMap的equal方法不当会出现什么问题"></a>重写HashMap的equal方法不当会出现什么问题</h3><ul><li>重写了equals方法，不重写hashCode方法时，可能会出现equals方法返回为true，而hashCode方法却返回false，这样的一个后果会导致在hashmap等类中存储多个一模一样的对象，导致出现覆盖存储的数据的问题，这与hashmap只能有唯一的key的规范不符合。</li></ul><h3 id="列举HashMap在多线程下可能会出现的问题"><a href="#列举HashMap在多线程下可能会出现的问题" class="headerlink" title="列举HashMap在多线程下可能会出现的问题"></a>列举HashMap在多线程下可能会出现的问题</h3><ul><li>JDK1.7中的 HashMap 使用头插法插入元素，在多线程的环境下，扩容的时候有可能导致环形链表的出现，形成死循环。因此，JDK1.8使用尾插法插入元素，在扩容时会保持链表元素原本的顺序，不会出现环形链表的问题。</li><li>多线程同时执行 put 操作，如果计算出来的索引位置是相同的，那会造成前一个 key 被后一个 key 覆盖，从而导致元素的丢失。此问题在JDK 1.7和 JDK 1.8 中都存在。</li></ul><h3 id="HashMap的扩容机制介绍一下"><a href="#HashMap的扩容机制介绍一下" class="headerlink" title="HashMap的扩容机制介绍一下"></a>HashMap的扩容机制介绍一下</h3><ul><li>hashMap默认的负载因子是0.75，即如果hashmap中的元素个数超过了总容量75%，则会触发扩容，扩容分为两个步骤：<ul><li>第1步是对哈希表长度的扩展（2倍）</li><li>第2步是将旧哈希表中的数据放到新的哈希表中。</li></ul></li><li>扩容后，元素要么留在原位置，要么为原位置加旧容量<ul><li>若元素哈希值和旧容量取与等于0，则留在原桶</li><li>若不为零，则一定为旧容量，则等于旧桶+旧容量</li></ul></li></ul><h3 id="HashMap的大小为什么是2的n次方大小呢"><a href="#HashMap的大小为什么是2的n次方大小呢" class="headerlink" title="HashMap的大小为什么是2的n次方大小呢"></a>HashMap的大小为什么是2的n次方大小呢</h3><ul><li>按位取与更快（与取模相比）</li><li>扩容时，元素的索引只高一个bit位</li><li>哈希分布均衡。配合 JDK 的扰动函数（高位异或低位等混合），低位随机性更好，元素分布更均匀，冲突概率下降。如果容量不是 2 的幂，hash % capacity 的分布可能受哈希值低位模式影响，容易集中冲突。</li></ul><h3 id="往HashMap里存20个元素，扩容几次？"><a href="#往HashMap里存20个元素，扩容几次？" class="headerlink" title="往HashMap里存20个元素，扩容几次？"></a>往HashMap里存20个元素，扩容几次？</h3><ul><li>初始容量16</li><li>当插入到16*0.75&#x3D;12时，第13个元素进行扩容，容量为32</li><li>当插入到20时，20&lt;32*0.75&#x3D;24，不扩容</li></ul><h3 id="说说hashmap的负载因子"><a href="#说说hashmap的负载因子" class="headerlink" title="说说hashmap的负载因子"></a>说说hashmap的负载因子</h3><ul><li>HashMap 负载因子 loadFactor 的默认值是 0.75，当 HashMap 中的元素个数超过了容量的 75% 时，就会进行扩容。</li><li>默认负载因子为 0.75，是因为它提供了空间和时间复杂度之间的良好平衡。</li><li>负载因子太低会导致大量的空桶浪费空间，负载因子太高会导致大量的碰撞，降低性能。0.75 的负载因子在这两个因素之间取得了良好的平衡。</li></ul><h3 id="Hashmap和Hashtable"><a href="#Hashmap和Hashtable" class="headerlink" title="Hashmap和Hashtable"></a>Hashmap和Hashtable</h3><ul><li>HashMap线程不安全，效率高一点，可以存储null的key和value，null的key只能有一个，null的value可以有多个。默认初始容量为16，每次扩充变为原来2倍。创建时如果给定了初始容量，则扩充为2的幂次方大小。底层数据结构为数组+链表，插入元素后如果链表长度大于阈值（默认为8），先判断数组长度是否小于64，如果小于，则扩充数组，反之将链表转化为红黑树，以减少搜索时间。</li><li>HashTable线程安全，效率低一点，其内部方法基本都经过synchronized修饰，不可以有null的key和value。默认初始容量为11，每次扩容变为原来的2n+1。创建时给定了初始容量，会直接用给定的大小。底层数据结构为数组+链表。它基本被淘汰了，要保证线程安全可以用ConcurrentHashMap。</li></ul><h3 id="ConcurrentHashMap怎么实现的"><a href="#ConcurrentHashMap怎么实现的" class="headerlink" title="ConcurrentHashMap怎么实现的"></a>ConcurrentHashMap怎么实现的</h3><h4 id="JDK-1-7及以前"><a href="#JDK-1-7及以前" class="headerlink" title="JDK 1.7及以前"></a>JDK 1.7及以前</h4><ul><li>使用Segment数组将表分段加锁</li><li>Segment 是一种可重入锁（ReentrantLock）</li><li>一个 ConcurrentHashMap 里包含一个 Segment 数组，一个 Segment 里包含一个 HashEntry 数组，每个 HashEntry 是一个链表结构的元素。</li></ul><h4 id="JDK-1-8"><a href="#JDK-1-8" class="headerlink" title="JDK 1.8"></a>JDK 1.8</h4><ul><li>通过 volatile + CAS 或者 synchronized 来实现的线程安全</li><li>添加元素时，若容器为空，则使用 volatile 加 CAS 来初始化<ul><li>若不为空，若对应的桶为空，则利用 CAS 设置该节点</li><li>若桶不为空，则使用 synchronized ，然后，遍历桶中的数据，并替换或新增节点到桶中，最后再判断是否需要转为红黑树，这样就能保证并发访问时的线程安全了。</li></ul></li><li>CAS：Compare-And-Swap（比较并交换）一种无锁（lock-free）同步原语，用来在多线程环境下安全地更新共享变量。检查内存中某个变量的当前值是否等于预期值（expected）。如果相等，就把它更新为新值（new value）。如果不相等，说明有其他线程修改过了，当前操作失败，通常会重新读取并重试。</li></ul><h3 id="分段锁怎么加锁的"><a href="#分段锁怎么加锁的" class="headerlink" title="分段锁怎么加锁的"></a>分段锁怎么加锁的</h3><ul><li>在 ConcurrentHashMap 中，将整个数据结构分为多个 Segment，每个 Segment 都类似于一个小的 HashMap，每个 Segment 都有自己的锁，不同 Segment 之间的操作互不影响，从而提高并发性能。</li><li>在 ConcurrentHashMap 中，对于插入、更新、删除等操作，需要先定位到具体的 Segment，然后再在该 Segment 上加锁，而不是像传统的 HashMap 一样对整个数据结构加锁。这样可以使得不同 Segment 之间的操作并行进行，提高了并发性能。</li></ul><h3 id="分段锁是可重入的吗"><a href="#分段锁是可重入的吗" class="headerlink" title="分段锁是可重入的吗"></a>分段锁是可重入的吗</h3><h4 id="可重入锁"><a href="#可重入锁" class="headerlink" title="可重入锁"></a>可重入锁</h4><ul><li>同一个线程在持有锁的情况下，可以再次获取该锁而不会被阻塞。这样可以避免一个方法在调用另一个需要同一把锁的方法时发生自我死锁。</li></ul><h4 id="分段锁是可重入锁"><a href="#分段锁是可重入锁" class="headerlink" title="分段锁是可重入锁"></a>分段锁是可重入锁</h4><ul><li>因为直接继承了 ReentrantLock，所以具备所有可重入特性。</li><li>当一个线程在 Segment 里调用方法时，如果这个方法内部又需要获取该 Segment 的锁，线程可以直接“重入”。</li><li>如果 put() 过程中需要触发扩容（resize），扩容内部也会访问受同一锁保护的结构，没有可重入特性就会自己卡住自己</li></ul><h3 id="已经用了synchronized，为什么还要用CAS呢"><a href="#已经用了synchronized，为什么还要用CAS呢" class="headerlink" title="已经用了synchronized，为什么还要用CAS呢"></a>已经用了synchronized，为什么还要用CAS呢</h3><ul><li>ConcurrentHashMap使用这两种手段来保证线程安全主要是一种权衡的考虑，在某些操作中使用synchronized，还是使用CAS，主要是根据锁竞争程度来判断的。</li><li>CAS<ul><li>适合一次性原子更新单个变量&#x2F;引用 的简单操作（比如空桶插入、初始化、计数更新）。</li><li>开销低：直接用 CPU 原子指令完成，不阻塞线程。</li><li>成功时几乎零等待，能最大化发挥“多桶并行”的优势。</li></ul></li><li>synchronized<ul><li>用在 需要修改复杂数据结构 的场景（比如链表插入&#x2F;删除、红黑树旋转、扩容时搬迁桶）。</li><li>能在一个临界区内保护多个字段&#x2F;节点的一致性。</li><li>避免中间态被其他线程看到，保证结构性不变量。</li><li>若冲突，线程直接阻塞，会有上下文切换的开销。</li></ul></li></ul><h3 id="ConcurrentHashMap用了悲观锁还是乐观锁"><a href="#ConcurrentHashMap用了悲观锁还是乐观锁" class="headerlink" title="ConcurrentHashMap用了悲观锁还是乐观锁"></a>ConcurrentHashMap用了悲观锁还是乐观锁</h3><h4 id="CAS乐观锁"><a href="#CAS乐观锁" class="headerlink" title="CAS乐观锁"></a>CAS乐观锁</h4><ul><li>场景<ul><li>空桶插入：桶是 null 时，直接用 CAS 把它原子地替换成新节点。</li><li>延迟初始化表：多个线程第一次访问时，用 CAS 确保只初始化一次。</li></ul></li><li>特点<ul><li>不先加锁，先假设不会冲突（乐观）。</li><li>冲突才自旋重试，不会阻塞线程。</li></ul></li></ul><h4 id="synchronized悲观锁"><a href="#synchronized悲观锁" class="headerlink" title="synchronized悲观锁"></a>synchronized悲观锁</h4><ul><li>场景<ul><li>桶里已有节点，需要修改链表或红黑树结构时。</li><li>扩容迁移某个桶的所有节点时。</li></ul></li><li>特点<ul><li>先加锁再修改，保证一个线程在临界区独占资源。</li><li>避免复杂结构在更新过程中被其他线程破坏。</li></ul></li></ul><h3 id="说一下HashMap和Hashtable、ConcurrentMap的区别"><a href="#说一下HashMap和Hashtable、ConcurrentMap的区别" class="headerlink" title="说一下HashMap和Hashtable、ConcurrentMap的区别"></a>说一下HashMap和Hashtable、ConcurrentMap的区别</h3><ul><li>HashMap线程不安全，效率高一点，可以存储null的key和value，null的key只能有一个，null的value可以有多个。默认初始容量为16，每次扩充变为原来2倍。创建时如果给定了初始容量，则扩充为2的幂次方大小。底层数据结构为数组+链表，插入元素后如果链表长度大于阈值（默认为8），先判断数组长度是否小于64，如果小于，则扩充数组，反之将链表转化为红黑树，以减少搜索时间。</li><li>HashTable线程安全，效率低一点，其内部方法基本都经过synchronized修饰，不可以有null的key和value。默认初始容量为11，每次扩容变为原来的2n+1。创建时给定了初始容量，会直接用给定的大小。底层数据结构为数组+链表。它基本被淘汰了，要保证线程安全可以用ConcurrentHashMap。</li><li>ConcurrentHashMap是Java中的一个线程安全的哈希表实现，它可以在多线程环境下并发地进行读写操作，而不需要像传统的HashTable那样在读写时加锁。ConcurrentHashMap的实现原理主要基于分段锁和CAS操作。它将整个哈希表分成了多Segment（段），每个Segment都类似于一个小的HashMap，它拥有自己的数组和一个独立的锁。在ConcurrentHashMap中，读操作不需要锁，可以直接对Segment进行读取，而写操作则只需要锁定对应的Segment，而不是整个哈希表，这样可以大大提高并发性能。</li></ul><h3 id="Set集合有什么特点？如何实现key无重复的？"><a href="#Set集合有什么特点？如何实现key无重复的？" class="headerlink" title="Set集合有什么特点？如何实现key无重复的？"></a>Set集合有什么特点？如何实现key无重复的？</h3><ul><li>set集合特点：Set集合中的元素是唯一的，不会出现重复的元素。</li><li>set实现原理：Set集合通过内部的数据结构（如哈希表、红黑树等）来实现key的无重复。当向Set集合中插入元素时，会先根据元素的hashCode值来确定元素的存储位置，然后再通过equals方法来判断是否已经存在相同的元素，如果存在则不会再次插入，保证了元素的唯一性。</li></ul><h3 id="有序的Set是什么？记录插入顺序的集合是什么？"><a href="#有序的Set是什么？记录插入顺序的集合是什么？" class="headerlink" title="有序的Set是什么？记录插入顺序的集合是什么？"></a>有序的Set是什么？记录插入顺序的集合是什么？</h3><ul><li>有序的 Set 是TreeSet和LinkedHashSet。TreeSet是基于红黑树实现，保证元素的自然顺序。LinkedHashSet是基于双重链表和哈希表的结合来实现元素的有序存储，保证元素添加的自然顺序</li><li>记录插入顺序的集合通常指的是LinkedHashSet，它不仅保证元素的唯一性，还可以保持元素的插入顺序。当需要在Set集合中记录元素的插入顺序时，可以选择使用LinkedHashSet来实现。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Java基础知识</title>
    <link href="/2025/08/18/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <url>/2025/08/18/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</url>
    
    <content type="html"><![CDATA[<h1 id="Java基础知识"><a href="#Java基础知识" class="headerlink" title="Java基础知识"></a>Java基础知识</h1><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><h3 id="Java的特点"><a href="#Java的特点" class="headerlink" title="Java的特点"></a>Java的特点</h3><ul><li>跨平台性<ul><li>Java编译器将源代码编译成字节码（bytecode），该字节码可以在任何安装了Java虚拟机（JVM）的系统上运行。</li></ul></li><li>面向对象<ul><li>Java是一门严格的面向对象编程语言，几乎一切都是对象。面向对象编程（OOP）特性使得代码更易于维护和重用，包括类（class）、对象（object）、继承（inheritance）、多态（polymorphism）、抽象（abstraction）和封装（encapsulation）。</li></ul></li><li>垃圾回收机制<ul><li>Java有自己的垃圾回收机制，自动管理内存和回收不再使用的对象。这样，开发者不需要手动管理内存，从而减少内存泄漏和其他内存相关的问题。</li></ul></li></ul><h3 id="Java为什么是跨平台的"><a href="#Java为什么是跨平台的" class="headerlink" title="Java为什么是跨平台的"></a>Java为什么是跨平台的</h3><ul><li>我们编写的Java源码，编译后会生成一种 .class 文件，称为字节码文件。Java虚拟机就是负责将字节码文件翻译成特定平台下的机器码然后运行。也就是说，只要在不同平台上安装对应的JVM，就可以运行字节码文件，运行我们编写的Java程序。</li><li>跨平台的是Java程序，不是JVM。JVM是用C&#x2F;C++开发的，是编译后的机器码，不能跨平台，不同平台下需要安装不同版本的JVM。</li></ul><h3 id="JVM、JDK、JRE三者关系"><a href="#JVM、JDK、JRE三者关系" class="headerlink" title="JVM、JDK、JRE三者关系"></a>JVM、JDK、JRE三者关系</h3><ul><li>JVM是Java虚拟机，是Java程序运行的环境。它负责将Java字节码（由Java编译器生成）解释或编译成机器码，并执行程序。JVM提供了内存管理、垃圾回收、安全性等功能，使得Java程序具备跨平台性。</li><li>JDK是Java开发工具包，是开发Java程序所需的工具集合。它包含了JVM、编译器（javac）、调试器（jdb）等开发工具，以及一系列的类库（如Java标准库和开发工具库）。JDK提供了开发、编译、调试和运行Java程序所需的全部工具和环境。</li><li>JRE是Java运行时环境，是Java程序运行所需的最小环境。它包含了JVM和一组Java类库，用于支持Java程序的执行。JRE不包含开发工具，只提供Java程序运行所需的运行环境。</li></ul><h3 id="为什么Java解释和编译都有？"><a href="#为什么Java解释和编译都有？" class="headerlink" title="为什么Java解释和编译都有？"></a>为什么Java解释和编译都有？</h3><ul><li>编译：<ul><li>javac将Java源文件编译为字节码文件（.class文件）</li><li>JIT将字节码中的热门代码编译为机器码，直接在CPU运行，并会保存在进程内存中（code cache）</li></ul></li><li>解释性<ul><li>JVM逐条解释代码，边翻译边生成机器码上CPU运行，运行完不会保存</li></ul></li><li>JIT编译的启动速度慢，但运行一段时间后速度较快；JVM解释启动快，但遇到重复代码较多时速度较慢。</li></ul><h3 id="编译型语言和解释型语言的区别？"><a href="#编译型语言和解释型语言的区别？" class="headerlink" title="编译型语言和解释型语言的区别？"></a>编译型语言和解释型语言的区别？</h3><ul><li>编译型语言：在程序执行之前，整个源代码会被编译成机器码或者字节码，生成可执行文件。执行时直接运行编译后的代码，速度快，但跨平台性较差。</li><li>解释型语言：在程序执行时，逐行解释执行源代码，不生成独立的可执行文件。通常由解释器动态解释并执行代码，跨平台性好，但执行速度相对较慢。</li></ul><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><h3 id="Java-数据类型一览表"><a href="#Java-数据类型一览表" class="headerlink" title="Java 数据类型一览表"></a>Java 数据类型一览表</h3><table><thead><tr><th>分类</th><th>数据类型</th><th>占用内存（字节）</th><th>取值范围 &#x2F; 精度</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td><strong>整数型</strong></td><td>byte</td><td>1</td><td>-128 ~ 127</td><td>0</td><td>最小的整数类型，适合节省内存</td></tr><tr><td></td><td>short</td><td>2</td><td>-32,768 ~ 32,767</td><td>0</td><td>比 byte 大一档的整数</td></tr><tr><td></td><td>int</td><td>4</td><td>-2^31 ~ 2^31-1</td><td>0</td><td>默认的整数类型</td></tr><tr><td></td><td>long</td><td>8</td><td>-2^63 ~ 2^63-1</td><td>0L</td><td>表示长整型，需加 <code>L</code> 后缀</td></tr><tr><td><strong>浮点型</strong></td><td>float</td><td>4</td><td>约 ±3.40282347E+38F（6~7 位小数精度）</td><td>0.0f</td><td>单精度浮点，需加 <code>f</code> 后缀</td></tr><tr><td></td><td>double</td><td>8</td><td>约 ±1.79769313486231570E+308（15~16 位精度）</td><td>0.0d</td><td>双精度浮点，默认浮点类型</td></tr><tr><td><strong>字符型</strong></td><td>char</td><td>2</td><td>单个 Unicode 字符（’\u0000’ ~ ‘\uffff’）</td><td>‘\u0000’</td><td>支持存储中文、英文及符号</td></tr><tr><td><strong>布尔型</strong></td><td>boolean</td><td>1（规范未固定）</td><td>true &#x2F; false</td><td>false</td><td>表示逻辑值</td></tr><tr><td><strong>引用型</strong></td><td>类（Class）</td><td>-</td><td>-</td><td>null</td><td>由类创建的对象</td></tr><tr><td></td><td>接口（Interface）</td><td>-</td><td>-</td><td>null</td><td>实现多态的契约</td></tr><tr><td></td><td>数组（Array）</td><td>-</td><td>-</td><td>null</td><td>存放相同类型数据的集合</td></tr><tr><td></td><td>枚举（Enum）</td><td>-</td><td>-</td><td>null</td><td>固定常量的集合</td></tr><tr><td></td><td>注解（Annotation）</td><td>-</td><td>-</td><td>null</td><td>用于元数据描述</td></tr></tbody></table><blockquote><p>💡 注意：</p><ul><li><strong>基本数据类型</strong> 存储在栈上，速度快。</li><li><strong>引用数据类型</strong> 存储在堆上，变量保存对象的地址（引用）。</li><li>boolean 的存储大小在 JVM 规范中未固定，但实际实现通常用 1 个字节或更小的位来表示。</li></ul></blockquote><h3 id="数据类型转换方式"><a href="#数据类型转换方式" class="headerlink" title="数据类型转换方式"></a>数据类型转换方式</h3><ul><li>自动类型转换（隐式转换）：当目标类型的范围大于源类型时，Java会自动将源类型转换为目标类型，不需要显式的类型转换。例如，将int转换为long、将float转换为double等。</li><li>强制类型转换（显式转换）：当目标类型的范围小于源类型时，需要使用强制类型转换将源类型转换为目标类型。这可能导致数据丢失或溢出。例如，将long转换为int、将double转换为int等。语法为：目标类型 变量名 &#x3D; (目标类型) 源类型。</li><li>字符串转换：Java提供了将字符串表示的数据转换为其他类型数据的方法。例如，将字符串转换为整型int，可以使用Integer.parseInt()方法；将字符串转换为浮点型double，可以使用Double.parseDouble()方法等。</li><li>数值之间的转换：Java提供了一些数值类型之间的转换方法，如将整型转换为字符型、将字符型转换为整型等。这些转换方式可以通过类型的包装类来实现，例如Character类、Integer类等提供了相应的转换方法。</li></ul><h3 id="类型互转会出现什么问题"><a href="#类型互转会出现什么问题" class="headerlink" title="类型互转会出现什么问题"></a>类型互转会出现什么问题</h3><h4 id="基本数据类型"><a href="#基本数据类型" class="headerlink" title="基本数据类型"></a>基本数据类型</h4><ul><li>小范围到大范围（向上转型）：没有问题，一般是安全的</li><li>大范围到小范围（向下转型）：需要进行强制类型转换，且容易丢失高位或者精度</li></ul><h4 id="对象引用转换"><a href="#对象引用转换" class="headerlink" title="对象引用转换"></a>对象引用转换</h4><ul><li>向上转型：子类的对象赋值给父类的引用，是安全的</li><li>向下转型：父类的对象赋值给子类的引用，需要手动进行，且存在风险，如果实例实际上不是子类的实例，则会抛出ClassCastException异常，解决方式是需要使用 instanceof 检查：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">if</span> (animal <span class="hljs-keyword">instanceof</span> Dog) &#123; <br><span class="hljs-type">Dog</span> <span class="hljs-variable">dog</span> <span class="hljs-operator">=</span> (Dog) animal;<br>&#125; <span class="hljs-comment">// 只有确认animal是Dog的实例时才进行转型 &#125;</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="为什么用bigDecimal-不用double"><a href="#为什么用bigDecimal-不用double" class="headerlink" title="为什么用bigDecimal 不用double"></a>为什么用bigDecimal 不用double</h3><ul><li>double使用二进制表示，只能表示1&#x2F;2^n的任意和，会有精度问题</li></ul><h3 id="装箱和拆箱"><a href="#装箱和拆箱" class="headerlink" title="装箱和拆箱"></a>装箱和拆箱</h3><ul><li>装箱：基本数据类型 → 对应的包装类对象<ul><li>自动装箱：编译器自动完成，例如<code>Integer i=5;</code></li><li>手动装箱：<code>Integer b = Integer.valueOf(5);</code></li></ul></li><li>拆箱：包装类对象 → 对应的基本数据类型<ul><li>自动拆箱：编译器自动完成，例如：<code>Integer a = 5;int c = a; // Integer → int（自动拆箱）</code></li><li>手动拆箱：调用包装类的取值方法：<code>int d = a.intValue();</code></li></ul></li><li>记忆口诀<ul><li>“装进盒子是装箱，从盒子里取出来是拆箱” 基本类型进盒子，成了对象；对象开盒子，变回基本类型。</li></ul></li></ul><h3 id="装箱装箱弊端"><a href="#装箱装箱弊端" class="headerlink" title="装箱装箱弊端"></a>装箱装箱弊端</h3><ul><li>当循环里有自动拆箱时，会有额外对象生成</li></ul><h3 id="Java为什么要有Integer"><a href="#Java为什么要有Integer" class="headerlink" title="Java为什么要有Integer"></a>Java为什么要有Integer</h3><h4 id="泛型中的应用"><a href="#泛型中的应用" class="headerlink" title="泛型中的应用"></a>泛型中的应用</h4><ul><li>Java中泛型只能用引用类型，不能用基本数据类型</li></ul><h4 id="转换中的应用"><a href="#转换中的应用" class="headerlink" title="转换中的应用"></a>转换中的应用</h4><ul><li>在Java中，基本类型和引用类型不能直接进行转换，必须使用包装类来实现。例如，将一个int类型的值转换为String类型，必须首先将其转换为Integer类型，然后再转换为String类型。</li></ul><h4 id="工具方法支持"><a href="#工具方法支持" class="headerlink" title="工具方法支持"></a>工具方法支持</h4><ul><li>包装类封装了很多实用的静态方法和常量，方便类型转换、比较、解析，比如Integer.parseInt(“123”)、Double.isNaN(x)</li></ul><h3 id="那为什么还要保留int类型"><a href="#那为什么还要保留int类型" class="headerlink" title="那为什么还要保留int类型"></a>那为什么还要保留int类型</h3><ul><li>包装类是引用类型，对象的引用和对象本身是分开存储的，而对于基本类型数据，变量对应的内存块直接存储数据本身。</li><li>因此，基本类型数据在读写效率方面，要比包装类高效。除此之外，在64位JVM上，在开启引用压缩的情况下，一个Integer对象占用16个字节的内存空间，而一个int类型数据只占用4字节的内存空间，前者对空间的占用是后者的4倍。</li><li>也就是说，不管是读写效率，还是存储效率，基本类型都比包装类高效。</li></ul><h3 id="说一下-integer的缓存"><a href="#说一下-integer的缓存" class="headerlink" title="说一下 integer的缓存"></a>说一下 integer的缓存</h3><ul><li>Java的Integer类内部实现了一个静态缓存池，用于存储特定范围内的整数值对应的Integer对象。 </li><li>默认情况下，这个范围是-128至127。当通过Integer.valueOf(int)方法创建一个在这个范围内的整数对象时，并不会每次都生成新的对象实例，而是复用缓存中的现有对象，会直接从内存中取出，不需要新建一个对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//==比地址</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">100</span>);<br><span class="hljs-type">Integer</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">100</span>);<br>System.out.println(a == b); <span class="hljs-comment">// 输出 true，因为复用了缓存池中的对象</span><br><span class="hljs-type">Integer</span> <span class="hljs-variable">a</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">200</span>);<br><span class="hljs-type">Integer</span> <span class="hljs-variable">b</span> <span class="hljs-operator">=</span> Integer.valueOf(<span class="hljs-number">200</span>);<br>System.out.println(a == b); <span class="hljs-comment">// 输出 false，因为创建了两个不同的对象</span><br></code></pre></td></tr></table></figure></li></ul><h2 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h2><h3 id="怎么理解面向对象？"><a href="#怎么理解面向对象？" class="headerlink" title="怎么理解面向对象？"></a>怎么理解面向对象？</h3><ul><li>面向对象是一种编程方法，将现实的具体事物抽象为对象，对象封装数据和行为，通过消息（方法调用）彼此协作</li></ul><h3 id="面向对象三大特性"><a href="#面向对象三大特性" class="headerlink" title="面向对象三大特性"></a>面向对象三大特性</h3><ul><li>封装：封装是指将对象的属性（数据）和行为（方法）结合在一起，对外隐藏对象的内部细节，仅通过对象提供的接口与外界交互。封装的目的是增强安全性和简化编程，使得对象更加独立。</li><li>继承：继承是一种可以使得子类自动共享父类数据结构和方法的机制。它是代码复用的重要手段，通过继承可以建立类与类之间的层次关系，使得结构更加清晰。 </li><li>多态：多态是指允许不同类的对象对同一消息作出响应。即同一个接口，使用不同的实例而执行不同操作。多态性可以分为编译时多态（重载）和运行时多态（重写）。它使得程序具有良好的灵活性和扩展性。</li></ul><h3 id="多态体现在哪几个方面？"><a href="#多态体现在哪几个方面？" class="headerlink" title="多态体现在哪几个方面？"></a>多态体现在哪几个方面？</h3><ul><li>方法重载： <ul><li>方法重载是指同一类中可以有多个同名方法，它们具有不同的参数列表（参数类型、数量或顺序不同）。虽然方法名相同，但根据传入的参数不同，编译器会在编译时确定调用哪个方法。 </li><li>示例：对于一个 add 方法，可以定义为 add(int a, int b) 和 add(double a, double b)。</li></ul></li><li>方法重写： <ul><li>方法重写是指子类能够提供对父类中同名方法的具体实现。在运行时，JVM会根据对象的实际类型确定调用哪个版本的方法。这是实现多态的主要方式。 </li><li>示例：在一个动物类中，定义一个 sound 方法，子类 Dog 可以重写该方法以实现 bark，而 Cat 可以实现 meow。</li></ul></li><li>接口与实现： 多态也体现在接口的使用上，多个类可以实现同一个接口，并且用接口类型的引用来调用这些类的方法。这使得程序在面对不同具体实现时保持一贯的调用方式。 <ul><li>示例：多个类（如 Dog, Cat）都实现了一个 Animal 接口，当用 Animal 类型的引用来调用 makeSound 方法时，会触发对应的实现。</li></ul></li><li>向上转型和向下转型： <ul><li>在Java中，可以使用父类类型的引用指向子类对象，这是向上转型。通过这种方式，可以在运行时期采用不同的子类实现。 </li><li>向下转型是将父类引用转回其子类类型，但在执行前需要确认引用实际指向的对象类型以避免 ClassCastException。</li></ul></li></ul><h3 id="多态解决了什么问题"><a href="#多态解决了什么问题" class="headerlink" title="多态解决了什么问题"></a>多态解决了什么问题</h3><ul><li>多态可以提高代码的扩展性和复用性，是很多设计模式、设计原则、编程技巧的代码实现基础。</li></ul><h3 id="面向对象的设计原则"><a href="#面向对象的设计原则" class="headerlink" title="面向对象的设计原则"></a>面向对象的设计原则</h3><ul><li>单一职责原则（S）：一个类只负责一项职责（一个变化原因）</li><li>开闭原则（O）：对扩展开放，对修改关闭</li><li>里氏替换原则（L）：所有父类都可以被子类替换</li><li>接口隔离原则（I）：多个专用接口优于一个万能大接口</li><li>依赖倒置原则（D）：高层模块依赖抽象，底层模块也依赖于抽象</li></ul><h3 id="重载与重写有什么区别？"><a href="#重载与重写有什么区别？" class="headerlink" title="重载与重写有什么区别？"></a>重载与重写有什么区别？</h3><ul><li>重载（Overloading）指的是在同一个类中，可以有多个同名方法，它们具有不同的参数列表（参数类型、参数个数或参数顺序不同），编译器根据调用时的参数类型来决定调用哪个方法。 </li><li>重写（Overriding）指的是子类可以重新定义父类中的方法，方法名、参数列表和返回类型必须与父类中的方法一致，通过@override注解来明确表示这是对父类方法的重写。 </li><li>重载是指在同一个类中定义多个同名方法，而重写是指子类重新定义父类中的方法。</li></ul><h3 id="抽象类和普通类区别"><a href="#抽象类和普通类区别" class="headerlink" title="抽象类和普通类区别"></a>抽象类和普通类区别</h3><table><thead><tr><th>对比维度</th><th>抽象类 (abstract class)</th><th>普通类 (concrete class)</th></tr></thead><tbody><tr><td><strong>是否可实例化</strong></td><td>❌ 不能直接创建对象</td><td>✅ 可以直接 <code>new</code> 对象</td></tr><tr><td><strong>是否可包含抽象方法</strong></td><td>✅ 可以（未实现的方法，只有方法签名）</td><td>❌ 不允许包含抽象方法</td></tr><tr><td><strong>是否必须实现所有方法</strong></td><td>❌ 子类实现抽象类时，必须实现其所有抽象方法（除非子类也是抽象类）</td><td>✅ 自己实现了所有方法</td></tr><tr><td><strong>构造方法</strong></td><td>✅ 可以有构造方法，用于子类调用</td><td>✅ 可以有构造方法</td></tr><tr><td><strong>成员</strong></td><td>可包含成员变量、已实现方法、抽象方法</td><td>可包含成员变量和已实现方法</td></tr><tr><td><strong>继承限制</strong></td><td>只能单继承，但可实现多个接口</td><td>同样只能单继承，可实现多个接口</td></tr><tr><td><strong>修饰符</strong></td><td>必须用 <code>abstract</code> 修饰</td><td>无需 <code>abstract</code> 修饰</td></tr><tr><td><strong>用途</strong></td><td>定义通用模板，部分方法延迟到子类实现</td><td>定义具体可用的类，提供完整实现</td></tr></tbody></table><h3 id="Java抽象类和接口的区别是什么"><a href="#Java抽象类和接口的区别是什么" class="headerlink" title="Java抽象类和接口的区别是什么"></a>Java抽象类和接口的区别是什么</h3><h4 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h4><ul><li>抽象类用于描述类的共同特性和行为，可以有成员变量、构造方法和具体方法。适用于有明显继承关系的场景。</li><li>关键字：extends</li><li>抽象类可以有定义与实现，方法可在抽象类中实现</li><li>访问修饰符：抽象类中成员变量默认default，可在子类中被重新定义，也可被重新赋值；抽象方法被abstract修饰，不能被private、static、synchronized和native等修饰，必须以分号结尾，不带花括号。</li><li>抽象类可以包含实例变量和静态变量。</li></ul><h4 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h4><ul><li>接口用于定义行为规范，可以多实现，只能有常量和抽象方法（Java 8 以后可以有默认方法和静态方法）。适用于定义类的能力或功能。</li><li>关键字：implements</li><li>接口只有定义，不能有方法的实现，java 1.8中可以定义default方法体</li><li>访问修饰符：接口成员变量默认为public static final，必须赋初值，不能被修改；其所有的成员方法都是public、abstract的。</li><li>接口只能包含常量（即静态常量）。</li></ul><h3 id="接口里面可以定义哪些方法"><a href="#接口里面可以定义哪些方法" class="headerlink" title="接口里面可以定义哪些方法"></a>接口里面可以定义哪些方法</h3><h4 id="抽象方法"><a href="#抽象方法" class="headerlink" title="抽象方法"></a>抽象方法</h4><ul><li>抽象方法是接口的核心部分，所有实现接口的类都必须实现这些方法。抽象方法默认是 public 和 abstract，这些修饰符可以省略。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="默认方法"><a href="#默认方法" class="headerlink" title="默认方法"></a>默认方法</h4><ul><li>默认方法是在 Java 8 中引入的，允许接口提供具体实现。实现类可以选择重写默认方法<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">default</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sleep</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Sleeping...&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="静态方法"><a href="#静态方法" class="headerlink" title="静态方法"></a>静态方法</h4><ul><li>静态方法也是在 Java 8 中引入的，它们属于接口本身，可以通过接口名直接调用，而不需要实现类的对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">staticMethod</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Static method in interface&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="私有方法"><a href="#私有方法" class="headerlink" title="私有方法"></a>私有方法</h4><ul><li>私有方法是在 Java 9 中引入的，用于在接口中为默认方法或其他私有方法提供辅助功能。这些方法不能被实现类访问，只能在接口内部使用。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">interface</span> <span class="hljs-title class_">Animal</span> &#123;<br>    <span class="hljs-keyword">void</span> <span class="hljs-title function_">makeSound</span><span class="hljs-params">()</span>;<br>    <br>    <span class="hljs-keyword">default</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">sleep</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Sleeping...&quot;</span>);<br>        logSleep();<br>    &#125;<br>    <br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">logSleep</span><span class="hljs-params">()</span> &#123;<br>        System.out.println(<span class="hljs-string">&quot;Logging sleep&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="接口可以包含构造函数吗"><a href="#接口可以包含构造函数吗" class="headerlink" title="接口可以包含构造函数吗"></a>接口可以包含构造函数吗</h3><ul><li>在接口中，不可以有构造方法,在接口里写入构造方法时，编译器提示：Interfaces cannot have constructors，因为接口不会有自己的实例的，所以不需要有构造函数。</li><li>为什么呢？构造函数就是初始化class的属性或者方法，在new的一瞬间自动调用，那么问题来了Java的接口，都不能new 那么要构造函数干嘛呢？根本就没法调用</li></ul><h3 id="Java中的静态变量和静态方法"><a href="#Java中的静态变量和静态方法" class="headerlink" title="Java中的静态变量和静态方法"></a>Java中的静态变量和静态方法</h3><h4 id="静态变量"><a href="#静态变量" class="headerlink" title="静态变量"></a>静态变量</h4><ul><li>在类中使用static关键字声明的变量。它们属于类而不是任何具体的对象。</li><li>所有该类的实例共享同一个静态变量。如果一个实例修改了静态变量的值，其他实例也会看到这个更改。</li><li>静态变量在类被加载时初始化，只会对其进行一次分配内存。</li><li>静态变量可以直接通过类名访问，也可以通过实例访问，但推荐使用类名。</li></ul><h4 id="静态方法-1"><a href="#静态方法-1" class="headerlink" title="静态方法"></a>静态方法</h4><ul><li>静态方法也属于类，而不是任何具体的对象。</li><li>静态方法可以在没有创建类实例的情况下调用。对于静态方法来说，不能直接访问非静态的成员变量或方法，因为静态方法没有上下文的实例。</li><li>静态方法可以直接调用其他静态变量和静态方法，但不能直接访问非静态成员。</li><li>静态方法不支持重写（Override），但可以被隐藏（Hide）（子类声明了一个与父类静态方法完全相同签名的静态方法）。</li></ul><h3 id="非静态内部类和静态内部类的区别"><a href="#非静态内部类和静态内部类的区别" class="headerlink" title="非静态内部类和静态内部类的区别"></a>非静态内部类和静态内部类的区别</h3><ul><li>非静态内部类依赖于外部类的实例，而静态内部类不依赖于外部类的实例。</li><li>非静态内部类可以访问外部类的实例变量和方法，而静态内部类只能访问外部类的静态成员。</li><li>非静态内部类不能定义静态成员，而静态内部类可以定义静态成员。</li><li>非静态内部类在外部类实例化后才能实例化，而静态内部类可以独立实例化。</li><li>非静态内部类可以访问外部类的私有成员，而静态内部类不能直接访问外部类的私有成员，需要通过实例化外部类来访问。</li></ul><h3 id="非静态内部类可以直接访问外部方法，编译器是怎么做到的"><a href="#非静态内部类可以直接访问外部方法，编译器是怎么做到的" class="headerlink" title="非静态内部类可以直接访问外部方法，编译器是怎么做到的"></a>非静态内部类可以直接访问外部方法，编译器是怎么做到的</h3><ul><li>非静态内部类可以直接访问外部方法是因为编译器在生成字节码时会为非静态内部类维护一个指向外部类实例的引用。</li><li>这个引用使得非静态内部类能够访问外部类的实例变量和方法。编译器会在生成非静态内部类的构造方法时，将外部类实例作为参数传入，并在内部类的实例化过程中建立外部类实例与内部类实例之间的联系，从而实现直接访问外部方法的功能。</li></ul><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><h3 id="final的作用"><a href="#final的作用" class="headerlink" title="final的作用"></a>final的作用</h3><ul><li>修饰类：当final修饰一个类时，表示这个类不能被继承，是类继承体系中的最终形态。例如，Java 中的String类就是用final修饰的，这保证了String类的不可变性和安全性，防止其他类通过继承来改变String类的行为和特性。</li><li>修饰方法：用final修饰的方法不能在子类中被重写。比如，java.lang.Object类中的getClass方法就是final的，因为这个方法的行为是由 Java 虚拟机底层实现来保证的，不应该被子类修改。</li><li>修饰变量：当final修饰基本数据类型的变量时，该变量一旦被赋值就不能再改变。例如，final int num &#x3D; 10;，这里的num就是一个常量，不能再对其进行重新赋值操作，否则会导致编译错误。对于引用数据类型，final修饰意味着这个引用变量不能再指向其他对象，但对象本身的内容是可以改变的。例如，final StringBuilder sb &#x3D; new StringBuilder(“Hello”);，不能让sb再指向其他StringBuilder对象，但可以通过sb.append(“ World”);来修改字符串的内容。</li></ul><h2 id="深拷贝和浅拷贝"><a href="#深拷贝和浅拷贝" class="headerlink" title="深拷贝和浅拷贝"></a>深拷贝和浅拷贝</h2><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><h4 id="浅拷贝"><a href="#浅拷贝" class="headerlink" title="浅拷贝"></a>浅拷贝</h4><ul><li>浅拷贝是指只复制对象本身和其内部的值类型字段，但不会复制对象内部的引用类型字段。换句话说，浅拷贝只是创建一个新的对象，然后将原对象的字段值复制到新对象中，但如果原对象内部有引用类型的字段，只是将引用复制到新对象中，两个对象指向的是同一个引用对象。</li></ul><h4 id="深拷贝"><a href="#深拷贝" class="headerlink" title="深拷贝"></a>深拷贝</h4><ul><li>深拷贝是指在复制对象的同时，将对象内部的所有引用类型字段的内容也复制一份，而不是共享引用。换句话说，深拷贝会递归复制对象内部所有引用类型的字段，生成一个全新的对象以及其内部的所有对象。</li></ul><h3 id="实现深拷贝的方式"><a href="#实现深拷贝的方式" class="headerlink" title="实现深拷贝的方式"></a>实现深拷贝的方式</h3><h4 id="实现-Cloneable-接口并重写-clone-方法"><a href="#实现-Cloneable-接口并重写-clone-方法" class="headerlink" title="实现 Cloneable 接口并重写 clone() 方法"></a>实现 Cloneable 接口并重写 clone() 方法</h4><ul><li>在 clone() 方法中，通过递归克隆引用类型字段来实现深拷贝。</li></ul><h4 id="使用序列化和反序列化"><a href="#使用序列化和反序列化" class="headerlink" title="使用序列化和反序列化"></a>使用序列化和反序列化</h4><ul><li>通过将对象序列化为字节流，再从字节流反序列化为对象来实现深拷贝。要求对象及其所有引用类型字段都实现 Serializable 接口。</li></ul><h4 id="手动递归复制"><a href="#手动递归复制" class="headerlink" title="手动递归复制"></a>手动递归复制</h4><ul><li>针对特定对象结构，手动递归复制对象及其引用类型字段。适用于对象结构复杂度不高的情况。</li></ul><h2 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h2><h3 id="java创建对象有哪些方式"><a href="#java创建对象有哪些方式" class="headerlink" title="java创建对象有哪些方式"></a>java创建对象有哪些方式</h3><h4 id="new关键字"><a href="#new关键字" class="headerlink" title="new关键字"></a>new关键字</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyClass</span>();<br></code></pre></td></tr></table></figure><h4 id="使用Class类的newInstance-方法"><a href="#使用Class类的newInstance-方法" class="headerlink" title="使用Class类的newInstance()方法"></a>使用Class类的newInstance()方法</h4><ul><li>通过反射机制，可以使用Class类的newInstance()方法创建对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> (MyClass) Class.forName(<span class="hljs-string">&quot;com.example.MyClass&quot;</span>).newInstance();<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用Constructor类的newInstance-方法"><a href="#使用Constructor类的newInstance-方法" class="headerlink" title="使用Constructor类的newInstance()方法"></a>使用Constructor类的newInstance()方法</h4><ul><li>同样是通过反射机制，可以使用Constructor类的newInstance()方法创建对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java">Constructor&lt;MyClass&gt; constructor = MyClass.class.getConstructor();<br><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> constructor.newInstance();<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用clone-方法"><a href="#使用clone-方法" class="headerlink" title="使用clone()方法"></a>使用clone()方法</h4><ul><li>如果类实现了Cloneable接口，可以使用clone()方法复制对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyClass</span>();<br><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj2</span> <span class="hljs-operator">=</span> (MyClass) obj1.clone();<br></code></pre></td></tr></table></figure></li></ul><h4 id="使用反序列化"><a href="#使用反序列化" class="headerlink" title="使用反序列化"></a>使用反序列化</h4><ul><li>通过将对象序列化到文件或流中，然后再进行反序列化来创建对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// SerializedObject.java</span><br><span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">out</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileOutputStream</span>(<span class="hljs-string">&quot;object.ser&quot;</span>));<br>out.writeObject(obj);<br>out.close();<br><br><span class="hljs-comment">// DeserializedObject.java</span><br><span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">in</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileInputStream</span>(<span class="hljs-string">&quot;object.ser&quot;</span>));<br><span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> (MyClass) in.readObject();<br>in.close();<br></code></pre></td></tr></table></figure></li></ul><h3 id="New出的对象什么时候回收"><a href="#New出的对象什么时候回收" class="headerlink" title="New出的对象什么时候回收"></a>New出的对象什么时候回收</h3><ul><li>通过过关键字new创建的对象，由Java的垃圾回收器（Garbage Collector）负责回收。</li></ul><h3 id="垃圾回收方法"><a href="#垃圾回收方法" class="headerlink" title="垃圾回收方法"></a>垃圾回收方法</h3><h4 id="引用计数法"><a href="#引用计数法" class="headerlink" title="引用计数法"></a>引用计数法</h4><ul><li>某个对象的引用计数为0时，表示该对象不再被引用，可以被回收。</li></ul><h4 id="可达性分析算法"><a href="#可达性分析算法" class="headerlink" title="可达性分析算法"></a>可达性分析算法</h4><ul><li>从根对象（如方法区中的类静态属性、方法中的局部变量等）出发，通过对象之间的引用链进行遍历，如果存在一条引用链到达某个对象，则说明该对象是可达的，反之不可达，不可达的对象将被回收。</li></ul><h4 id="终结器"><a href="#终结器" class="headerlink" title="终结器"></a>终结器</h4><ul><li>如果对象重写了finalize()方法，垃圾回收器会在回收该对象之前调用finalize()方法，对象可以在finalize()方法中进行一些清理操作。然而，终结器机制的使用不被推荐，因为它的执行时间是不确定的，可能会导致不可预测的性能问题。</li></ul><h3 id="如何获取私有对象"><a href="#如何获取私有对象" class="headerlink" title="如何获取私有对象"></a>如何获取私有对象</h3><h4 id="使用公共访问器方法（getter-方法）"><a href="#使用公共访问器方法（getter-方法）" class="headerlink" title="使用公共访问器方法（getter 方法）"></a>使用公共访问器方法（getter 方法）</h4><ul><li>如果类的设计者遵循良好的编程规范，通常会为私有成员变量提供公共的访问器方法（即 getter 方法），通过调用这些方法可以安全地获取私有对象。</li></ul><h4 id="反射机制"><a href="#反射机制" class="headerlink" title="反射机制"></a>反射机制</h4><ul><li>反射机制允许在运行时检查和修改类、方法、字段等信息，通过反射可以绕过 private 访问修饰符的限制来获取私有对象。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.reflect.Field;<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">MyClass</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">String</span> <span class="hljs-variable">privateField</span> <span class="hljs-operator">=</span> <span class="hljs-string">&quot;私有字段的值&quot;</span>;<br>&#125;<br><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> <span class="hljs-keyword">throws</span> NoSuchFieldException, IllegalAccessException &#123;<br>        <span class="hljs-type">MyClass</span> <span class="hljs-variable">obj</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">MyClass</span>();<br>        <span class="hljs-comment">// 获取 Class 对象</span><br>        Class&lt;?&gt; clazz = obj.getClass();<br>        <span class="hljs-comment">// 获取私有字段</span><br>        <span class="hljs-type">Field</span> <span class="hljs-variable">privateField</span> <span class="hljs-operator">=</span> clazz.getDeclaredField(<span class="hljs-string">&quot;privateField&quot;</span>);<br>        <span class="hljs-comment">// 设置可访问性</span><br>        privateField.setAccessible(<span class="hljs-literal">true</span>);<br>        <span class="hljs-comment">// 获取私有字段的值</span><br>        <span class="hljs-type">String</span> <span class="hljs-variable">value</span> <span class="hljs-operator">=</span> (String) privateField.get(obj);<br>        System.out.println(value); <br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h2 id="反射"><a href="#反射" class="headerlink" title="反射"></a>反射</h2><h3 id="什么是反射"><a href="#什么是反射" class="headerlink" title="什么是反射"></a>什么是反射</h3><h4 id="反射概念"><a href="#反射概念" class="headerlink" title="反射概念"></a>反射概念</h4><ul><li>Java 反射机制是在运行状态中，对于任意一个类，都能够知道这个类中的所有属性和方法，对于任意一个对象，都能够调用它的任意一个方法和属性；这种动态获取的信息以及动态调用对象的方法的功能称为 Java 语言的反射机制。</li></ul><h4 id="特性"><a href="#特性" class="headerlink" title="特性"></a>特性</h4><ul><li>运行时类信息访问：反射机制允许程序在运行时获取类的完整结构信息，包括类名、包名、父类、实现的接口、构造函数、方法和字段等。</li><li>动态对象创建：可以使用反射API动态地创建对象实例，即使在编译时不知道具体的类名。这是通过Class类的newInstance()方法或Constructor对象的newInstance()方法实现的。</li><li>动态方法调用：可以在运行时动态地调用对象的方法，包括私有方法。这通过Method类的invoke()方法实现，允许你传入对象实例和参数值来执行方法。</li><li>访问和修改字段值：反射还允许程序在运行时访问和修改对象的字段值，即使是私有的。这是通过Field类的get()和set()方法完成的。</li></ul><h3 id="反射用到的地方"><a href="#反射用到的地方" class="headerlink" title="反射用到的地方"></a>反射用到的地方</h3><h4 id="实例化Bean"><a href="#实例化Bean" class="headerlink" title="实例化Bean"></a>实例化Bean</h4><ul><li>将程序中所有XML或properties配置文件加载入内存</li><li>Java类里面解析xml或者properties里面的内容，得到对应实体类的字节码字符串以及相关的属性信息</li><li>通过 clazz.getDeclaredConstructor().newInstance() 创建实例</li><li>动态配置实例的属性</li></ul><h4 id="注解"><a href="#注解" class="headerlink" title="注解"></a>注解</h4><ul><li>通过 clazz.isAnnotationPresent() &#x2F; clazz.getAnnotation() 获取注解实例</li><li>调用注解方法拿到属性值（比如 @RequestMapping 的路径、@Value 的配置值）</li></ul><h2 id="注解-1"><a href="#注解-1" class="headerlink" title="注解"></a>注解</h2><h3 id="讲一讲Java注解的原理"><a href="#讲一讲Java注解的原理" class="headerlink" title="讲一讲Java注解的原理"></a>讲一讲Java注解的原理</h3><ul><li>注解本质是一个继承了Annotation的特殊接口，其具体实现类是Java运行时生成的动态代理类。</li><li>我们通过反射获取注解时，返回的是Java运行时生成的动态代理对象。通过代理对象调用自定义注解的方法，会最终调用AnnotationInvocationHandler的invoke方法。该方法会从memberValues这个Map中索引出对应的值。而memberValues的来源是Java常量池。</li></ul><h3 id="注解的底层实现"><a href="#注解的底层实现" class="headerlink" title="注解的底层实现"></a>注解的底层实现</h3><h4 id="定义一个注解"><a href="#定义一个注解" class="headerlink" title="定义一个注解"></a>定义一个注解</h4><ul><li>注解本质上是一种特殊的接口，它继承自 java.lang.annotation.Annotation 接口，所以注解也叫声明式接口<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.lang.annotation.Retention;<br><span class="hljs-keyword">import</span> java.lang.annotation.RetentionPolicy;<br><span class="hljs-keyword">import</span> java.lang.annotation.Target;<br><span class="hljs-keyword">import</span> java.lang.annotation.ElementType;<br><br><span class="hljs-meta">@Retention(RetentionPolicy.RUNTIME)</span><br><span class="hljs-meta">@Target(ElementType.TYPE)</span><br><span class="hljs-keyword">public</span> <span class="hljs-meta">@interface</span> Task &#123;<br>    String <span class="hljs-title function_">name</span><span class="hljs-params">()</span>;<br>    <span class="hljs-type">int</span> <span class="hljs-title function_">priority</span><span class="hljs-params">()</span> <span class="hljs-keyword">default</span> <span class="hljs-number">5</span>;<br>&#125;<br><br></code></pre></td></tr></table></figure></li><li>根据注解的作用范围，Java注解分为：<ul><li>源码级：仅存在源码中，编译后丢弃<code>@Retention(RetentionPolicy.SOURCE)</code></li><li>类文件级别注解：保留在<code>.class</code>文件中，但运行时不可见<code>@Retention(RetentionPolicy.CLASS)</code></li><li>运行时注解 ：保留在 <code>.class</code> 文件中，并且可以通过反射在运行时访问<code>@Retention(RetentionPolicy.RUNTIME)</code></li></ul></li><li>只有运行时注解使用反射机制进行解析</li></ul><h4 id="在类上使用注解"><a href="#在类上使用注解" class="headerlink" title="在类上使用注解"></a>在类上使用注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Task(name = &quot;ExampleTask&quot;, priority = 10)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Example</span> &#123;<br>    <span class="hljs-comment">// 类的业务逻辑…</span><br>&#125;<br><br></code></pre></td></tr></table></figure><h4 id="触发反射API读取注解"><a href="#触发反射API读取注解" class="headerlink" title="触发反射API读取注解"></a>触发反射API读取注解</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AnnotationReader</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        Class&lt;Example&gt; cls = Example.class;<br><br>        <span class="hljs-comment">// 触发：检查注解是否存在</span><br>        <span class="hljs-keyword">if</span> (cls.isAnnotationPresent(Task.class)) &#123;<br>            <span class="hljs-comment">// 触发：获取注解实例</span><br>            <span class="hljs-type">Task</span> <span class="hljs-variable">task</span> <span class="hljs-operator">=</span> cls.getAnnotation(Task.class);<br><br>            <span class="hljs-comment">// 使用注解值</span><br>            System.out.printf(<br>                <span class="hljs-string">&quot;Task name: %s, priority: %d%n&quot;</span>,<br>                task.name(),<br>                task.priority()<br>            );<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            System.out.println(<span class="hljs-string">&quot;No Task annotation on class Example.&quot;</span>);<br>        &#125;<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><ul><li>调用 isAnnotationPresent(Task.class) 时，JVM 会查找 RuntimeVisibleAnnotations 属性。</li><li>调用 getAnnotation(Task.class) 时，JVM 调用 AnnotationParser 解析字节码，生成一个动态代理实例。</li></ul><h4 id="Java编译器在生成的-class文件中保存注解信息，并进行分类"><a href="#Java编译器在生成的-class文件中保存注解信息，并进行分类" class="headerlink" title="Java编译器在生成的.class文件中保存注解信息，并进行分类"></a>Java编译器在生成的.class文件中保存注解信息，并进行分类</h4><ul><li>RuntimeVisibleAnnotations ：存储运行时可见的注解信息。</li><li>RuntimeInvisibleAnnotations ：存储运行时不可见的注解信息。</li><li>RuntimeVisibleParameterAnnotations 和RuntimeInvisibleParameterAnnotations ：存储方法参数上的注解信息。</li><li>类加载阶段，.class 文件中携带的注解字节数据随着字节码一起进入内存。</li><li>当 isAnnotationPresent 或 getAnnotation 被调用时，JVM 才会：<ul><li>从 RuntimeVisibleAnnotations 属性提取原始字节流</li><li>用 sun.reflect.annotation.AnnotationParser 生成属性名→属性值的映射</li><li>基于 Proxy 动态创建一个实现 Task 接口的注解实例</li></ul></li><li>注解实例会被缓存，下次读取同一个注解不再重复解析。</li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>因此，注解解析的底层实现主要依赖于 Java 的反射机制和字节码文件的存储。通过 @Retention 元注解可以控制注解的保留策略，当使用 RetentionPolicy.RUNTIME 时，可以在运行时通过反射 API 来解析注解信息。在 JVM 层面，会从字节码文件中读取注解信息，并创建注解的代理对象来获取注解的属性值。</li></ul><h3 id="Java注解的作用域"><a href="#Java注解的作用域" class="headerlink" title="Java注解的作用域"></a>Java注解的作用域</h3><ul><li>类级别作用域：用于描述类的注解，通常放置在类定义的上面，可以用来指定类的一些属性，如类的访问级别、继承关系、注释等。</li><li>方法级别作用域：用于描述方法的注解，通常放置在方法定义的上面，可以用来指定方法的一些属性，如方法的访问级别、返回值类型、异常类型、注释等。</li><li>字段级别作用域：用于描述字段的注解，通常放置在字段定义的上面，可以用来指定字段的一些属性，如字段的访问级别、默认值、注释等。</li></ul><h2 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h2><h3 id="介绍一下Java异常"><a href="#介绍一下Java异常" class="headerlink" title="介绍一下Java异常"></a>介绍一下Java异常</h3><p><img src="/2025/08/18/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/Java%E5%BC%82%E5%B8%B8.png" alt="Java异常"></p><ul><li>Error（错误）：表示运行时环境的错误。错误是程序无法处理的严重问题，如系统崩溃、虚拟机错误、动态链接失败等。通常，程序不应该尝试捕获这类错误。例如，OutOfMemoryError、StackOverflowError等。</li><li>Exception（异常）：表示程序本身可以处理的异常条件。异常分为两大类：<ul><li>非运行时异常：这类异常在编译时期就必须被捕获或者声明抛出。它们通常是外部错误，如文件不存在（FileNotFoundException）、类未找到（ClassNotFoundException）等。非运行时异常强制程序员处理这些可能出现的问题，增强了程序的健壮性。</li><li>运行时异常：这类异常包括运行时异常（RuntimeException）和错误（Error）。运行时异常由程序错误导致，如空指针访问（NullPointerException）、数组越界（ArrayIndexOutOfBoundsException）等。运行时异常是不需要在编译时强制捕获或声明的。</li></ul></li></ul><h3 id="异常处理方式"><a href="#异常处理方式" class="headerlink" title="异常处理方式"></a>异常处理方式</h3><h4 id="try-catch语句"><a href="#try-catch语句" class="headerlink" title="try-catch语句"></a>try-catch语句</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">readFile</span><span class="hljs-params">(String path)</span> &#123;<br>    <span class="hljs-type">BufferedReader</span> <span class="hljs-variable">reader</span> <span class="hljs-operator">=</span> <span class="hljs-literal">null</span>;<br>    <span class="hljs-keyword">try</span> &#123;<br>        reader = <span class="hljs-keyword">new</span> <span class="hljs-title class_">BufferedReader</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">FileReader</span>(path));<br>        String line;<br>        <span class="hljs-keyword">while</span> ((line = reader.readLine()) != <span class="hljs-literal">null</span>) &#123;<br>            System.out.println(line);<br>        &#125;<br>    &#125; <span class="hljs-keyword">catch</span> (FileNotFoundException e) &#123;<br>        System.err.println(<span class="hljs-string">&quot;文件未找到：&quot;</span> + e.getMessage());<br>    &#125; <span class="hljs-keyword">catch</span> (IOException e) &#123;<br>        System.err.println(<span class="hljs-string">&quot;读取出错：&quot;</span> + e.getMessage());<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-keyword">if</span> (reader != <span class="hljs-literal">null</span>) &#123;<br>            <span class="hljs-keyword">try</span> &#123;<br>                reader.close();<br>            &#125; <span class="hljs-keyword">catch</span> (IOException ignored) &#123; &#125;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>finally语句无论是否发生异常都会执行</li><li>try块中的代码将按顺序执行，如果抛出异常，将在catch块中进行匹配和处理，然后程序将继续执行catch块之后的代码。如果没有匹配的catch块，异常将被传递给上一层调用的方法。</li></ul><h4 id="throws关键字"><a href="#throws关键字" class="headerlink" title="throws关键字"></a>throws关键字</h4><ul><li>在方法签名上使用 throws，把受检异常抛给调用者处理，简化当前方法逻辑。</li><li>只有“非运行时异常”需要在方法签名中声明，运行时异常可以不声明</li><li>调用方必须显式捕获或继续声明抛出</li></ul><h4 id="throw语句"><a href="#throw语句" class="headerlink" title="throw语句"></a>throw语句</h4><ul><li>在代码中利用 throw 手动抛出一个异常实例，常用于校验参数或状态。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">divide</span><span class="hljs-params">(<span class="hljs-type">int</span> a, <span class="hljs-type">int</span> b)</span> &#123;<br>    <span class="hljs-keyword">if</span> (b == <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IllegalArgumentException</span>(<span class="hljs-string">&quot;除数不能为零&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> a / b;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>throw 后必须是 Throwable 的子类实例</li><li>用于主动报告错误或非法状态</li></ul><h3 id="抛出异常为什么不用throws"><a href="#抛出异常为什么不用throws" class="headerlink" title="抛出异常为什么不用throws"></a>抛出异常为什么不用throws</h3><ul><li>Unchecked Exceptions：未检查异常（unchecked exceptions）是继承自RuntimeException类或Error类的异常，编译器不强制要求进行异常处理。因此，对于这些异常，不需要在方法签名中使用throws来声明。示例包括NullPointerException、ArrayIndexOutOfBoundsException等。</li><li>异常被捕获和处理：另一种常见情况是，在方法内部捕获了可能抛出的异常，并在方法内部处理它们，而不是通过throws子句将它们传递到调用者。这种情况下，方法可以处理异常而无需在方法签名中使用throws。</li></ul><h3 id="try-return-“a”-fianlly-return-“b”-这条语句返回啥"><a href="#try-return-“a”-fianlly-return-“b”-这条语句返回啥" class="headerlink" title="try{return “a”} fianlly{return “b”}这条语句返回啥"></a>try{return “a”} fianlly{return “b”}这条语句返回啥</h3><ul><li>当执行到 return “a” 时，JVM 会先把要返回的值（即字符串常量 “a”）暂存起来，然后进入 finally 块。</li><li>在 finally 中又执行了 return “b”，这会直接覆盖之前暂存的返回值。方法最后返回的，就是 “b”。</li></ul><h2 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h2><h3 id="与-equals-有什么区别"><a href="#与-equals-有什么区别" class="headerlink" title="&#x3D;&#x3D; 与 equals 有什么区别"></a>&#x3D;&#x3D; 与 equals 有什么区别</h3><ul><li>对于字符串来说，&#x3D;&#x3D;比较值，equals比较地址</li><li>对于非字符串来说，如果没有进行重写，&#x3D;&#x3D;和equals作用相同，都是比较地址</li></ul><h3 id="hashcode和equals方法有什么关系"><a href="#hashcode和equals方法有什么关系" class="headerlink" title="hashcode和equals方法有什么关系"></a>hashcode和equals方法有什么关系</h3><ul><li>在 Java 中，对于重写 equals 方法的类，通常也需要重写 hashCode 方法，并且需要遵循以下规定：<ul><li>若equals方法返回true，则hashCode值必须相等</li><li>若hashCode值相等，equals方法不一定，如果不相等，则为哈希冲突</li></ul></li></ul><h3 id="String、StringBuffer、StringBuilder的区别和联系"><a href="#String、StringBuffer、StringBuilder的区别和联系" class="headerlink" title="String、StringBuffer、StringBuilder的区别和联系"></a>String、StringBuffer、StringBuilder的区别和联系</h3><table><thead><tr><th>特性</th><th>String</th><th>StringBuffer</th><th>StringBuilder</th></tr></thead><tbody><tr><td>可变性</td><td>不可变（Immutable），每次修改生成新对象</td><td>可变（Mutable），在原对象上直接修改</td><td>可变（Mutable），在原对象上直接修改</td></tr><tr><td>线程安全性</td><td>天然线程安全</td><td>同步（方法级 <code>synchronized</code>），线程安全</td><td>非同步，线程不安全</td></tr><tr><td>性能</td><td>拼接时不断创建新对象，性能最差</td><td>有同步锁开销，性能中等</td><td>无同步锁开销，性能最好</td></tr><tr><td>使用场景</td><td>字符串常量、少量拼接、用作 Map Key （静态字符串）等</td><td>多线程环境下需要频繁修改字符串（多线程动态字符串）</td><td>单线程或方法内部频繁拼接（单线程动态字符串）</td></tr><tr><td>联系</td><td>实现 <code>CharSequence</code>、<code>Appendable</code> 接口，基于字符数组实现，提供类似 <code>length()</code>、<code>charAt()</code>、<code>substring()</code> 等 API</td><td>实现 <code>CharSequence</code>、<code>Appendable</code> 接口，基于字符数组实现，提供类似 <code>length()</code>、<code>charAt()</code>、<code>substring()</code> 等 API</td><td>实现 <code>CharSequence</code>、<code>Appendable</code> 接口，基于字符数组实现，提供类似 <code>length()</code>、<code>charAt()</code>、<code>substring()</code> 等 API</td></tr></tbody></table><h2 id="Java新特性"><a href="#Java新特性" class="headerlink" title="Java新特性"></a>Java新特性</h2><h3 id="Java8新特性"><a href="#Java8新特性" class="headerlink" title="Java8新特性"></a>Java8新特性</h3><table><thead><tr><th>新特性</th><th>描述</th></tr></thead><tbody><tr><td>Lambda 表达式</td><td>支持函数式编程，简化匿名内部类和回调</td></tr><tr><td>函数式接口</td><td>使用 <code>@FunctionalInterface</code> 标记仅含一个抽象方法的接口</td></tr><tr><td>Stream API</td><td>声明式集合处理，支持链式调用及并行流（<code>java.util.stream</code>）</td></tr><tr><td>Optional 类</td><td>包装可能为 <code>null</code> 的值，避免显式的空指针检查</td></tr><tr><td>默认方法 &amp; 静态方法</td><td>接口中可定义带实现的默认方法和静态方法，增强向后兼容性</td></tr><tr><td>重复注解</td><td>使用 <code>@Repeatable</code> 支持对同一个程序元素多次使用同一注解</td></tr><tr><td>CompletableFuture</td><td>异步编程增强，支持链式、非阻塞的任务组合与回调</td></tr><tr><td>并行数组操作</td><td><code>Arrays.parallelSort</code>、<code>parallelPrefix</code> 等方法支持多核并行处理</td></tr></tbody></table><h3 id="函数式接口"><a href="#函数式接口" class="headerlink" title="函数式接口"></a>函数式接口</h3><h4 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h4><ul><li>函数式接口是只包含一个抽象方法的接口。Lambda 表达式必须绑定到一个函数式接口上</li><li>可以有默认方法和静态方法和从Object类继承来的public方法</li><li>通常用 @FunctionalInterface 注解标识（可选，但推荐）</li></ul><h4 id="Java内置的四个函数式接口"><a href="#Java内置的四个函数式接口" class="headerlink" title="Java内置的四个函数式接口"></a>Java内置的四个函数式接口</h4><table><thead><tr><th>接口名</th><th>参数类型</th><th>返回类型</th><th>作用说明</th></tr></thead><tbody><tr><td><code>Function&lt;T, R&gt;</code></td><td>T</td><td>R</td><td>接收一个参数，返回一个结果。常用于数据转换、映射等操作。</td></tr><tr><td><code>Consumer&lt;T&gt;</code></td><td>T</td><td>void</td><td>接收一个参数，不返回结果。常用于打印、保存、处理数据等副作用操作。</td></tr><tr><td><code>Supplier&lt;T&gt;</code></td><td>无</td><td>T</td><td>不接收参数，返回一个结果。常用于延迟加载、生成数据等。</td></tr><tr><td><code>Predicate&lt;T&gt;</code></td><td>T</td><td>boolean</td><td>接收一个参数，返回布尔值。常用于条件判断、过滤等。</td></tr></tbody></table><h3 id="Lambda-表达式"><a href="#Lambda-表达式" class="headerlink" title="Lambda 表达式"></a>Lambda 表达式</h3><h4 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h4><ul><li>Lambda 表达式它是一种简洁的语法，用于创建匿名函数，主要用于简化函数式接口（只有一个抽象方法的接口）的使用。</li><li>传统的匿名内部类实现方式代码较为冗长，而 Lambda 表达式可以用更简洁的语法实现相同的功能。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//以前的匿名内部类</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">AnonymousClassExample</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Thread</span> <span class="hljs-variable">t1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(<span class="hljs-keyword">new</span> <span class="hljs-title class_">Runnable</span>() &#123;<br>            <span class="hljs-meta">@Override</span><br>            <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">run</span><span class="hljs-params">()</span> &#123;<br>                System.out.println(<span class="hljs-string">&quot;Running using anonymous class&quot;</span>);<br>            &#125;<br>        &#125;);<br>        t1.start();<br>    &#125;<br>&#125;<br><span class="hljs-comment">//lambda表达式</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">LambdaExample</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        <span class="hljs-type">Thread</span> <span class="hljs-variable">t1</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">Thread</span>(() -&gt; System.out.println(<span class="hljs-string">&quot;Running using lambda expression&quot;</span>));<br>        t1.start();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>虽然有很多好处，但是增加了调试困难。因为 Lambda 表达式是匿名的，在调试时很难定位具体是哪个 Lambda 表达式出现了问题。</li></ul><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><ul><li>(parameters) -&gt; expression：当 Lambda 体只有一个表达式时使用，表达式的结果会作为返回值。</li><li>(parameters) -&gt; { statements; }：当 Lambda 体包含多条语句时，需要使用大括号将语句括起来，若有返回值则需要使用 return 语句。</li></ul><h3 id="Java中stream的API介绍一下"><a href="#Java中stream的API介绍一下" class="headerlink" title="Java中stream的API介绍一下"></a>Java中stream的API介绍一下</h3><ul><li>Stream 是对集合对象功能的增强，它允许你以声明式方式处理数据。</li><li>它提供了一种高效且易于使用的数据处理方式，特别适合集合对象的操作，如过滤、映射、排序等。Stream API不仅可以提高代码的可读性和简洁性，还能利用多核处理器的优势进行并行处理。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">//选出长度大于三的串</span><br>List&lt;String&gt; originalList = Arrays.asList(<span class="hljs-string">&quot;apple&quot;</span>, <span class="hljs-string">&quot;fig&quot;</span>, <span class="hljs-string">&quot;banana&quot;</span>, <span class="hljs-string">&quot;kiwi&quot;</span>);<br>List&lt;String&gt; filteredList = originalList.stream()<br>                                        .filter(s -&gt; s.length() &gt; <span class="hljs-number">3</span>)<br>                                        .collect(Collectors.toList());<br><span class="hljs-comment">//求数组中元素的和</span><br>List&lt;Integer&gt; numbers = Arrays.asList(<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>);<br><span class="hljs-type">int</span> <span class="hljs-variable">sum</span> <span class="hljs-operator">=</span> numbers.stream()<br>                 .mapToInt(Integer::intValue)<br>                 .sum();<br></code></pre></td></tr></table></figure></li></ul><h3 id="Java流的并行API"><a href="#Java流的并行API" class="headerlink" title="Java流的并行API"></a>Java流的并行API</h3><h4 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h4><ul><li>并行流（ParallelStream）就是将源数据分为多个子流对象进行多线程操作，然后将处理的结果再汇总为一个流对象，底层是使用通用的 fork&#x2F;join 池来实现，即将一个任务拆分成多个“小任务”并行计算，再把多个“小任务”的结果合并成总的计算结果</li></ul><h4 id="底层机制"><a href="#底层机制" class="headerlink" title="底层机制"></a>底层机制</h4><ul><li>使用 Java 的 ForkJoinPool.commonPool（默认线程数为 CPU 核心数）</li><li>自动将数据拆分为多个任务</li><li>每个任务在不同线程中执行</li><li>最终将结果合并</li></ul><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><ul><li>CPU密集的任务而不是IO密集的任务，因为IO密集的任务会导致线程阻塞等待资源返回，CPU利用率低</li></ul><h3 id="completableFuture怎么用的"><a href="#completableFuture怎么用的" class="headerlink" title="completableFuture怎么用的"></a>completableFuture怎么用的</h3><ul><li>CompletableFuture实现了两个接口：Future、CompletionStage。</li><li>Future用于表示异步计算的结果，只能通过阻塞或者轮询的方式获取结果，而且不支持设置回调方法，Java 8之前若要设置回调一般会使用guava的ListenableFuture，回调的引入又会导致臭名昭著的回调地狱（下面的例子会通过ListenableFuture的使用来具体进行展示）。</li><li>CompletableFuture对Future进行了扩展，可以通过设置回调的方式处理计算结果，同时也支持组合操作，支持进一步的编排，同时一定程度解决了回调地狱的问题。<ul><li>回调地狱：在处理多个异步任务时，每个任务都依赖前一个任务的结果，导致回调函数层层嵌套，这种结构不仅难读、难维护，还容易出错<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java">doA(resultA -&gt; &#123;<br>    doB(resultB -&gt; &#123;<br>        doC(resultC -&gt; &#123;<br>            <span class="hljs-comment">// 处理最终结果，嵌套很多，导致回调地狱</span><br>        &#125;);<br>    &#125;);<br>&#125;);<br><br></code></pre></td></tr></table></figure></li><li>CompletableFuture使用链式组合，避免嵌套，提供了 thenApply、thenCompose、thenAccept 等方法，可以像流水线一样组合异步任务</li></ul></li><li>CompletionStage提供了三种方法（CompletableFuture是它的具体实现类）：<ul><li>thenApply —— 对结果进行转换（同步）<ul><li>接收上一个任务的结果，进行处理并返回一个新的值。</li><li>返回的是一个新的 CompletableFuture，但处理逻辑是同步的。</li></ul></li><li>thenCompose —— 链式异步任务（扁平化）<ul><li>接收上一个任务的结果，并返回一个新的 CompletableFuture（异步任务）。</li></ul></li><li>thenAccept —— 消费结果（无返回值）<ul><li>接收上一个任务的结果，进行处理，但不返回新值。</li></ul></li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> &#123;<br>        CompletableFuture&lt;Void&gt; workflow = getUserAsync(<span class="hljs-string">&quot;user123&quot;</span>)<br>            .thenCompose(user -&gt; getOrdersAsync(user))                  <span class="hljs-comment">// 获取订单</span><br>            .thenCompose(orders -&gt; getLogisticsAsync(orders))          <span class="hljs-comment">// 获取物流</span><br>            .thenAccept(logistics -&gt; &#123;<br>                <span class="hljs-comment">// ✅ 处理最终结果</span><br>                System.out.println(<span class="hljs-string">&quot;物流信息：&quot;</span> + logistics);<br>            &#125;)<br>            .exceptionally(ex -&gt; &#123;<br>                <span class="hljs-comment">// ❌ 集中处理异常</span><br>                System.err.println(<span class="hljs-string">&quot;处理失败：&quot;</span> + ex.getMessage());<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;<br>            &#125;);<br><br>        workflow.join(); <span class="hljs-comment">// 等待流程执行完毕</span><br>        executor.shutdown();<br>    &#125;<br></code></pre></td></tr></table></figure><h3 id="Java21新特性"><a href="#Java21新特性" class="headerlink" title="Java21新特性"></a>Java21新特性</h3><ul><li>虚拟线程：这是 Java 21 引入的一种轻量级并发的新选择。它通过共享堆栈的方式，大大降低了内存消耗，同时提高了应用程序的吞吐量和响应速度。可以使用静态构建方法、构建器或ExecutorService来创建和使用虚拟线程。</li><li>Scoped Values（范围值）：提供了一种在线程间共享不可变数据的新方式，避免使用传统的线程局部存储，促进了更好的封装性和线程安全，可用于在不通过方法参数传递的情况下，传递上下文信息，如用户会话或配置设置。</li></ul><h2 id="序列化"><a href="#序列化" class="headerlink" title="序列化"></a>序列化</h2><h3 id="怎么把一个对象从一个jvm转移到另一个jvm"><a href="#怎么把一个对象从一个jvm转移到另一个jvm" class="headerlink" title="怎么把一个对象从一个jvm转移到另一个jvm"></a>怎么把一个对象从一个jvm转移到另一个jvm</h3><h4 id="将对象序列化"><a href="#将对象序列化" class="headerlink" title="将对象序列化"></a>将对象序列化</h4><ul><li>把对象转成字节流（可以是 JSON、XML 或 Java 原生二进制），通过网络&#x2F;文件传到另一 JVM，再反序列化成新的对象。这可以通过 Java 的 ObjectOutputStream 和 ObjectInputStream 来实现。对象类需要实现Serializable接口</li></ul><h4 id="远程过程调用"><a href="#远程过程调用" class="headerlink" title="远程过程调用"></a>远程过程调用</h4><ul><li>通过远程方法调用，将对象的调用和数据传到另一个 JVM。</li></ul><h4 id="持久化中转"><a href="#持久化中转" class="headerlink" title="持久化中转"></a>持久化中转</h4><ul><li>对象先持久化到数据库&#x2F;缓存系统（如 Redis、Kafka），另一 JVM 读取并反序列化</li></ul><h4 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h4><ul><li>对象转成消息（序列化），通过 RabbitMQ、ActiveMQ、Kafka 等中间件在 JVM 之间传送</li></ul><h3 id="序列化和反序列化让你自己实现你会怎么做"><a href="#序列化和反序列化让你自己实现你会怎么做" class="headerlink" title="序列化和反序列化让你自己实现你会怎么做"></a>序列化和反序列化让你自己实现你会怎么做</h3><h4 id="Java的原生序列化有很多弊端"><a href="#Java的原生序列化有很多弊端" class="headerlink" title="Java的原生序列化有很多弊端"></a>Java的原生序列化有很多弊端</h4><ul><li>无法跨语言： Java 序列化目前只适用基于 Java 语言实现的框架，其它语言大部分都没有使用 Java 的序列化框架，也没有实现 Java 序列化这套协议。因此，如果是两个基于不同语言编写的应用程序相互通信，则无法实现两个应用服务之间传输对象的序列化与反序列化。</li><li>容易被攻击：Java 序列化是不安全的，我们知道对象是通过在 ObjectInputStream 上调用 readObject() 方法进行反序列化的，这个方法其实是一个神奇的构造器，它可以将类路径上几乎所有实现了 Serializable 接口的对象都实例化。这也就意味着，在反序列化字节流的过程中，该方法可以执行任意类型的代码，这是非常危险的。</li><li>序列化后的流太大：序列化后的二进制流大小能体现序列化的性能。序列化后的二进制数组越大，占用的存储空间就越多，存储硬件的成本就越高。如果我们是进行网络传输，则占用的带宽就更多，这时就会影响到系统的吞吐量。</li></ul><h4 id="使用json"><a href="#使用json" class="headerlink" title="使用json"></a>使用json</h4><ul><li>使用Fastjson</li></ul><h3 id="将对象转为二进制字节流"><a href="#将对象转为二进制字节流" class="headerlink" title="将对象转为二进制字节流"></a>将对象转为二进制字节流</h3><h4 id="对象类需要实现Serializable接口"><a href="#对象类需要实现Serializable接口" class="headerlink" title="对象类需要实现Serializable接口"></a>对象类需要实现Serializable接口</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span> <span class="hljs-keyword">implements</span> <span class="hljs-title class_">Serializable</span> &#123;<br>    <span class="hljs-keyword">private</span> String name;<br>    <span class="hljs-keyword">private</span> <span class="hljs-type">int</span> age;<br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Person</span><span class="hljs-params">(String name, <span class="hljs-type">int</span> age)</span> &#123;<br>        <span class="hljs-built_in">this</span>.name = name;<br>        <span class="hljs-built_in">this</span>.age = age;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="序列化为字节数组"><a href="#序列化为字节数组" class="headerlink" title="序列化为字节数组"></a>序列化为字节数组</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 序列化：对象 -&gt; 字节数组</span><br><span class="hljs-type">ByteArrayOutputStream</span> <span class="hljs-variable">bos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayOutputStream</span>();<br><span class="hljs-type">ObjectOutputStream</span> <span class="hljs-variable">oos</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectOutputStream</span>(bos);<br>oos.writeObject(p);<br>oos.flush();<br><span class="hljs-type">byte</span>[] bytes = bos.toByteArray();<br></code></pre></td></tr></table></figure><ul><li>创建输出流：先用 ByteArrayOutputStream（写到内存）或者 FileOutputStream（写到文件）作为基础流。</li><li>包装为对象输出流：使用 ObjectOutputStream 将普通输出流封装成可以处理对象的流。</li><li>写出对象：调用 writeObject(Object obj)，将对象转换成字节序列并写入底层流。</li><li>关闭资源：调用 close() 释放系统资源。（或者try-with-resources自动关闭）</li></ul><h4 id="反序列化为对象"><a href="#反序列化为对象" class="headerlink" title="反序列化为对象"></a>反序列化为对象</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 反序列化：字节数组 -&gt; 对象</span><br><span class="hljs-type">ByteArrayInputStream</span> <span class="hljs-variable">bis</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ByteArrayInputStream</span>(bytes);<br><span class="hljs-type">ObjectInputStream</span> <span class="hljs-variable">ois</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">ObjectInputStream</span>(bis);<br><span class="hljs-type">Person</span> <span class="hljs-variable">restored</span> <span class="hljs-operator">=</span> (Person) ois.readObject();<br></code></pre></td></tr></table></figure><ul><li>确保类可用：反序列化时需要该类的 .class 文件</li><li>创建输入流：先用 ByteArrayInputStream（内存读取）或 FileInputStream（文件读取）作为基础流。</li><li>包装为对象输入流：使用 ObjectInputStream 将普通输入流封装成可以读取对象的流。</li><li>读取对象：调用 readObject() 方法，将字节序列转回 Java 对象。需要强制类型转换 (YourClass)。</li><li>关闭资源：调用 close() 释放系统资源。</li></ul><h2 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h2><h3 id="单例模式"><a href="#单例模式" class="headerlink" title="单例模式"></a>单例模式</h3><ul><li>无论在代码的哪个位置调用，都得到同一个对象。</li><li>将构造方法用private修饰，这样能够防止外部实例化。</li><li>通过getInstance()方法获取唯一实例<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Singleton</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> Singleton instance;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Singleton</span><span class="hljs-params">()</span> &#123;&#125;  <span class="hljs-comment">// 私有构造方法，防止外部实例化</span><br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Singleton <span class="hljs-title function_">getInstance</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>) &#123;<br>            instance = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Singleton</span>();  <span class="hljs-comment">// 第一次调用时创建</span><br>        &#125;<br>        <span class="hljs-keyword">return</span> instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="单例模式多线程下出现的问题"><a href="#单例模式多线程下出现的问题" class="headerlink" title="单例模式多线程下出现的问题"></a>单例模式多线程下出现的问题</h3><h4 id="不使用volatile：指令重排序"><a href="#不使用volatile：指令重排序" class="headerlink" title="不使用volatile：指令重排序"></a>不使用volatile：指令重排序</h4><ul><li>编译器和CPU为了提高执行效率而做的优化：它会在不改变单线程语义的前提下，调整指令的执行顺序，让处理器的流水线、缓存等硬件资源发挥到极致。</li><li>当创建单例的实例时，会执行：<code>instance = new Singleton();</code>，分为三步：<ul><li>分配内存空间</li><li>调用构造函数初始化对象</li><li>将内存地址赋值给 instance 引用</li></ul></li><li>指令重排序可能会变成<ul><li>分配内存空间</li><li>将内存地址赋值给 instance</li><li>调用构造函数初始化对象</li></ul></li><li>这样就导致另一个线程第一次检查 instance !&#x3D; null 时，可能拿到的是一个未初始化的对象。</li></ul><h4 id="不用synchronized"><a href="#不用synchronized" class="headerlink" title="不用synchronized"></a>不用synchronized</h4><ul><li>竞态创建：多个线程同时通过 null 判断，重复执行构造，产生多个实例，违反单例唯一性。</li><li>半初始化可见：new 并非原子：分配内存 → 赋值给引用 → 执行构造。指令重排序可能让“赋值给引用”先于“执行构造”，其他线程读到非 null 的引用，却拿到未完全构造的对象。</li><li>可见性缺失：一个线程把 instance 设为非 null 后，其他线程未必立刻可见，可能继续创建或读到旧状态。</li></ul><h4 id="解决方式：volatile-双重检查锁（DCL）"><a href="#解决方式：volatile-双重检查锁（DCL）" class="headerlink" title="解决方式：volatile+双重检查锁（DCL）"></a>解决方式：volatile+双重检查锁（DCL）</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Singleton</span> &#123;<br>    <span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">volatile</span> Singleton instance;<br><br>    <span class="hljs-keyword">private</span> <span class="hljs-title function_">Singleton</span><span class="hljs-params">()</span> &#123;&#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> Singleton <span class="hljs-title function_">getInstance</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>) &#123;           <span class="hljs-comment">// 第一次检查</span><br>            <span class="hljs-keyword">synchronized</span> (Singleton.class) &#123;<br>                <span class="hljs-keyword">if</span> (instance == <span class="hljs-literal">null</span>) &#123;   <span class="hljs-comment">// 第二次检查</span><br>                    instance = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Singleton</span>();<br>                &#125;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">return</span> instance;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>volatile 的作用<ul><li>禁止指令重排序：对象在创建过程中可能会被编译器或 CPU 重排序，导致其他线程看到一个“未完全初始化”的对象。</li><li>保证可见性：一个线程对 instance 的修改，对其他线程立即可见。<blockquote><p>没有 volatile，即使用 synchronized 也可能遇到“半初始化”的情况。</p></blockquote></li></ul></li><li>synchronized 的作用<ul><li>保证互斥访问：同一时间只有一个线程能进入临界区（创建实例的代码）。</li><li>避免重复创建实例：确保第一次初始化后不会被并发干扰。</li></ul></li></ul><h2 id="I-O"><a href="#I-O" class="headerlink" title="I&#x2F;O"></a>I&#x2F;O</h2><h3 id="BIO、NIO、AIO区别是什么"><a href="#BIO、NIO、AIO区别是什么" class="headerlink" title="BIO、NIO、AIO区别是什么"></a>BIO、NIO、AIO区别是什么</h3><h4 id="BIO（Blocking-IO）"><a href="#BIO（Blocking-IO）" class="headerlink" title="BIO（Blocking IO）"></a>BIO（Blocking IO）</h4><ul><li>就是传统的 java.io 包，它是基于流模型实现的，交互的方式是同步、阻塞方式，也就是说在读入输入流或者输出流时，在读写动作完成之前，线程会一直阻塞在那里，它们之间的调用是可靠的线性顺序。优点是代码比较简单、直观；缺点是 IO 的效率和扩展性很低，容易成为应用性能瓶颈。</li></ul><h4 id="NIO（Non-Blocking-IO）"><a href="#NIO（Non-Blocking-IO）" class="headerlink" title="NIO（Non-Blocking IO）"></a>NIO（Non-Blocking IO）</h4><ul><li>Java 1.4 引入的 java.nio 包，提供了 Channel、Selector、Buffer 等新的抽象，可以构建多路复用的、同步非阻塞 IO 程序，同时提供了更接近操作系统底层高性能的数据操作方式。Selector代替了线程本身轮询IO事件，避免了阻塞同时减少了不必要的线程消耗；非阻塞的核心就是通道和缓冲区，当IO事件就绪时，可以通过写到缓冲区，保证IO的成功，而无需线程阻塞式地等待。<ul><li>Channel（通道）<ul><li>类似流（Stream），但 Channel 同时支持读和写。</li></ul></li><li>Buffer（缓冲区）<ul><li>数据读写通过 Buffer 进行。</li></ul></li><li>Selector（选择器）<ul><li>核心组件，用于监听多个通道的事件，如连接就绪、读就绪、写就绪等。通过多路复用机制实现一个线程管理多个通道。用于监听多个通道的事件（比如：连接打开，数据到达）。因此，单个线程可以监听多个数据通道。</li></ul></li></ul></li><li>实现NIO的框架<ul><li>Netty 的 I&#x2F;O 模型是基于非阻塞 I&#x2F;O 实现的，底层依赖的是 NIO 框架的多路复用器 Selector。采用 epoll 模式后，只需要一个线程负责 Selector 的轮询。当有数据处于就绪状态后，需要一个事件分发器（Event Dispather），它负责将读写事件分发给对应的读写事件处理器（Event Handler）。</li></ul></li></ul><h4 id="AIO（Asynchronous-IO）"><a href="#AIO（Asynchronous-IO）" class="headerlink" title="AIO（Asynchronous IO）"></a>AIO（Asynchronous IO）</h4><ul><li>是 Java 1.7 之后引入的包，是 NIO 的升级版本，提供了异步非堵塞的 IO 操作方式，所以人们叫它 AIO（Asynchronous IO），异步 IO 是基于事件和回调机制实现的，也就是应用操作之后会直接返回，不会堵塞在那里，当后台处理完成，操作系统会通知相应的线程进行后续的操作。</li></ul><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="有一个学生类，想按照分数排序，再按学号排序，应该怎么做？"><a href="#有一个学生类，想按照分数排序，再按学号排序，应该怎么做？" class="headerlink" title="有一个学生类，想按照分数排序，再按学号排序，应该怎么做？"></a>有一个学生类，想按照分数排序，再按学号排序，应该怎么做？</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Override</span><br>    <span class="hljs-keyword">public</span> <span class="hljs-type">int</span> <span class="hljs-title function_">compareTo</span><span class="hljs-params">(Student other)</span> &#123;<br>        <span class="hljs-comment">// 1) 分数降序</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">byScoreDesc</span> <span class="hljs-operator">=</span> Integer.compare(other.score, <span class="hljs-built_in">this</span>.score);<br>        <span class="hljs-keyword">if</span> (byScoreDesc != <span class="hljs-number">0</span>) <span class="hljs-keyword">return</span> byScoreDesc;<br><br>        <span class="hljs-comment">// 2) 学号升序（注意：如果学号是“纯数字且不补零”，可考虑按数值比较）</span><br>        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.id.compareTo(other.id);<br>    &#125;<br></code></pre></td></tr></table></figure><ul><li>实现Comparable接口</li><li>重写compareTo方法</li><li>Integer.compare：前大于后返回正数，等于返回0，小于返回负数<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;Student&gt; list = Arrays.asList(<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023003&quot;</span>, <span class="hljs-number">90</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023001&quot;</span>, <span class="hljs-number">95</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023002&quot;</span>, <span class="hljs-number">90</span>),<br>    <span class="hljs-keyword">new</span> <span class="hljs-title class_">Student</span>(<span class="hljs-string">&quot;2023004&quot;</span>, <span class="hljs-number">80</span>)<br>);<br><span class="hljs-comment">// 直接排序（使用天然顺序）</span><br>Collections.sort(list);<br>System.out.println(list);<br><span class="hljs-comment">// 输出顺序：score 降序，同分按 id 升序</span><br></code></pre></td></tr></table></figure></li></ul><h3 id="Native方法解释一下"><a href="#Native方法解释一下" class="headerlink" title="Native方法解释一下"></a>Native方法解释一下</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">NativeExample</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">native</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">nativeMethod</span><span class="hljs-params">()</span>;<br>&#125;<br></code></pre></td></tr></table></figure><ul><li>在Java类中，native方法看起来与其他方法相似，只是其方法体由native关键字代替，没有实际的实现代码。</li></ul><h3 id="实现Native方法步骤"><a href="#实现Native方法步骤" class="headerlink" title="实现Native方法步骤"></a>实现Native方法步骤</h3><ul><li>生成JNI头文件：使用javah工具从你的Java类生成C&#x2F;C++的头文件，这个头文件包含了所有native方法的原型。</li><li>编写本地代码：使用C&#x2F;C++编写本地方法的实现，并确保方法签名与生成的头文件中的原型匹配。</li><li>编译本地代码：将C&#x2F;C++代码编译成动态链接库（DLL，在Windows上），共享库（SO，在Linux上）</li><li>加载本地库：在Java程序中，使用System.loadLibrary()方法来加载你编译好的本地库，这样JVM就能找到并调用native方法的实现了。</li></ul><h2 id="集合概念"><a href="#集合概念" class="headerlink" title="集合概念"></a>集合概念</h2><h3 id="数组与集合区别，用过哪些？"><a href="#数组与集合区别，用过哪些？" class="headerlink" title="数组与集合区别，用过哪些？"></a>数组与集合区别，用过哪些？</h3><table><thead><tr><th></th><th>数组</th><th>集合</th></tr></thead><tbody><tr><td>大小</td><td>固定长度，一旦创建长度无法改变</td><td>动态长度，可以根据需要动态增加或减少元素</td></tr><tr><td>元素</td><td>基本数据类型或对象</td><td>对象</td></tr><tr><td>访问方式</td><td>直接索引访问</td><td>通过迭代器或者方法</td></tr></tbody></table><h4 id="一些Java集合"><a href="#一些Java集合" class="headerlink" title="一些Java集合"></a>一些Java集合</h4><ul><li>ArrayList： 动态数组，实现了List接口，支持动态增长。</li><li>LinkedList： 双向链表，也实现了List接口，支持快速的插入和删除操作。</li><li>HashMap： 基于哈希表的Map实现，存储键值对，通过键快速查找值。</li><li>HashSet： 基于HashMap实现的Set集合，用于存储唯一元素。</li><li>TreeMap： 基于红黑树实现的有序Map集合，可以按照键的顺序进行排序。</li><li>LinkedHashMap： 基于哈希表和双向链表实现的Map集合，保持插入顺序或访问顺序。</li><li>PriorityQueue： 优先队列，可以按照比较器或元素的自然顺序进行排序。</li></ul><h3 id="说说Java集合"><a href="#说说Java集合" class="headerlink" title="说说Java集合"></a>说说Java集合</h3><figure class="highlight mathematica"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs mathematica"><span class="hljs-variable">Collection</span><br>├── <span class="hljs-built_in">List</span><br>│   ├── <span class="hljs-variable">ArrayList</span><br>│   ├── <span class="hljs-variable">LinkedList</span><br>│   └── <span class="hljs-variable">Vector</span><br>├── <span class="hljs-built_in">Set</span><br>│   ├── <span class="hljs-variable">HashSet</span><br>│   ├── <span class="hljs-variable">LinkedHashSet</span><br>│   └── <span class="hljs-variable">TreeSet</span><br>└── <span class="hljs-variable">Queue</span><br>    ├── <span class="hljs-variable">LinkedList</span><br>    ├── <span class="hljs-variable">PriorityQueue</span><br>    └── <span class="hljs-variable">ArrayDeque</span><br><br><span class="hljs-built_in">Map</span><br>├── <span class="hljs-variable">HashMap</span><br>├── <span class="hljs-variable">LinkedHashMap</span><br>├── <span class="hljs-built_in">TreeMap</span><br>└── <span class="hljs-variable">ConcurrentHashMap</span><br></code></pre></td></tr></table></figure><h4 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h4><ul><li>可变容量，数组实现，扩容时，将原数组复制，支持随机访问，增删性能较差</li></ul><h4 id="LinkedList"><a href="#LinkedList" class="headerlink" title="LinkedList"></a>LinkedList</h4><ul><li>双向链表，增删更快，随机读取慢</li></ul><h4 id="HashSet"><a href="#HashSet" class="headerlink" title="HashSet"></a>HashSet</h4><ul><li>通过HashMap实现，HashMap的Key即HashSet存储的元素，所有Key都是用相同的Value，一个名为PRESENT的Object类型常量。使用Key保证元素唯一性，但不保证有序性。由于HashSet是HashMap实现的，因此线程不安全。</li></ul><h4 id="LinkedHashSet"><a href="#LinkedHashSet" class="headerlink" title="LinkedHashSet"></a>LinkedHashSet</h4><ul><li>继承自HashSet，通过LinkedHashMap实现，使用额外的双向链表维护元素插入顺序。</li></ul><h4 id="TreeSet"><a href="#TreeSet" class="headerlink" title="TreeSet"></a>TreeSet</h4><ul><li>基于红黑树，通过TreeMap实现的，自动排序</li></ul><h4 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h4><ul><li>JDK1.8 之前由数组+链表组成的，JDK1.8 以后当链表长度大于阈值（默认为 8）时，将链表转化为红黑树</li></ul><h4 id="LinkedHashMap"><a href="#LinkedHashMap" class="headerlink" title="LinkedHashMap"></a>LinkedHashMap</h4><ul><li>继承自 HashMap，额外维护一个双向链表记录顺序</li></ul><h4 id="TreeMap"><a href="#TreeMap" class="headerlink" title="TreeMap"></a>TreeMap</h4><ul><li>红黑树（自平衡的排序二叉树）</li></ul><h4 id="ConcurrentHashMap"><a href="#ConcurrentHashMap" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h4><ul><li>Node数组+链表+红黑树实现，线程安全的（jdk1.8以前Segment锁，1.8以后volatile + CAS 或者 synchronized）</li></ul><h4 id="PriorityQueue"><a href="#PriorityQueue" class="headerlink" title="PriorityQueue"></a>PriorityQueue</h4><ul><li>小根堆，根据优先级排序</li></ul><h4 id="ArrayDeque"><a href="#ArrayDeque" class="headerlink" title="ArrayDeque"></a>ArrayDeque</h4><ul><li>基于循环数组</li></ul><h3 id="Java中线程安全的集合"><a href="#Java中线程安全的集合" class="headerlink" title="Java中线程安全的集合"></a>Java中线程安全的集合</h3><h4 id="ConcurrentHashMap-1"><a href="#ConcurrentHashMap-1" class="headerlink" title="ConcurrentHashMap"></a>ConcurrentHashMap</h4><ul><li>分段锁机制（JDK8 后使用 CAS + synchronized）</li></ul><h4 id="CopyOnWriteArrayList"><a href="#CopyOnWriteArrayList" class="headerlink" title="CopyOnWriteArrayList"></a>CopyOnWriteArrayList</h4><ul><li>写时复制机制，适合读多写少场景。每次写操作都会复制整个数组，读操作不会被写操作阻塞，写操作通过ReentrantLock加锁来确保原子性，volatile 保证新数组对所有线程立即可见。</li></ul><h4 id="CopyOnWriteArraySet"><a href="#CopyOnWriteArraySet" class="headerlink" title="CopyOnWriteArraySet"></a>CopyOnWriteArraySet</h4><ul><li>基于 CopyOnWriteArrayList 实现的线程安全 Set</li></ul><h4 id="ConcurrentLinkedQueue"><a href="#ConcurrentLinkedQueue" class="headerlink" title="ConcurrentLinkedQueue"></a>ConcurrentLinkedQueue</h4><ul><li>非阻塞队列，基于链表。使用 CAS 实现高并发入队&#x2F;出队</li></ul><h4 id="ConcurrentLinkedDeque"><a href="#ConcurrentLinkedDeque" class="headerlink" title="ConcurrentLinkedDeque"></a>ConcurrentLinkedDeque</h4><ul><li>双端非阻塞队列，支持头尾操作</li></ul><h4 id="BlockingQueue"><a href="#BlockingQueue" class="headerlink" title="BlockingQueue"></a>BlockingQueue</h4><table><thead><tr><th>类名</th><th>特点</th></tr></thead><tbody><tr><td>ArrayBlockingQueue</td><td>有界阻塞队列，数组实现</td></tr><tr><td>LinkedBlockingQueue</td><td>可选容量，链表实现</td></tr><tr><td>PriorityBlockingQueue</td><td>带优先级的阻塞队列</td></tr><tr><td>DelayQueue</td><td>延迟队列，元素按时间出队</td></tr><tr><td>SynchronousQueue</td><td>不存储元素，直接交接</td></tr></tbody></table><h3 id="Collections和Collection的区别"><a href="#Collections和Collection的区别" class="headerlink" title="Collections和Collection的区别"></a>Collections和Collection的区别</h3><ul><li>Collections是工具类，提供了一系列方法对集合进行操作</li><li>Collection是接口，定义了集合应该具备的功能</li></ul><h3 id="集合的遍历"><a href="#集合的遍历" class="headerlink" title="集合的遍历"></a>集合的遍历</h3><ul><li>for循环</li><li>for-each</li><li>迭代器<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">Iterator&lt;String&gt; iterator = list.iterator();<br><span class="hljs-keyword">while</span>(iterator.hasNext()) &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">element</span> <span class="hljs-operator">=</span> iterator.next();<br>    System.out.println(element);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>ListIterator列表迭代器:是迭代器的子类，可以双向访问列表并在迭代过程中修改元素。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java">ListIterator&lt;String&gt; listIterator= list.listIterator();<br><span class="hljs-keyword">while</span>(listIterator.hasNext()) &#123;<br>    <span class="hljs-type">String</span> <span class="hljs-variable">element</span> <span class="hljs-operator">=</span> listIterator.next();<br>    System.out.println(element);<br>&#125;<br></code></pre></td></tr></table></figure></li><li>forEach方法： Java 8引入了 forEach 方法，可以对集合进行快速遍历。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">list.forEach(element -&gt; System.out.println(element));<br></code></pre></td></tr></table></figure></li><li>Stream API： Java 8的Stream API提供了丰富的功能，可以对集合进行函数式操作，如过滤、映射等。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">list.stream().forEach(element -&gt; System.out.println(element));<br></code></pre></td></tr></table></figure></li></ul><h3 id="list可以一边遍历一边修改元素吗"><a href="#list可以一边遍历一边修改元素吗" class="headerlink" title="list可以一边遍历一边修改元素吗"></a>list可以一边遍历一边修改元素吗</h3><ul><li>for循环：可以修改</li><li>for-each：可以修改值，不能改变结构，例如删除</li><li>迭代器可以删除，修改值需要通过迭代器的set方法，不能用list的set方法</li></ul><h3 id="把ArrayList变成线程安全有哪些方法"><a href="#把ArrayList变成线程安全有哪些方法" class="headerlink" title="把ArrayList变成线程安全有哪些方法"></a>把ArrayList变成线程安全有哪些方法</h3><ul><li>使用Collections类的synchronizedList方法将ArrayList包装成线程安全的List：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">List&lt;String&gt; synchronizedList = Collections.synchronizedList(arrayList);<br></code></pre></td></tr></table></figure></li><li>使用CopyOnWriteArrayList类代替ArrayList，它是一个线程安全的List实现：</li><li>使用Vector（×）</li></ul><h3 id="ArrayList的扩容机制说一下"><a href="#ArrayList的扩容机制说一下" class="headerlink" title="ArrayList的扩容机制说一下"></a>ArrayList的扩容机制说一下</h3><ul><li>计算新的容量：一般情况下，新的容量会扩大为原容量的1.5倍（在JDK 10之后，扩容策略做了调整），然后检查是否超过了最大容量限制。</li><li>创建新的数组：根据计算得到的新容量，创建一个新的更大的数组。</li><li>将元素复制：将原来数组中的元素逐个复制到新数组中。</li><li>更新引用：将ArrayList内部指向原数组的引用指向新数组。</li><li>完成扩容：扩容完成后，可以继续添加新元素。</li><li>之所以扩容是 1.5 倍，是因为 1.5 可以充分利用移位操作，减少浮点数或者运算时间和运算次数。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 新容量计算</span><br><span class="hljs-type">int</span> <span class="hljs-variable">newCapacity</span> <span class="hljs-operator">=</span> oldCapacity + (oldCapacity &gt;&gt; <span class="hljs-number">1</span>);<br></code></pre></td></tr></table></figure></li></ul><h3 id="CopyonWriteArraylist是如何实现线程安全的"><a href="#CopyonWriteArraylist是如何实现线程安全的" class="headerlink" title="CopyonWriteArraylist是如何实现线程安全的"></a>CopyonWriteArraylist是如何实现线程安全的</h3><h4 id="使用volatile关键字修饰数组"><a href="#使用volatile关键字修饰数组" class="headerlink" title="使用volatile关键字修饰数组"></a>使用volatile关键字修饰数组</h4><ul><li>保证当前线程对数组对象重新赋值后，其他线程可以及时感知到。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">private</span> <span class="hljs-keyword">transient</span> <span class="hljs-keyword">volatile</span> Object[] array;<br></code></pre></td></tr></table></figure></li></ul><h4 id="写操作加锁"><a href="#写操作加锁" class="headerlink" title="写操作加锁"></a>写操作加锁</h4><ul><li>加了一把互斥锁ReentrantLock以保证线程安全。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">add</span><span class="hljs-params">(E e)</span> &#123;<br>    <span class="hljs-comment">//获取锁</span><br>    <span class="hljs-keyword">final</span> <span class="hljs-type">ReentrantLock</span> <span class="hljs-variable">lock</span> <span class="hljs-operator">=</span> <span class="hljs-built_in">this</span>.lock;<br>    <span class="hljs-comment">//加锁</span><br>    lock.lock();<br>    <span class="hljs-keyword">try</span> &#123;<br>        <span class="hljs-comment">//获取到当前List集合保存数据的数组</span><br>        Object[] elements = getArray();<br>        <span class="hljs-comment">//获取该数组的长度（这是一个伏笔，同时len也是新数组的最后一个元素的索引值）</span><br>        <span class="hljs-type">int</span> <span class="hljs-variable">len</span> <span class="hljs-operator">=</span> elements.length;<br>        <span class="hljs-comment">//将当前数组拷贝一份的同时，让其长度加1</span><br>        Object[] newElements = Arrays.copyOf(elements, len + <span class="hljs-number">1</span>);<br>        <span class="hljs-comment">//将加入的元素放在新数组最后一位，len不是旧数组长度吗，为什么现在用它当成新数组的最后一个元素的下标？建议自行画图推演，就很容易理解。</span><br>        newElements[len] = e;<br>        <span class="hljs-comment">//替换引用，将数组的引用指向给新数组的地址</span><br>        setArray(newElements);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>    &#125; <span class="hljs-keyword">finally</span> &#123;<br>        <span class="hljs-comment">//释放锁</span><br>        lock.unlock();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li><li>现在我们来看读操作，读是没有加锁的，所以读是一直都能读<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> E <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-type">int</span> index)</span> &#123;<br>    <span class="hljs-keyword">return</span> get(getArray(), index);<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="遍历map"><a href="#遍历map" class="headerlink" title="遍历map"></a>遍历map</h3><h4 id="for-each循环和entrySet方法"><a href="#for-each循环和entrySet方法" class="headerlink" title="for-each循环和entrySet方法"></a>for-each循环和entrySet方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用for-each循环和entrySet()遍历Map</span><br><span class="hljs-keyword">for</span> (Map.Entry&lt;String, Integer&gt; entry : map.entrySet()) &#123;<br>    System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + entry.getKey() + <span class="hljs-string">&quot;, Value: &quot;</span> + entry.getValue());<br>&#125;<br></code></pre></td></tr></table></figure><h4 id="for-each循环和keySet-方法"><a href="#for-each循环和keySet-方法" class="headerlink" title="for-each循环和keySet()方法"></a>for-each循环和keySet()方法</h4><ul><li>只遍历键<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用for-each循环和keySet()遍历Map的键</span><br><span class="hljs-keyword">for</span> (String key : map.keySet()) &#123;<br>    System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + key + <span class="hljs-string">&quot;, Value: &quot;</span> + map.get(key));<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="迭代器"><a href="#迭代器" class="headerlink" title="迭代器"></a>迭代器</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用迭代器遍历Map</span><br>Iterator&lt;Entry&lt;String, Integer&gt;&gt; iterator = map.entrySet().iterator();<br>    <span class="hljs-keyword">while</span> (iterator.hasNext()) &#123;<br>        Entry&lt;String, Integer&gt; entry = iterator.next();<br>        System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + entry.getKey() + <span class="hljs-string">&quot;, Value: &quot;</span> + entry.getValue());<br>    &#125;<br></code></pre></td></tr></table></figure><h4 id="Lambda表达式和forEach-方法"><a href="#Lambda表达式和forEach-方法" class="headerlink" title="Lambda表达式和forEach()方法"></a>Lambda表达式和forEach()方法</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">map.forEach((key, value) -&gt; System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + key + <span class="hljs-string">&quot;, Value: &quot;</span> + value));<br></code></pre></td></tr></table></figure><h4 id="使用Stream-API"><a href="#使用Stream-API" class="headerlink" title="使用Stream API"></a>使用Stream API</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-comment">// 使用Stream API遍历Map</span><br>map.entrySet().stream().forEach(entry -&gt; System.out.println(<span class="hljs-string">&quot;Key: &quot;</span> + entry.getKey() + <span class="hljs-string">&quot;, Value: &quot;</span> + entry.getValue()));<br></code></pre></td></tr></table></figure><h3 id="哈希冲突的解决方案有哪些"><a href="#哈希冲突的解决方案有哪些" class="headerlink" title="哈希冲突的解决方案有哪些"></a>哈希冲突的解决方案有哪些</h3><ul><li>链接法：使用链表或其他数据结构来存储冲突的键值对，将它们链接在同一个哈希桶中。</li><li>开放寻址法：在哈希表中找到另一个可用的位置来存储冲突的键值对，而不是存储在链表中。常见的开放寻址方法包括线性探测、二次探测和双重散列。</li><li>再哈希法（Rehashing）：当发生冲突时，使用另一个哈希函数再次计算键的哈希值，直到找到一个空槽来存储键值对。</li><li>哈希桶扩容：当哈希冲突过多时，可以动态地扩大哈希桶的数量，重新分配键值对，以减少冲突的概率。</li></ul><h3 id="Hashmap的put过程"><a href="#Hashmap的put过程" class="headerlink" title="Hashmap的put过程"></a>Hashmap的put过程</h3><ul><li>计算key的hashcode</li><li>使用哈希函数确定数组索引</li><li>若桶为空，直接创建结点将值放入</li><li>若不为空，且key已存在，直接覆盖value</li><li>若不为空，key不存在，则插入到链表或者红黑树中</li><li>判断是否树化：链表长度大于8且数组长度大于等于64</li><li>判断是否扩容：若元素数量超过现在的容量*负载因子，则扩容。负载因子默认0.75。容量乘2。</li></ul><h3 id="Hashmap调用get方法一定安全吗"><a href="#Hashmap调用get方法一定安全吗" class="headerlink" title="Hashmap调用get方法一定安全吗"></a>Hashmap调用get方法一定安全吗</h3><h4 id="get方法"><a href="#get方法" class="headerlink" title="get方法"></a>get方法</h4><ul><li>获取对象时，我们将K传给get，它调用hashCode计算hash从而得到bucket位置，并进一步调用equals()方法确定键值对。</li></ul><h4 id="安全性"><a href="#安全性" class="headerlink" title="安全性"></a>安全性</h4><ul><li>空指针异常（NullPointerException）：如果你尝试用 null 作为键调用 get 方法，而 HashMap 没有被初始化（即为 null），那么会抛出空指针异常。不过，如果 HashMap 已经初始化，使用 null 作为键是允许的，因为 HashMap 支持 null 键。</li><li>线程安全：HashMap 本身不是线程安全的。如果在多线程环境中，没有适当的同步措施，同时对 HashMap 进行读写操作可能会导致不可预测的行为。例如，在一个线程中调用 get 方法读取数据，而另一个线程同时修改了结构（如增加或删除元素），可能会导致读取操作得到错误的结果或抛出 ConcurrentModificationException。</li></ul><h3 id="HashMap为啥String适合做Key呢？"><a href="#HashMap为啥String适合做Key呢？" class="headerlink" title="HashMap为啥String适合做Key呢？"></a>HashMap为啥String适合做Key呢？</h3><ul><li>用 string 做 key，因为 String对象是不可变的，一旦创建就不能被修改，这确保了Key的稳定性。如果Key是可变的，可能会导致hashCode和equals方法的不一致，进而影响HashMap的正确性。</li></ul><h3 id="为什么使用红黑树而不是AVL树"><a href="#为什么使用红黑树而不是AVL树" class="headerlink" title="为什么使用红黑树而不是AVL树"></a>为什么使用红黑树而不是AVL树</h3><ul><li>平衡二叉树追求的是一种 “完全平衡” 状态：任何结点的左右子树的高度差不会超过 1，优势是树的结点是很平均分配的。当增删元素时，基本会破坏结构，导致左旋和右旋。</li><li>红黑树不追求这种完全平衡状态，而是追求一种 “弱平衡” 状态：整个树最长路径不会超过最短路径的 2 倍。优势是虽然牺牲了一部分查找的性能效率，但是能够换取一部分维持树平衡状态的成本，调整的频率。</li></ul><h3 id="重写HashMap的equal和hashcode方法需要注意什么？"><a href="#重写HashMap的equal和hashcode方法需要注意什么？" class="headerlink" title="重写HashMap的equal和hashcode方法需要注意什么？"></a>重写HashMap的equal和hashcode方法需要注意什么？</h3><ul><li>如果o1.equals(o2)，那么o1.hashCode() &#x3D;&#x3D; o2.hashCode()总是为true的。</li><li>如果o1.hashCode() &#x3D;&#x3D; o2.hashCode()，并不意味着o1.equals(o2)会为true。</li></ul><h3 id="重写HashMap的equal方法不当会出现什么问题"><a href="#重写HashMap的equal方法不当会出现什么问题" class="headerlink" title="重写HashMap的equal方法不当会出现什么问题"></a>重写HashMap的equal方法不当会出现什么问题</h3><ul><li>重写了equals方法，不重写hashCode方法时，可能会出现equals方法返回为true，而hashCode方法却返回false，这样的一个后果会导致在hashmap等类中存储多个一模一样的对象，导致出现覆盖存储的数据的问题，这与hashmap只能有唯一的key的规范不符合。</li></ul><h3 id="列举HashMap在多线程下可能会出现的问题"><a href="#列举HashMap在多线程下可能会出现的问题" class="headerlink" title="列举HashMap在多线程下可能会出现的问题"></a>列举HashMap在多线程下可能会出现的问题</h3><ul><li>JDK1.7中的 HashMap 使用头插法插入元素，在多线程的环境下，扩容的时候有可能导致环形链表的出现，形成死循环。因此，JDK1.8使用尾插法插入元素，在扩容时会保持链表元素原本的顺序，不会出现环形链表的问题。</li><li>多线程同时执行 put 操作，如果计算出来的索引位置是相同的，那会造成前一个 key 被后一个 key 覆盖，从而导致元素的丢失。此问题在JDK 1.7和 JDK 1.8 中都存在。</li></ul><h3 id="HashMap的扩容机制介绍一下"><a href="#HashMap的扩容机制介绍一下" class="headerlink" title="HashMap的扩容机制介绍一下"></a>HashMap的扩容机制介绍一下</h3><ul><li>hashMap默认的负载因子是0.75，即如果hashmap中的元素个数超过了总容量75%，则会触发扩容，扩容分为两个步骤：<ul><li>第1步是对哈希表长度的扩展（2倍）</li><li>第2步是将旧哈希表中的数据放到新的哈希表中。</li></ul></li><li>扩容后，元素要么留在原位置，要么为原位置加旧容量<ul><li>若元素哈希值和旧容量取与等于0，则留在原桶</li><li>若不为零，则一定为旧容量，则等于旧桶+旧容量</li></ul></li></ul><h3 id="HashMap的大小为什么是2的n次方大小呢"><a href="#HashMap的大小为什么是2的n次方大小呢" class="headerlink" title="HashMap的大小为什么是2的n次方大小呢"></a>HashMap的大小为什么是2的n次方大小呢</h3><ul><li>按位取与更快（与取模相比）</li><li>扩容时，元素的索引只高一个bit位</li><li>哈希分布均衡。配合 JDK 的扰动函数（高位异或低位等混合），低位随机性更好，元素分布更均匀，冲突概率下降。如果容量不是 2 的幂，hash % capacity 的分布可能受哈希值低位模式影响，容易集中冲突。</li></ul><h3 id="往HashMap里存20个元素，扩容几次？"><a href="#往HashMap里存20个元素，扩容几次？" class="headerlink" title="往HashMap里存20个元素，扩容几次？"></a>往HashMap里存20个元素，扩容几次？</h3><ul><li>初始容量16</li><li>当插入到16*0.75&#x3D;12时，第13个元素进行扩容，容量为32</li><li>当插入到20时，20&lt;32*0.75&#x3D;24，不扩容</li></ul><h3 id="说说hashmap的负载因子"><a href="#说说hashmap的负载因子" class="headerlink" title="说说hashmap的负载因子"></a>说说hashmap的负载因子</h3><ul><li>HashMap 负载因子 loadFactor 的默认值是 0.75，当 HashMap 中的元素个数超过了容量的 75% 时，就会进行扩容。</li><li>默认负载因子为 0.75，是因为它提供了空间和时间复杂度之间的良好平衡。</li><li>负载因子太低会导致大量的空桶浪费空间，负载因子太高会导致大量的碰撞，降低性能。0.75 的负载因子在这两个因素之间取得了良好的平衡。</li></ul><h3 id="Hashmap和Hashtable"><a href="#Hashmap和Hashtable" class="headerlink" title="Hashmap和Hashtable"></a>Hashmap和Hashtable</h3><ul><li>HashMap线程不安全，效率高一点，可以存储null的key和value，null的key只能有一个，null的value可以有多个。默认初始容量为16，每次扩充变为原来2倍。创建时如果给定了初始容量，则扩充为2的幂次方大小。底层数据结构为数组+链表，插入元素后如果链表长度大于阈值（默认为8），先判断数组长度是否小于64，如果小于，则扩充数组，反之将链表转化为红黑树，以减少搜索时间。</li><li>HashTable线程安全，效率低一点，其内部方法基本都经过synchronized修饰，不可以有null的key和value。默认初始容量为11，每次扩容变为原来的2n+1。创建时给定了初始容量，会直接用给定的大小。底层数据结构为数组+链表。它基本被淘汰了，要保证线程安全可以用ConcurrentHashMap。</li></ul><h3 id="ConcurrentHashMap怎么实现的"><a href="#ConcurrentHashMap怎么实现的" class="headerlink" title="ConcurrentHashMap怎么实现的"></a>ConcurrentHashMap怎么实现的</h3><h4 id="JDK-1-7及以前"><a href="#JDK-1-7及以前" class="headerlink" title="JDK 1.7及以前"></a>JDK 1.7及以前</h4><ul><li>使用Segment数组将表分段加锁</li><li>Segment 是一种可重入锁（ReentrantLock）</li><li>一个 ConcurrentHashMap 里包含一个 Segment 数组，一个 Segment 里包含一个 HashEntry 数组，每个 HashEntry 是一个链表结构的元素。</li></ul><h4 id="JDK-1-8"><a href="#JDK-1-8" class="headerlink" title="JDK 1.8"></a>JDK 1.8</h4><ul><li>通过 volatile + CAS 或者 synchronized 来实现的线程安全</li><li>添加元素时，若容器为空，则使用 volatile 加 CAS 来初始化<ul><li>若不为空，若对应的桶为空，则利用 CAS 设置该节点</li><li>若桶不为空，则使用 synchronized ，然后，遍历桶中的数据，并替换或新增节点到桶中，最后再判断是否需要转为红黑树，这样就能保证并发访问时的线程安全了。</li></ul></li><li>CAS：Compare-And-Swap（比较并交换）一种无锁（lock-free）同步原语，用来在多线程环境下安全地更新共享变量。检查内存中某个变量的当前值是否等于预期值（expected）。如果相等，就把它更新为新值（new value）。如果不相等，说明有其他线程修改过了，当前操作失败，通常会重新读取并重试。</li></ul><h3 id="分段锁怎么加锁的"><a href="#分段锁怎么加锁的" class="headerlink" title="分段锁怎么加锁的"></a>分段锁怎么加锁的</h3><ul><li>在 ConcurrentHashMap 中，将整个数据结构分为多个 Segment，每个 Segment 都类似于一个小的 HashMap，每个 Segment 都有自己的锁，不同 Segment 之间的操作互不影响，从而提高并发性能。</li><li>在 ConcurrentHashMap 中，对于插入、更新、删除等操作，需要先定位到具体的 Segment，然后再在该 Segment 上加锁，而不是像传统的 HashMap 一样对整个数据结构加锁。这样可以使得不同 Segment 之间的操作并行进行，提高了并发性能。</li></ul><h3 id="分段锁是可重入的吗"><a href="#分段锁是可重入的吗" class="headerlink" title="分段锁是可重入的吗"></a>分段锁是可重入的吗</h3><h4 id="可重入锁"><a href="#可重入锁" class="headerlink" title="可重入锁"></a>可重入锁</h4><ul><li>同一个线程在持有锁的情况下，可以再次获取该锁而不会被阻塞。这样可以避免一个方法在调用另一个需要同一把锁的方法时发生自我死锁。</li></ul><h4 id="分段锁是可重入锁"><a href="#分段锁是可重入锁" class="headerlink" title="分段锁是可重入锁"></a>分段锁是可重入锁</h4><ul><li>因为直接继承了 ReentrantLock，所以具备所有可重入特性。</li><li>当一个线程在 Segment 里调用方法时，如果这个方法内部又需要获取该 Segment 的锁，线程可以直接“重入”。</li><li>如果 put() 过程中需要触发扩容（resize），扩容内部也会访问受同一锁保护的结构，没有可重入特性就会自己卡住自己</li></ul><h3 id="已经用了synchronized，为什么还要用CAS呢"><a href="#已经用了synchronized，为什么还要用CAS呢" class="headerlink" title="已经用了synchronized，为什么还要用CAS呢"></a>已经用了synchronized，为什么还要用CAS呢</h3><ul><li>ConcurrentHashMap使用这两种手段来保证线程安全主要是一种权衡的考虑，在某些操作中使用synchronized，还是使用CAS，主要是根据锁竞争程度来判断的。</li><li>CAS<ul><li>适合一次性原子更新单个变量&#x2F;引用 的简单操作（比如空桶插入、初始化、计数更新）。</li><li>开销低：直接用 CPU 原子指令完成，不阻塞线程。</li><li>成功时几乎零等待，能最大化发挥“多桶并行”的优势。</li></ul></li><li>synchronized<ul><li>用在 需要修改复杂数据结构 的场景（比如链表插入&#x2F;删除、红黑树旋转、扩容时搬迁桶）。</li><li>能在一个临界区内保护多个字段&#x2F;节点的一致性。</li><li>避免中间态被其他线程看到，保证结构性不变量。</li><li>若冲突，线程直接阻塞，会有上下文切换的开销。</li></ul></li></ul><h3 id="ConcurrentHashMap用了悲观锁还是乐观锁"><a href="#ConcurrentHashMap用了悲观锁还是乐观锁" class="headerlink" title="ConcurrentHashMap用了悲观锁还是乐观锁"></a>ConcurrentHashMap用了悲观锁还是乐观锁</h3><h4 id="CAS乐观锁"><a href="#CAS乐观锁" class="headerlink" title="CAS乐观锁"></a>CAS乐观锁</h4><ul><li>场景<ul><li>空桶插入：桶是 null 时，直接用 CAS 把它原子地替换成新节点。</li><li>延迟初始化表：多个线程第一次访问时，用 CAS 确保只初始化一次。</li></ul></li><li>特点<ul><li>不先加锁，先假设不会冲突（乐观）。</li><li>冲突才自旋重试，不会阻塞线程。</li></ul></li></ul><h4 id="synchronized悲观锁"><a href="#synchronized悲观锁" class="headerlink" title="synchronized悲观锁"></a>synchronized悲观锁</h4><ul><li>场景<ul><li>桶里已有节点，需要修改链表或红黑树结构时。</li><li>扩容迁移某个桶的所有节点时。</li></ul></li><li>特点<ul><li>先加锁再修改，保证一个线程在临界区独占资源。</li><li>避免复杂结构在更新过程中被其他线程破坏。</li></ul></li></ul><h3 id="说一下HashMap和Hashtable、ConcurrentMap的区别"><a href="#说一下HashMap和Hashtable、ConcurrentMap的区别" class="headerlink" title="说一下HashMap和Hashtable、ConcurrentMap的区别"></a>说一下HashMap和Hashtable、ConcurrentMap的区别</h3><ul><li>HashMap线程不安全，效率高一点，可以存储null的key和value，null的key只能有一个，null的value可以有多个。默认初始容量为16，每次扩充变为原来2倍。创建时如果给定了初始容量，则扩充为2的幂次方大小。底层数据结构为数组+链表，插入元素后如果链表长度大于阈值（默认为8），先判断数组长度是否小于64，如果小于，则扩充数组，反之将链表转化为红黑树，以减少搜索时间。</li><li>HashTable线程安全，效率低一点，其内部方法基本都经过synchronized修饰，不可以有null的key和value。默认初始容量为11，每次扩容变为原来的2n+1。创建时给定了初始容量，会直接用给定的大小。底层数据结构为数组+链表。它基本被淘汰了，要保证线程安全可以用ConcurrentHashMap。</li><li>ConcurrentHashMap是Java中的一个线程安全的哈希表实现，它可以在多线程环境下并发地进行读写操作，而不需要像传统的HashTable那样在读写时加锁。ConcurrentHashMap的实现原理主要基于分段锁和CAS操作。它将整个哈希表分成了多Segment（段），每个Segment都类似于一个小的HashMap，它拥有自己的数组和一个独立的锁。在ConcurrentHashMap中，读操作不需要锁，可以直接对Segment进行读取，而写操作则只需要锁定对应的Segment，而不是整个哈希表，这样可以大大提高并发性能。</li></ul><h3 id="Set集合有什么特点？如何实现key无重复的？"><a href="#Set集合有什么特点？如何实现key无重复的？" class="headerlink" title="Set集合有什么特点？如何实现key无重复的？"></a>Set集合有什么特点？如何实现key无重复的？</h3><ul><li>set集合特点：Set集合中的元素是唯一的，不会出现重复的元素。</li><li>set实现原理：Set集合通过内部的数据结构（如哈希表、红黑树等）来实现key的无重复。当向Set集合中插入元素时，会先根据元素的hashCode值来确定元素的存储位置，然后再通过equals方法来判断是否已经存在相同的元素，如果存在则不会再次插入，保证了元素的唯一性。</li></ul><h3 id="有序的Set是什么？记录插入顺序的集合是什么？"><a href="#有序的Set是什么？记录插入顺序的集合是什么？" class="headerlink" title="有序的Set是什么？记录插入顺序的集合是什么？"></a>有序的Set是什么？记录插入顺序的集合是什么？</h3><ul><li>有序的 Set 是TreeSet和LinkedHashSet。TreeSet是基于红黑树实现，保证元素的自然顺序。LinkedHashSet是基于双重链表和哈希表的结合来实现元素的有序存储，保证元素添加的自然顺序</li><li>记录插入顺序的集合通常指的是LinkedHashSet，它不仅保证元素的唯一性，还可以保持元素的插入顺序。当需要在Set集合中记录元素的插入顺序时，可以选择使用LinkedHashSet来实现。</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>CPP知识积累</title>
    <link href="/2025/08/04/CPP%E7%9F%A5%E8%AF%86%E7%A7%AF%E7%B4%AF/"/>
    <url>/2025/08/04/CPP%E7%9F%A5%E8%AF%86%E7%A7%AF%E7%B4%AF/</url>
    
    <content type="html"><![CDATA[<h1 id="CPP知识积累"><a href="#CPP知识积累" class="headerlink" title="CPP知识积累"></a>CPP知识积累</h1><h2 id="STL库"><a href="#STL库" class="headerlink" title="STL库"></a>STL库</h2><h3 id="map和unordered-map的区别"><a href="#map和unordered-map的区别" class="headerlink" title="map和unordered_map的区别"></a>map和unordered_map的区别</h3><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><ul><li>map基于红黑树。红黑树是一种平衡二叉树的变体结构，左右子树高度差可能会大于一，但其平衡的代价要比平衡二叉树低。红黑树拥有自动排序的功能，因此map也就有了按键自动排序的功能，因此在map中的元素排列都是有序的。在map中，每一个元素都对应着一个红黑树的结点，所以实现对map的增删改查，也就是相当于对红黑树的操作。对于这些操作的复杂度都为O(logn)，复杂度即为红黑树的高度。</li><li>unordered_map基于哈希表。散列表使得unordered_map的插入和查询速度接近于O(1)（在没有冲突的情况下），但是其内部元素的排列顺序是无序的。</li></ul><h4 id="元素顺序"><a href="#元素顺序" class="headerlink" title="元素顺序"></a>元素顺序</h4><ul><li>map按照key进行自动排序</li><li>unordered_map无序</li></ul><h4 id="插入和查询的时间复杂度"><a href="#插入和查询的时间复杂度" class="headerlink" title="插入和查询的时间复杂度"></a>插入和查询的时间复杂度</h4><ul><li>map基于红黑树，复杂度与树高相同，即O(logn)。</li><li>unordered_map基于散列表，复杂度依赖于散列函数产生的冲突多少，但大多数情况下其复杂度接近于O(1)。</li></ul><h4 id="效率及其稳定性不同"><a href="#效率及其稳定性不同" class="headerlink" title="效率及其稳定性不同"></a>效率及其稳定性不同</h4><ul><li>map的查找类似于平衡二叉树的查找，其性能十分稳定。空间效率接近100%。</li><li>unordered_map的散列空间会存在部分未被使用的位置，所以其内存效率不是100%的。</li></ul><h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><ul><li>map：<ul><li>元素需要有序；</li><li>对于单次查询时间较为敏感，必须保持查询性能的稳定性，比如实时应用等等。</li></ul></li><li>unordered_map：<ul><li>要求查找速率快，且对单次查询性能要求不敏感。</li></ul></li></ul><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><ul><li>在需要元素有序性或者对单次查询性能要求较为敏感时，请使用map，其余情况下应使用unordered_map。</li><li>因此在需要使用字典结构进行算法编程的大部分情况下，都需要使用unordered_map而不是map。</li></ul><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><h3 id="auto关键字"><a href="#auto关键字" class="headerlink" title="auto关键字"></a>auto关键字</h3>]]></content>
    
    
    
    <tags>
      
      <tag>算法学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构Ch7</title>
    <link href="/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch7/"/>
    <url>/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch7/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="55b52bf3019e25752a6125949d317e844d1f53e58ecf8e2e94031c25fd39ebdb">843c319bbffd590b79d8db7444b17f938d1fe4744d9c1acb8403a09816fb88b2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构Ch6</title>
    <link href="/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch6/"/>
    <url>/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch6/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="acc4af5dd1d1eaff734d29414358ad06478133ab57d597c50d5cd843325c08a5"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构Ch5</title>
    <link href="/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch5/"/>
    <url>/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch5/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e74944ed70d7bbc4afc433384a02d303753c57b7fe3cf981f176592a520209f6"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构Ch4</title>
    <link href="/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch4/"/>
    <url>/2025/07/23/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch4/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="4f841fb5d74330a6ac75117383601019e7322b8a30f28d2952bde74a2577884a">843c319bbffd590b79d8db7444b17f935b7ebd85c8adea1d95ffb74a9374d1362610bb956b7e60fb18f1fd66838ccbf2b0497a92383a1a56bb781604c0d9d182dc2b12808234847cc3616f728151dd57979aa0620dd68a98be48ad06421502c15fe3b62ee30efd7f8ff1722de2f125ce01c7b0e99757762a94835d48820d8a16ced87e8ede210a695f5e859e0c9ea2e3eff93dc8c56847d83ed65fe7a94b3a4a72507f579fc173cf1c15f0d6016825e85a6136823e06bfd1ecca1b227b152050428b58674f03ce003dd70c0c984c64eef794c752c084e81a7ccdebef627e4ab83422cb531e07b79e784cab8c1459874677ae8d8dfba4268b9752c3d52ee13f4d46e2dacc40d29b0a674984ffc74f64ffe9330b51d880f3ae1a66936be092b1d1c59f387e9e2596960e68dfe6e0cae8b436dbc80d75894cc8eb98c14790d6cb48f08ad48b5c60c554d9275647aee3d8bcf367cd83fa658ae3f2e973cb77369c19137d98264b4afcc9f71e964d0bf8f01aa50e370abad25b218e9f6bcb14fed20641e265569d4f80180b30488ba9b09cadf1db9cfa58526c23da70687bf7239c01b7f2e8b02ab1f36326f22568162775be49db494f3a2d1495ef8941e6f77ba9bce068e3796e346e8e4c4795df7d27242f1736ebb4b4dd578ba5350550452b232dbbeca90215fb16be5d808e934647a8b041d097eee9076403e9f25ac14b89f3445a869ad5443f7ba90e52759b5e44d2f2dac1d6976ddda90177ad5bd4b05ffa0076f709a2e1b5894e31e32651c7e3c87f9964c50dde65a7ae3d3d22d91fc1e448aedc93795612f503b94d297cc658dc4a27f2471d822d39adbc089c9547d697cbabb548528422365c03efee7622d4700ef628af24f9ee276b2e27eb140986f4c18d02316b4ed000184b3cac0e7a45183fb7d7c2cc36d89e96d9f5db05984606166415e92de4fece827bbdfebb315cb9e5ca627217502c3dedd0f5b26674a8e30cf48a945a5a509ae2e18bdc4023ca7a1397c82ffbc70572d9576479fcdb5e5e7610ab48b6be620456552eec13491c58612a19bd79abb5bdaf3b46569ac8598579b848c02da5e832db01eb9a81a5c1fc016aeaaafe20722e915a5b05a19e3ed94efb9eac48d1c03cb70634e4fc7fc122d33253b6fd90b3192b79eefeadf0ed5024fd0a24f33096f81850e2c319a377833fc3bfdc0ed562042bf0d24743554aaa240ececb81a43028c6b398d1bfa1193bd4999a209840bc6490d7abb2acad75a73a7779e709d9706862b53980753f7ed577440bb9e3eaff6f04e3c5ab808ca2755b385b2a4a11a371d251c03c471e1b6fe572f173b06be0a8411a313014925cb350084bf9340195e6fab15d3b5284774f1927e8cd57f4d397ca91861526884fd8462b954b96fc95e8e585006f458dd430e0d2a1de0f897b6e302874a9c5ae16bf0047c55d932a0aaf5fdea701ccf5d0655cb249a4419fffccd4f7a6f6f0ab7c5c26dcb7b38d7eba2e68e3a09582608259795c8bc49b2edf8161793808268d5bf5abc806dd3134b5adba090fc0dda13ad37d94dcbf254930d971efa79bf507dd23ae28fa4a2c68f48f01d421ba4ea736b50710cea3af46b00038db3bf94ee1d7ecae0fed90f12d452a9922f97c74e676cb37a3c32b0e6931d5ede3d8ce86de575647e1dbb33969ac635f854f53c0f187678f2e9341134745e4e0367d77ea3d88940cdd54a709d88ccf2b0e3dc8def30ae990a194a3f4689be968d92b2d5db592b9bb91eb069c6ef100128894691fc9b6918917c6d6fd80c3e47007123b33e0686cfa2460698c67832635243f3b9cfca1e593be9833053a4d804c751da431a714590ad1183533489997de1f813564bd4cbe8d13428001b8e9ebbe19e32ecdeadc68aceb9f9a71649de3bce67dc14fa422106fcbda00448c04186ffc009d71daf2696b04cf9ac6dc5b863db22a04b176db0ba7debc46f65951ae3211038b0cc0b5aa1726e3dfc2181cfb555223183c6782db7075cc90064fef7bbec98266fcb6de6e6d6cea759ce25d59258a1b00fa7c822fe95d092a26df3189449d7bc7ade6e77888facf051c0ea17a669cfa8eb352a8db08d2f0bc6f7990bffb8d5f1915c9909954c0f8ca48d65e411335e194aeeccb07d26425d248b9f58ee95de9f245c51b9fa4f94330bf65a6a8b6734c5e18d3f520f494624ad55f18745ef80cdfd688927811631700fd3d91f7f3108f46f8951590b45c46e315dbfc32d97b23c0bfbaf13dffb29a140b29d08e62c2ff245f667ea08c1c91d987563ba27e8b71c21dd80c0b07a1468c6e812e949b5691d319e76852a177b17b4cfcb62e858e4c71fc70a1bf3d3912e8933d754b64f315ad974476d5e813e86414e53893c7d40de690294ddba0856c21da77f6968424c243c13ae2b9ecdefee0ca3c915a4405cd0942f6ea6934604c86fb406261833643f0928d771c419232819f2039bd7b3435dccbae1a5d1a7b7146cf375abe3f95f6da00a261916ea8976c3f1309a9d5af2e73bf8eaaafd0faec8287b2dcd496b1411ef15c9ba6f0d3eb65aacb205019048efa47bdf2fd7c5ef25e2ccf6c57f1bc6245060770ccb4440d802b7b31e54a6ad77d88b37f60a838a4281a68c42601585901f3f81f731d695e3ce1959c9e241deff86bfddbe374f030b3549bf7fe22606d1e42decf1e0926e5fdf6cbf77b4cf4f1b3a00449d73b60c66ae0ee5dc8a23aec11416ca5d54c7bbc737afb2eabd1a035adea96919dc2d6f25d76e1093246075b489130554b5f2d23e471e41df20f4dc1a23bfefbff2cda879ebed5a5adefed2225080bd05220647fa0c7a0c701d4a699415055c48b937015f435b7f513f1d75f3ceb8598ae67628c2801b61cdd2dafeff0f6c3379488fc614687589d0344b1c120bbc033b14775d65d42dd5a2c1271a56b0f1ae68f5b6f03e400e515586acd29fa128cc0bf6e8f8fe7ec5140f610503941dbb921a8aeb298e7995d1a0e7cdcc990d6e8fdb5479ee4183f0e1009f16ad554257ad60e06800271dc376fc482d62ee29936c51ec377a0d31f672d4299f3cfcc4ac940bb6df7f3c79433af9c9814b3edf5e68df989e6ba4ba88ec5efb057628c7cff9b241049689e142cbac49c081d0cc687133b19bea485f62216d02532d111e2e5155e260e003fac1964a61d55994f33fbf8f2fdbd7a01d6c3be6234cf14093b4e889435c396ded50b7f20c3db10a3d497a502602c0fd3055d8be68a03d61549ed863761a014e55c23e5b4593049530da0d640d6a33aed213e618731347eb557893fa2c1045940e4d8873e0fce10fd5a08a2bdc1bd8741deca3e348beab38d98797b34d6924ef56fb1261a709f0914b26709fab545a5584dcdf1f25879d6ae094021ed6598a53d362517a8013d8d0469751e85d2070ce308b85889aee8fcf5a35fead9c0ee77f32d1e42d7ab8d44ec8c224b61faad5ee08fbba3616c8c7d1fc281bb63593a7ae490dca2d47e61a1181c8e92185df07c598030c7f968dc58462111268792b685b7bc0afb5191984079b4cd8efad1162d8137bc1ca9e7e3c4f2860247477070b0054b3895f55ad74b5d178efee72d63098babcb8adffb75b449548c7762bd0a0e373eed1b8867bc5afc94d59b22b07f386fdb011f0e471b12553341404ae252497f7a2012b242a8f952c644308f10b078b535490616d10317aa66f520431b7eca489a8ef1d21b20108a49531c453c9916a8dfd2aeb33ee27f74e29e0e6be31a9f050f2579772a54490c8932125ac1609d592dbedf1cf25eb9b637c0a56b9d9ddd7e76bd2b6d53b1f8d00fc2dc38dca472329719eae9419942ce5e59fb152dc18ca19981e9beccd60e429ef76124ed38918c49d9d385d90d6882c344df6d3388d590016606b28311162fa64ff4da182331f56e2280c3df43424a6e0e15e1ae00470db1df215d555582960cd003e3d696df6a9d7736550bd3392ba840ed54b07fc73b33a1ed9ac91fb23d8211d9a3e88ab06b47068156f51481bf8fec40b621e62c1cf398002c227e3f50778e22caf67b74eb98e2953b7efa8a3b9b58bb9451283092fff4e328b7b5cc52b17cc4961d09a60320c8cca13973d04dad8da1435cafd00af2a5ebd9990a32d62f67ccabf7eda05e685022d0d52212307518d2de80fd21b4e1cef26f6119d47cc9f1a4c82c531c0992e58cffe1d5e3a03b6e49460e25af692af82da11df9ac8ff1d0914efdf69ae8abe5729bb45d55c87ce81301e1eaededfd1287168853a855ddbe23d303f543c11a70c3f7f7bced883736f9329beb6b3f901cf04f2ddbf8ac6bac4a9883091fdc6044b990fc90e4cac55f4b371f1a30c35fdf509456d9ab84baa1009ac9424964d750dc25c505fc462d0f952be09119def2c40cb5be39d8b9cf11c7ac01487111819eed1b2957e09a5e92bd7e1a7483ab50550d685fe697276f4a911300878040fa3f86df5404751b5ed98c4e1c0b3ca31b9b2733574ba30ccab9143a37553b7495096474920a95782bafcdabefcce616d91e2ec3ee31676e92c6878281fa298160c91ef44ad22159c5238c37e4a34fc2addc5a3937d237058aa5320152beec749b5bd169bdc96ef4396b00081daaba0316294361213c8aa697f159d5b933b8fbc4ea154244e548b93b3856da12762f3437e27c1178ae9e3aff5743a83c0a792bb78a6734f69fe18f88c702ef7476aa25ef34ac6d23511ae4114615205afc82ba6edb0f30456adf9aacab503d569c1a05a50c096750861ab37725c39933de3baab20f3b1d1ece965b410df4f7d740d53c8f89b1b8a6b9c21f75c435642adbfd2e763b3d1d28e58236c3788daa5953fe3b6c14756d9fcb767d661bb14e27bd8a4b9760c1b5fbc18b9e67a545a72245fc5ce6a92c8898b3aebacc2b94fc0bbe26d03d3356465969b94edee9add203a6082d20a48b5e1bd1a777f070d5ea86133c3198cfe9ee06f821c32d4060fc4adc7e1d247fe09e53842e25241f72417614e1c3f4119caac9a2fc8c3b7c24783db898f521ed07ff9bf8c696846cbcbad8c8872849bfa358af93d9952ab35bdd21e4817a4aeee524219890aaeb126c5fa2fad293bedd219c11975c946f4fe8501d79673950e7054b432b2ed7ed2bd37f7409908059ac73e1091a8757f2992ba613b541bcffe6aeabaffc95b8723cac4fac51c111c6194659a756906fc6c3db58ac09a39336c733a4ef4b123863d7901a7502004536cf0122bbe7696ec3b17c7b88e8df9846eafd7a832832eefbb2cfda189903553e8037be6617542fb0566c6d14c07016b7e050ee624f23e0e02ba10e401ad49746c0324ce80785deffc38864876cceb06c54ec048b193737a1e6de8fbd65f375b11e1c4a5adc8dac1e92f3758ef5aaac20cc0fe9dd0ba9767580e51c64e10de1cac43c44e527b85cc4e8f4b1feb63e3c811eb6478b55480ec4b19841f350756fc50ede0ace4f9ebc25533e9bc1afbc9226d6a7764fab9a03b4c9e63d43525c612a5362ff5b734dea1aebfb6d826c6886a3525a87953fc880e767d37c018e2841a1f0043005d98c28d55ddbd7ce587f1874ef3d7a6292897c70512b69e61937bf95119f5c59e3b9a242b813d3b28cb38dd4eeadcb20e21e28fa41e5ed6fe7f68e56736d935162fb5420152dc907ea5e328d15c4b5ee046bf68f08f2b6204e42812d93081501d4543c5158d8ee5b40e79bd324a1d8397c965dd9208bc30566ca98cf598dca4a48d081d3e62bd36812204b04b3f118a7d8e7f403b5915a03d165cdffbe09ffa1413b2e0561c1c5ea65bcb067c4d46e68f34bbdf9808b57ca5a19890133b186f0bc1048586847e680336941eaee8ae4be3b917c4af1460af61061ac71da812b043ae995f410af901eade082a3315b0068851766e336703929a5e1eda9b4d984b0f1dde05e6786fd6ea7b6976416eafc9606220563f8004e4632c05d90ab098e2441785a9e0d394dd11a17202c12e15caa73e6097bd3446064ccbaa5ea00f892950401267b7774c563a694df91c1087f0fa8ab622d07a7efb8d70b485760da329c6e3ae42c9a37054a2ac789c33ea24dfe7a41b7027441c6798bb2b50192b8edd1e0fff98615dadaf515134e87f1e37c87514de457c1b7ef329c7080396639b97125fd9ce5a9f0114255daf09059d2bdae40b462b618a12063c6697087fe1d2a05c31c38637553fec31a43b3b4e0e6f6c3e19236dd5bfa5e14cdb68106b4ce9c6fdaa8a30b4021f2298b035cb5482b96310b43c49e010960c8be8e68605c8a9c48018e72c813248333d255ea5773a44a6399735bda9b200dbced58d85c37525d1c9c4d41d6ab17b263a7d985311358e4c00236df57e4705984661634c71afefb8321783414a15ff62388a29881f912fd2936ed09360ddba72bb3723acb40c93d361801395a68308625b84a4f51530b5519454483c9c2400742dc48413e1336b5519cbd9979935c35073b747fd36ad54ed5315358e724823935e60d5c6217f50eb3e422c53bb67df65174aeaf8a7c5e24a9d5ca3208641ab4655e9d0243389e388c5ee06f4a980d61a244e846fa656270c3f5fea42e36edbeab0463bf72679a7a3be7acefab4a72102e49b204c153b14e4e88d2bd2fb02fb0212cb7e5a3a81aa9442d1dec0ae8b66096fa7a6321effec69085d6cc9da91bf2bd13df79ca650856116aa655a0c98678044be20c5cead4e4201e7e37cac2dca5d2feec8013c76f2f2cc3a20a7e5f89ed811dd35dfeb5762e1529fe864359f6f53b58445f76d5a5acae756a1963454a6e9c573d00709245de8ef901d62a7831b2763d06d1a77bfb562d4351b5310efc944e275cf2cf1f748e96404b0931338c23184b849c2e2cf7cfeca1778f48af594cac1f9e7db94d3c6c861328c037a266ae41bbb11ded6a03acfbc012d68ba0f500c798fc5cce7a19f888b8bed3d0b9640519b6145b7851580101636825456d6a13017b6a43f135f3e47781b8214883972b5f37ca538a520eda6e06b4d172dfa7fe0eb3c3c45a6476435e7982f9cb0f90c2dac0279b72a770b205f09f0fdeeb70f271a77e5c564304f3c751b26e0f2cc6217c0fc8729b5f2fb687733a0ecf6b90907c34a0fbd479af09ab5b6322670b9e460fabb242760ba0b31ba34f6c7cb501f6e9412d98466c738d2cfdc8b739167fb5a8cdadb7c5f58de64a30a6af6edf36ef3098c19ed82cdd332cd97b2a9275800b780fbb20c226e89216ed3c6c3d6901b6132521876bed646d17a907d028cdb11fe15792d208ac76adebcc8d87b50b933088e42588a8b970887eeae95268b293f915df63da3ddf9226fc8d44ddeb1da037f1fa239927faecd28e52283c6f39a2d4f55753f456394b179c2bf765125d5b47494271d82c77f7ae8d13607d5b441eeefb9e4d9058d2333d2e2a7201ee3f1308dc82c20a330cafc71255f911f1d572655757d398946665aa76dc9308532ee852f87140ac2e4f9e0d9efe611d98f3f3788b0d1e26efb1e32019e03baecd16584113b09f79bd4e378c34c14d728dc662443326364f0976ee7df4de8a4a7ecd4700af29a2554352d4135b2f1d3955dbd1d322c5f31c5d515fea0847991d924b1a2bc5b1754fbed5143998271cab16ce2308c4ec4bf8e925466ee991d24e366d0299e9af363acabbec90b596cf572801893d21389d12c1ad1bdbe3893c49da6dca68d232d498ea72ee9cb6519906746c19d19360ccef3abc7ed6d45f33dcd5ef03d7110b3ed77f5a9b8178b5f84d7cd02f86155d3d1a019b54e8cb089569771aff7a9fe0aad39a0ea0924acdb928a58b534a3b88def3566746ed7ab92a6a4ddeb727f91065c3958c69e1d31cfce92b1fd9d2eec7cdfb1b2d0658ff5274110691bfb81e578e63ab6bff79d140202a644c6377e2f3715300e0ffa3e871d1fd98c85799f43c11caafcef79d970c143382ae4faf179c89e9ab06d11954b4a08bc846e9a69a19d9708985df0f383530e035a6a91e484ddcac8eb9648174dda310e5b3e62823d97f8d7b0e023b253e290873b62fe6e38b73de277cabc9d6c87a2986152579d25fae47a5053e744def384d941d3344d5dd462fb0a7c38092cd4ee2bf35dc5202a02c9f4edc88ba623a2621467aeaa21ac6c57835d6004dbb1a92c9043a6eb1edb697acf248c2001dad4cf569aaeabeb0d1f18e5687284b1a861baa70f2b8c14ec1d0b468c3ce1e5aff7194991efdacd3cc7348b0891b35b91647dc501e9019c65592a79fa0b085f98c357dea30f45ec3e3c53fd6f4043fe304e821013d358ccaf0ee35fccead0dc0fac6bc581579071a70e469df612f76237a0704c5960885242038b78df64428fa6a4ec2285ffc5e64b9537a9b2f9608b93f11670a02e2298e6ebec127ed2f2925f9d2a2b3606979c16d2b9dbfec539960bdb6653a7671115f309cdff8c02545ce1205d087f703237d0e8984a8cb2e1c0676a670812d57e6c29a5ecc5a7763ef5153187f310419861038178a3356b663c54c8a3d21f7a93736bbc498a1f9f592e18b710ae7ae57174fe6459d0a4ba169181816d0f6af60c1d56a2680d3e9aee96c18261cfaf644e9a26356e30cec7da249e1d1a1575800b53bd0f398cb8d8ece9ca5242337fb8a05d7d1b4d1895f928c4733652c57f7ba251bb3611da4bfd0a84865d77e943b187d23454f1474c63ba92a5694f5f2eff252ca6590919f03b616a9709583ce24424a9824c507d8ef246cda404f57ddd73af58493c4b7711e67418433f330b74c70f5539686542428e3ce14974c40b2613dc61b6302fb396faedb89d5d8a3a7b0257342692d81e2ddc0b4a77defc2e1cabf1b08936e751ac12fddde9f622169ede4961c6f0ce58b2d71848afb8afa2c4ddcbc1115d9a4df2a0df5e945a80f2e677232bfa664d69e478287c6f1705f26d6832166dc0cf61209e4349a1f703a7f0ee255929bb801741be7708f394f036b3f591a47a71c7769f5e627690e2c11881b07cc33699ad7dff123f27f67d20216eef32012dcb73ddc7f3c5fd6d00242c52861630e11ff00799e676d917ef4adfea0fb14d4531788c466f78576dc7bc1ed17267e7b31a6f0ea0860ad631ac7eecfbd69b561ce9ad0d0c70274a7de3d0352de375fe251f461cd4468918cb238890b675bfdec5c90ad6469cb6f8849addfa364f582e678a57dc0faa4d3033242ef81194b232aa876cf429837b259b804f6451e6274d16ae635daa8e0c2b066a63573d2cca1d8dbce67faa8fb2b1453c57dda55b8fdfe50b5aabc02890e6218d5f6878374d2d2a19f1fcebcb7a40679ddc35700ec5a65463eb55323105a39e82610116f045afa6acc66f29fcbabd275112aa0eb84fc6cb68b611af2fb4be14e4a75a3d159cee31a6cabe907a042c10067944081efc1a3e53044a768df4dbf9ee8b442761258311964f9a322eadf39815491b7eeb178bde6b43ef20d370a27ba31cc4ce67fdcd03ce7096babc7288a51d8a76bb5c31dfd0778dd109e5668ee107a582249a97eefdc92144ac18e6f266152bddad626b7c31957b4031774f0461d17207df960ad8ace19444f22e7d6d1e911ba0401dbe09969402c06b7fbcd676c96ca5f2f179d19d35b6d5695020e5dd308f2ff731c4aafcae2b4775081e2989a26b381ba656d55157d4da19a35c7efc01435f08c826b58601a6f0c30735643387f17771160c4fd6f3c757ab0decd83ece5d68781b54cdc1ef1c9e55472b00b1999b57dadc0de5e3a5f4701b7885732fa22fada631830a4373e61d0e87402e44fa3f362d23040f7313e1400fd6ff6cdfa0e51c6154333281fb1587820d0d630c5191cc4b8ae3ab555dd45867c26ab6306a6cc38c301204571c96696e77be6ca39facac6a46b9b47420e19a7e441ce95d86074537d89a6ae208d6680b0805e1232fe267d773eda7da1b564def520b9e6a78c887385383eefee007ddce36872d0a754119428ffcbb94cf41efbe7b492a6d84d826aa765154e7c4b074089eca2e186e016af38480faee07db7ab763fb00a0510ced4441c6ecc55559948da53bfa0f006ce480ee435b8ea030b29793079ce0b74291c694cd66ef877326095b158c4467eab27afaf58f7c89182df74714f75b4628c415a88c15da060120a8e7400ef2a141669e76ffba556fdc46ed47eeb0f32315c60bd597271a8843e02148582f1d9402f7af6c94d22842a4bffa1c8a9b194522edf4d3d1a55efe13b1fdb9a804f0fb5e0096b724ac22b9e583362f713e0f943e694e2c06aa8651ba75b30bff2643ee6e2cd86b54e381a586d92bee7d153188e1bf469c7c8afbdc2d63c0937508b92a0bb265a1a5c0fe2c67def5a5adf5b9c5b70df6fb82eb7579a060f60b04539986f5a675ea40810c92c7da90e77b826b2d6f6d1ecdd60f4c192a583396ad4bffc1535328274edf8940bdea27ea8357e2cff36dfed51f5478d1a9c3844136f9e085e4785c30ab57979b3fe0eee05976371c8aa4fd4c13735cc336b3072f4874bd4189148b4c88f75e9b450df109892a1d356f448f25ff12bd1d77186d27515e0751d88d649ec3f850bc3d2eccf133f5db5501ce04c7da2aed14b8a9cfdbe687b631738d77e415756facdb7f21baa6272ac52a6f70f5e141ae6ec84076856eb661ebcd5d72102ba8ae84a7eef4cc69cf2bdcc56161262e039991f2e57e27a5766bfb0efa888ebe03057f43c2ca156f9189590b181504a8479e9ef2cc7a66c91aa3d7fddc1677ac7145f549816740a4a92fcfb5c0e658ff4f1632556d9f329a041ab5e360400489bbd4650a54a18d1356ff08850130832576683668526ad144f3a0ab7242b6442155e4e55cfc5275d2ae4bd8a64790b9ad28d8266fd689393097e947b72c800d390afd33d14039ba8d113d41dd2088d5b3525cce97a47b6d23a54162748b720f81c5dca7318c9666efa3568009be6ef6e0a739eb386a6d84ec1783b8e281ceb42802f3f9ac051ff03fe7e13728ca5f7031b6944d8066102bd9566017dbee90f814e6fc20bd499f7e7ed1b0cd76d7174951b682300474fee6e7c9c033a5666ba88b6fccbb849707aed410a21dc1be5b6d3d7515eecbb19ac3f21a1b37a75ab0e54df93b60e29608301919ebad49be6e3fa32187a43688cc7032faeef94cd25034554d81f995b395feed09f8233593b2d576d0711a68cd1c97b46fff8d77a30d0462bd98fe394e640db996cc294f00f00587811000c202f05a6a86a78bf010e14c0566592b89ced83c99a107793487c2e3473f55b65453da04ed78abca75816b0618b37cf7a7693c5a49cd87e5fdd03b358df31c468b5972a8d64437a19b58e6387882fb872662e0e17aea12612cd5926ce470abdd4caf3cbf623dae4ecbf4ad6660cc1585e6dea23137f74280ae2065de9247561af474f0bdcc9654125f0cea0b076aab5d9a36f9a160e70e1e21b16fcea2a3ee520ff190d49559a72df26de94f1ad00f456a350e5fefeccd914bfc445fa44428eba916cd9c25ff495f706520fcd7c2040702dee4decdc80c2428a878dfdc02926f85e1219d4c7f7d68f203baeed1a9042cd16f947d714ab38cf3e7dd4bad810ef4c3a81dea6c1b3b9449493eac3b07e1f69b2c00e84fedf1e2f222915aeee0bb36b218b1ca6729141ea0bbe83229f7a62fcb6e2dfb4870f736f34d71d422e30e4923265048a5e7d84f50b03945e0a0b4e6f5844a6f27ab655c75ecc7f8e57c2f64e25c2f312124669b5353cb173e352aabb850f5a046836cc58c6d4a26e2525c16cc8c72abc1fc5fbdfe860305fdf1fcb7f963990b499b4b17ca57a21cf208f1d0d8c102219e69a3438e5d195379207d0fd24b1ff9d11660ad6229570c2a6f406c7152c04e17da26e295b3d73c6888241d211eedadd9baf13e9790511c831ec51df4851cc9c3c05143ad9013d961a127464a6e345338590d024e0fae2e50d2f776b9736d2c621af1ecd759ff7f16407b9047e93da333d76655eb10831eaa99b934e31b1eff92487622e87e257af6366abb3ed435a0d6eb55569a7d3ea8138dd346e874def5da4ff6dafd263606749dfb5dd8efd5b36f71d1e6937e4815fb7b84e8f18dd12ef47014b71433a0fa1c453e0e9bc369c6371aa0047eb88765a80d89613d299ec4b939531bdca7b1a40e3c87c88e23ae02578e62fdc6e2e00058715b4f59fae7fac09ed9466745a07d4f6850aa0d709aa55e72e1985ac60574fae8814dc830534f29751a6bc62395592b05a9f1f7ebba66e019e2adb3128a50b6262e7b600ce2fccd7bbdb58fcaacecb72849cc164d4816cc53556d2b73ebf847fede903ab4911226b2af5a87ea7061df0b4030d5f019b9ed7e5b4909846d28be58901b09708049860f2b97e17672ecdf551914dd2d4ebeffce0e033d95d47f2e03f4a8a86327c270124d8aa00006084ef6cdaa030c26f96c4a5c9df9ba9bac770eeb72f2475b2a1f4c4c2887539c7c0895fb0926f215ece7034e849aae3b20f810496cb0cfb93d7982ecf031b2cd9dc17e92f4b12dec6ed6a472a59a496e57dc9511184a02d34fbba9965034ae200ef8b3381658fbde0aa07b8150ac971102478e88f1243a6efe3e4f2bb5db30de7709e8cdf98d31cc79fd0ef1fd268fcd01eade4095f81bd01ed733335559c500b6a34a5f1b138509bdc3cc8594a40b7b64467fd2b912309b17718d1d1466ba36c2208befc29285f7fc2f7245cda429cce8c186f087a3210b6e09931ab557293175feb8bb92813334c39995edbd9208d63da025371f1248396160f17fca040589672f56c425ffb1a1f21db6263ae7e313c194d98239994ed36df9553ff9b74d207f968785b3eef0b2095c5d1db858a34145dd23484f61060dae760b8a2ee4ffe8df8592ade42745d6327da214e3e6496bb5b58ec5b3f05285309ec9ecff5d8928fd5d2085178ebc10c1878de9e84ef6ac3d04eaf96c813779779c6f41eb627bece4ba459cfb59b2b332130c0fe3969186e712bce44febfdd2b1d0987fc81b4bce921907c32ee59caf2086df6161e02fea35d623cc24d026b52daf36bdfbd25e506a701f7f897ec591f8f5c4a0d29141f022bccb298ddcedb3b68c274d32242e9bb40385321f153d20edaf23d9f8f700e9fc9df7f5f0e3bf74062b9937fe15d24e65d4da56c6adff17e5d3fa5bed50af35a1f49eec39a3d25b45587f429db07d575be9c6ffa48c24a636e88cfc2e30d11bc541e3dcccd6114f606e0d3da127112d9b2764b6f5caa4a911078619912a145eedca9dfada69d0d92cbe1096b2055da872fd3f39c3ca42359df2881d22bc3c33558d3827d5d0581f5dedf152eb74dd7da8ee02e5044e3ac8b1452db63966f9eaa619e29b137142b9efdc92d3f4d6979d8a85ea7566e18674592d3edfcde37391bc3c09b0d7bb27c06b9a7f37c0d1393de2738a1e7bb59ec7153a91b48ef6e5103aa463605b93094eede335b149fb0946f8eb86c09b5bfb1fd43128a0880063b30665e8b</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据结构Ch3</title>
    <link href="/2025/07/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch3/"/>
    <url>/2025/07/12/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84Ch3/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="892d9637e60556cb6441105e3953ff0b571990b4751edea9b663e018e3e1fb12"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
    <tags>
      
      <tag>数据结构</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件项目管理</title>
    <link href="/2025/06/18/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    <url>/2025/06/18/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="5c66cd18e8d7453930878cc01fa8d4a966d182d03e71eea69c0031d922009e82"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>软件项目管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件项目管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件项目管理</title>
    <link href="/2025/06/18/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/"/>
    <url>/2025/06/18/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="ad85d9584ee7a846e48dbe1bfbd505887472e08d50d8553cd86f342f7f1308b8"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>软件项目管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件项目管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件测试复习大纲</title>
    <link href="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/"/>
    <url>/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="软件测试复习大纲"><a href="#软件测试复习大纲" class="headerlink" title="软件测试复习大纲"></a>软件测试复习大纲</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="软件测试学科的发展"><a href="#软件测试学科的发展" class="headerlink" title="&#x2F;&#x2F;软件测试学科的发展"></a>&#x2F;&#x2F;软件测试学科的发展</h3><h4 id="4个导向"><a href="#4个导向" class="headerlink" title="4个导向"></a>4个导向</h4><ul><li>1957年之前，调试为主 (Debugging Oriented)</li><li>1957～1978年，以功能验证为导向，测试是证明软件是正确的（正向思维）。</li><li>1978～1983年，以破坏性检测为导向，测试是为了找到软件中的错误（逆向思维）。</li><li>1983～1987年，以质量评估为导向，测试是提供产品的评估和质量度量。</li><li>1988年起，以缺陷预防为导向，测试是为了展示软件符合设计要求，发现缺陷、预防缺陷。</li></ul><h4 id="不同阶段"><a href="#不同阶段" class="headerlink" title="不同阶段"></a>不同阶段</h4><p>初级阶段（1957～1971）测试通常被认为是对产品进行事后检验 ，缺乏有效的测试方法<br>发展阶段（1972～1982），1972年第一次关于软件测试的正式会议，促进了软件测试的发展<br>成熟阶段（1983到现在），国际标准Std 829-1983 ，形成一门独立的学科和专业，成为软件工程学科中的一个重要组成部分 </p><h3 id="正向测试与反向测试的定义，关系"><a href="#正向测试与反向测试的定义，关系" class="headerlink" title="正向测试与反向测试的定义，关系"></a>正向测试与反向测试的定义，关系</h3><h4 id="正向思维"><a href="#正向思维" class="headerlink" title="正向思维"></a>正向思维</h4><ul><li>测试是为了验证软件是否符合用户需求，即验证软件产品是否能正常工作</li></ul><h4 id="反向思维"><a href="#反向思维" class="headerlink" title="反向思维"></a>反向思维</h4><ul><li>测试是为了证明程序有错，而不是证明程序无错误</li></ul><h3 id="从从经济视角认知软件测试"><a href="#从从经济视角认知软件测试" class="headerlink" title="从从经济视角认知软件测试"></a>从从经济视角认知软件测试</h3><ul><li>测试的经济观点就是以最小的代价获得最高的软件产品质量。</li></ul><h3 id="SQA，与软件测试关系"><a href="#SQA，与软件测试关系" class="headerlink" title="SQA，与软件测试关系"></a>SQA，与软件测试关系</h3><h4 id="SQA"><a href="#SQA" class="headerlink" title="SQA"></a>SQA</h4><ul><li>软件质量保证（Software Quality Assurance，SQA）活动是通过对软件产品有计划的进行评审和审计来验证软件是否合乎标准的系统工程，通过协调、审查和跟踪以获取有用信息，形成分析结果以指导软件过程。</li></ul><h4 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h4><ul><li>SQA指导、监督软件测试的计划和执行，督促测试工作的结果客观、准确和有效，并协助测试流程的改进。</li><li>软件测试是SQA重要手段之一，为SQA提供所需的数据，作为质量评价的客观依据。</li><li>SQA是一项管理工作，侧重于对流程的评审和监控</li><li>测试是一项技术性的工作，侧重对产品进行评估和验证</li></ul><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="缺陷定义，现象，判定准则"><a href="#缺陷定义，现象，判定准则" class="headerlink" title="缺陷定义，现象，判定准则"></a>缺陷定义，现象，判定准则</h3><h4 id="软件缺陷"><a href="#软件缺陷" class="headerlink" title="软件缺陷"></a>软件缺陷</h4><ul><li>从产品内部看，软件缺陷是软件产品开发或维护过程中所存在的错误、毛病等各种问题；</li><li>从外部看，软件缺陷是系统所需要实现的某种功能的失效或违背。</li></ul><h4 id="软件缺陷的现象"><a href="#软件缺陷的现象" class="headerlink" title="软件缺陷的现象"></a>软件缺陷的现象</h4><ul><li>功能、特性没有实现或部分实现</li><li>设计不合理，存在缺陷</li><li>实际结果和预期结果不一致</li><li>运行出错，包括运行中断、系统崩溃、界面混乱</li><li>数据结果不正确、精度不够</li><li>用户不能接受的其他问题，如存取时间过长、界面不美观</li></ul><h4 id="判定准则"><a href="#判定准则" class="headerlink" title="判定准则"></a>判定准则</h4><ul><li>将被测试系统的实际输出与所期望的输出进行比较，从而判断是否有差异，即是否为缺陷</li></ul><h3 id="软件缺陷产生的原因有哪？"><a href="#软件缺陷产生的原因有哪？" class="headerlink" title="软件缺陷产生的原因有哪？"></a>软件缺陷产生的原因有哪？</h3><h4 id="技术问题"><a href="#技术问题" class="headerlink" title="技术问题"></a>技术问题</h4><ul><li>算法错误、计算和精度问题</li><li>接口参数传递不匹配</li></ul><h4 id="团队工作"><a href="#团队工作" class="headerlink" title="团队工作"></a>团队工作</h4><ul><li>沟通不充分，误解</li></ul><h4 id="软件本身"><a href="#软件本身" class="headerlink" title="软件本身"></a>软件本身</h4><ul><li>文档错误、用户使用场合(user scenario)，</li><li>时间上不协调、或不一致性所带来的问题</li><li>系统的自我恢复或数据的异地备份、灾难性恢复等问题</li></ul><h3 id="产品质量的内容，内部，外部，使用质量"><a href="#产品质量的内容，内部，外部，使用质量" class="headerlink" title="产品质量的内容，内部，外部，使用质量"></a>产品质量的内容，内部，外部，使用质量</h3><h4 id="产品质量"><a href="#产品质量" class="headerlink" title="产品质量"></a>产品质量</h4><ul><li>是人们实践产物的属性和行为，是可以认识，可以科学地描述的。并且可以通过一些方法和人类活动，来改进质量</li></ul><h4 id="内部质量→外部质量→使用质量"><a href="#内部质量→外部质量→使用质量" class="headerlink" title="内部质量→外部质量→使用质量"></a>内部质量→外部质量→使用质量</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E5%86%85%E5%A4%96%E4%BD%BF%E7%94%A8%E8%B4%A8%E9%87%8F.png" alt="内外使用质量"></p><h3 id="如何理解软件规格说明书缺陷"><a href="#如何理解软件规格说明书缺陷" class="headerlink" title="如何理解软件规格说明书缺陷"></a>如何理解软件规格说明书缺陷</h3><h3 id="verification-validation"><a href="#verification-validation" class="headerlink" title="verification,validation"></a>verification,validation</h3><ul><li>软件测试是由“验证（Verification）”和“有效性确认（Validation）”活动构成的整体</li><li>Verification：Are we building the product right？是否正确地构造了软件？即是否正确地做事，验证开发过程是否遵守已定义好的内容。验证产品满足规格设计说明书的一致性</li><li>Validation： Are we building the right product? 是否构造了正是用户所需要的软件？即是否正在做正确的事。验证产品所实现的功能是否满足用户的需求</li></ul><h3 id="软件测试不同层次测试的对象和任务"><a href="#软件测试不同层次测试的对象和任务" class="headerlink" title="软件测试不同层次测试的对象和任务"></a>软件测试不同层次测试的对象和任务</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E4%B8%8D%E5%90%8C%E5%B1%82%E6%AC%A1%E4%BB%BB%E5%8A%A1.png" alt="不同层次任务"></p><h4 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h4><ul><li>单元测试针对程序系统中的最小单元—模块或组件进行测试，一般和编码同步进行。主要采用白盒测试方法，从程序的内部结构出发设计测试用例，检查程序模块或组件的已实现的功能与定义的功能是否一致、以及编码中是否存在错误。通常要编写驱动模块和桩模块</li></ul><h4 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h4><ul><li>集成测试，也称联调，在单元测试的基础上，将模块按照设计要求组装起来同时进行测试，主要目标是发现与接口有关的模块之间问题。现在提倡持续集成测试</li></ul><h4 id="系统测试"><a href="#系统测试" class="headerlink" title="系统测试"></a>系统测试</h4><ul><li><p>系统功能测试</p><ul><li>一般在完成集成测试后进行系统功能测试，而且基于产品功能说明书，针对产品所实现的功能，从用户角度来进行功能验证，以确认每个功能是否都能正常使用</li></ul></li><li><p>系统非功能测试</p><ul><li>系统非功能性测试是将软件放在整个计算机环境下，包括软硬件平台、某些支持软件和数据等，在实际运行环境下验证系统的非功能性，</li></ul></li></ul><h4 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h4><ul><li>验收测试的目的是向未来的用户表明系统能够像预定要求那样工作，验证软件的功能和性能如同用户所合理期待的那样</li></ul><h3 id="静态测试的内容包括什么？开展相关活动时采用的形式有哪些？"><a href="#静态测试的内容包括什么？开展相关活动时采用的形式有哪些？" class="headerlink" title="静态测试的内容包括什么？开展相关活动时采用的形式有哪些？"></a>静态测试的内容包括什么？开展相关活动时采用的形式有哪些？</h3><ul><li>静态测试包括对软件产品的需求和设计文档、代码的评审（技术评审、文档评审等），以及对代码的静态分析等；</li><li>管理评审、流程评审不属于静态测试，而是属于质量保证（QA）；</li><li>评审的主要形式：互为评审 (Peer review)、走查 (walk-through)、会议评审 (Inspection)；</li><li>代码的静态分析主要采用工具进行，但人工的代码评审也不可或缺。</li></ul><h3 id="测试工作的流程"><a href="#测试工作的流程" class="headerlink" title="测试工作的流程"></a>测试工作的流程</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E6%B5%8B%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="软测工作流程"></p><h3 id="软件测试的工作范畴"><a href="#软件测试的工作范畴" class="headerlink" title="软件测试的工作范畴"></a>软件测试的工作范畴</h3><ul><li>测试需求分析、测试策略指定、测试计划、测试设计、测试执行、测试结果和过程评估</li></ul><h4 id="测试需求分析"><a href="#测试需求分析" class="headerlink" title="测试需求分析"></a>测试需求分析</h4><ul><li>明确测试范围，了解哪些功能点要测试、哪些功能点不需要测试；</li><li>知道哪些测试目标优先级高、哪些目标优先级低；</li><li>要完成哪些相应的测试任务才能确保目标的实现。</li></ul><h4 id="测试策略指定"><a href="#测试策略指定" class="headerlink" title="测试策略指定"></a>测试策略指定</h4><ul><li>基于下列这些因素的考虑做出决定：<ul><li>测试方式，包括手工方式与自动化方式、静态方式与动态方式等的选择与平衡，探索式测试或基于脚本的测试、自己团队测试还是众测、外包等平衡；</li><li>测试方法，包括黑盒测试还是白盒测试方法、基于数据流还是基于控制流的方法、完全组合测试方法还是组合优化测试方法等平衡；</li><li>测试过程，先测什么、后测试什么，对测试阶段的不同划分等。</li></ul></li></ul><h4 id="测试计划"><a href="#测试计划" class="headerlink" title="测试计划"></a>测试计划</h4><h4 id="测试设计"><a href="#测试设计" class="headerlink" title="测试设计"></a>测试设计</h4><ul><li>是解决“如何测”的问题，可以分为测试总体设计和测试详细设计:<ul><li>测试总体设计则主要指测试方案的设计、测试结构的设计</li><li>测试详细设计主要是指测试用例的设计。</li></ul></li></ul><h4 id="测试执行"><a href="#测试执行" class="headerlink" title="测试执行"></a>测试执行</h4><ul><li>手工执行：基于详细设计的测试用例来完成测试，也可以在没有测试用例的情况下进行的探索式测试。</li><li>自动化执行：指采用测试工具来完成，一般都需要开发自动化测试脚本，然后工具执行脚本，在后续“单元测试与集成测试、系统测试和自动化测试框架”等各章会进行详细讨论。</li></ul><h4 id="测试结果和过程评估"><a href="#测试结果和过程评估" class="headerlink" title="测试结果和过程评估"></a>测试结果和过程评估</h4><ul><li>测试结果评估：对测试结果进行分析，如分析测试覆盖率，以了解测试是否充分；也可以基于缺陷的趋势分析和分布分析，了解缺陷是否已收敛，以及基于缺陷来评估当前被测试的版本的质量 。</li><li>测试过程评估，结合测试计划来进行评审，相当于把计划的测试活动和实际执行的活动进行比较，了解测试计划执行的情况和效果 。</li></ul><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="等价类"><a href="#等价类" class="headerlink" title="等价类"></a>等价类</h3><h3 id="边界值法"><a href="#边界值法" class="headerlink" title="边界值法"></a>边界值法</h3><h3 id="决策表，因果图法"><a href="#决策表，因果图法" class="headerlink" title="决策表，因果图法"></a>决策表，因果图法</h3><h3 id="各种逻辑覆盖法"><a href="#各种逻辑覆盖法" class="headerlink" title="各种逻辑覆盖法"></a>各种逻辑覆盖法</h3><h3 id="路径覆盖法"><a href="#路径覆盖法" class="headerlink" title="路径覆盖法"></a>路径覆盖法</h3><h3 id="功能图法，EFMS"><a href="#功能图法，EFMS" class="headerlink" title="功能图法，EFMS"></a>功能图法，EFMS</h3><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="测试左移和右移，贯穿全生命周期的测试思想"><a href="#测试左移和右移，贯穿全生命周期的测试思想" class="headerlink" title="测试左移和右移，贯穿全生命周期的测试思想"></a>测试左移和右移，贯穿全生命周期的测试思想</h3><h4 id="测试左移和右移"><a href="#测试左移和右移" class="headerlink" title="测试左移和右移"></a>测试左移和右移</h4><ul><li>测试左移：不仅让开发人员做更多的测试，而且需要做需求评审、设计评审，以及第1章介绍的验收测试驱动开发（ATDD）；</li><li>测试右移：是在线测试（Test in Production，TiP），包括在线性能监控与分析、A&#x2F;B测试和日志分析等，可以和现在流行的DevOp联系起来。</li></ul><h4 id="软件测试生命周期"><a href="#软件测试生命周期" class="headerlink" title="软件测试生命周期"></a>软件测试生命周期</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="软件测试生命周期"></p><h3 id="w模型"><a href="#w模型" class="headerlink" title="w模型"></a>w模型</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/W%E6%A8%A1%E5%9E%8B.png" alt="W模型"></p><ul><li>测试过程和开发是同时开始同时结束的，两者是同步关系</li><li>测试过程是对开发过程中的阶段性成果和最终的产品进行验证的过程，两者相互依赖<ul><li>前期测试更多依赖开发，后期反过来</li></ul></li></ul><h3 id="TMAP定义，几个阶段，模型基石及关系"><a href="#TMAP定义，几个阶段，模型基石及关系" class="headerlink" title="TMAP定义，几个阶段，模型基石及关系"></a>TMAP定义，几个阶段，模型基石及关系</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><ul><li>TMap (Test Management Approach，测试管理方法)是一种结构化的、基于风险策略的测试方法体系, 目的能更早地发现缺陷，以最小的成本、有效地、彻底地完成测试任务，以减少软件发布后的支持成本。</li><li>TMap所定义的测试生命周期由计划和控制、准备、说明、执行和完成等阶段组成</li></ul><h4 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TMap%E9%98%B6%E6%AE%B5.png" alt="TMap阶段"></p><h4 id="基石"><a href="#基石" class="headerlink" title="基石"></a>基石</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TMAP%E5%9F%BA%E7%9F%B3.png" alt="TMAP基石"></p><h3 id="SBTM基本要素，结果，原理"><a href="#SBTM基本要素，结果，原理" class="headerlink" title="SBTM基本要素，结果，原理"></a>SBTM基本要素，结果，原理</h3><h4 id="要素"><a href="#要素" class="headerlink" title="要素"></a>要素</h4><ul><li>Session(会话)是一段不受打扰的测试时间（通常是90分钟），是测试管理的最小单元。<ul><li>每个session关联一个特定的、目标明确的测试任务（mission）</li></ul></li><li>Charter (章程，即测试指导) ：对每个session如何执行进行简要的描述，相当于每个session需要一个简要的计划（提纲）<ul><li>一系列Session相互支持，有机地组合在一起，周密地测试了整个产品。</li></ul></li><li>A session sheet (测试报告) ： 相当于测试报告，供第三方（如测试经理、ScrumMaster等）进行检查的材料。它最好能被工具扫描、解析和合成。</li><li>Debriefing（听取口头报告）：口头汇报，更准确地说，是测试人和其lead&#x2F;Manager之间的对话。</li></ul><h4 id="结果：Session-Sheet"><a href="#结果：Session-Sheet" class="headerlink" title="结果：Session Sheet"></a>结果：Session Sheet</h4><ul><li>Session charter (包含任务陈述、测试范围等)</li><li>Tester name(s)&#x2F;测试执行者</li><li>Task breakdown :TBS（Test&#x2F;Bug&#x2F;Setup）度量（耗时），这些数据配合简报有助于估算测试速度、评估测试效率</li><li>测试数据、数据文件：为测试数据复用提供了基础</li><li>Note&#x2F; 测试笔记：测试过程中随时记录的有价值的信息，叙述了测试故事：为什么测试，如何测，为什么这样的测试已足够好</li><li>Issues&#x2F; 问题&#x2F;风险：测试过程中的问题和疑惑（未来测试的参考资料）</li><li>缺陷：测试的直接产出</li></ul><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><ul><li>通过结构化的测试会话来组织和管理探索性测试活动，以提高测试效率和质量。</li></ul><h3 id="测试几个学派的特点"><a href="#测试几个学派的特点" class="headerlink" title="测试几个学派的特点"></a>测试几个学派的特点</h3><ul><li>分析流派：认为测试是严格的和技术性的，在学术界有许多支持者</li><li>标准流派：将测试视为衡量进度的一种方法，强调成本和可重复的标准</li><li>质量流派：强调过程规范性，监督开发人员并充当质量的看门人</li><li>上下文驱动流派：强调人的价值，寻找涉众关心的bug</li><li>敏捷流派：强调自动化测试，使用测试来快速验证开发是完整的</li></ul><h3 id="TMM，TPI，CTP-STEP定义，特点"><a href="#TMM，TPI，CTP-STEP定义，特点" class="headerlink" title="TMM，TPI，CTP, STEP定义，特点"></a>TMM，TPI，CTP, STEP定义，特点</h3><h4 id="TMMi-Testing-Maturity-Model-integration"><a href="#TMMi-Testing-Maturity-Model-integration" class="headerlink" title="TMMi(Testing Maturity Model integration)"></a>TMMi(Testing Maturity Model integration)</h4><ul><li>测试成熟度模型集成</li><li>过程能力描述了遵循一个软件测试过程可能达到的预期结果的范围。TMMi的建立，得益于以下3点：<ul><li>充分吸收、CMM&#x2F;CMMi的精华；</li><li>基于历史演化的测试过程；</li><li>业界的最佳实践。</li></ul></li><li>5个别级的一系列测试能力成熟度的定义，每个级别的组成包括到期目标、到期子目标活动、任务和职责等。</li><li>一套评价模型，包括一个成熟度问卷、评估程序和团队选拔培训指南。 </li><li>2-5级别内容<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TMMi.png" alt="TMMi"></li></ul><h4 id="TPI-Test-Process-Improvement"><a href="#TPI-Test-Process-Improvement" class="headerlink" title="TPI(Test Process Improvement)"></a>TPI(Test Process Improvement)</h4><h5 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h5><ul><li>是基于连续性表示法的测试过程改进的参考模型，是在软件控制、测试知识以及过往经验的基础上开发出来的<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TPI.png" alt="TPI"></li><li>20个关键域<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TPI%E5%85%B3%E9%94%AE%E5%9F%9F.png" alt="TPI关键域"></li></ul><h5 id="TPI级别"><a href="#TPI级别" class="headerlink" title="TPI级别"></a>TPI级别</h5><ul><li>为了了解过程在每个关键域所处的状态，即对关键域的评估结果，通过级别是来体现。模型提供了4个级别，由A到D，A是最低级。根据测试过程的可视性改善、测试效率的提高、或成本的降低以及质量的提高，级别会有所上升。</li></ul><h5 id="TPI检查点和建议"><a href="#TPI检查点和建议" class="headerlink" title="TPI检查点和建议"></a>TPI检查点和建议</h5><ul><li>为了能客观地决定各个关键域的级别，TPI模型提供了一种度量工具——检查点。每个级别都有若干个检查点，测试过程只有在满足了这些检查点的要求之后，才意味着它达到了特定的级别</li><li>检查点帮助我们发现测试过程中的问题，而建议会帮助我们解决问题，最终改进测试过程。建议不仅包含对如何达到下个级别的指导，而且还包括一些具体的操作技巧、注意事项等。</li></ul><h5 id="TPI-NEXT"><a href="#TPI-NEXT" class="headerlink" title="TPI NEXT"></a>TPI NEXT</h5><ul><li>商业驱动作为测试过程提升的基础</li><li>为改进目标和度量设定优先级</li><li>确保商业可以引导和控制改进的过程</li></ul><h4 id="CTP-Critical-Test-Process-关键测试过程"><a href="#CTP-Critical-Test-Process-关键测试过程" class="headerlink" title="CTP(Critical Test Process)关键测试过程"></a>CTP(Critical Test Process)关键测试过程</h4><h5 id="定义和内容"><a href="#定义和内容" class="headerlink" title="定义和内容"></a>定义和内容</h5><ul><li>内容参考模型、上下文相关的方法，并能对模型进行裁剪</li><li>使用CTP的过程改进，始于对现有测试过程的评估，通过评估以识别过程的强弱，并结合组织的需要提供改进的意见</li><li>计划（Plan）、准备（Prepare）、执行（Perform）和完善 (Perfect)；计划和完善主要是管理工作，准备和执行是实践工作</li></ul><h5 id="CTP的12个关键过程"><a href="#CTP的12个关键过程" class="headerlink" title="CTP的12个关键过程"></a>CTP的12个关键过程</h5><ul><li>测试</li><li>建立上下文关系和测试环境</li><li>质量风险评估</li><li>测试估算</li><li>测试计划</li><li>测试团队开发</li><li>测试（管理）系统开发</li><li>测试发布管理</li><li>测试执行</li><li>缺陷报告</li><li>测试结果报告</li><li>变更管理</li></ul><h4 id="STEP-Systematic-Test-and-Evaluation-Process，系统化测试和评估过程"><a href="#STEP-Systematic-Test-and-Evaluation-Process，系统化测试和评估过程" class="headerlink" title="STEP(Systematic Test and Evaluation Process，系统化测试和评估过程)"></a>STEP(Systematic Test and Evaluation Process，系统化测试和评估过程)</h4><h5 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h5><ul><li>是一个内容参考模型</li><li>基于需求的测试策略</li><li>在生命周期初始开始进行测试</li><li>测试用作需求和使用模型 </li><li>由测试件设计导出软件设计（测试驱动开发）</li><li>及早发现缺陷或完全的缺陷预防</li><li>对缺陷进行系统分析</li><li>测试人员和开发人员一起工作</li></ul><h5 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h5><ul><li>STEP与CTP比较类似，而不像TMMI和TPI，并不要求改进需要遵循特定的顺序。</li><li>某些情况下，STEP评估模型可以与TPI成熟度模型结合起来使用</li></ul><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="代码评审的形式及各自特点"><a href="#代码评审的形式及各自特点" class="headerlink" title="代码评审的形式及各自特点"></a>代码评审的形式及各自特点</h3><h4 id="互查"><a href="#互查" class="headerlink" title="互查"></a>互查</h4><ul><li>自由，不正式，容易开展，开发人员互相审查彼此编码</li></ul><h4 id="走查"><a href="#走查" class="headerlink" title="走查"></a>走查</h4><ul><li>相对正式，采用讲解、讨论和模拟运行方式进行查找错误的活动</li></ul><h4 id="会议评审"><a href="#会议评审" class="headerlink" title="会议评审"></a>会议评审</h4><ul><li>以会议的形式，制定目标，流程和规则</li></ul><h3 id="单元测试定义，作用，目标"><a href="#单元测试定义，作用，目标" class="headerlink" title="单元测试定义，作用，目标"></a>单元测试定义，作用，目标</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><ul><li>单元测试是对软件基本组成单元（如函数、类的方法等）进行的测试。</li></ul><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ul><li>单元质量是系统质量的基石，单元测试可以比系统测试测得更彻底</li></ul><h4 id="单元测试的目标"><a href="#单元测试的目标" class="headerlink" title="单元测试的目标"></a>单元测试的目标</h4><ul><li>单元模块被正确编码</li><li>信息能否正确地流入和流出单元；</li><li>在单元工作过程中，其内部数据能否保持其完整性，包括内部数据的形式、内容及相互关系不发生错误，也包括全局变量在单元中的处理和影响。 </li><li>在为限制数据加工而设置的边界处，能否正确工作。</li><li>单元的运行能否做到满足特定的逻辑覆盖。 </li><li>单元中发生了错误，其中的出错处理措施是否有效。</li></ul><blockquote><p>单元模块被正确实现（主要指编码），包括功能、性能、安全性等，但一般主要介绍单元功能测试。<br>（参数）输入是否正确传递和得到保护（容错），输出是否正常<br>内部数据能否保持其完整性，包括变量的正确定义与引用、内存及时释放、全局变量的正确处理和影响最低<br>代码行、分支覆盖或MC&#x2F;DC达到要求，如高于80%或95%</p></blockquote><h3 id="桩程序，驱动程序"><a href="#桩程序，驱动程序" class="headerlink" title="桩程序，驱动程序"></a>桩程序，驱动程序</h3><ul><li>驱动程序（Driver）也称作驱动模块，用以模拟被测模块的上级模块，能够调用被测模块。在测试过程中，驱动模块接收测试数据，调用被测模块并把相关的数据传送给被测模块。</li></ul><blockquote><p>简单说就是你负责测试的模块没有main()方法入口，所以需要写一个带main的方法来调用你的模块或方法。这个就是驱动测试</p></blockquote><ul><li>桩程序（Stub），也称桩模块，用以模拟被测模块工作过程中所调用的下层模块。桩模块由被测模块调用，它们一般只进行很少的数据处理。<blockquote><p>这里解释一下桩，桩是指用来代替关联代码或者未实现的代码。如果函数B用B1来代替，那么，B称为原函数，B1称为桩函数。打桩就是编写或生成桩代码。</p></blockquote></li></ul><h3 id="集成测试的概念"><a href="#集成测试的概念" class="headerlink" title="集成测试的概念"></a>集成测试的概念</h3><ul><li>集成测试是将软件集成起来，对模块之间的接口进行测试。 </li><li>顾名思义，集成测试是将软件集成起来后进行测试。集成测试又叫子系统测试、组装测试、部件测试等。<ul><li>模块内的集成，主要是测试模块内各个接口间的交互集成关系；</li><li>子系统内的集成，测试子系统内各个模块间的交互关系；</li><li>系统内的集成，测试系统内各个子系统和模块间的集成关系。</li></ul></li><li>集成测试的测试依据；概要设计书，详细设计说明书，主要是概要设计说明书</li></ul><h3 id="单一系统的集成测试的集成模式及优缺点"><a href="#单一系统的集成测试的集成模式及优缺点" class="headerlink" title="单一系统的集成测试的集成模式及优缺点"></a>单一系统的集成测试的集成模式及优缺点</h3><h4 id="自顶向下"><a href="#自顶向下" class="headerlink" title="自顶向下"></a>自顶向下</h4><ul><li>定义：从系统的顶层模块开始，逐步向下集成和测试。</li><li>优点：<ul><li>测试早期即可验证系统的主要控制逻辑。</li><li>测试驱动程序较少，减少开发工作量。</li></ul></li><li>缺点：<ul><li>需要大量桩程序来模拟底层模块。</li><li>底层模块的测试可能被延迟。</li></ul></li></ul><h4 id="自底向上"><a href="#自底向上" class="headerlink" title="自底向上"></a>自底向上</h4><ul><li>定义：从系统的底层模块开始，逐步向上集成和测试。</li><li>优点：<ul><li>底层模块的测试可以尽早完成。</li><li>桩程序需求较少。</li></ul></li><li>缺点：<ul><li>需要开发大量驱动程序来调用底层模块。</li><li>系统的整体功能验证可能被延迟。</li></ul></li></ul><h4 id="混合策略"><a href="#混合策略" class="headerlink" title="混合策略"></a>混合策略</h4><ul><li>定义：同时从顶层和底层开始集成，最后在中间层完成集成。</li><li>优点：<ul><li>顶层和底层模块可以同时测试，节省时间。</li><li>减少桩程序和驱动程序的开发工作量。</li></ul></li><li>缺点：<ul><li>需要协调顶层和底层模块的集成进度。</li><li>中间层模块的测试可能较复杂。</li></ul></li></ul><h3 id="微服务特点，测试目标？测试基本步骤？"><a href="#微服务特点，测试目标？测试基本步骤？" class="headerlink" title="&#x2F;&#x2F;微服务特点，测试目标？测试基本步骤？"></a>&#x2F;&#x2F;微服务特点，测试目标？测试基本步骤？</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>模块化</li><li>独立部署</li><li>分布式架构</li></ul><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><ul><li>验证服务功能</li><li>接口测试</li><li>性能测试</li><li>容错测试</li><li>集成测试</li><li>安全性测试</li><li>兼容性测试</li></ul><h3 id="集成测试的目标"><a href="#集成测试的目标" class="headerlink" title="集成测试的目标"></a>集成测试的目标</h3><ul><li>集成测试，也叫组装测试或联合测试。在单元测试的基础上，将所有模块按照设计要求（如根据结构图〕组装成为子系统或系统，进行集成测试。实践表明，一些模块虽然能够单独地工作，但并不能保证连接起来也能正常的工作。程序在某些局部反映不出来的问题，在全局上很可能暴露出来，影响功能的实现。</li><li>目标在于检验与软件设计相关的程序结构问题。如数据穿过接口时可能丢失；一个模块与另一个模块可能有由于疏忽的问题而造成有害影响； 把子功能组合起来可能不产生预期的主功能；个别看起来是可以接受的误差可能积累到不能接受的程度；全程数据结构可能有错误等。</li></ul><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="功能测试的基本思路"><a href="#功能测试的基本思路" class="headerlink" title="功能测试的基本思路"></a>功能测试的基本思路</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF.png" alt="功能测试的基本思路"></p><h3 id="回归测试需要解决的问题。回归测试的策略和方法"><a href="#回归测试需要解决的问题。回归测试的策略和方法" class="headerlink" title="回归测试需要解决的问题。回归测试的策略和方法"></a>回归测试需要解决的问题。回归测试的策略和方法</h3><h4 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h4><ul><li>回归缺陷：原来正常工作的功能，没有发生需求变化，而由于受其它改动影响而产生的问题。</li><li>回归测试就是为了发现回归缺陷而进行的测试。如果没有回归测试，产品就带着回归缺陷被发布出去了，造成严重后果。</li></ul><h4 id="回归测试策略"><a href="#回归测试策略" class="headerlink" title="回归测试策略"></a>回归测试策略</h4><ul><li>再测试全部用例</li><li>基于风险选择测试</li><li>基于操作剖面选择测试</li><li>再测试修改的部分</li></ul><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><h3 id="性能测试目标"><a href="#性能测试目标" class="headerlink" title="性能测试目标"></a>性能测试目标</h3><ul><li>获取系统性能某些指标数据</li><li>为了验证系统是否达到用户提出的性能指标</li><li>发现系统中存在的性能瓶颈，优化系统的性能</li></ul><h3 id="什么是性能测试？"><a href="#什么是性能测试？" class="headerlink" title="什么是性能测试？"></a>什么是性能测试？</h3><ul><li>性能测试（performance test）就是为了发现系统性能问题或获取系统性能相关指标而进行的测试。一般在真实环境、特定负载条件下，通过工具模拟实际软件系统的运行及其操作，同时监控性能各项指标，最后对测试结果进行分析以确定系统的性能状况。</li></ul><h3 id="系统性能表现"><a href="#系统性能表现" class="headerlink" title="系统性能表现"></a>系统性能表现</h3><h4 id="外部表现"><a href="#外部表现" class="headerlink" title="外部表现"></a>外部表现</h4><ul><li>启动系统、打开页面越来越慢</li><li>查询数据，很长时间才显示列表</li><li>网络下载速度很低，如5k&#x2F;s</li></ul><h4 id="内因"><a href="#内因" class="headerlink" title="内因"></a>内因</h4><ul><li>资源耗尽,如CPU使用率达到100%</li><li>资源泄漏,如内存泄漏 ，最终会导致资源耗尽</li><li>资源瓶颈,如线程、GDI、DB连接等资源变得稀缺</li></ul><h3 id="按照测试目的分，性能测试类型"><a href="#按照测试目的分，性能测试类型" class="headerlink" title="按照测试目的分，性能测试类型"></a>按照测试目的分，性能测试类型</h3><ul><li>性能基准测试：在系统标准配置下获得有关的性能指标数据，作为将来性能改进的基线(Baseline)</li><li>性能验证测试：验证系统是否达到事先已定义的系统性能指标、能否满足系统的性能需求</li><li>性能规划测试：在多种特定的环境下，获得不同配置的系统性能指标，从而决定系统部署的软硬件配置选型</li><li>容量测试可以看作性能的测试一种，因为系统的容量可以看作是系统性能指标之一</li><li>压力测试 (Stress test) ：模拟实际应用的软硬件环境及用户使用过程的高负载、异常负载、超长时间运行，从而加速系统崩溃，以检查程序对异常情况的抵抗能力，找出性能瓶颈、不稳定等问题。</li><li>渗入测试（soak test），通过长时间运行，使问题逐渐渗透出来，从而发现内存泄漏、垃圾回收（GC）或系统的其他问题，以检验系统的健壮性</li><li>峰谷测试（peak-rest test），采用高低突变加载方式进行，先加载到高水平的负载，然后急剧降低负载，稍微平息一段时间，再加载到高水平的负载，重复这样过程，容易发现问题的蛛丝马迹，最终找到问题的根源</li></ul><h3 id="什么是压力测试"><a href="#什么是压力测试" class="headerlink" title="什么是压力测试"></a>什么是压力测试</h3><ul><li>模拟实际应用的软硬件环境及用户使用过程的高负载、异常负载、超长时间运行，从而加速系统崩溃，以检查程序对异常情况的抵抗能力，找出性能瓶颈、不稳定等问题。</li></ul><h3 id="性能测试的基本过程"><a href="#性能测试的基本过程" class="headerlink" title="性能测试的基本过程"></a>性能测试的基本过程</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%87%E7%A8%8B.png" alt="性能测试的基本过程"></p><h3 id="什么是安全性测试"><a href="#什么是安全性测试" class="headerlink" title="什么是安全性测试"></a>什么是安全性测试</h3><ul><li>旨在评估系统的安全性，确保系统能够保护数据和资源免受未经授权的访问、使用、泄露、破坏或篡改。安全性测试的目标是发现系统中的安全漏洞，并验证安全机制的有效性。</li></ul><h3 id="渗透测试实施策略"><a href="#渗透测试实施策略" class="headerlink" title="渗透测试实施策略"></a>渗透测试实施策略</h3><ul><li>全程监控：采用类似wireshark的嗅探软件进行全程抓包嗅探</li><li>择要监控：对扫描过程不进行录制，仅仅在数据分析后，准备发起渗透前才开启软件进行嗅探</li><li>主机监控：仅监控受测主机的存活状态</li><li>指定攻击源：多方监控指定源（某主机）进程、网络连接、数据传输等</li><li>对关键系统，可以采用对目标的副本进行渗透测试</li></ul><h3 id="软件安全性测试有哪两种？有什么关系和区别？"><a href="#软件安全性测试有哪两种？有什么关系和区别？" class="headerlink" title="软件安全性测试有哪两种？有什么关系和区别？"></a>软件安全性测试有哪两种？有什么关系和区别？</h3><ul><li>安全功能测试 (Security Functional Testing)：数据机密性、完整性、可用性、不可否认性、身份认证、授权、访问控制、审计跟踪、委托、隐私保护、安全管理等</li><li>安全漏洞测试 (Security Vulnerability Testing)：从攻击者的角度, 以发现软件的安全漏洞为目的。安全漏洞是指系统在设计、实现、操作、管理上存在的可被利用的缺陷或弱点</li></ul><h3 id="安全性测试的任务"><a href="#安全性测试的任务" class="headerlink" title="安全性测试的任务"></a>安全性测试的任务</h3><ul><li>全面检验软件在需求规格说明中规定的防止危险状态措施的有效性和在每一个危险状态下的反应</li><li>对软件设计中用于提高安全性的结构、算法、容错、冗余、中断处理等方案，进行针对性测试</li><li>在异常条件下测试软件，以表明不会因可能的单个或多个输入错误而导致不安全状态</li><li>对安全性关键的软件单元、组件，单独进行加强的测试，以确认其满足安全性需求</li></ul><h3 id="安全性测试方法按内外部分为哪两种？"><a href="#安全性测试方法按内外部分为哪两种？" class="headerlink" title="安全性测试方法按内外部分为哪两种？"></a>安全性测试方法按内外部分为哪两种？</h3><h4 id="基于威胁的方法"><a href="#基于威胁的方法" class="headerlink" title="基于威胁的方法"></a>基于威胁的方法</h4><ul><li>从软件外部考察其安全性，识别软件面临的安全威胁并测试其是否能够发生</li></ul><h4 id="基于漏洞的方法"><a href="#基于漏洞的方法" class="headerlink" title="基于漏洞的方法"></a>基于漏洞的方法</h4><ul><li>从软件内部考虑其安全性，识别软件的安全漏洞，如借助特定的漏洞扫描工具</li></ul><h3 id="什么是XSS攻击和sql注入攻击，如何进行测试和防范"><a href="#什么是XSS攻击和sql注入攻击，如何进行测试和防范" class="headerlink" title="什么是XSS攻击和sql注入攻击，如何进行测试和防范"></a>什么是XSS攻击和sql注入攻击，如何进行测试和防范</h3><h4 id="XSS-跨站脚本攻击"><a href="#XSS-跨站脚本攻击" class="headerlink" title="XSS 跨站脚本攻击"></a>XSS 跨站脚本攻击</h4><ul><li>允许恶意用户将代码植入到“供其它用户使用的web页面” 中</li><li>输入验证：对用户输入进行严格的验证，拒绝恶意脚本。</li><li>输出编码：对动态生成的HTML内容进行编码，防止脚本执行。<ul><li>使用HTML实体编码，例如将&lt;编码为<code>&amp;lt;</code>。</li></ul></li></ul><h4 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h4><ul><li>根据SQL语句的编写规则，附加一个永远为“真”的条件，使系统中某个认证条件总是成立，从而欺骗系统、躲过认证，进而侵入系统 </li><li>使用参数化查询</li><li>限制数据库权限</li></ul><h3 id="web安全性测试可从哪些方法开展"><a href="#web安全性测试可从哪些方法开展" class="headerlink" title="web安全性测试可从哪些方法开展"></a>web安全性测试可从哪些方法开展</h3><ul><li>检查应用系统架构,防止用户绕过系统直接修改数据库</li><li>检查身份认证模块，用以防止非法用户绕过身份认证</li><li>检查数据库接口模块，用以防止用户获取系统权限</li><li>检查文件接口模块，防止用户获取系统文件</li><li>检查其他安全威胁</li></ul><h3 id="什么是软件可靠性？可从哪几个指标度量？各自的定义"><a href="#什么是软件可靠性？可从哪几个指标度量？各自的定义" class="headerlink" title="什么是软件可靠性？可从哪几个指标度量？各自的定义"></a>什么是软件可靠性？可从哪几个指标度量？各自的定义</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><ul><li>在规定的一段时间和条件下，软件能维持其性能水平的能力有关的一组属性，可用成熟性、容错性、易恢复性三个基本子特性来度量。</li><li>成熟性度量：通过错误发现率DDP（Defect Detection Percentage）来表现。DDP越小，软件越成熟。<ul><li>DDP&#x3D;测试发现的错误数量&#x2F;已知的全部错误数量</li></ul></li><li>容错性度量，容错测试是一种对抗性的测试过程。在这种测试中，通过各种手段让软件强制性地发生故障，或将把应用程序或系统置于（模拟的）异常条件下，以产生故障，例如设备输入&#x2F;输出（I&#x2F;O）故障或无效的数据库指针和关键字等 </li><li>恢复性度量，恢复性的测试先设法（模拟）使系统崩溃、失效等，然后计算其系统和数据恢复的时间来做出易恢复性评估。</li></ul><h3 id="容错测试的要点？"><a href="#容错测试的要点？" class="headerlink" title="容错测试的要点？"></a>容错测试的要点？</h3><ul><li>容错测试是一种对抗性的测试过程。在这种测试中，通过各种手段让软件强制性地发生故障，或将把应用程序或系统置于（模拟的）异常条件下，以产生故障，例如设备输入&#x2F;输出（I&#x2F;O）故障或无效的数据库指针和关键字等</li></ul><h3 id="什么是A-B测试？有什么特点"><a href="#什么是A-B测试？有什么特点" class="headerlink" title="什么是A&#x2F;B测试？有什么特点"></a>什么是A&#x2F;B测试？有什么特点</h3><ul><li>A&#x2F;B测试（ABTest） 是将用户分成不同的组，同时在线试验产品的不同版本，通过用户反馈的真实数据来确定哪一个方案更好</li><li>先验性：采用流量分割与小流量测试的方式，先让线上部分小流量用户使用以验证设计，再根据数据反馈来推广到全流量，减少产品损失</li><li>并行性：同时运行两个或两个以上版本的试验完成对比分析，而且保证每个版本所处的环境一致的，避免流程周期长的问题，节省验证时间</li><li>科学性：基于统计的数据来做出决策，避免主观或经验的错误决策</li></ul><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><h3 id="软件本地化，国际化，全球化，相互关系"><a href="#软件本地化，国际化，全球化，相互关系" class="headerlink" title="软件本地化，国际化，全球化，相互关系"></a>软件本地化，国际化，全球化，相互关系</h3><h4 id="I18N国际化"><a href="#I18N国际化" class="headerlink" title="I18N国际化"></a>I18N国际化</h4><ul><li>支持Unicode字符集、双字节的字符；</li><li>分离程序代码和显示内容</li><li>消除Hard code</li><li>使用Header files 去定义经常被调用的代码段；</li><li>改善翻译文本尺寸，具有调整的灵活性</li><li>支持各个国家的键盘设置；</li><li>支持文字排序和大小写转换；</li><li>支持各个国家的度量衡，时区，货币单位格式等的设置；</li><li>国际化用户界面设计（自我定义）。</li></ul><h4 id="L10N本地化"><a href="#L10N本地化" class="headerlink" title="L10N本地化"></a>L10N本地化</h4><ul><li>翻译</li><li>地区文化、宗教</li><li>度量衡和时区等</li><li>软件用户界面（UI）</li><li>联机文档 (帮助文档和功能性的PDF文档) </li><li>热键设置</li></ul><h3 id="unicode与utf-x关系，特点"><a href="#unicode与utf-x关系，特点" class="headerlink" title="unicode与utf-x关系，特点"></a>unicode与utf-x关系，特点</h3><h4 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h4><ul><li>定义：Unicode是一种字符编码标准，旨在为全球所有语言的字符分配唯一的编码。它解决了不同语言和字符集之间的兼容性问题。</li><li>作用：Unicode定义了一个统一的字符集（字符的编号），但不规定具体的存储方式。</li><li>范围：Unicode字符集的范围是从U+0000到U+10FFFF，支持超过百万个字符。</li></ul><h4 id="UTF-x："><a href="#UTF-x：" class="headerlink" title="UTF-x："></a>UTF-x：</h4><ul><li>定义：UTF-x（Unicode Transformation Format）是Unicode的具体编码实现，用于将Unicode字符转换为二进制数据以便存储或传输。</li><li>关系：UTF-x是Unicode的实现方式，负责将Unicode字符集映射到实际的字节序列。</li><li>常见类型：<ul><li>UTF-8：一种变长编码，每个字符使用1到4个字节。</li><li>UTF-16：一种变长编码，每个字符使用2或4个字节。</li><li>UTF-32：一种固定长度编码，每个字符使用4个字节。</li></ul></li></ul><h3 id="软件本地化基本步骤"><a href="#软件本地化基本步骤" class="headerlink" title="软件本地化基本步骤"></a>软件本地化基本步骤</h3><ul><li>建立配置管理体系，跟踪目标语言各个版本的源代码</li><li>创造和维护术语表</li><li>源语言代码和资源文件分离、或提取需要本地化的文本</li><li>把分离或提取的文本、图片等翻译成目标语言</li><li>把翻译好的文本、图片重新检入目标语言的源代码版本</li><li>如果需要，编译目标语言的源代码</li><li>测试翻译后的软件，调整UI 以适应翻译后的文本</li><li>测试本地化后的软件，确保格式和内容都正确<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4.png" alt="软件本地化基本步骤"></li></ul><h3 id="本地化测试主要有哪些工作"><a href="#本地化测试主要有哪些工作" class="headerlink" title="本地化测试主要有哪些工作"></a>本地化测试主要有哪些工作</h3><ul><li>功能性测试，所有基本功能、安装、升级等测试；</li><li>翻译测试，包括语言完整性、术语准确性等的检查；</li><li>可用性测试，包括用户界面、度量衡和时区等；</li><li>兼容性调试，包括硬件兼容性、版本兼容性等测试；</li><li>文化、宗教、喜好等适用性测试</li><li>手册验证，包括联机文件、在线帮助、PDF文件等测试</li></ul><h3 id="软件本地化测试完整路线"><a href="#软件本地化测试完整路线" class="headerlink" title="软件本地化测试完整路线"></a>软件本地化测试完整路线</h3><h2 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h2><h3 id="自动化测试与测试自动化"><a href="#自动化测试与测试自动化" class="headerlink" title="自动化测试与测试自动化"></a>自动化测试与测试自动化</h3><ul><li>通过平台、系统或工具自动地完成测试的某类工作都可以归为测试自动化</li><li>自动化测试更侧重的测试用例或测试数据生成、测试执行和测试结果呈现等自动化</li></ul><h3 id="如何理解测试自动化"><a href="#如何理解测试自动化" class="headerlink" title="如何理解测试自动化"></a>如何理解测试自动化</h3><h3 id="测试自动化实现的原理，几种技术"><a href="#测试自动化实现的原理，几种技术" class="headerlink" title="测试自动化实现的原理，几种技术"></a>测试自动化实现的原理，几种技术</h3><h3 id="自动化测试的流程"><a href="#自动化测试的流程" class="headerlink" title="自动化测试的流程"></a>自动化测试的流程</h3><h3 id="几种脚本技术"><a href="#几种脚本技术" class="headerlink" title="几种脚本技术"></a>几种脚本技术</h3><h3 id="自动化功能测试基本构成"><a href="#自动化功能测试基本构成" class="headerlink" title="自动化功能测试基本构成"></a>自动化功能测试基本构成</h3><h3 id="TA框架的构成及各部分特点"><a href="#TA框架的构成及各部分特点" class="headerlink" title="TA框架的构成及各部分特点"></a>TA框架的构成及各部分特点</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TA%E6%A1%86%E6%9E%B6%E7%9A%84%E6%9E%84%E6%88%90.png" alt="TA框架的构成"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>软件测试复习大纲</title>
    <link href="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/"/>
    <url>/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/</url>
    
    <content type="html"><![CDATA[<h1 id="软件测试复习大纲"><a href="#软件测试复习大纲" class="headerlink" title="软件测试复习大纲"></a>软件测试复习大纲</h1><h2 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h2><h3 id="软件测试学科的发展"><a href="#软件测试学科的发展" class="headerlink" title="&#x2F;&#x2F;软件测试学科的发展"></a>&#x2F;&#x2F;软件测试学科的发展</h3><h4 id="4个导向"><a href="#4个导向" class="headerlink" title="4个导向"></a>4个导向</h4><ul><li>1957年之前，调试为主 (Debugging Oriented)</li><li>1957～1978年，以功能验证为导向，测试是证明软件是正确的（正向思维）。</li><li>1978～1983年，以破坏性检测为导向，测试是为了找到软件中的错误（逆向思维）。</li><li>1983～1987年，以质量评估为导向，测试是提供产品的评估和质量度量。</li><li>1988年起，以缺陷预防为导向，测试是为了展示软件符合设计要求，发现缺陷、预防缺陷。</li></ul><h4 id="不同阶段"><a href="#不同阶段" class="headerlink" title="不同阶段"></a>不同阶段</h4><p>初级阶段（1957～1971）测试通常被认为是对产品进行事后检验 ，缺乏有效的测试方法<br>发展阶段（1972～1982），1972年第一次关于软件测试的正式会议，促进了软件测试的发展<br>成熟阶段（1983到现在），国际标准Std 829-1983 ，形成一门独立的学科和专业，成为软件工程学科中的一个重要组成部分 </p><h3 id="正向测试与反向测试的定义，关系"><a href="#正向测试与反向测试的定义，关系" class="headerlink" title="正向测试与反向测试的定义，关系"></a>正向测试与反向测试的定义，关系</h3><h4 id="正向思维"><a href="#正向思维" class="headerlink" title="正向思维"></a>正向思维</h4><ul><li>测试是为了验证软件是否符合用户需求，即验证软件产品是否能正常工作</li></ul><h4 id="反向思维"><a href="#反向思维" class="headerlink" title="反向思维"></a>反向思维</h4><ul><li>测试是为了证明程序有错，而不是证明程序无错误</li></ul><h3 id="从从经济视角认知软件测试"><a href="#从从经济视角认知软件测试" class="headerlink" title="从从经济视角认知软件测试"></a>从从经济视角认知软件测试</h3><ul><li>测试的经济观点就是以最小的代价获得最高的软件产品质量。</li></ul><h3 id="SQA，与软件测试关系"><a href="#SQA，与软件测试关系" class="headerlink" title="SQA，与软件测试关系"></a>SQA，与软件测试关系</h3><h4 id="SQA"><a href="#SQA" class="headerlink" title="SQA"></a>SQA</h4><ul><li>软件质量保证（Software Quality Assurance，SQA）活动是通过对软件产品有计划的进行评审和审计来验证软件是否合乎标准的系统工程，通过协调、审查和跟踪以获取有用信息，形成分析结果以指导软件过程。</li></ul><h4 id="关系"><a href="#关系" class="headerlink" title="关系"></a>关系</h4><ul><li>SQA指导、监督软件测试的计划和执行，督促测试工作的结果客观、准确和有效，并协助测试流程的改进。</li><li>软件测试是SQA重要手段之一，为SQA提供所需的数据，作为质量评价的客观依据。</li><li>SQA是一项管理工作，侧重于对流程的评审和监控</li><li>测试是一项技术性的工作，侧重对产品进行评估和验证</li></ul><h2 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h2><h3 id="缺陷定义，现象，判定准则"><a href="#缺陷定义，现象，判定准则" class="headerlink" title="缺陷定义，现象，判定准则"></a>缺陷定义，现象，判定准则</h3><h4 id="软件缺陷"><a href="#软件缺陷" class="headerlink" title="软件缺陷"></a>软件缺陷</h4><ul><li>从产品内部看，软件缺陷是软件产品开发或维护过程中所存在的错误、毛病等各种问题；</li><li>从外部看，软件缺陷是系统所需要实现的某种功能的失效或违背。</li></ul><h4 id="软件缺陷的现象"><a href="#软件缺陷的现象" class="headerlink" title="软件缺陷的现象"></a>软件缺陷的现象</h4><ul><li>功能、特性没有实现或部分实现</li><li>设计不合理，存在缺陷</li><li>实际结果和预期结果不一致</li><li>运行出错，包括运行中断、系统崩溃、界面混乱</li><li>数据结果不正确、精度不够</li><li>用户不能接受的其他问题，如存取时间过长、界面不美观</li></ul><h4 id="判定准则"><a href="#判定准则" class="headerlink" title="判定准则"></a>判定准则</h4><ul><li>将被测试系统的实际输出与所期望的输出进行比较，从而判断是否有差异，即是否为缺陷</li></ul><h3 id="软件缺陷产生的原因有哪？"><a href="#软件缺陷产生的原因有哪？" class="headerlink" title="软件缺陷产生的原因有哪？"></a>软件缺陷产生的原因有哪？</h3><h4 id="技术问题"><a href="#技术问题" class="headerlink" title="技术问题"></a>技术问题</h4><ul><li>算法错误、计算和精度问题</li><li>接口参数传递不匹配</li></ul><h4 id="团队工作"><a href="#团队工作" class="headerlink" title="团队工作"></a>团队工作</h4><ul><li>沟通不充分，误解</li></ul><h4 id="软件本身"><a href="#软件本身" class="headerlink" title="软件本身"></a>软件本身</h4><ul><li>文档错误、用户使用场合(user scenario)，</li><li>时间上不协调、或不一致性所带来的问题</li><li>系统的自我恢复或数据的异地备份、灾难性恢复等问题</li></ul><h3 id="产品质量的内容，内部，外部，使用质量"><a href="#产品质量的内容，内部，外部，使用质量" class="headerlink" title="产品质量的内容，内部，外部，使用质量"></a>产品质量的内容，内部，外部，使用质量</h3><h4 id="产品质量"><a href="#产品质量" class="headerlink" title="产品质量"></a>产品质量</h4><ul><li>是人们实践产物的属性和行为，是可以认识，可以科学地描述的。并且可以通过一些方法和人类活动，来改进质量</li></ul><h4 id="内部质量→外部质量→使用质量"><a href="#内部质量→外部质量→使用质量" class="headerlink" title="内部质量→外部质量→使用质量"></a>内部质量→外部质量→使用质量</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E5%86%85%E5%A4%96%E4%BD%BF%E7%94%A8%E8%B4%A8%E9%87%8F.png" alt="内外使用质量"></p><h3 id="如何理解软件规格说明书缺陷"><a href="#如何理解软件规格说明书缺陷" class="headerlink" title="如何理解软件规格说明书缺陷"></a>如何理解软件规格说明书缺陷</h3><h3 id="verification-validation"><a href="#verification-validation" class="headerlink" title="verification,validation"></a>verification,validation</h3><ul><li>软件测试是由“验证（Verification）”和“有效性确认（Validation）”活动构成的整体</li><li>Verification：Are we building the product right？是否正确地构造了软件？即是否正确地做事，验证开发过程是否遵守已定义好的内容。验证产品满足规格设计说明书的一致性</li><li>Validation： Are we building the right product? 是否构造了正是用户所需要的软件？即是否正在做正确的事。验证产品所实现的功能是否满足用户的需求</li></ul><h3 id="软件测试不同层次测试的对象和任务"><a href="#软件测试不同层次测试的对象和任务" class="headerlink" title="软件测试不同层次测试的对象和任务"></a>软件测试不同层次测试的对象和任务</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E4%B8%8D%E5%90%8C%E5%B1%82%E6%AC%A1%E4%BB%BB%E5%8A%A1.png" alt="不同层次任务"></p><h4 id="单元测试"><a href="#单元测试" class="headerlink" title="单元测试"></a>单元测试</h4><ul><li>单元测试针对程序系统中的最小单元—模块或组件进行测试，一般和编码同步进行。主要采用白盒测试方法，从程序的内部结构出发设计测试用例，检查程序模块或组件的已实现的功能与定义的功能是否一致、以及编码中是否存在错误。通常要编写驱动模块和桩模块</li></ul><h4 id="集成测试"><a href="#集成测试" class="headerlink" title="集成测试"></a>集成测试</h4><ul><li>集成测试，也称联调，在单元测试的基础上，将模块按照设计要求组装起来同时进行测试，主要目标是发现与接口有关的模块之间问题。现在提倡持续集成测试</li></ul><h4 id="系统测试"><a href="#系统测试" class="headerlink" title="系统测试"></a>系统测试</h4><ul><li><p>系统功能测试</p><ul><li>一般在完成集成测试后进行系统功能测试，而且基于产品功能说明书，针对产品所实现的功能，从用户角度来进行功能验证，以确认每个功能是否都能正常使用</li></ul></li><li><p>系统非功能测试</p><ul><li>系统非功能性测试是将软件放在整个计算机环境下，包括软硬件平台、某些支持软件和数据等，在实际运行环境下验证系统的非功能性，</li></ul></li></ul><h4 id="验收测试"><a href="#验收测试" class="headerlink" title="验收测试"></a>验收测试</h4><ul><li>验收测试的目的是向未来的用户表明系统能够像预定要求那样工作，验证软件的功能和性能如同用户所合理期待的那样</li></ul><h3 id="静态测试的内容包括什么？开展相关活动时采用的形式有哪些？"><a href="#静态测试的内容包括什么？开展相关活动时采用的形式有哪些？" class="headerlink" title="静态测试的内容包括什么？开展相关活动时采用的形式有哪些？"></a>静态测试的内容包括什么？开展相关活动时采用的形式有哪些？</h3><ul><li>静态测试包括对软件产品的需求和设计文档、代码的评审（技术评审、文档评审等），以及对代码的静态分析等；</li><li>管理评审、流程评审不属于静态测试，而是属于质量保证（QA）；</li><li>评审的主要形式：互为评审 (Peer review)、走查 (walk-through)、会议评审 (Inspection)；</li><li>代码的静态分析主要采用工具进行，但人工的代码评审也不可或缺。</li></ul><h3 id="测试工作的流程"><a href="#测试工作的流程" class="headerlink" title="测试工作的流程"></a>测试工作的流程</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E6%B5%8B%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png" alt="软测工作流程"></p><h3 id="软件测试的工作范畴"><a href="#软件测试的工作范畴" class="headerlink" title="软件测试的工作范畴"></a>软件测试的工作范畴</h3><ul><li>测试需求分析、测试策略指定、测试计划、测试设计、测试执行、测试结果和过程评估</li></ul><h4 id="测试需求分析"><a href="#测试需求分析" class="headerlink" title="测试需求分析"></a>测试需求分析</h4><ul><li>明确测试范围，了解哪些功能点要测试、哪些功能点不需要测试；</li><li>知道哪些测试目标优先级高、哪些目标优先级低；</li><li>要完成哪些相应的测试任务才能确保目标的实现。</li></ul><h4 id="测试策略指定"><a href="#测试策略指定" class="headerlink" title="测试策略指定"></a>测试策略指定</h4><ul><li>基于下列这些因素的考虑做出决定：<ul><li>测试方式，包括手工方式与自动化方式、静态方式与动态方式等的选择与平衡，探索式测试或基于脚本的测试、自己团队测试还是众测、外包等平衡；</li><li>测试方法，包括黑盒测试还是白盒测试方法、基于数据流还是基于控制流的方法、完全组合测试方法还是组合优化测试方法等平衡；</li><li>测试过程，先测什么、后测试什么，对测试阶段的不同划分等。</li></ul></li></ul><h4 id="测试计划"><a href="#测试计划" class="headerlink" title="测试计划"></a>测试计划</h4><h4 id="测试设计"><a href="#测试设计" class="headerlink" title="测试设计"></a>测试设计</h4><ul><li>是解决“如何测”的问题，可以分为测试总体设计和测试详细设计:<ul><li>测试总体设计则主要指测试方案的设计、测试结构的设计</li><li>测试详细设计主要是指测试用例的设计。</li></ul></li></ul><h4 id="测试执行"><a href="#测试执行" class="headerlink" title="测试执行"></a>测试执行</h4><ul><li>手工执行：基于详细设计的测试用例来完成测试，也可以在没有测试用例的情况下进行的探索式测试。</li><li>自动化执行：指采用测试工具来完成，一般都需要开发自动化测试脚本，然后工具执行脚本，在后续“单元测试与集成测试、系统测试和自动化测试框架”等各章会进行详细讨论。</li></ul><h4 id="测试结果和过程评估"><a href="#测试结果和过程评估" class="headerlink" title="测试结果和过程评估"></a>测试结果和过程评估</h4><ul><li>测试结果评估：对测试结果进行分析，如分析测试覆盖率，以了解测试是否充分；也可以基于缺陷的趋势分析和分布分析，了解缺陷是否已收敛，以及基于缺陷来评估当前被测试的版本的质量 。</li><li>测试过程评估，结合测试计划来进行评审，相当于把计划的测试活动和实际执行的活动进行比较，了解测试计划执行的情况和效果 。</li></ul><h2 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h2><h3 id="等价类"><a href="#等价类" class="headerlink" title="等价类"></a>等价类</h3><h3 id="边界值法"><a href="#边界值法" class="headerlink" title="边界值法"></a>边界值法</h3><h3 id="决策表，因果图法"><a href="#决策表，因果图法" class="headerlink" title="决策表，因果图法"></a>决策表，因果图法</h3><h3 id="各种逻辑覆盖法"><a href="#各种逻辑覆盖法" class="headerlink" title="各种逻辑覆盖法"></a>各种逻辑覆盖法</h3><h3 id="路径覆盖法"><a href="#路径覆盖法" class="headerlink" title="路径覆盖法"></a>路径覆盖法</h3><h3 id="功能图法，EFMS"><a href="#功能图法，EFMS" class="headerlink" title="功能图法，EFMS"></a>功能图法，EFMS</h3><h2 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h2><h3 id="测试左移和右移，贯穿全生命周期的测试思想"><a href="#测试左移和右移，贯穿全生命周期的测试思想" class="headerlink" title="测试左移和右移，贯穿全生命周期的测试思想"></a>测试左移和右移，贯穿全生命周期的测试思想</h3><h4 id="测试左移和右移"><a href="#测试左移和右移" class="headerlink" title="测试左移和右移"></a>测试左移和右移</h4><ul><li>测试左移：不仅让开发人员做更多的测试，而且需要做需求评审、设计评审，以及第1章介绍的验收测试驱动开发（ATDD）；</li><li>测试右移：是在线测试（Test in Production，TiP），包括在线性能监控与分析、A&#x2F;B测试和日志分析等，可以和现在流行的DevOp联系起来。</li></ul><h4 id="软件测试生命周期"><a href="#软件测试生命周期" class="headerlink" title="软件测试生命周期"></a>软件测试生命周期</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F.png" alt="软件测试生命周期"></p><h3 id="w模型"><a href="#w模型" class="headerlink" title="w模型"></a>w模型</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/W%E6%A8%A1%E5%9E%8B.png" alt="W模型"></p><ul><li>测试过程和开发是同时开始同时结束的，两者是同步关系</li><li>测试过程是对开发过程中的阶段性成果和最终的产品进行验证的过程，两者相互依赖<ul><li>前期测试更多依赖开发，后期反过来</li></ul></li></ul><h3 id="TMAP定义，几个阶段，模型基石及关系"><a href="#TMAP定义，几个阶段，模型基石及关系" class="headerlink" title="TMAP定义，几个阶段，模型基石及关系"></a>TMAP定义，几个阶段，模型基石及关系</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><ul><li>TMap (Test Management Approach，测试管理方法)是一种结构化的、基于风险策略的测试方法体系, 目的能更早地发现缺陷，以最小的成本、有效地、彻底地完成测试任务，以减少软件发布后的支持成本。</li><li>TMap所定义的测试生命周期由计划和控制、准备、说明、执行和完成等阶段组成</li></ul><h4 id="阶段"><a href="#阶段" class="headerlink" title="阶段"></a>阶段</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TMap%E9%98%B6%E6%AE%B5.png" alt="TMap阶段"></p><h4 id="基石"><a href="#基石" class="headerlink" title="基石"></a>基石</h4><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TMAP%E5%9F%BA%E7%9F%B3.png" alt="TMAP基石"></p><h3 id="SBTM基本要素，结果，原理"><a href="#SBTM基本要素，结果，原理" class="headerlink" title="SBTM基本要素，结果，原理"></a>SBTM基本要素，结果，原理</h3><h4 id="要素"><a href="#要素" class="headerlink" title="要素"></a>要素</h4><ul><li>Session(会话)是一段不受打扰的测试时间（通常是90分钟），是测试管理的最小单元。<ul><li>每个session关联一个特定的、目标明确的测试任务（mission）</li></ul></li><li>Charter (章程，即测试指导) ：对每个session如何执行进行简要的描述，相当于每个session需要一个简要的计划（提纲）<ul><li>一系列Session相互支持，有机地组合在一起，周密地测试了整个产品。</li></ul></li><li>A session sheet (测试报告) ： 相当于测试报告，供第三方（如测试经理、ScrumMaster等）进行检查的材料。它最好能被工具扫描、解析和合成。</li><li>Debriefing（听取口头报告）：口头汇报，更准确地说，是测试人和其lead&#x2F;Manager之间的对话。</li></ul><h4 id="结果：Session-Sheet"><a href="#结果：Session-Sheet" class="headerlink" title="结果：Session Sheet"></a>结果：Session Sheet</h4><ul><li>Session charter (包含任务陈述、测试范围等)</li><li>Tester name(s)&#x2F;测试执行者</li><li>Task breakdown :TBS（Test&#x2F;Bug&#x2F;Setup）度量（耗时），这些数据配合简报有助于估算测试速度、评估测试效率</li><li>测试数据、数据文件：为测试数据复用提供了基础</li><li>Note&#x2F; 测试笔记：测试过程中随时记录的有价值的信息，叙述了测试故事：为什么测试，如何测，为什么这样的测试已足够好</li><li>Issues&#x2F; 问题&#x2F;风险：测试过程中的问题和疑惑（未来测试的参考资料）</li><li>缺陷：测试的直接产出</li></ul><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><ul><li>通过结构化的测试会话来组织和管理探索性测试活动，以提高测试效率和质量。</li></ul><h3 id="测试几个学派的特点"><a href="#测试几个学派的特点" class="headerlink" title="测试几个学派的特点"></a>测试几个学派的特点</h3><ul><li>分析流派：认为测试是严格的和技术性的，在学术界有许多支持者</li><li>标准流派：将测试视为衡量进度的一种方法，强调成本和可重复的标准</li><li>质量流派：强调过程规范性，监督开发人员并充当质量的看门人</li><li>上下文驱动流派：强调人的价值，寻找涉众关心的bug</li><li>敏捷流派：强调自动化测试，使用测试来快速验证开发是完整的</li></ul><h3 id="TMM，TPI，CTP-STEP定义，特点"><a href="#TMM，TPI，CTP-STEP定义，特点" class="headerlink" title="TMM，TPI，CTP, STEP定义，特点"></a>TMM，TPI，CTP, STEP定义，特点</h3><h4 id="TMMi-Testing-Maturity-Model-integration"><a href="#TMMi-Testing-Maturity-Model-integration" class="headerlink" title="TMMi(Testing Maturity Model integration)"></a>TMMi(Testing Maturity Model integration)</h4><ul><li>测试成熟度模型集成</li><li>过程能力描述了遵循一个软件测试过程可能达到的预期结果的范围。TMMi的建立，得益于以下3点：<ul><li>充分吸收、CMM&#x2F;CMMi的精华；</li><li>基于历史演化的测试过程；</li><li>业界的最佳实践。</li></ul></li><li>5个别级的一系列测试能力成熟度的定义，每个级别的组成包括到期目标、到期子目标活动、任务和职责等。</li><li>一套评价模型，包括一个成熟度问卷、评估程序和团队选拔培训指南。 </li><li>2-5级别内容<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TMMi.png" alt="TMMi"></li></ul><h4 id="TPI-Test-Process-Improvement"><a href="#TPI-Test-Process-Improvement" class="headerlink" title="TPI(Test Process Improvement)"></a>TPI(Test Process Improvement)</h4><h5 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h5><ul><li>是基于连续性表示法的测试过程改进的参考模型，是在软件控制、测试知识以及过往经验的基础上开发出来的<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TPI.png" alt="TPI"></li><li>20个关键域<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TPI%E5%85%B3%E9%94%AE%E5%9F%9F.png" alt="TPI关键域"></li></ul><h5 id="TPI级别"><a href="#TPI级别" class="headerlink" title="TPI级别"></a>TPI级别</h5><ul><li>为了了解过程在每个关键域所处的状态，即对关键域的评估结果，通过级别是来体现。模型提供了4个级别，由A到D，A是最低级。根据测试过程的可视性改善、测试效率的提高、或成本的降低以及质量的提高，级别会有所上升。</li></ul><h5 id="TPI检查点和建议"><a href="#TPI检查点和建议" class="headerlink" title="TPI检查点和建议"></a>TPI检查点和建议</h5><ul><li>为了能客观地决定各个关键域的级别，TPI模型提供了一种度量工具——检查点。每个级别都有若干个检查点，测试过程只有在满足了这些检查点的要求之后，才意味着它达到了特定的级别</li><li>检查点帮助我们发现测试过程中的问题，而建议会帮助我们解决问题，最终改进测试过程。建议不仅包含对如何达到下个级别的指导，而且还包括一些具体的操作技巧、注意事项等。</li></ul><h5 id="TPI-NEXT"><a href="#TPI-NEXT" class="headerlink" title="TPI NEXT"></a>TPI NEXT</h5><ul><li>商业驱动作为测试过程提升的基础</li><li>为改进目标和度量设定优先级</li><li>确保商业可以引导和控制改进的过程</li></ul><h4 id="CTP-Critical-Test-Process-关键测试过程"><a href="#CTP-Critical-Test-Process-关键测试过程" class="headerlink" title="CTP(Critical Test Process)关键测试过程"></a>CTP(Critical Test Process)关键测试过程</h4><h5 id="定义和内容"><a href="#定义和内容" class="headerlink" title="定义和内容"></a>定义和内容</h5><ul><li>内容参考模型、上下文相关的方法，并能对模型进行裁剪</li><li>使用CTP的过程改进，始于对现有测试过程的评估，通过评估以识别过程的强弱，并结合组织的需要提供改进的意见</li><li>计划（Plan）、准备（Prepare）、执行（Perform）和完善 (Perfect)；计划和完善主要是管理工作，准备和执行是实践工作</li></ul><h5 id="CTP的12个关键过程"><a href="#CTP的12个关键过程" class="headerlink" title="CTP的12个关键过程"></a>CTP的12个关键过程</h5><ul><li>测试</li><li>建立上下文关系和测试环境</li><li>质量风险评估</li><li>测试估算</li><li>测试计划</li><li>测试团队开发</li><li>测试（管理）系统开发</li><li>测试发布管理</li><li>测试执行</li><li>缺陷报告</li><li>测试结果报告</li><li>变更管理</li></ul><h4 id="STEP-Systematic-Test-and-Evaluation-Process，系统化测试和评估过程"><a href="#STEP-Systematic-Test-and-Evaluation-Process，系统化测试和评估过程" class="headerlink" title="STEP(Systematic Test and Evaluation Process，系统化测试和评估过程)"></a>STEP(Systematic Test and Evaluation Process，系统化测试和评估过程)</h4><h5 id="内容-1"><a href="#内容-1" class="headerlink" title="内容"></a>内容</h5><ul><li>是一个内容参考模型</li><li>基于需求的测试策略</li><li>在生命周期初始开始进行测试</li><li>测试用作需求和使用模型 </li><li>由测试件设计导出软件设计（测试驱动开发）</li><li>及早发现缺陷或完全的缺陷预防</li><li>对缺陷进行系统分析</li><li>测试人员和开发人员一起工作</li></ul><h5 id="比较"><a href="#比较" class="headerlink" title="比较"></a>比较</h5><ul><li>STEP与CTP比较类似，而不像TMMI和TPI，并不要求改进需要遵循特定的顺序。</li><li>某些情况下，STEP评估模型可以与TPI成熟度模型结合起来使用</li></ul><h2 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h2><h3 id="代码评审的形式及各自特点"><a href="#代码评审的形式及各自特点" class="headerlink" title="代码评审的形式及各自特点"></a>代码评审的形式及各自特点</h3><h4 id="互查"><a href="#互查" class="headerlink" title="互查"></a>互查</h4><ul><li>自由，不正式，容易开展，开发人员互相审查彼此编码</li></ul><h4 id="走查"><a href="#走查" class="headerlink" title="走查"></a>走查</h4><ul><li>相对正式，采用讲解、讨论和模拟运行方式进行查找错误的活动</li></ul><h4 id="会议评审"><a href="#会议评审" class="headerlink" title="会议评审"></a>会议评审</h4><ul><li>以会议的形式，制定目标，流程和规则</li></ul><h3 id="单元测试定义，作用，目标"><a href="#单元测试定义，作用，目标" class="headerlink" title="单元测试定义，作用，目标"></a>单元测试定义，作用，目标</h3><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><ul><li>单元测试是对软件基本组成单元（如函数、类的方法等）进行的测试。</li></ul><h4 id="作用"><a href="#作用" class="headerlink" title="作用"></a>作用</h4><ul><li>单元质量是系统质量的基石，单元测试可以比系统测试测得更彻底</li></ul><h4 id="单元测试的目标"><a href="#单元测试的目标" class="headerlink" title="单元测试的目标"></a>单元测试的目标</h4><ul><li>单元模块被正确编码</li><li>信息能否正确地流入和流出单元；</li><li>在单元工作过程中，其内部数据能否保持其完整性，包括内部数据的形式、内容及相互关系不发生错误，也包括全局变量在单元中的处理和影响。 </li><li>在为限制数据加工而设置的边界处，能否正确工作。</li><li>单元的运行能否做到满足特定的逻辑覆盖。 </li><li>单元中发生了错误，其中的出错处理措施是否有效。</li></ul><blockquote><p>单元模块被正确实现（主要指编码），包括功能、性能、安全性等，但一般主要介绍单元功能测试。<br>（参数）输入是否正确传递和得到保护（容错），输出是否正常<br>内部数据能否保持其完整性，包括变量的正确定义与引用、内存及时释放、全局变量的正确处理和影响最低<br>代码行、分支覆盖或MC&#x2F;DC达到要求，如高于80%或95%</p></blockquote><h3 id="桩程序，驱动程序"><a href="#桩程序，驱动程序" class="headerlink" title="桩程序，驱动程序"></a>桩程序，驱动程序</h3><ul><li>驱动程序（Driver）也称作驱动模块，用以模拟被测模块的上级模块，能够调用被测模块。在测试过程中，驱动模块接收测试数据，调用被测模块并把相关的数据传送给被测模块。</li></ul><blockquote><p>简单说就是你负责测试的模块没有main()方法入口，所以需要写一个带main的方法来调用你的模块或方法。这个就是驱动测试</p></blockquote><ul><li>桩程序（Stub），也称桩模块，用以模拟被测模块工作过程中所调用的下层模块。桩模块由被测模块调用，它们一般只进行很少的数据处理。<blockquote><p>这里解释一下桩，桩是指用来代替关联代码或者未实现的代码。如果函数B用B1来代替，那么，B称为原函数，B1称为桩函数。打桩就是编写或生成桩代码。</p></blockquote></li></ul><h3 id="集成测试的概念"><a href="#集成测试的概念" class="headerlink" title="集成测试的概念"></a>集成测试的概念</h3><ul><li>集成测试是将软件集成起来，对模块之间的接口进行测试。 </li><li>顾名思义，集成测试是将软件集成起来后进行测试。集成测试又叫子系统测试、组装测试、部件测试等。<ul><li>模块内的集成，主要是测试模块内各个接口间的交互集成关系；</li><li>子系统内的集成，测试子系统内各个模块间的交互关系；</li><li>系统内的集成，测试系统内各个子系统和模块间的集成关系。</li></ul></li><li>集成测试的测试依据；概要设计书，详细设计说明书，主要是概要设计说明书</li></ul><h3 id="单一系统的集成测试的集成模式及优缺点"><a href="#单一系统的集成测试的集成模式及优缺点" class="headerlink" title="单一系统的集成测试的集成模式及优缺点"></a>单一系统的集成测试的集成模式及优缺点</h3><h4 id="自顶向下"><a href="#自顶向下" class="headerlink" title="自顶向下"></a>自顶向下</h4><ul><li>定义：从系统的顶层模块开始，逐步向下集成和测试。</li><li>优点：<ul><li>测试早期即可验证系统的主要控制逻辑。</li><li>测试驱动程序较少，减少开发工作量。</li></ul></li><li>缺点：<ul><li>需要大量桩程序来模拟底层模块。</li><li>底层模块的测试可能被延迟。</li></ul></li></ul><h4 id="自底向上"><a href="#自底向上" class="headerlink" title="自底向上"></a>自底向上</h4><ul><li>定义：从系统的底层模块开始，逐步向上集成和测试。</li><li>优点：<ul><li>底层模块的测试可以尽早完成。</li><li>桩程序需求较少。</li></ul></li><li>缺点：<ul><li>需要开发大量驱动程序来调用底层模块。</li><li>系统的整体功能验证可能被延迟。</li></ul></li></ul><h4 id="混合策略"><a href="#混合策略" class="headerlink" title="混合策略"></a>混合策略</h4><ul><li>定义：同时从顶层和底层开始集成，最后在中间层完成集成。</li><li>优点：<ul><li>顶层和底层模块可以同时测试，节省时间。</li><li>减少桩程序和驱动程序的开发工作量。</li></ul></li><li>缺点：<ul><li>需要协调顶层和底层模块的集成进度。</li><li>中间层模块的测试可能较复杂。</li></ul></li></ul><h3 id="微服务特点，测试目标？测试基本步骤？"><a href="#微服务特点，测试目标？测试基本步骤？" class="headerlink" title="&#x2F;&#x2F;微服务特点，测试目标？测试基本步骤？"></a>&#x2F;&#x2F;微服务特点，测试目标？测试基本步骤？</h3><h4 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h4><ul><li>模块化</li><li>独立部署</li><li>分布式架构</li></ul><h4 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h4><ul><li>验证服务功能</li><li>接口测试</li><li>性能测试</li><li>容错测试</li><li>集成测试</li><li>安全性测试</li><li>兼容性测试</li></ul><h3 id="集成测试的目标"><a href="#集成测试的目标" class="headerlink" title="集成测试的目标"></a>集成测试的目标</h3><ul><li>集成测试，也叫组装测试或联合测试。在单元测试的基础上，将所有模块按照设计要求（如根据结构图〕组装成为子系统或系统，进行集成测试。实践表明，一些模块虽然能够单独地工作，但并不能保证连接起来也能正常的工作。程序在某些局部反映不出来的问题，在全局上很可能暴露出来，影响功能的实现。</li><li>目标在于检验与软件设计相关的程序结构问题。如数据穿过接口时可能丢失；一个模块与另一个模块可能有由于疏忽的问题而造成有害影响； 把子功能组合起来可能不产生预期的主功能；个别看起来是可以接受的误差可能积累到不能接受的程度；全程数据结构可能有错误等。</li></ul><h2 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h2><h3 id="功能测试的基本思路"><a href="#功能测试的基本思路" class="headerlink" title="功能测试的基本思路"></a>功能测试的基本思路</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E5%8A%9F%E8%83%BD%E6%B5%8B%E8%AF%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%80%9D%E8%B7%AF.png" alt="功能测试的基本思路"></p><h3 id="回归测试需要解决的问题。回归测试的策略和方法"><a href="#回归测试需要解决的问题。回归测试的策略和方法" class="headerlink" title="回归测试需要解决的问题。回归测试的策略和方法"></a>回归测试需要解决的问题。回归测试的策略和方法</h3><h4 id="解决的问题"><a href="#解决的问题" class="headerlink" title="解决的问题"></a>解决的问题</h4><ul><li>回归缺陷：原来正常工作的功能，没有发生需求变化，而由于受其它改动影响而产生的问题。</li><li>回归测试就是为了发现回归缺陷而进行的测试。如果没有回归测试，产品就带着回归缺陷被发布出去了，造成严重后果。</li></ul><h4 id="回归测试策略"><a href="#回归测试策略" class="headerlink" title="回归测试策略"></a>回归测试策略</h4><ul><li>再测试全部用例</li><li>基于风险选择测试</li><li>基于操作剖面选择测试</li><li>再测试修改的部分</li></ul><h2 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h2><h3 id="性能测试目标"><a href="#性能测试目标" class="headerlink" title="性能测试目标"></a>性能测试目标</h3><ul><li>获取系统性能某些指标数据</li><li>为了验证系统是否达到用户提出的性能指标</li><li>发现系统中存在的性能瓶颈，优化系统的性能</li></ul><h3 id="什么是性能测试？"><a href="#什么是性能测试？" class="headerlink" title="什么是性能测试？"></a>什么是性能测试？</h3><ul><li>性能测试（performance test）就是为了发现系统性能问题或获取系统性能相关指标而进行的测试。一般在真实环境、特定负载条件下，通过工具模拟实际软件系统的运行及其操作，同时监控性能各项指标，最后对测试结果进行分析以确定系统的性能状况。</li></ul><h3 id="系统性能表现"><a href="#系统性能表现" class="headerlink" title="系统性能表现"></a>系统性能表现</h3><h4 id="外部表现"><a href="#外部表现" class="headerlink" title="外部表现"></a>外部表现</h4><ul><li>启动系统、打开页面越来越慢</li><li>查询数据，很长时间才显示列表</li><li>网络下载速度很低，如5k&#x2F;s</li></ul><h4 id="内因"><a href="#内因" class="headerlink" title="内因"></a>内因</h4><ul><li>资源耗尽,如CPU使用率达到100%</li><li>资源泄漏,如内存泄漏 ，最终会导致资源耗尽</li><li>资源瓶颈,如线程、GDI、DB连接等资源变得稀缺</li></ul><h3 id="按照测试目的分，性能测试类型"><a href="#按照测试目的分，性能测试类型" class="headerlink" title="按照测试目的分，性能测试类型"></a>按照测试目的分，性能测试类型</h3><ul><li>性能基准测试：在系统标准配置下获得有关的性能指标数据，作为将来性能改进的基线(Baseline)</li><li>性能验证测试：验证系统是否达到事先已定义的系统性能指标、能否满足系统的性能需求</li><li>性能规划测试：在多种特定的环境下，获得不同配置的系统性能指标，从而决定系统部署的软硬件配置选型</li><li>容量测试可以看作性能的测试一种，因为系统的容量可以看作是系统性能指标之一</li><li>压力测试 (Stress test) ：模拟实际应用的软硬件环境及用户使用过程的高负载、异常负载、超长时间运行，从而加速系统崩溃，以检查程序对异常情况的抵抗能力，找出性能瓶颈、不稳定等问题。</li><li>渗入测试（soak test），通过长时间运行，使问题逐渐渗透出来，从而发现内存泄漏、垃圾回收（GC）或系统的其他问题，以检验系统的健壮性</li><li>峰谷测试（peak-rest test），采用高低突变加载方式进行，先加载到高水平的负载，然后急剧降低负载，稍微平息一段时间，再加载到高水平的负载，重复这样过程，容易发现问题的蛛丝马迹，最终找到问题的根源</li></ul><h3 id="什么是压力测试"><a href="#什么是压力测试" class="headerlink" title="什么是压力测试"></a>什么是压力测试</h3><ul><li>模拟实际应用的软硬件环境及用户使用过程的高负载、异常负载、超长时间运行，从而加速系统崩溃，以检查程序对异常情况的抵抗能力，找出性能瓶颈、不稳定等问题。</li></ul><h3 id="性能测试的基本过程"><a href="#性能测试的基本过程" class="headerlink" title="性能测试的基本过程"></a>性能测试的基本过程</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%BF%87%E7%A8%8B.png" alt="性能测试的基本过程"></p><h3 id="什么是安全性测试"><a href="#什么是安全性测试" class="headerlink" title="什么是安全性测试"></a>什么是安全性测试</h3><ul><li>旨在评估系统的安全性，确保系统能够保护数据和资源免受未经授权的访问、使用、泄露、破坏或篡改。安全性测试的目标是发现系统中的安全漏洞，并验证安全机制的有效性。</li></ul><h3 id="渗透测试实施策略"><a href="#渗透测试实施策略" class="headerlink" title="渗透测试实施策略"></a>渗透测试实施策略</h3><ul><li>全程监控：采用类似wireshark的嗅探软件进行全程抓包嗅探</li><li>择要监控：对扫描过程不进行录制，仅仅在数据分析后，准备发起渗透前才开启软件进行嗅探</li><li>主机监控：仅监控受测主机的存活状态</li><li>指定攻击源：多方监控指定源（某主机）进程、网络连接、数据传输等</li><li>对关键系统，可以采用对目标的副本进行渗透测试</li></ul><h3 id="软件安全性测试有哪两种？有什么关系和区别？"><a href="#软件安全性测试有哪两种？有什么关系和区别？" class="headerlink" title="软件安全性测试有哪两种？有什么关系和区别？"></a>软件安全性测试有哪两种？有什么关系和区别？</h3><ul><li>安全功能测试 (Security Functional Testing)：数据机密性、完整性、可用性、不可否认性、身份认证、授权、访问控制、审计跟踪、委托、隐私保护、安全管理等</li><li>安全漏洞测试 (Security Vulnerability Testing)：从攻击者的角度, 以发现软件的安全漏洞为目的。安全漏洞是指系统在设计、实现、操作、管理上存在的可被利用的缺陷或弱点</li></ul><h3 id="安全性测试的任务"><a href="#安全性测试的任务" class="headerlink" title="安全性测试的任务"></a>安全性测试的任务</h3><ul><li>全面检验软件在需求规格说明中规定的防止危险状态措施的有效性和在每一个危险状态下的反应</li><li>对软件设计中用于提高安全性的结构、算法、容错、冗余、中断处理等方案，进行针对性测试</li><li>在异常条件下测试软件，以表明不会因可能的单个或多个输入错误而导致不安全状态</li><li>对安全性关键的软件单元、组件，单独进行加强的测试，以确认其满足安全性需求</li></ul><h3 id="安全性测试方法按内外部分为哪两种？"><a href="#安全性测试方法按内外部分为哪两种？" class="headerlink" title="安全性测试方法按内外部分为哪两种？"></a>安全性测试方法按内外部分为哪两种？</h3><h4 id="基于威胁的方法"><a href="#基于威胁的方法" class="headerlink" title="基于威胁的方法"></a>基于威胁的方法</h4><ul><li>从软件外部考察其安全性，识别软件面临的安全威胁并测试其是否能够发生</li></ul><h4 id="基于漏洞的方法"><a href="#基于漏洞的方法" class="headerlink" title="基于漏洞的方法"></a>基于漏洞的方法</h4><ul><li>从软件内部考虑其安全性，识别软件的安全漏洞，如借助特定的漏洞扫描工具</li></ul><h3 id="什么是XSS攻击和sql注入攻击，如何进行测试和防范"><a href="#什么是XSS攻击和sql注入攻击，如何进行测试和防范" class="headerlink" title="什么是XSS攻击和sql注入攻击，如何进行测试和防范"></a>什么是XSS攻击和sql注入攻击，如何进行测试和防范</h3><h4 id="XSS-跨站脚本攻击"><a href="#XSS-跨站脚本攻击" class="headerlink" title="XSS 跨站脚本攻击"></a>XSS 跨站脚本攻击</h4><ul><li>允许恶意用户将代码植入到“供其它用户使用的web页面” 中</li><li>输入验证：对用户输入进行严格的验证，拒绝恶意脚本。</li><li>输出编码：对动态生成的HTML内容进行编码，防止脚本执行。<ul><li>使用HTML实体编码，例如将&lt;编码为<code>&amp;lt;</code>。</li></ul></li></ul><h4 id="sql注入"><a href="#sql注入" class="headerlink" title="sql注入"></a>sql注入</h4><ul><li>根据SQL语句的编写规则，附加一个永远为“真”的条件，使系统中某个认证条件总是成立，从而欺骗系统、躲过认证，进而侵入系统 </li><li>使用参数化查询</li><li>限制数据库权限</li></ul><h3 id="web安全性测试可从哪些方法开展"><a href="#web安全性测试可从哪些方法开展" class="headerlink" title="web安全性测试可从哪些方法开展"></a>web安全性测试可从哪些方法开展</h3><ul><li>检查应用系统架构,防止用户绕过系统直接修改数据库</li><li>检查身份认证模块，用以防止非法用户绕过身份认证</li><li>检查数据库接口模块，用以防止用户获取系统权限</li><li>检查文件接口模块，防止用户获取系统文件</li><li>检查其他安全威胁</li></ul><h3 id="什么是软件可靠性？可从哪几个指标度量？各自的定义"><a href="#什么是软件可靠性？可从哪几个指标度量？各自的定义" class="headerlink" title="什么是软件可靠性？可从哪几个指标度量？各自的定义"></a>什么是软件可靠性？可从哪几个指标度量？各自的定义</h3><h4 id="定义-2"><a href="#定义-2" class="headerlink" title="定义"></a>定义</h4><ul><li>在规定的一段时间和条件下，软件能维持其性能水平的能力有关的一组属性，可用成熟性、容错性、易恢复性三个基本子特性来度量。</li><li>成熟性度量：通过错误发现率DDP（Defect Detection Percentage）来表现。DDP越小，软件越成熟。<ul><li>DDP&#x3D;测试发现的错误数量&#x2F;已知的全部错误数量</li></ul></li><li>容错性度量，容错测试是一种对抗性的测试过程。在这种测试中，通过各种手段让软件强制性地发生故障，或将把应用程序或系统置于（模拟的）异常条件下，以产生故障，例如设备输入&#x2F;输出（I&#x2F;O）故障或无效的数据库指针和关键字等 </li><li>恢复性度量，恢复性的测试先设法（模拟）使系统崩溃、失效等，然后计算其系统和数据恢复的时间来做出易恢复性评估。</li></ul><h3 id="容错测试的要点？"><a href="#容错测试的要点？" class="headerlink" title="容错测试的要点？"></a>容错测试的要点？</h3><ul><li>容错测试是一种对抗性的测试过程。在这种测试中，通过各种手段让软件强制性地发生故障，或将把应用程序或系统置于（模拟的）异常条件下，以产生故障，例如设备输入&#x2F;输出（I&#x2F;O）故障或无效的数据库指针和关键字等</li></ul><h3 id="什么是A-B测试？有什么特点"><a href="#什么是A-B测试？有什么特点" class="headerlink" title="什么是A&#x2F;B测试？有什么特点"></a>什么是A&#x2F;B测试？有什么特点</h3><ul><li>A&#x2F;B测试（ABTest） 是将用户分成不同的组，同时在线试验产品的不同版本，通过用户反馈的真实数据来确定哪一个方案更好</li><li>先验性：采用流量分割与小流量测试的方式，先让线上部分小流量用户使用以验证设计，再根据数据反馈来推广到全流量，减少产品损失</li><li>并行性：同时运行两个或两个以上版本的试验完成对比分析，而且保证每个版本所处的环境一致的，避免流程周期长的问题，节省验证时间</li><li>科学性：基于统计的数据来做出决策，避免主观或经验的错误决策</li></ul><h2 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h2><h3 id="软件本地化，国际化，全球化，相互关系"><a href="#软件本地化，国际化，全球化，相互关系" class="headerlink" title="软件本地化，国际化，全球化，相互关系"></a>软件本地化，国际化，全球化，相互关系</h3><h4 id="I18N国际化"><a href="#I18N国际化" class="headerlink" title="I18N国际化"></a>I18N国际化</h4><ul><li>支持Unicode字符集、双字节的字符；</li><li>分离程序代码和显示内容</li><li>消除Hard code</li><li>使用Header files 去定义经常被调用的代码段；</li><li>改善翻译文本尺寸，具有调整的灵活性</li><li>支持各个国家的键盘设置；</li><li>支持文字排序和大小写转换；</li><li>支持各个国家的度量衡，时区，货币单位格式等的设置；</li><li>国际化用户界面设计（自我定义）。</li></ul><h4 id="L10N本地化"><a href="#L10N本地化" class="headerlink" title="L10N本地化"></a>L10N本地化</h4><ul><li>翻译</li><li>地区文化、宗教</li><li>度量衡和时区等</li><li>软件用户界面（UI）</li><li>联机文档 (帮助文档和功能性的PDF文档) </li><li>热键设置</li></ul><h3 id="unicode与utf-x关系，特点"><a href="#unicode与utf-x关系，特点" class="headerlink" title="unicode与utf-x关系，特点"></a>unicode与utf-x关系，特点</h3><h4 id="Unicode"><a href="#Unicode" class="headerlink" title="Unicode"></a>Unicode</h4><ul><li>定义：Unicode是一种字符编码标准，旨在为全球所有语言的字符分配唯一的编码。它解决了不同语言和字符集之间的兼容性问题。</li><li>作用：Unicode定义了一个统一的字符集（字符的编号），但不规定具体的存储方式。</li><li>范围：Unicode字符集的范围是从U+0000到U+10FFFF，支持超过百万个字符。</li></ul><h4 id="UTF-x："><a href="#UTF-x：" class="headerlink" title="UTF-x："></a>UTF-x：</h4><ul><li>定义：UTF-x（Unicode Transformation Format）是Unicode的具体编码实现，用于将Unicode字符转换为二进制数据以便存储或传输。</li><li>关系：UTF-x是Unicode的实现方式，负责将Unicode字符集映射到实际的字节序列。</li><li>常见类型：<ul><li>UTF-8：一种变长编码，每个字符使用1到4个字节。</li><li>UTF-16：一种变长编码，每个字符使用2或4个字节。</li><li>UTF-32：一种固定长度编码，每个字符使用4个字节。</li></ul></li></ul><h3 id="软件本地化基本步骤"><a href="#软件本地化基本步骤" class="headerlink" title="软件本地化基本步骤"></a>软件本地化基本步骤</h3><ul><li>建立配置管理体系，跟踪目标语言各个版本的源代码</li><li>创造和维护术语表</li><li>源语言代码和资源文件分离、或提取需要本地化的文本</li><li>把分离或提取的文本、图片等翻译成目标语言</li><li>把翻译好的文本、图片重新检入目标语言的源代码版本</li><li>如果需要，编译目标语言的源代码</li><li>测试翻译后的软件，调整UI 以适应翻译后的文本</li><li>测试本地化后的软件，确保格式和内容都正确<br><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%9C%AC%E5%9C%B0%E5%8C%96%E5%9F%BA%E6%9C%AC%E6%AD%A5%E9%AA%A4.png" alt="软件本地化基本步骤"></li></ul><h3 id="本地化测试主要有哪些工作"><a href="#本地化测试主要有哪些工作" class="headerlink" title="本地化测试主要有哪些工作"></a>本地化测试主要有哪些工作</h3><ul><li>功能性测试，所有基本功能、安装、升级等测试；</li><li>翻译测试，包括语言完整性、术语准确性等的检查；</li><li>可用性测试，包括用户界面、度量衡和时区等；</li><li>兼容性调试，包括硬件兼容性、版本兼容性等测试；</li><li>文化、宗教、喜好等适用性测试</li><li>手册验证，包括联机文件、在线帮助、PDF文件等测试</li></ul><h3 id="软件本地化测试完整路线"><a href="#软件本地化测试完整路线" class="headerlink" title="软件本地化测试完整路线"></a>软件本地化测试完整路线</h3><h2 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h2><h3 id="自动化测试与测试自动化"><a href="#自动化测试与测试自动化" class="headerlink" title="自动化测试与测试自动化"></a>自动化测试与测试自动化</h3><ul><li>通过平台、系统或工具自动地完成测试的某类工作都可以归为测试自动化</li><li>自动化测试更侧重的测试用例或测试数据生成、测试执行和测试结果呈现等自动化</li></ul><h3 id="如何理解测试自动化"><a href="#如何理解测试自动化" class="headerlink" title="如何理解测试自动化"></a>如何理解测试自动化</h3><h3 id="测试自动化实现的原理，几种技术"><a href="#测试自动化实现的原理，几种技术" class="headerlink" title="测试自动化实现的原理，几种技术"></a>测试自动化实现的原理，几种技术</h3><h3 id="自动化测试的流程"><a href="#自动化测试的流程" class="headerlink" title="自动化测试的流程"></a>自动化测试的流程</h3><h3 id="几种脚本技术"><a href="#几种脚本技术" class="headerlink" title="几种脚本技术"></a>几种脚本技术</h3><h3 id="自动化功能测试基本构成"><a href="#自动化功能测试基本构成" class="headerlink" title="自动化功能测试基本构成"></a>自动化功能测试基本构成</h3><h3 id="TA框架的构成及各部分特点"><a href="#TA框架的构成及各部分特点" class="headerlink" title="TA框架的构成及各部分特点"></a>TA框架的构成及各部分特点</h3><p><img src="/2025/06/17/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0%E5%A4%A7%E7%BA%B2/TA%E6%A1%86%E6%9E%B6%E7%9A%84%E6%9E%84%E6%88%90.png" alt="TA框架的构成"></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>软件项目管理复习</title>
    <link href="/2025/06/16/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%A4%8D%E4%B9%A0/"/>
    <url>/2025/06/16/%E8%BD%AF%E4%BB%B6%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e738640835d18faf1540ade79cca338998080f8435682dc55426afc7c561eef0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>软件项目管理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件项目管理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件测试复习</title>
    <link href="/2025/06/13/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0/"/>
    <url>/2025/06/13/%E8%BD%AF%E4%BB%B6%E6%B5%8B%E8%AF%95%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="0f7a124e7b72459bf93620804f0d43319ea7a3a0f8f8b8dba2027ec6e3d0b477"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>软件测试</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件测试</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务开发往年题汇总</title>
    <link href="/2025/06/09/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E5%BE%80%E5%B9%B4%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <url>/2025/06/09/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E5%BE%80%E5%B9%B4%E9%A2%98%E6%B1%87%E6%80%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="服务开发往年题汇总"><a href="#服务开发往年题汇总" class="headerlink" title="服务开发往年题汇总"></a>服务开发往年题汇总</h1><h2 id="简答题"><a href="#简答题" class="headerlink" title="简答题"></a>简答题</h2><h3 id="2024年"><a href="#2024年" class="headerlink" title="2024年"></a>2024年</h3><h4 id="简述RESTful服务开发设计的基本步骤"><a href="#简述RESTful服务开发设计的基本步骤" class="headerlink" title="简述RESTful服务开发设计的基本步骤"></a>简述RESTful服务开发设计的基本步骤</h4><ul><li>资源分析与设计</li><li>客户端表述的设计</li><li>服务端表述的设计</li><li>暴露资源可执行接口</li><li>多种资源整合到一起</li><li>规划服务交互的响应</li></ul><h4 id="资源、资源的表述、资源表述状态转移的关系"><a href="#资源、资源的表述、资源表述状态转移的关系" class="headerlink" title="资源、资源的表述、资源表述状态转移的关系"></a>资源、资源的表述、资源表述状态转移的关系</h4><ul><li>资源：任何寄宿于Web可供操作的“事物”均可视为资源，就其本质而言，任何足够重要并被引用的事物都可以是资源。</li><li>资源的表述：资源可以具有多种表现形式，这种资源的呈现形式，称作资源的表述</li><li>资源表述状态转移：REST从资源的角度来观察整个网络，分布在各处的资源由URI确定，而客户端的应用通过HTTP操作来获取资源的表征。REST视角下，互联网就是一个巨大的状态机；REST风格的应用则是从一个状态迁移到下一个状态的状态转移过程</li></ul><h4 id="常见HTTP中幂等的操作"><a href="#常见HTTP中幂等的操作" class="headerlink" title="常见HTTP中幂等的操作"></a>常见HTTP中幂等的操作</h4><ul><li>DELETE：执行两次DELETE请求并不比只执行一次造成更多的影响。</li><li>PUT：如果你发送10次同样的PUT请求，请求的结果和你只发1次请求的结果是一样的</li><li>GET：只读操作，请求多少次都不修改服务器资源</li><li>HEAD：与GET类似，但只返回头部</li></ul><h4 id="说出至少三个SOA的协议"><a href="#说出至少三个SOA的协议" class="headerlink" title="说出至少三个SOA的协议"></a>说出至少三个SOA的协议</h4><ul><li>简单对象访问协议（SOAP）<ul><li>提供了一个标准的封装结构，用来在各种不同的互联网协议（如SMTP、HTTP和FTP）上传输XML文档。通过使用这样的标准消息格式，异构的中间件系统可以实现互操作</li></ul></li><li>Web服务描述语言（WSDL）<ul><li>描述了接口，即Web服务支持的一系列标准格式的操作。它标准化了操作的输入和输出参数的表示以及服务的协议绑定，消息在线传输的方式。使用WSDL，不同的客户端可以自动理解如何与Web服务交互</li></ul></li><li>通用描述、发现和集成<ul><li>提供了一种通过搜索名称、标识符、类别或Web服务实现的规范来广告和发现Web服务的全局注册表</li></ul></li><li>REST</li></ul><h4 id="服务怎样实现前后端分离-忘了具体咋说的了"><a href="#服务怎样实现前后端分离-忘了具体咋说的了" class="headerlink" title="服务怎样实现前后端分离(忘了具体咋说的了)"></a>服务怎样实现前后端分离(忘了具体咋说的了)</h4><ul><li>需求分析和架构设计</li><li>API设计</li><li>开发实施</li><li>联调与测试</li><li>部署与运维</li></ul><h4 id="为什么要遵循OpenAPI规范"><a href="#为什么要遵循OpenAPI规范" class="headerlink" title="为什么要遵循OpenAPI规范"></a>为什么要遵循OpenAPI规范</h4><ul><li>定义了一个标准的、语言无关的RESTful API 接口规范</li><li>正确定义规范文档后，开发者就可以使用最少的实现逻辑来理解远程服务并与之交互</li><li>此外，借助于文档生成工具，可以使用OpenAPI规范来生成API 文档，代码生成工具可以生成各种编程语言下的服务端和客户端代码，测试代码和其他用例</li></ul><h4 id="简述服务在软件互操作中的作用"><a href="#简述服务在软件互操作中的作用" class="headerlink" title="简述服务在软件互操作中的作用"></a>简述服务在软件互操作中的作用</h4><ul><li>标准化接口：提供统一的API规范，定义数据交换格式（JSON、XML等），建立通信协议标准（HTTP、gRPC等）</li><li>解耦系统依赖，降低系统间的耦合度</li><li>支持跨平台</li><li>增强安全性与可控性</li><li>实现动态组合与能力复用</li></ul><h4 id="无状态性解释"><a href="#无状态性解释" class="headerlink" title="无状态性解释"></a>无状态性解释</h4><ul><li>所谓“无状态性”，就是对于分布式的应用任意给定的两个服务请求不依赖彼此，处理一次请求所需的全部信息，要么都包含在这个请求里，要么可以从外部获取到（如数据库），服务端本身不存储任何信息。</li></ul><h3 id="2023年"><a href="#2023年" class="headerlink" title="2023年"></a>2023年</h3><h4 id="面向服务的三种角色和三种操作"><a href="#面向服务的三种角色和三种操作" class="headerlink" title="面向服务的三种角色和三种操作"></a>面向服务的三种角色和三种操作</h4><ul><li>服务提供者：提供服务实现的一方，即创建、部署并发布服务的一方。</li><li>服务请求者：需要使用服务的一方，即调用服务来完成特定任务的一方。</li><li>服务注册中心：一个可选的中间角色，用于服务的发布与发现。</li><li>发布：服务提供者将服务的描述信息（如 WSDL）发布到服务注册中心，使服务可以被外界发现。</li><li>发现：服务请求者通过服务注册中心查找符合其需求的服务。</li><li>绑定：服务请求者根据服务描述信息（如 WSDL），与具体的服务提供者建立连接，并调用其提供的服务操作。</li></ul><h4 id="服务在软件互操作的作用"><a href="#服务在软件互操作的作用" class="headerlink" title="服务在软件互操作的作用"></a>服务在软件互操作的作用</h4><ul><li>标准化接口：提供统一的API规范，定义数据交换格式（JSON、XML等），建立通信协议标准（HTTP、gRPC等）</li><li>解耦系统依赖，降低系统间的耦合度</li><li>支持跨平台</li><li>增强安全性与可控性</li><li>实现动态组合与能力复用</li></ul><h4 id="ROA与RPC的区别"><a href="#ROA与RPC的区别" class="headerlink" title="ROA与RPC的区别"></a>ROA与RPC的区别</h4><ul><li>面向对象程序的标准设计方法是把系统分解为一个个功能部件——即其中的名词(nouns)。<ul><li>一个对象(object)是(is)某个事物（如“读者”、“栏目”、“报道”、“评论”等）。</li><li>每个名词都有自己的类和自己的方法（用以与其他名词交互）</li></ul></li><li>与此形成对比的是，RPC式架构的设计方法是把系统分解为一个个动作，即其中的动词(verbs)。<ul><li>一个过程(procedure)做(does)某些操作（比如“订阅”、“阅读”、“作评论”等），在面向RPC的分析中，它会被视为将被客户端调用的动作(action)</li></ul></li></ul><h4 id="OpenAPI作用"><a href="#OpenAPI作用" class="headerlink" title="OpenAPI作用"></a>OpenAPI作用</h4><ul><li>定义了一个标准的、语言无关的RESTful API 接口规范</li><li>正确定义规范文档后，开发者就可以使用最少的实现逻辑来理解远程服务并与之交互</li><li>此外，借助于文档生成工具，可以使用OpenAPI规范来生成API 文档，代码生成工具可以生成各种编程语言下的服务端和客户端代码，测试代码和其他用例</li></ul><h4 id="HTTP幂等性操作"><a href="#HTTP幂等性操作" class="headerlink" title="HTTP幂等性操作"></a>HTTP幂等性操作</h4><ul><li>DELETE：执行两次DELETE请求并不比只执行一次造成更多的影响。</li><li>PUT：如果你发送10次同样的PUT请求，请求的结果和你只发1次请求的结果是一样的</li><li>GET：只读操作，请求多少次都不修改服务器资源</li><li>HEAD：与GET类似，但只返回头部</li></ul><h4 id="Restful服务开发步骤"><a href="#Restful服务开发步骤" class="headerlink" title="Restful服务开发步骤"></a>Restful服务开发步骤</h4><ul><li>资源分析与设计</li><li>客户端表述的设计</li><li>服务端表述的设计</li><li>暴露资源可执行接口</li><li>多种资源整合到一起</li><li>规划服务交互的响应</li></ul><h4 id="SOA协议-至少三种"><a href="#SOA协议-至少三种" class="headerlink" title="SOA协议(至少三种)"></a>SOA协议(至少三种)</h4><ul><li>简单对象访问协议（SOAP）<ul><li>提供了一个标准的封装结构，用来在各种不同的互联网协议（如SMTP、HTTP和FTP）上传输XML文档。通过使用这样的标准消息格式，异构的中间件系统可以实现互操作</li></ul></li><li>Web服务描述语言（WSDL）<ul><li>描述了接口，即Web服务支持的一系列标准格式的操作。它标准化了操作的输入和输出参数的表示以及服务的协议绑定，消息在线传输的方式。使用WSDL，不同的客户端可以自动理解如何与Web服务交互</li></ul></li><li>通用描述、发现和集成<ul><li>提供了一种通过搜索名称、标识符、类别或Web服务实现的规范来广告和发现Web服务的全局注册表</li></ul></li><li>REST</li></ul><h4 id="微服务架构的特点-至少两种"><a href="#微服务架构的特点-至少两种" class="headerlink" title="微服务架构的特点(至少两种)"></a>微服务架构的特点(至少两种)</h4><ul><li>服务组件化</li><li>按业务组织团队</li><li>做产品的态度</li><li>轻量化通信机制</li><li>去中心化治理</li><li>去中心化管理数据</li><li>基础设施自动化</li><li>容错设计</li><li>演进式设计</li></ul><h3 id="2022年"><a href="#2022年" class="headerlink" title="2022年"></a>2022年</h3><h4 id="ROA和RPC的区别"><a href="#ROA和RPC的区别" class="headerlink" title="ROA和RPC的区别"></a>ROA和RPC的区别</h4><ul><li>面向对象程序的标准设计方法是把系统分解为一个个功能部件——即其中的名词(nouns)。<ul><li>一个对象(object)是(is)某个事物（如“读者”、“栏目”、“报道”、“评论”等）。</li><li>每个名词都有自己的类和自己的方法（用以与其他名词交互）</li></ul></li><li>与此形成对比的是，RPC式架构的设计方法是把系统分解为一个个动作，即其中的动词(verbs)。<ul><li>一个过程(procedure)做(does)某些操作（比如“订阅”、“阅读”、“作评论”等），在面向RPC的分析中，它会被视为将被客户端调用的动作(action)</li></ul></li></ul><h4 id="资源、资源的表述、资源表述状态转移的关系-1"><a href="#资源、资源的表述、资源表述状态转移的关系-1" class="headerlink" title="资源、资源的表述、资源表述状态转移的关系"></a>资源、资源的表述、资源表述状态转移的关系</h4><ul><li>资源：任何寄宿于Web可供操作的“事物”均可视为资源，就其本质而言，任何足够重要并被引用的事物都可以是资源。</li><li>资源的表述：资源可以具有多种表现形式，这种资源的呈现形式，称作资源的表述</li><li>资源表述状态转移：REST从资源的角度来观察整个网络，分布在各处的资源由URI确定，而客户端的应用通过HTTP操作来获取资源的表征。REST视角下，互联网就是一个巨大的状态机；REST风格的应用则是从一个状态迁移到下一个状态的状态转移过程</li></ul><h4 id="HTTP中HEAD的作用"><a href="#HTTP中HEAD的作用" class="headerlink" title="HTTP中HEAD的作用"></a>HTTP中HEAD的作用</h4><ul><li>轻量级的GET，但只返回头部信息</li><li>轻量级检查 - 获取元数据而不传输完整内容</li><li>缓存优化 - 验证缓存有效性</li><li>性能提升 - 减少不必要的数据传输</li><li>资源探测 - 检查资源存在性和属性</li><li>带宽节省 - 特别适用于移动端和慢速网络环境</li></ul><h4 id="常见HTTP中安全的操作"><a href="#常见HTTP中安全的操作" class="headerlink" title="常见HTTP中安全的操作"></a>常见HTTP中安全的操作</h4><ul><li>GET、HEAD、OPTIONS</li><li>这些方法只用来获取信息，不会在服务器上产生副作用</li></ul><h4 id="服务开发设计的基本步骤"><a href="#服务开发设计的基本步骤" class="headerlink" title="服务开发设计的基本步骤"></a>服务开发设计的基本步骤</h4><ul><li>资源分析与设计</li><li>客户端表述的设计</li><li>服务端表述的设计</li><li>暴露资源可执行接口</li><li>多种资源整合到一起</li><li>规划服务交互的响应</li></ul><h4 id="如何开发前后端分离项目"><a href="#如何开发前后端分离项目" class="headerlink" title="如何开发前后端分离项目"></a>如何开发前后端分离项目</h4><ul><li>需求分析和架构设计</li><li>API设计</li><li>开发实施</li><li>联调与测试</li><li>部署与运维</li></ul><h4 id="OpenAPI有何作用"><a href="#OpenAPI有何作用" class="headerlink" title="OpenAPI有何作用"></a>OpenAPI有何作用</h4><ul><li>定义了一个标准的、语言无关的RESTful API 接口规范</li><li>正确定义规范文档后，开发者就可以使用最少的实现逻辑来理解远程服务并与之交互</li><li>此外，借助于文档生成工具，可以使用OpenAPI规范来生成API 文档，代码生成工具可以生成各种编程语言下的服务端和客户端代码，测试代码和其他用例</li></ul><h4 id="微服务设计中的微服务有何特点-至少2个"><a href="#微服务设计中的微服务有何特点-至少2个" class="headerlink" title="微服务设计中的微服务有何特点(至少2个)"></a>微服务设计中的微服务有何特点(至少2个)</h4><ul><li>服务组件化</li><li>按业务组织团队</li><li>做产品的态度</li><li>轻量化通信机制</li><li>去中心化治理</li><li>去中心化管理数据</li><li>基础设施自动化</li><li>容错设计</li><li>演进式设计</li></ul><h2 id="问答题"><a href="#问答题" class="headerlink" title="问答题"></a>问答题</h2><h3 id="在618期间，你的网站可能需要承受十倍的访问量，你作为网站的设计者，你应该怎样设计相关资源，并给出体现的Restful服务设计思想"><a href="#在618期间，你的网站可能需要承受十倍的访问量，你作为网站的设计者，你应该怎样设计相关资源，并给出体现的Restful服务设计思想" class="headerlink" title="在618期间，你的网站可能需要承受十倍的访问量，你作为网站的设计者，你应该怎样设计相关资源，并给出体现的Restful服务设计思想"></a>在618期间，你的网站可能需要承受十倍的访问量，你作为网站的设计者，你应该怎样设计相关资源，并给出体现的Restful服务设计思想</h3><h4 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h4><ul><li>负载均衡：使用负载均衡器（如Nginx、HAProxy）分发请求</li><li>微服务架构，按业务功能拆分服务</li><li>通过缓存提升可伸缩性，可以使用一个逆向代理（reverse proxy）来缓存并提供那些频繁访问的资源表述。在架构里增设了Web缓存（逆向代理），再加上有缓存元数据，客户端获取资源时就不会给服务器增添很大负担了</li><li>弹性扩展：使用云服务（如AWS、Azure或阿里云）提供的自动扩展功能，根据流量动态增加或减少服务器实例。</li></ul><h4 id="体现思想"><a href="#体现思想" class="headerlink" title="体现思想"></a>体现思想</h4><ul><li>资源的抽象与统一：通过URL路径清晰地表示资源，避免混乱。</li><li>无状态性：保证服务端的扩展性和容错能力，适应高并发场景。</li><li>可扩展性：通过分布式架构和弹性扩展，满足高流量需求。</li><li>性能优化：通过缓存、限流等手段，提升服务响应速度。</li></ul><h3 id="咖啡厅案例的启示和思想"><a href="#咖啡厅案例的启示和思想" class="headerlink" title="咖啡厅案例的启示和思想"></a>咖啡厅案例的启示和思想</h3><p><img src="/2025/06/09/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E5%BE%80%E5%B9%B4%E9%A2%98%E6%B1%87%E6%80%BB/%E5%92%96%E5%95%A1%E5%BA%97%E6%A1%88%E4%BE%8B%E6%84%8F%E4%B9%89.png" alt="咖啡店案例意义"></p><h4 id="通过缓存提升可伸缩性"><a href="#通过缓存提升可伸缩性" class="headerlink" title="通过缓存提升可伸缩性"></a>通过缓存提升可伸缩性</h4><ul><li>作为经营者，其实很不喜欢业务波动，不希望给服务增添负担、或者徒然增加业务流量。</li><li>为防止服务因过载而崩溃，可以使用一个逆向代理（reverse proxy）来缓存并提供那些频繁访问的资源表述</li><li>在架构里增设了Web缓存（逆向代理），再加上有缓存元数据，客户端获取资源时就不会给服务器增添很大负担了</li></ul><h4 id="无状态性"><a href="#无状态性" class="headerlink" title="无状态性"></a>无状态性</h4><ul><li>所谓有状态指的是要求在多个异步操作的序列间维持事务资源的一定状态，但这就阻碍了消息的自由传递，因为消息只能向特定服务器传递，系统无法横向扩展，这也就等于损害了可伸缩性<br><img src="/2025/06/09/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E5%BE%80%E5%B9%B4%E9%A2%98%E6%B1%87%E6%80%BB/%E6%97%A0%E7%8A%B6%E6%80%81%E6%80%A7.png" alt="无状态性"></li></ul><h4 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h4><ul><li>重试</li><li>补偿：补偿是回退所有已完成的操作，让系统回到一致的状态。例如：退款&#x2F;重新发货</li></ul><h4 id="善用状态码"><a href="#善用状态码" class="headerlink" title="善用状态码"></a>善用状态码</h4><h3 id="如何保证安全性"><a href="#如何保证安全性" class="headerlink" title="如何保证安全性"></a>如何保证安全性</h3><ul><li>对客户端做身份认证和身份鉴权</li><li>对敏感的数据做加密，并且防止篡改<ul><li>常见做法：部署SSL(Secure Sockets Layer 安全套接层)基础设施（即HTTPS），敏感数据的传输全部基于SSL；或者仅对部分敏感数据加密，并加入某种随机数作为加密盐，以防数据被篡改</li></ul></li><li>身份认证之后的访问控制<ul><li>主要是由应用来控制。通常应该实现某种基于角色+用户组的授权机制，即基于角色的访问控制（Role-Based Access Control，RBAC）</li></ul></li></ul><h3 id="RESTful服务适用于哪些场景"><a href="#RESTful服务适用于哪些场景" class="headerlink" title="RESTful服务适用于哪些场景"></a>RESTful服务适用于哪些场景</h3><h4 id="Web应用后端"><a href="#Web应用后端" class="headerlink" title="Web应用后端"></a>Web应用后端</h4><ul><li>RESTful服务非常适合为Web应用提供后端支持，允许前端通过HTTP请求与后端交互。</li><li>例子：电商网站的API<ul><li>GET &#x2F;products：获取商品列表。</li><li>POST &#x2F;orders：创建订单。</li><li>GET &#x2F;users&#x2F;{id}：获取用户信息。</li></ul></li></ul><h4 id="物联网（IoT）设备"><a href="#物联网（IoT）设备" class="headerlink" title="物联网（IoT）设备"></a>物联网（IoT）设备</h4><ul><li>IoT设备可以通过RESTful服务与云端通信，上传数据或接收指令。</li></ul><h4 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h4><ul><li>在微服务架构中，服务之间可以通过RESTful API进行通信，保持服务的独立性和解耦。</li></ul><h4 id="数据共享与开放平台"><a href="#数据共享与开放平台" class="headerlink" title="数据共享与开放平台"></a>数据共享与开放平台</h4><ul><li>RESTful服务适合用于开放数据平台，供用户或开发者访问共享数据。</li></ul><h3 id="设计-1"><a href="#设计-1" class="headerlink" title="设计"></a>设计</h3><ul><li><p>有一个查询天气的服务。可以查询某地当天的天气情况，包括温度、风速等，也可以查看未来7天一周的天气，用户可以收藏常用的城市，可以在天气情况下进行评论</p></li><li><p>（1）要设计什么资源（5分）</p></li><li><p>（2）有哪些操作（10分）</p></li></ul><h4 id="（1）要设计的资源"><a href="#（1）要设计的资源" class="headerlink" title="（1）要设计的资源"></a>（1）要设计的资源</h4><ol><li><strong>城市</strong>：表示用户查询的城市信息，包括城市名称、国家等。</li><li><strong>天气</strong>：表示某城市的天气信息，包括当天的天气和未来7天的天气预报。</li><li><strong>用户</strong>：表示使用服务的用户信息，包括用户名、收藏的城市等。</li><li><strong>收藏</strong>：表示用户收藏的城市列表。</li><li><strong>评论</strong>：表示用户对某城市天气情况的评论。</li></ol><h4 id="（2）有哪些操作"><a href="#（2）有哪些操作" class="headerlink" title="（2）有哪些操作"></a>（2）有哪些操作</h4><ol><li><p><strong>城市资源操作</strong>：</p><ul><li>查询城市列表：获取支持查询的城市。</li><li>查询城市详情：获取某城市的详细信息。</li></ul></li><li><p><strong>天气资源操作</strong>：</p><ul><li>查询当天天气：获取某城市当天的天气情况（温度、风速等）。</li><li>查询未来7天天气：获取某城市未来7天的天气预报。</li></ul></li><li><p><strong>用户资源操作</strong>：</p><ul><li>注册用户：创建新用户。</li><li>登录用户：验证用户身份。</li></ul></li><li><p><strong>收藏资源操作</strong>：</p><ul><li>添加收藏：将某城市添加到用户的收藏列表。</li><li>删除收藏：从用户的收藏列表中移除某城市。</li><li>查询收藏：获取用户收藏的城市列表。</li></ul></li><li><p><strong>评论资源操作</strong>：</p><ul><li>添加评论：用户对某城市的天气情况进行评论。</li><li>删除评论：删除用户的评论。</li><li>查询评论：获取某城市的所有评论。</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>服务开发技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务开发技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务开发技术期末复习</title>
    <link href="/2025/06/03/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/"/>
    <url>/2025/06/03/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="服务开发技术期末复习"><a href="#服务开发技术期末复习" class="headerlink" title="服务开发技术期末复习"></a>服务开发技术期末复习</h1><h2 id="第一章-服务计算：Web新时代的计算"><a href="#第一章-服务计算：Web新时代的计算" class="headerlink" title="第一章 服务计算：Web新时代的计算"></a>第一章 服务计算：Web新时代的计算</h2><h3 id="什么是服务"><a href="#什么是服务" class="headerlink" title="什么是服务"></a>什么是服务</h3><ul><li>在一个应用软件内部的一种方法、过程、或通讯。这些“服务”或“方法”是旨在满足某些业务需求的应用程序的操作。所谓服务，是区别于系统的，一个或者一组相对较小且独立的功能单元，是用户可以感知最小功能集</li></ul><h3 id="Web-Service"><a href="#Web-Service" class="headerlink" title="Web Service"></a>Web Service</h3><ul><li>指那些自我包含的、自我描述的、模块化的，用于供Web网络上其他软件程序使用或访问的应用程序</li></ul><h3 id="API（Application-Programming-Interface）"><a href="#API（Application-Programming-Interface）" class="headerlink" title="API（Application Programming Interface）"></a>API（Application Programming Interface）</h3><ul><li>提供对应用程序或数据库中的服务功能和数据进行编程访问的接口，可以用作开发与人类、其他应用程序或智能设备进行交互的基础</li></ul><h3 id="微服务（Microservice）"><a href="#微服务（Microservice）" class="headerlink" title="微服务（Microservice）"></a>微服务（Microservice）</h3><ul><li>微服务架构是一种架构概念，旨在通过将功能分解到各个离散的服务中，以实现对解决方案的解耦。</li><li>微服务架构主要作用：<ul><li>将功能分解到离散的各个服务当中，从而降低系统的耦合性，并可以提供更加灵活的服务支持</li></ul></li><li>微服务架构的关键在于强调“微服务”可以在自己的程序中运行，每个微服务完全自治，可以独立进化任意修改与重构；如果其中任何一个服务需要增加某种功能，只需要在特定的某种服务中增加所需功能，而不影响架构整体</li></ul><h2 id="第二章-Web服务技术方案：从RPC到REST"><a href="#第二章-Web服务技术方案：从RPC到REST" class="headerlink" title="第二章 Web服务技术方案：从RPC到REST"></a>第二章 Web服务技术方案：从RPC到REST</h2><h3 id="Web的技术架构包括了四个基石"><a href="#Web的技术架构包括了四个基石" class="headerlink" title="Web的技术架构包括了四个基石"></a>Web的技术架构包括了四个基石</h3><ul><li>URI：地址</li><li>HTTP：传输</li><li>HyperText：表达（除了HTML外，也可以是带有超链接的XML或JSON）</li><li>MIME：扩展<ul><li>本意为多目的Internet邮件扩展，最初目的是为了在发送电子邮件时附加多媒体数据，让邮件客户程序能根据其类型进行处理。</li><li>当它被HTTP协议支持之后，它的意义就更为显著了。它使得HTTP传输的不再是仅有普通的文本，而变得丰富多彩起来</li></ul></li></ul><h3 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h3><ul><li>URL全称为“统一资源定位符（Uniform Resource Locator）”，是URI的一种表现形式</li><li>除了标识性之外，它还具有定位的功能，用于描述Web资源所在的位置</li><li>URL还指明了获取资源所采用的协议，一个完整的URL包含协议名称、主机名称（IP地址或者域名）、端口号、路径和查询字符串5个部分。</li><li>比如对于“<a href="http://www.artech.com:8080/images/photo.png?size=small%E2%80%9D%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AAURL%EF%BC%8C%E4%B8%8A%E8%BF%B0%E7%9A%845%E4%B8%AA%E9%83%A8%E5%88%86%E5%88%86%E5%88%AB%E6%98%AF%E2%80%9Chttp%E2%80%9D%E3%80%81%E2%80%9Cwww.artech.com%E2%80%9D%E3%80%81%E2%80%9C8080%E2%80%9D%E3%80%81%E2%80%9C/images/photo.png%E2%80%9D%E5%92%8C%E2%80%9C?size=small%E2%80%9D%E3%80%82">http://www.artech.com:8080/images/photo.png?size=small”这样一个URL，上述的5个部分分别是“http”、“www.artech.com”、“8080”、“/images/photo.png”和“?size=small”。</a></li><li>URI：Web资源应该有一个唯一的标识。采用Uniform Resource Identifier （URI ）来标识Web资源已经成为了一种共识</li></ul><h3 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h3><ul><li>HTTP采用简单的请求&#x2F;响应模式的消息交换来实现针对某个Web资源的某种操作</li><li>HTTP动词<ul><li>POST：向服务器提交信息，一般用于创建资源（增）</li><li>GET：获取服务器端的信息，一般用于浏览资源（查）</li><li>PUT：用于修改服务器端资源（改）</li><li>DELETE：用于删除资源（删）</li></ul></li></ul><h3 id="HTTP报文"><a href="#HTTP报文" class="headerlink" title="HTTP报文"></a>HTTP报文</h3><ul><li>起始行<ul><li>请求报文利用起始行表示采用的HTTP方法、请求URI和采用的HTTP版本，而响应报文的起始行在承载着HTTP版本和响应状态码等信息。</li></ul></li><li>报头集合<ul><li>HTTP报文的起始行后面可以包含零个或者多个报头字段。每个报头字段表现为一个键&#x2F;值对，键和值分别表示报头字段名称和报头字段的值，两者通过冒号（“：”）进行分割。HTTP报文采用一个空行作为报头集合结束的标志</li></ul></li><li>主体内容<ul><li>代表报头集合结束标志的空行之后就是HTTP报文的主体部分。客户端提交给服务器的数据一般置于请求报头的主体，而响应报头的主体也承载着服务器返回给客户端的数据</li></ul></li></ul><h3 id="REST"><a href="#REST" class="headerlink" title="REST"></a>REST</h3><ul><li>Representational State Transfer (REST，中文：表述性状态转移)</li><li>REST视角下，互联网就是一个巨大的状态机；REST风格的应用则是从一个状态迁移到下一个状态的状态转移过程</li></ul><h3 id="三种主流的Web服务实现方案"><a href="#三种主流的Web服务实现方案" class="headerlink" title="三种主流的Web服务实现方案"></a>三种主流的Web服务实现方案</h3><h4 id="远程过程调用-remote-procedure-call，RPC-的分布式计算协议"><a href="#远程过程调用-remote-procedure-call，RPC-的分布式计算协议" class="headerlink" title="远程过程调用(remote procedure call，RPC)的分布式计算协议"></a>远程过程调用(remote procedure call，RPC)的分布式计算协议</h4><ul><li>通过XML将调用函数封装，并使用HTTP协议作为传送机制</li><li>发出请求的用户端一般都是需要向远端系统要求呼叫的软件</li><li>XML-RPC通过向装置了这个调用协议的服务器发出HTTP请求</li><li>在新的功能不断被引入下，这个标准慢慢演变成为SOAP协议</li></ul><h4 id="简单对象访问协议Simple-Object-Access-Protocol-SOAP"><a href="#简单对象访问协议Simple-Object-Access-Protocol-SOAP" class="headerlink" title="简单对象访问协议Simple Object Access Protocol,SOAP"></a>简单对象访问协议Simple Object Access Protocol,SOAP</h4><ul><li>SOAP是一种通讯规范，采用标准化的、可分析的结构来传递的消息，消息具有标准的格式，并包含一些通讯双方自定义的语义</li><li>比如一个查询房价数据的消息参数中标明这是一个针对某房源价格的查询消息，服务器端将返回一个XML 格式的信息，其中包含了查询结果（价格，位置，特点，或者其他信息）</li></ul><h4 id="表述性状态转移（Representational-State-Transfer）"><a href="#表述性状态转移（Representational-State-Transfer）" class="headerlink" title="表述性状态转移（Representational State Transfer）"></a>表述性状态转移（Representational State Transfer）</h4><ul><li>REST从资源的角度来观察整个网络，分布在各处的资源由URI确定，而客户端的应用通过HTTP操作来获取资源的表征</li><li>互联网上的各种资源就好比数据库中的记录，对于资源的操作最后总是能抽象成为查增改删这四种基本操作；在定义了资源定位的规则后，对资源的操作就可以通过标准HTTP 方法GET、PUT、POST、DELETE实现</li><li>REST模式的Web 服务将所有Web 系统的服务抽象为资源，并使用标准的HTTP 方法(GET&#x2F;PUT&#x2F;POST&#x2F;DELETE)操作</li></ul><h3 id="RESTful服务的优势"><a href="#RESTful服务的优势" class="headerlink" title="RESTful服务的优势"></a>RESTful服务的优势</h3><ul><li><p>使用统一的接口操作资源</p><ul><li>由于REST是面向资源的，所以一个Web API旨在实现针对单一资源的操作，针对资源的基本操作唯CRUD而已，故可以为Web API定义标准接口成可能。</li><li>所谓的标准接口就是针对不同资源的Web API定义一致性的操作来操作它们</li></ul></li><li><p>RESTful Web服务接口更易于使用</p><ul><li>RESTful Web服务使用标准的HTTP 方法(GET&#x2F;PUT&#x2F;POST&#x2F;DELETE) 来抽象所有Web 系统的服务能力，而不同的是，SOAP 应用都通过定义自己个性化的接口方法来抽象Web 服务。</li><li>标准化的HTTP 操作方法，结合其他的标准化技术，如URI，HTML，XML 等，将会极大提高系统与系统之间整合的互操作能力。更加贴近Web本身的工作方式，也更加自然。</li></ul></li><li><p>无状态性</p><ul><li>所谓“无状态性”，就是对于分布式的应用任意给定的两个服务请求不依赖彼此，处理一次请求所需的全部信息，要么都包含在这个请求里，要么可以从外部获取到（如数据库），服务端本身不存储任何信息。</li><li>HTTP 协议从本质上说是一种无状态的协议，客户端发出的HTTP 请求之间可以相互隔离，不存在相互的状态依赖</li><li>基于HTTP 的RESTful服务请求，继承了其“无状态”特性，可以以非常自然的方式来实现无状态服务请求处理逻辑。</li></ul></li><li><p>安全操作与幂指相等特性</p><ul><li>HTTP 的GET、HEAD 请求本质上应该是安全的调用</li><li>即：GET、HEAD 调用不会有任何的副作用，不会造成服务器端状态的改变。</li><li>对于服务器来说，客户端对某一URI 做n 次的GET、HAED 调用，其状态与没有做调用是一样的，不会发生任何的改变。</li><li>HTTP 的PUT、DELETE 调用，具有幂指相等特性,或称为幂等性(idempotent)</li><li>客户端对某一个URI指代的资源执行1次或者多次的PUT、DELETE操作，其效果与执行一次的调用操作是一样的</li></ul></li><li><p>RESTful Web 服务更容易实现缓存</p><ul><li>当客户端第一次发送HTTP GET 请求给服务器并获得内容后，该内容可以被缓存服务器(Cache Server) 缓存。当下一次客户端请求同样的资源时，缓存可以直接给出响应，而不需要再通过请求远程的服务器获得</li></ul></li></ul><h3 id="ROA的协议"><a href="#ROA的协议" class="headerlink" title="ROA的协议"></a>ROA的协议</h3><h4 id="简单对象访问协议（SOAP）"><a href="#简单对象访问协议（SOAP）" class="headerlink" title="简单对象访问协议（SOAP）"></a>简单对象访问协议（SOAP）</h4><ul><li>提供了一个标准的封装结构，用来在各种不同的互联网协议（如SMTP、HTTP和FTP）上传输XML文档。通过使用这样的标准消息格式，异构的中间件系统可以实现互操作</li></ul><h4 id="Web服务描述语言（WSDL）"><a href="#Web服务描述语言（WSDL）" class="headerlink" title="Web服务描述语言（WSDL）"></a>Web服务描述语言（WSDL）</h4><ul><li>描述了接口，即Web服务支持的一系列标准格式的操作。它标准化了操作的输入和输出参数的表示以及服务的协议绑定，消息在线传输的方式。使用WSDL，不同的客户端可以自动理解如何与Web服务交互</li></ul><h4 id="通用描述、发现和集成"><a href="#通用描述、发现和集成" class="headerlink" title="通用描述、发现和集成"></a>通用描述、发现和集成</h4><ul><li>提供了一种通过搜索名称、标识符、类别或Web服务实现的规范来广告和发现Web服务的全局注册表</li></ul><h4 id="REST-1"><a href="#REST-1" class="headerlink" title="REST"></a>REST</h4><h2 id="第三章-资源和表述"><a href="#第三章-资源和表述" class="headerlink" title="第三章 资源和表述"></a>第三章 资源和表述</h2><h3 id="资源"><a href="#资源" class="headerlink" title="资源"></a>资源</h3><ul><li>任何寄宿于Web可供操作的“事物”均可视为资源，就其本质而言，任何足够重要并被引用的事物都可以是资源。</li></ul><h3 id="资源的表征"><a href="#资源的表征" class="headerlink" title="资源的表征"></a>资源的表征</h3><ul><li>资源可以具有多种表现形式，这种资源的呈现形式，称作资源的表征</li></ul><h3 id="资源需要有唯一的标识符"><a href="#资源需要有唯一的标识符" class="headerlink" title="资源需要有唯一的标识符"></a>资源需要有唯一的标识符</h3><ul><li>资源请求者和资源拥有者只有在对事物的命名上达成一致以后才能针对这个事物实现相互通信。</li><li>因此，每个资源必须拥有自己的唯一标识，互联网中使用URI 来唯一标记一个资源，包含了URL和URN</li><li>URL（Uniform Resource Location）：统一资源定位符，侧重于 “定位” 二字。</li><li>URN（Uniform Resource Name）：统一资源名称，侧重于 “命名”二字。</li></ul><h3 id="为什么要对资源表述"><a href="#为什么要对资源表述" class="headerlink" title="为什么要对资源表述"></a>为什么要对资源表述</h3><ul><li>从资源请求者的角度看，它并不关心资源是什么，因为它从来看不到资源，它看到的永远只是资源的URL和表述（Representation）。</li><li>客户端应用与服务端的交互，是通过资源的表述来间接完成的，这体现了一些非常好的设计原则：松耦合与前后端分离</li><li>通过资源的表述来间接完成交互，实际上就是隔离了客户端与服务端、前端与后端，使得请求服务的一方的操作不会直接影响到服务提供者，而服务提供者也可以安全地分享自己的资源</li></ul><h3 id="超文本（HyperText）"><a href="#超文本（HyperText）" class="headerlink" title="超文本（HyperText）"></a>超文本（HyperText）</h3><ul><li>是用超链接的方法，将各种不同空间的文字信息组织在一起的网状文本，其中的文字包含有可以链接到其他文档的地址，以实现从当前阅读位置直接切换到超文本链接所指向的文本继续访问。</li></ul><h3 id="超媒体（HyperMedia）"><a href="#超媒体（HyperMedia）" class="headerlink" title="超媒体（HyperMedia）"></a>超媒体（HyperMedia）</h3><ul><li>是超级媒体的缩写。超媒体是一种采用非线性网状结构对块状多媒体信息（包括文本、图像、视频等）进行组织和管理的技术。</li><li>超媒体在本质上和超文本是一样的，只不过超文本技术在诞生的初期管理的对象是纯文本，所以叫做超文本。</li></ul><h3 id="超媒体策略："><a href="#超媒体策略：" class="headerlink" title="超媒体策略："></a>超媒体策略：</h3><ul><li>超媒体可以帮助服务器实现与客户端的对话：服务器在发给客户端的文本中附加超链接，以告知客户端如何进一步向服务器发起请求。</li><li>服务提供者可以在发给客户端的文本中附加广告信息的超链接，引导用户新的消费行为。</li><li>可以用超媒体写一个服务器提供的功能菜单，客户端可以从中自由选择，目前大多数应用都是这样做的</li></ul><h3 id="HATEOAS"><a href="#HATEOAS" class="headerlink" title="HATEOAS"></a>HATEOAS</h3><ul><li>超文本作为应用程序状态的引擎（Hypertext as the Engine of Application State，HATEOAS）是Rest的一项重要原则<br><img src="/2025/06/03/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/HATEOAS%E4%BE%8B%E5%AD%90.png" alt="HATEOAS例子"></li></ul><h3 id="HTTP协议语义"><a href="#HTTP协议语义" class="headerlink" title="HTTP协议语义"></a>HTTP协议语义</h3><ul><li>尽管任何事物都可以成为一个资源，但是客户端并不能随心所欲地对资源进行任意的操作。所能进行的操作是有规定的。在一个RESTful系统里，客户端和服务器端只能通过相互发送遵循预定义协议的消息来进行交互</li><li>在web API的世界里，这个协议就是HTTP。API客户端可以通过发送一些不同类型的HTTP消息与API进行交互</li><li>向一个“博客日志”发送的GET请求和向一个“股票代码”发送的GET请求是类似的。这两个请求拥有相同的协议语义，但是却有完全不同的应用语义（application semantic）</li><li>无法仅仅通过使用HTTP来满足这样的语义要求，因为HTTP协议并没有定义任何应用语义。但是应用语义必须和HTTP的协议语义保持一致。</li></ul><h3 id="GET方法"><a href="#GET方法" class="headerlink" title="GET方法"></a>GET方法</h3><ul><li>GET是被定义为安全的HTTP方法。它仅仅是对信息的一次请求。向服务资源发送一条GET请求对资源的影响应该和没有发送GET请求一样——也就是，没有任何影响。</li><li>GET请求中最常见的响应码是200 (OK)。此外像300 (Moved  Permanently)这样的重定向码也比较常见。</li></ul><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><ul><li>DELETE很明显不是一个安全的方法。发送一个DELETE请求的效果不同于未发送DELETE请求。但是DELETE方法有另外一个很有用的属性：它是幂等的(idempotent)</li><li>一旦你删除了一个资源，这个资源就消失了。资源状态也就永久性地改变了。你可以再次发送一条DELETE请求，这时，你可能会收到一个404错误，但是资源状态和你第一发的送发ELETE请求之后的状态是一致的。资源还是不存在的。这就是幂等性。发送两次请求对资源状态的影响和发送一次请求的影响是一样的</li><li>如果一个DELETE请求发送成功了，收到的状态码可能是204（No Content，也就是，“删除成功，我没有其他关于这个资源的信息描述了），也可能是200 （OK，也就是“删除成功，这里是关于它的一条消息”）或者202 (Accepted，也就是“我稍后将删除这个资源”)</li><li>幂等性：<ul><li>幂等是一个很有用的特性，因为互联网不是一个可靠的网络。</li><li>假设你发送了一个DELETE请求，然后你的连接超时了。由于你并没有收到响应信息，所以你无法知道前面的DELETE请求是否顺利完成。你只要再次发送一条DELETE请求并不断重试直到收到响应信息就可以了。</li><li>执行两次DELETE请求并不比只执行一次造成更多的影响。</li><li>HTTP DELETE方法就相当于用零乘以一个资源。</li><li>乘以1是一个安全的运算，HTTP GET也是一个安全的方法。你可以将一个数值不停地乘以1，数值不会产生任何变化。每个安全的运算都是幂等的。</li></ul></li></ul><h3 id="POST：POST-to-Append"><a href="#POST：POST-to-Append" class="headerlink" title="POST：POST-to-Append"></a>POST：POST-to-Append</h3><ul><li>向某个资源发送一条POST请求用以在该资源的下一级中创送一个新的资源。</li><li>当客户端发送一个POST-to-append请求的时候，它会在请求的实体消息体中添加所希望创建的资源的表述信息并发送给服务器</li><li>常见的响应码：<ul><li>201（Created）它用于告知客户端一个新的资源已经创建成功。</li><li>202（Accepted）这表示服务器打算按照提供的表述信息来创建一个资源，但是现在还没有真正创建完成</li></ul></li><li>既不安全也不幂等</li></ul><h3 id="POST：Overloaded-POST"><a href="#POST：Overloaded-POST" class="headerlink" title="POST：Overloaded POST"></a>POST：Overloaded POST</h3><ul><li>大部分浏览器只支持GET&#x2F;POST方法，这使得我们无法完美的实现REST。对于这样的情况，大致有两种解决方法：<ul><li>一种是在表单里加入一个_method之类名字的隐藏字段，用于表示真正的方法</li><li>另一种是使用X-HTTP-METHOD-OVERRIDE头信息来重载POST</li></ul></li><li>POST不仅仅被用于创建新的资源。在我们用浏览器上网的时候，HTTP POST也被用于传输任何形式的变化。<ul><li>它将PUT、DELETE、PATCH、LINK和UNLINK所有的方法混合成一个方法</li></ul></li><li>将POST这种“任意而为(whatever)”用法称为重载的(overloaded) POST</li><li>因为一个重载的POST请求没有协议语义，你只能在应用语义的层面上来理解它</li><li>不安全也不幂等（在事实上可能安全，在HTTP上是不安全的）</li></ul><h3 id="PUT"><a href="#PUT" class="headerlink" title="PUT"></a>PUT</h3><ul><li>PUT请求是用于修改资源状态的请求。客户端一般会通过GET请求获取表述，然后对其进行修改，最后再将修改后的资源表述作为PUT请求的负载数据(payload)发送回去。</li><li>返回200（OK）或204（No Content）</li><li>幂等，如果你发送10次同样的PUT请求，请求的结果和你只发1次请求的结果是一样的</li><li>如果客户端知道新资源的URL的话，它同样能够使用PUT来新建一个资源。</li><li>即便我们用PUT来创建一个新的资源，PUT也还是一个幂等的操作。</li><li>如果我发送5次PUT请求，这并不会相应生成5条具有同样内容的微博（而5次POST请求会生成5条相同的微博）</li></ul><h3 id="PUT-VS-POST"><a href="#PUT-VS-POST" class="headerlink" title="PUT VS POST"></a>PUT VS POST</h3><ul><li>区别在于POST是作用在一个集合资源之上的（&#x2F;articles），而PUT操作是作用在一个具体资源之上的（&#x2F;articles&#x2F;123）</li><li>如果URL可以在客户端确定，那么就使用PUT</li><li>如果是在服务端确定，那么就使用POST</li><li>比如说很多资源使用数据库自增主键作为标识信息而创建的资源的标识信息到底是什么只能由服务端提供，这个时候就必须使用POST</li></ul><h3 id="PATCH"><a href="#PATCH" class="headerlink" title="PATCH"></a>PATCH</h3><ul><li>表述的信息量可能非常大。“修改表述，然后通过PUT方法提交”是一个简单的规则</li><li>但是如果你只是想修改资源状态中的很小的一部分，这就可能造成极大的浪费。</li><li>此外，PUT规则还可能导致与其他修改同样文档的用户发生意外的修改冲突。</li><li>如果你可以仅仅向服务器发送你想要修改的那一部分数据文档，那PATCH方法就提供了这样的功能来允许你这么做</li><li>和将完整的表述信息通过PUT方法发送出去不同，你可以建立一个特别的“diff‘’表述，并将它作为PATCH请求的负载数据发送给服务器</li><li>不安全也不保证幂等</li><li>一个PATCH 请求有可能结果是等幂的，这种情况下，如果你不小心对同一个文档应用了两次patch，你可能会在第二次收到一个错误信息。但这并没有定义在相关标准中。</li></ul><h3 id="HEAD"><a href="#HEAD" class="headerlink" title="HEAD"></a>HEAD</h3><ul><li>和GET一样安全，可理解为轻量版GET</li><li>服务器和GET一样处理HEAD，但不返回消息体，只需发送状态码和报头</li><li>（待定）HEAD代替GET不会节约时间，因为服务器还是需要生成所有HTTP报头，但能节省带宽</li></ul><h3 id="OPTION"><a href="#OPTION" class="headerlink" title="OPTION"></a>OPTION</h3><ul><li>一个OPTIONS请求的返回结果包含一个HTTP Allow报头，这个报头展示了这个资源所支持的所有的HTTP方法。</li></ul><h3 id="响应码"><a href="#响应码" class="headerlink" title="响应码"></a>响应码</h3><h4 id="1xx相关信息（不常用）"><a href="#1xx相关信息（不常用）" class="headerlink" title="1xx相关信息（不常用）"></a>1xx相关信息（不常用）</h4><table><thead><tr><th>状态码</th><th>内容</th><th>作用</th></tr></thead><tbody><tr><td>100</td><td>Continue</td><td>继续。客户端应继续其请求</td></tr><tr><td>101</td><td>Switching Protocols</td><td>切换协议。服务器根据客户端的请求切换协议。智能切换到更高的协议，例如，切换到HTTP的新版本协议</td></tr></tbody></table><h4 id="2xx操作成功"><a href="#2xx操作成功" class="headerlink" title="2xx操作成功"></a>2xx操作成功</h4><table><thead><tr><th>状态码</th><th>内容</th><th>作用</th></tr></thead><tbody><tr><td>200</td><td>OK</td><td>请求成功。一般用于GET与POST请求</td></tr><tr><td>201</td><td>Created</td><td>已创建。成功请求并创建新的资源</td></tr><tr><td>202</td><td>Accepted</td><td>已接受。已经接受请求，但未处理完成</td></tr><tr><td>203</td><td>Non-Authoritative Information</td><td>非授权信息。请求成功。但返回的meta信息不在原始的服务器，而是一个副本</td></tr><tr><td>204</td><td>No Content</td><td>无内容。服务器成功处理，但未返回内容。在未更新网页的情况下，可确保浏览器继续显示当前文档</td></tr><tr><td>205</td><td>Reset Content</td><td>重置内容。服务器处理成功，用户终端（例如：浏览器）应重置文档视图。可通过此返回码清除浏览器的表单域</td></tr><tr><td>206</td><td>Partial Content</td><td>部分内容。服务器成功处理了部分GET请求</td></tr></tbody></table><h4 id="3xx重定向（不常用）"><a href="#3xx重定向（不常用）" class="headerlink" title="3xx重定向（不常用）"></a>3xx重定向（不常用）</h4><table><thead><tr><th>状态码</th><th>内容</th><th>作用</th></tr></thead><tbody><tr><td>300</td><td>Multiple Choices</td><td>多种选择。请求的资源可包括多个位置，相应可返回一个资源特征与地址的列表用于用户终端（例如：浏览器）选择</td></tr><tr><td>301</td><td>Moved Permanently</td><td>永久移动。请求的资源已被永久的移动到新的URI，返回信息会包括新的URI，浏览器会自动定向到新URI。今后任何新的请求都应使用新的URI代替</td></tr><tr><td>302</td><td>Found</td><td>临时移动。与301类似。但资源只是临时被移动。客户端应继续使用原有URI</td></tr><tr><td>303</td><td>See Other</td><td>查看其它地址。与301类似。使用GET和POST请求查看</td></tr><tr><td>304</td><td>Not Modified</td><td>未修改。所请求的资源未修改，服务器返回此状态码时，不会返回任何资源。客户端通常会缓存访问过的资源，通过提供一个头信息指出客户端希望只返回在指定日期之后修改的资源</td></tr><tr><td>305</td><td>Use Proxy</td><td>使用代理。所请求的资源必须通过代理访问</td></tr><tr><td>306</td><td>Unused</td><td>已经废弃的HTTP状态码</td></tr><tr><td>307</td><td>Temporary Redirect</td><td>临时重定向。与302类似。使用GET请求重定向</td></tr></tbody></table><h4 id="4xx客户端错误"><a href="#4xx客户端错误" class="headerlink" title="4xx客户端错误"></a>4xx客户端错误</h4><table><thead><tr><th>状态码</th><th>内容</th><th>作用</th></tr></thead><tbody><tr><td>400</td><td>Bad Request</td><td>客户端请求的语法错误，服务器无法理解</td></tr><tr><td>401</td><td>Unauthorized</td><td>请求要求用户的身份认证</td></tr><tr><td>402</td><td>Payment Required</td><td>保留，将来使用</td></tr><tr><td>403</td><td>Forbidden</td><td>服务器理解请求客户端的请求，但是拒绝执行此请求</td></tr><tr><td>404</td><td>Not Found</td><td>服务器无法根据客户端的请求找到资源（网页）。通过此代码，网站设计人员可设置“您所请求的资源无法找到”的个性页面</td></tr><tr><td>405</td><td>Method Not Allowed</td><td>客户端请求中的方法被禁止</td></tr><tr><td>406</td><td>Not Acceptable</td><td>服务器无法根据客户端请求的内容特性完成请求</td></tr><tr><td>407</td><td>Proxy Authentication Required</td><td>请求要求代理的身份认证，与401类似，但请求者应当使用代理进行授权</td></tr><tr><td>408</td><td>Request Time-out</td><td>服务器等待客户端发送的请求时间过长，超时</td></tr><tr><td>409</td><td>Conflict</td><td>服务器完成客户端的PUT请求时可能返回此代码，服务器处理请求时发生了冲突</td></tr><tr><td>410</td><td>Gone</td><td>客户端请求的资源已经不存在。410不同于404，如果资源以前有现在被永久删除可使用410代码，网站设计人员可通过301代码指定资源的新位置</td></tr><tr><td>411</td><td>Length Required</td><td>服务器无法处理客户端发送的不带Content-Length的请求信息</td></tr><tr><td>412</td><td>Precondition Failed</td><td>客户端请求信息的先决条件错误</td></tr><tr><td>413</td><td>Request Entity Too Large</td><td>由于请求的实体过大，服务器无法处理，因此拒绝请求。为防止客户端的连续请求，服务器可能会包含一个Retry-After的响应信息</td></tr><tr><td>414</td><td>Request-URI Too Large</td><td>请求的URI过长（URI通常为网址），服务器无法处理</td></tr><tr><td>415</td><td>Unsupported Media Type</td><td>服务器无法处理请求附带的媒体格式</td></tr><tr><td>416</td><td>Requested range not satisfiable</td><td>客户端请求的范围无效</td></tr><tr><td>417</td><td>Expectation Failed</td><td>服务器无法满足Expect的请求头信息</td></tr></tbody></table><h4 id="5xx服务器错误"><a href="#5xx服务器错误" class="headerlink" title="5xx服务器错误"></a>5xx服务器错误</h4><table><thead><tr><th>状态码</th><th>内容</th><th>作用</th></tr></thead><tbody><tr><td>500</td><td>Internal Server Error</td><td>服务器内部错误，无法完成请求</td></tr><tr><td>501</td><td>Not Implemented</td><td>服务器不支持请求的功能，无法完成请求</td></tr><tr><td>502</td><td>Bad Gateway</td><td>充当网关或代理的服务器，从远端服务器接收到了一个无效的请求</td></tr><tr><td>503</td><td>Service Unavailable</td><td>由于超载或系统维护，服务器暂时无法处理客户端的请求。延时长度可包含在服务器的Retry-After头信息中</td></tr><tr><td>504</td><td>Gateway Time-out</td><td>充当网关或代理的服务器，未及时从远端服务器获取请求</td></tr><tr><td>505</td><td>HTTP Version not supported</td><td>服务器不支持请求的HTTP协议版本，无法完成处理</td></tr></tbody></table><h2 id="第五章-领域驱动的服务设计"><a href="#第五章-领域驱动的服务设计" class="headerlink" title="第五章 领域驱动的服务设计"></a>第五章 领域驱动的服务设计</h2><h3 id="领域建模产出物"><a href="#领域建模产出物" class="headerlink" title="领域建模产出物"></a>领域建模产出物</h3><ul><li>领域模型：包含领域对象、属性、关系、行为、边界范围等各个方面，用于描述业务的本质</li><li>用例图：用于明确系统的功能</li><li>数据模型：描述系统的数据结构和关系，包括实体关系模型、关系数据库模型等</li><li>状态图：用于描述系统各个状态及其转移条件</li><li>活动图：用于描述系统流程中的各个活动及其关系</li><li>序列图：描述系统中各个对象之间的交互过程和消息传递序列</li><li>架构模型：包含系统的物理和逻辑结构，包括组件、模块、接口等</li></ul><h3 id="领域驱动设计（DDD）"><a href="#领域驱动设计（DDD）" class="headerlink" title="领域驱动设计（DDD）"></a>领域驱动设计（DDD）</h3><ul><li>针对一个领域内各个业务需求进行建模，同时提供了战略和战术上的建模方法和工具。</li><li>模型驱动的思想：通过建立领域模型来描述领域中的核心问题</li></ul><h3 id="DDD主要任务"><a href="#DDD主要任务" class="headerlink" title="DDD主要任务"></a>DDD主要任务</h3><ul><li>一是如何发现系统中的聚合(Aggregate)<ul><li>所谓聚合是一组相关的领域对象（或者称为实体），是由业务和逻辑紧密关联的实体和值对象组合而成的，值对象可以理解为实际的Entity对象的一个属性的结合，附属在一个实际的实体对象上面</li></ul></li><li>二是如何划分限界上下文(Bounded Context)<ul><li>系统的上下文（context）指的是目标系统、与之交互的用户和外部系统</li></ul></li></ul><h2 id="第六章-设计只读的资源服务"><a href="#第六章-设计只读的资源服务" class="headerlink" title="第六章 设计只读的资源服务"></a>第六章 设计只读的资源服务</h2><h3 id="ROA-vs-RPC"><a href="#ROA-vs-RPC" class="headerlink" title="ROA vs RPC"></a>ROA vs RPC</h3><ul><li>面向对象程序的标准设计方法是把系统分解为一个个功能部件——即其中的名词(nouns)。<ul><li>一个对象(object)是(is)某个事物（如“读者”、“栏目”、“报道”、“评论”等）。</li><li>每个名词都有自己的类和自己的方法（用以与其他名词交互）</li></ul></li><li>与此形成对比的是，RPC式架构的设计方法是把系统分解为一个个动作，即其中的动词(verbs)。<ul><li>一个过程(procedure)做(does)某些操作（比如“订阅”、“阅读”、“作评论”等），在面向RPC的分析中，它会被视为将被客户端调用的动作(action)</li></ul></li></ul><h3 id="ROA"><a href="#ROA" class="headerlink" title="ROA"></a>ROA</h3><ul><li>一个资源(resource)是(is)某个事物，所以适合用面向对象的方法来设计资源</li><li>编程语言里的一个类(class)可以暴露无数个方法(methods)，并给这些方法取任意名(name)</li><li>但是，一个资源只暴露一个统一接口，最多支持六种HTTP方法，这些方法只允许创建(PUT或POST)、修改(PUT)、读取(GET)和删除(DELETE)这些最基本的操作<ul><li>如果需要，也可以通过重载(overload) POST来扩展该接口，把一个资源变成一个小型RPC式消息处理器。不过一般不鼓励这样</li></ul></li><li>统一接口(uniform interface)意味着，在面向对象设计里被视为动词(verb)的事物，在面向资源的设计里必须被视为对象(object)</li></ul><h3 id="资源分析与设计"><a href="#资源分析与设计" class="headerlink" title="资源分析与设计"></a>资源分析与设计</h3><ul><li>理解服务功能</li><li>梳理所拥有的资源</li><li>创建只读资源<ul><li>设定资源入口：必须有一个所有可用资源的最上层目录，例如地图网站的首页，需要将这个资源入口的URL公布出去，作为获取其他资源的入口。</li><li>根据服务确定需要暴露的资源：一个服务可以暴露很多对象，每一种都有自己的资源集合。比如我们要开发的地图服务如果要提供可视化的地图展现，就需要提供地图图片；如果服务提供地点的精确位置信息，就需要知道地点对应经纬度（这些数据可能存储在关系数据库中）。</li><li>作为查询结果的集合资源：地图服务通过资源来最终暴露数据和产生数据的算法，比如地图上的路径规划，实际上是一个有条件约束的最短路径算法，执行以后会得到一个地点序列，构成路径。</li></ul></li><li>给资源命名<ul><li>资源命名需要精巧地设计，确保资源命名规则的合理、规范、一致，更重要的是要易于扩展，因为很多情况下（甚至可以说绝大多数情况下），资源名字都是由程序自动生成的。</li><li>针对资源特点和设计经验，我们的URI设计基于三条基本原则：<ul><li>用路径变量(path variables)来表达层次结构(hierarchy)，如: &#x2F;parent&#x2F;child</li><li>在路径变量里用标点符号表达多个信息，如经纬度：&#x2F;24.9195,17.821</li><li>用查询变量(query variables)来表达算法的输入，例如：&#x2F;search?q&#x3D;j ellyfish&amp;start&#x3D;20</li></ul></li></ul></li></ul><h3 id="设计资源表述"><a href="#设计资源表述" class="headerlink" title="设计资源表述"></a>设计资源表述</h3><h4 id="传达资源状态的表述"><a href="#传达资源状态的表述" class="headerlink" title="传达资源状态的表述"></a>传达资源状态的表述</h4><ul><li>传达资源状态是表述(representation)的主要用途</li><li>“资源状态”就是有关资源的任何信息。在我们的服务里，资源状态将回答类似这样的问题：<ul><li>某一个地点的地图是什么样的？</li><li>某个地点的经纬度是多少？</li><li>附近哪里有餐厅，它们都叫什么名称？等等</li></ul></li><li>不同资源的表述传达的是不同的状态</li></ul><h4 id="推进状态"><a href="#推进状态" class="headerlink" title="推进状态"></a>推进状态</h4><ul><li>表述(representation)的另一个用途是推进状态</li><li>一个资源的表述应该链接到邻近的资源（这里“邻近”的含义依据上下文而定），比如可能的下个应用状态(application state)。这样做是为了实现连通性(connectedness)——通过跟随链接(following links)从一个资源到另一个资源的能力</li><li>网站就是这样工作的：<ul><li>你在上网时不是接连输入URls，相反，你先通过输入URI进入网站的主页，然后通过跟随链接来浏览网页。一个网页（该网站的一个“状态”）包含指向其他相关网页（邻近“状态”）的链接</li></ul></li></ul><h3 id="表述格式的选择"><a href="#表述格式的选择" class="headerlink" title="表述格式的选择"></a>表述格式的选择</h3><ul><li>纯文本： <code>http://maps.example.com/China/Beijing</code></li><li>纯文本比较简单，但它需要专用的解析器。一般来说，结构化数据格式要比纯文本好，尤其当表述比较复杂时，可以用结构化的文本格式，它保留了纯文本简单的优点，同时增加了一些结构信息，比如：<code>[&#123;url=&quot;http://maps.example.com/China/Beijing, description=&quot;Beijing，a city of China&quot;&#125;]</code></li><li>纯文本和Json的缺点：它们都不是通常所认为的“超媒体”格式，即没法直接在浏览器中解析使用，如图所示腾讯地图返回的Json格式表述在浏览器中的显示结果仍然是文本；而XML格式的文档中虽然有自描述的结构信息，也没有用于展现的格式信息。<br><img src="/2025/06/03/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E8%85%BE%E8%AE%AF%E5%9C%B0%E5%9B%BE.png" alt="腾讯地图"></li><li>折中：XHTML，可扩展超文本标记语言</li><li>原因：标准的XHTML文档兼容HTML，保留了浏览器呈现格式所需的标记，所有浏览器都能够正确显示；同时，XHTML又是可扩展的，每个标签都增加了一个class属性，通过使用class属性，可以传递资源的更多信息，比如：<figure class="highlight xhtml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs XHTML"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;Map&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/China&quot;</span>&gt;</span>China<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">&quot;/France&quot;</span>&gt;</span>France<span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span><br> ...<br> <span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>这种为XHTML标签增加语义的方式又称为微格式，微格式是一套建立在现有的、广泛采用的标准之上的、简单而开放的数据格式。</li><li>这样引入语义信息对浏览器等所有现存的Web技术冲击最小。</li><li>下面的一段文字通过class定义了明确的结构语义，从”adr”、”street-address”、”tel”、”email”等这些属性名字看，这里表达的是一个地址信息，这些内容可以被获得这个表述的程序解析使用。<figure class="highlight xhtml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs XHTML"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;vcard&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;fn org&quot;</span>&gt;</span>Wikimedia Foundation Inc.<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;adr&quot;</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;street-address&quot;</span>&gt;</span>200 2nd Ave. South #358<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;locality&quot;</span>&gt;</span>St. Petersburg<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>,<br> <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;region&quot;</span>&gt;</span>FL<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <br><span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;postal-code&quot;</span>&gt;</span>33701-4313<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span> <span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br> <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;country-name&quot;</span>&gt;</span>USA<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span><br></code></pre></td></tr></table></figure></li><li>这段文字嵌入HTML中，在浏览器中，会显示一段有格式的资源信息，可以尝试一下，去掉文字中所有的class字段，显示的内容是一样的</li><li>XHTML微格式实际是为现有HTML元素添加元数据和其他属性，通过XML把结构语义嵌入到HTML增强语义，兼顾人机可读性</li></ul><h3 id="规划服务交互的响应"><a href="#规划服务交互的响应" class="headerlink" title="规划服务交互的响应"></a>规划服务交互的响应</h3><ul><li>服务的设计者需要有非常清晰的思路：在设计时想清楚在服务双方的往来交互中会发生哪些典型的事件？</li><li>用户向一个URI发出GET请求，服务器返回正确的响应代码（比如200）、一些HTTP报头（HTTP headers）及一个实体主体（表述）</li><li>这里最重要的问题是：客户端的请求和服务器的响应里分别应包含哪些HTTP报头，以及，确保服务器能对客户端的请求作出正确的响应</li><li>HTTP响应报头包含很多信息<ul><li>Content -Type是最重要的HTTP响应报头，它告诉客户端表述的媒体类型(media type of the representation)，对于地图和搜索结果来说，<code>application/xhtml+xml</code>，对于地图图像来说，<code>image/png</code></li></ul></li></ul><h4 id="条件HTTP-GET"><a href="#条件HTTP-GET" class="headerlink" title="条件HTTP GET"></a>条件HTTP GET</h4><ul><li>有些资源不会变化但会被多次请求，大部分时候，客户端对一个资源的第二次（及以后多次）HTTP请求完全可以重用上一次请求时获得的表述。此时服务器返回一个表述时，服务器应该为Last-Modified报头设置一个时间值，表示数据最后更新的时间。当客户端再次请求时，在If-Modified-Since报头里提供那个最后更新时间</li><li>加入资源发生了变化，服务器返回200（OK），并在实体主体里提供最新的表述————与一次正常HTTP请求一样</li><li>若数据没有变化，服务器将返回304（Not Modified），并省去实体主体，这样客户端就直到可以重用已缓存的表述了</li><li>优点：客户端和服务器双方均节省了时间与带宽</li></ul><h3 id="只读的面向资源服务的设计过程："><a href="#只读的面向资源服务的设计过程：" class="headerlink" title="只读的面向资源服务的设计过程："></a>只读的面向资源服务的设计过程：</h3><ul><li>资源分析与设计</li><li>设计资源表述</li><li>把资源互相联系起来</li><li>规划服务交互的响应</li></ul><h2 id="第七章-Restful服务的安全性"><a href="#第七章-Restful服务的安全性" class="headerlink" title="第七章 Restful服务的安全性"></a>第七章 Restful服务的安全性</h2><h3 id="如何保证"><a href="#如何保证" class="headerlink" title="如何保证"></a>如何保证</h3><ul><li>对客户端做身份认证</li><li>对敏感的数据做加密，并且防止篡改<ul><li>常见做法：部署SSL(Secure Sockets Layer 安全套接层)基础设施（即HTTPS），敏感数据的传输全部基于SSL；或者仅对部分敏感数据加密，并加入某种随机数作为加密盐，以防数据被篡改</li></ul></li><li>身份认证之后的访问控制<ul><li>主要是由应用来控制。通常应该实现某种基于角色+用户组的授权机制，即基于角色的访问控制（Role-Based Access Control，RBAC）</li></ul></li></ul><h3 id="身份验证和授权方法"><a href="#身份验证和授权方法" class="headerlink" title="身份验证和授权方法"></a>身份验证和授权方法</h3><h4 id="Basic认证"><a href="#Basic认证" class="headerlink" title="Basic认证"></a>Basic认证</h4><ul><li>认证模式：用户名+密码+Base64</li><li>每次请求都带着用户名和密码</li></ul><h4 id="摘要-Digest-认证"><a href="#摘要-Digest-认证" class="headerlink" title="摘要(Digest)认证"></a>摘要(Digest)认证</h4><ul><li>认证模式：md5加密&#x3D;摘要</li><li>过程：<ul><li>服务器产生一个随机数nonce，放在在WWW-Authenticate响应头，与服务器支持的认证算法列表，认证的域realm等一起发送给客户端。</li><li>客户端输入用户名和密码，并计算出密码和其他需要加密的数据的摘要，并放在Authorization的请求头中发送给服务器</li><li>服务从请求信息中提取出摘要，与自身保存的用户名密码计算所得摘要进行比对</li><li>如果验证通过，则返回：200 OK</li></ul></li><li>随机数作用：能够防止完全相同的请求的重放</li></ul><h4 id="OAuth2-0"><a href="#OAuth2-0" class="headerlink" title="OAuth2.0"></a>OAuth2.0</h4><ul><li>Basic认证和摘要认证都是单次认证，每次用户发起请求都需要重复认证</li><li>认证模式：用户名+密码+访问令牌+刷新令牌</li><li>核心思想：用户使用用户名和密码登录系统后，客户端（用户访问系统的设备）会收到一对令牌，包括访问权限令牌和刷新令牌。</li><li>访问令牌用于访问系统中的所有服务。</li><li>到期后，系统使用刷新令牌生成一对新的令牌。</li></ul><h4 id="Bearer-Token"><a href="#Bearer-Token" class="headerlink" title="Bearer Token"></a>Bearer Token</h4><ul><li>Oauth2.0规范的组成部分</li></ul><h4 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h4><ul><li>规定了一种JSON格式的Token实现方式</li><li>包含：头、荷载和签名<ul><li>头：包含加密算法令牌类型等信息</li><li>载荷：包含用户信息签发时间和过期时间等信息</li><li>签名：根据头、载荷及密钥加密得到的哈希串，默认使用HS256 （HmacSha1 256）。作用是保证JWT没有被篡改</li></ul></li></ul><h3 id="Session-vs-JWT"><a href="#Session-vs-JWT" class="headerlink" title="Session vs JWT"></a>Session vs JWT</h3><h4 id="传统的session认证"><a href="#传统的session认证" class="headerlink" title="传统的session认证"></a>传统的session认证</h4><ul><li>http协议本身是一种无状态的协议，为了让应用能识别是哪个用户发出的请求，<strong>只能在服务器存储一份用户登录的信息，这份登录信息会在响应时传递给浏览器，告诉其保存为cookie，以便下次请求时发送给应用</strong>，这样应用就能识别请求来自哪个用户了，这就是传统的基于session认证</li></ul><h4 id="基于token的鉴权机制"><a href="#基于token的鉴权机制" class="headerlink" title="基于token的鉴权机制"></a>基于token的鉴权机制</h4><ul><li>基于token的鉴权机制不需要在服务端去保留用户的认证信息或者会话信息。这就意味着应用不需要去考虑用户在哪一台服务器登录了，这就为应用的扩展提供了便利</li></ul><h2 id="第九章-星巴克案例"><a href="#第九章-星巴克案例" class="headerlink" title="第九章 星巴克案例"></a>第九章 星巴克案例</h2><h3 id="案例的意义"><a href="#案例的意义" class="headerlink" title="案例的意义"></a>案例的意义</h3><p><img src="/2025/06/03/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E5%92%96%E5%95%A1%E5%BA%97%E6%A1%88%E4%BE%8B%E6%84%8F%E4%B9%89.png" alt="咖啡店案例意义"></p><h3 id="需要解决的问题"><a href="#需要解决的问题" class="headerlink" title="需要解决的问题"></a>需要解决的问题</h3><h4 id="通过缓存提升可伸缩性"><a href="#通过缓存提升可伸缩性" class="headerlink" title="通过缓存提升可伸缩性"></a>通过缓存提升可伸缩性</h4><ul><li>作为经营者，其实很不喜欢业务波动，不希望给服务增添负担、或者徒然增加业务流量。</li><li>为防止服务因过载而崩溃，可以使用一个逆向代理（reverse proxy）来缓存并提供那些频繁访问的资源表述</li><li>在架构里增设了Web缓存（逆向代理），再加上有缓存元数据，客户端获取资源时就不会给服务器增添很大负担了</li></ul><h4 id="无状态性"><a href="#无状态性" class="headerlink" title="无状态性"></a>无状态性</h4><ul><li>所谓有状态指的是要求在多个异步操作的序列间维持事务资源的一定状态，但这就阻碍了消息的自由传递，因为消息只能向特定服务器传递，系统无法横向扩展，这也就等于损害了可伸缩性<br><img src="/2025/06/03/%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/%E6%97%A0%E7%8A%B6%E6%80%81%E6%80%A7.png" alt="无状态性"></li></ul><h4 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h4><ul><li>重试</li><li>补偿：补偿是回退所有已完成的操作，让系统回到一致的状态。例如：退款&#x2F;重新发货</li></ul><h4 id="善用状态码"><a href="#善用状态码" class="headerlink" title="善用状态码"></a>善用状态码</h4><h2 id="第十章-RESTful服务开发-Jersey"><a href="#第十章-RESTful服务开发-Jersey" class="headerlink" title="第十章 RESTful服务开发(Jersey)"></a>第十章 RESTful服务开发(Jersey)</h2><h3 id="服务设计步骤"><a href="#服务设计步骤" class="headerlink" title="服务设计步骤"></a>服务设计步骤</h3><ul><li>资源分析与设计</li><li>客户端表述的设计</li><li>服务端表述的设计</li><li>暴露资源可执行接口</li><li>多种资源整合到一起</li><li>规划服务交互的响应</li></ul><h3 id="服务开发步骤"><a href="#服务开发步骤" class="headerlink" title="服务开发步骤"></a>服务开发步骤</h3><ul><li>设置开发环境，导入必要的框架</li><li>开发环境中创建一个web工程</li><li>描述服务接口</li><li>实现服务功能</li></ul><h3 id="Jersey常用注解"><a href="#Jersey常用注解" class="headerlink" title="Jersey常用注解"></a>Jersey常用注解</h3><ul><li>@Path，标注资源类或者方法的相对路径；</li><li>@GET，@PUT，@POST，@DELETE标注方法是HTTP请求的类型；</li><li>@Produces，标注返回的MIME媒体类型；</li><li>@Consumes，标注可接受请求的MIME媒体类型；</li><li>@PathParam，@QueryParam，@HeaderParam，@CookieParam，@MatrixParam，@FormParam标注方法的参数分别来自于HTTP请求的不同位置。<ul><li>例如@PathParam来自于URL的路径，@QueryParam来自于URL的查询参数，</li><li>@HeaderParam来自于HTTP请求头信息，@CookieParam来自于HTTP请求的Cookie</li></ul></li></ul><h3 id="Path"><a href="#Path" class="headerlink" title="@Path"></a>@Path</h3><ul><li>定义资源的访问路径，注解的值是一个相对的URI路径。client通过这个路径访问资源。比如：@Path(“user”)</li></ul><h3 id="为资源方法指定符-resource-method-designator"><a href="#为资源方法指定符-resource-method-designator" class="headerlink" title="为资源方法指定符(resource method designator)"></a>为资源方法指定符(resource method designator)</h3><ul><li>与HTTP规范中定义的方法一致</li><li>@GET, @PUT, @POST, @DELETE, @HEAD</li></ul><h3 id="Produces"><a href="#Produces" class="headerlink" title="@Produces"></a>@Produces</h3><ul><li>可以用于注解类或者注解方法，指定返回给客户端的MIME媒体类型，即服务器端产生的响应实体的媒体类型</li><li>方法的@Produces注释将会覆盖类的注释。资源按照指定数据格式返回，可以是XML、Json等媒体类型。</li><li>可取的值有：<ul><li>@Produces(MediaType.TEXT_PLAIN)</li><li>@Produces(MediaType.APPLICATION_JSON)</li><li>@Produces(MediaType.APPLICATION_XML)</li></ul></li><li>服务端可以指定优先回复某一种类型，如下qs&#x3D;0.9指定XML格式优先级更高。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-meta">@GET</span><br><span class="hljs-meta">@Produces(&#123;&quot;application/xml; qs=0.9&quot;, &quot;application/json&quot;&#125;)</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">doGetAsXmlOrJson</span><span class="hljs-params">()</span> &#123;<br> ...&#125;<br></code></pre></td></tr></table></figure></li></ul><h3 id="Consumes"><a href="#Consumes" class="headerlink" title="@Consumes"></a>@Consumes</h3><ul><li>指定可以接受的客户端请求的MIME媒体类型。只有符合这个参数设置的请求才能访问到这个资源。</li><li>例如：@Consumes(“application&#x2F;x-www-form-urlencoded”)接受表单数据；@Consumes(“text&#x2F;plain”)接受纯文本数据</li></ul><h3 id="参数注解"><a href="#参数注解" class="headerlink" title="参数注解"></a>参数注解</h3><h4 id="PathParam"><a href="#PathParam" class="headerlink" title="@PathParam"></a>@PathParam</h4><ul><li>用于提取路径中的参数<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GET</span><br><span class="hljs-meta">@Path(&quot;&#123;username&#125; &quot;)</span><br><span class="hljs-meta">@Produces(MediaType.APPLICATION_JSON)</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-meta">@PathParam(&quot;username&quot;)</span> String userName)</span> &#123;<br> <span class="hljs-comment">//...</span><br> &#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="QueryParam"><a href="#QueryParam" class="headerlink" title="@QueryParam"></a>@QueryParam</h4><ul><li>用于提取查询参数。获取请求中的查询参数，这些参数在URL中跟在“？”符号后面。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GET</span><br><span class="hljs-meta">@Path(&quot;/user&quot;)</span><br><span class="hljs-meta">@Produces(&quot;text/plain&quot;)</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-meta">@QueryParam(&quot;name&quot;)</span> String name, <span class="hljs-meta">@QueryParam(&quot;age&quot;)</span> <span class="hljs-type">int</span> age)</span> <br>&#123; ...&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="DefaultValue"><a href="#DefaultValue" class="headerlink" title="@DefaultValue"></a>@DefaultValue</h4><ul><li>默认参数值。可指定参数的缺省值:<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GET</span><br><span class="hljs-meta">@Path(&quot;/user&quot;)</span><br><span class="hljs-meta">@Produces(&quot;text/plain&quot;)</span><br><span class="hljs-keyword">public</span> User <span class="hljs-title function_">getUser</span><span class="hljs-params">(<span class="hljs-meta">@QueryParam(&quot;name&quot;)</span> String name, <span class="hljs-meta">@DefaultValue(&quot;26&quot;)</span> <span class="hljs-meta">@QueryParam(&quot;age&quot;)</span> <span class="hljs-type">int</span> age)</span> &#123; ...&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="MatrixParam"><a href="#MatrixParam" class="headerlink" title="@MatrixParam"></a>@MatrixParam</h4><ul><li>矩阵参数，提取URL路径中嵌入的任意个数个name 和value的键值对<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Path(&quot;/books&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">BookService</span> &#123;<br><span class="hljs-meta">@GET</span><br><span class="hljs-meta">@Path(&quot;&#123;author&#125;&quot;)</span><br><span class="hljs-keyword">public</span> Response <span class="hljs-title function_">getBooks</span><span class="hljs-params">(<span class="hljs-meta">@PathParam(&quot;author &quot;)</span> String author,<span class="hljs-meta">@MatrixParam(&quot;bookname&quot;)</span> String bookname,<span class="hljs-meta">@MatrixParam(&quot;publisher&quot;)</span> String publisher)</span> &#123;<br> <span class="hljs-keyword">return</span> Response<br> .status(<span class="hljs-number">200</span>)<br> .entity(<span class="hljs-string">&quot;getBooks is called, author : &quot;</span> + author<br> + <span class="hljs-string">&quot;, bookname : &quot;</span> + bookname + <span class="hljs-string">&quot;, publisher : &quot;</span> + publisher)<br> .build();<br> &#125;<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="HeaderParam"><a href="#HeaderParam" class="headerlink" title="@HeaderParam"></a>@HeaderParam</h4><ul><li>从请求的头部提取Header</li></ul><h4 id="CookieParam"><a href="#CookieParam" class="headerlink" title="@CookieParam"></a>@CookieParam</h4><ul><li>提取cookie</li></ul><h4 id="Context"><a href="#Context" class="headerlink" title="@Context"></a>@Context</h4><ul><li>标注上下文</li><li>大型的服务器中由于参数的多变，参数结构的调整很容易遇到问题，可使用@Context来注解上下文，获取与请求或响应相关的上下文Java类型</li><li>注入ResourceInfo、UriInfo、HttpHeaders、ServletConfig、ServletContext、HttpServletRequest、HttpServletResponse、SecurityContext等对象</li><li>配合使用HTTP头上下文，可获取header和cookie的所有值：<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@GET</span><br><span class="hljs-keyword">public</span> String <span class="hljs-title function_">get</span><span class="hljs-params">(<span class="hljs-meta">@Context</span> HttpHeaders hh)</span> &#123;<br>    MultivaluedMap&lt;String, String&gt; headerParams = hh.getRequestHeaders();<br>    Map&lt;String, Cookie&gt;cookieParams = hh.getCookies();<br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="FormParam"><a href="#FormParam" class="headerlink" title="@FormParam"></a>@FormParam</h4><ul><li>从POST请求的表单中获取数据；用于提取请求中媒体类型</li><li>为”application&#x2F;x-www-form-urlencoded” 的参数，根据相应表单类型提取其中的参数。<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@POST</span><br><span class="hljs-meta">@Consumes(&quot;application/x-www-form-urlencoded&quot;)</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">post</span><span class="hljs-params">(<span class="hljs-meta">@FormParam(&quot;name&quot;)</span> String name)</span> &#123; <br>    <span class="hljs-comment">//</span><br>&#125;<br></code></pre></td></tr></table></figure></li></ul><h4 id="BeanParam"><a href="#BeanParam" class="headerlink" title="@BeanParam"></a>@BeanParam</h4><ul><li>用于从请求的各部分中提取参数，并注入到对应的Bean中</li></ul><h2 id="第十二章-OpenAPI规范与设计"><a href="#第十二章-OpenAPI规范与设计" class="headerlink" title="第十二章 OpenAPI规范与设计"></a>第十二章 OpenAPI规范与设计</h2><h3 id="OpenAPI规范的作用"><a href="#OpenAPI规范的作用" class="headerlink" title="OpenAPI规范的作用"></a>OpenAPI规范的作用</h3><ul><li>定义了一个标准的、语言无关的RESTful API 接口规范</li><li>正确定义规范文档后，开发者就可以使用最少的实现逻辑来理解远程服务并与之交互</li><li>此外，借助于文档生成工具，可以使用OpenAPI规范来生成API 文档，代码生成工具可以生成各种编程语言下的服务端和客户端代码，测试代码和其他用例</li></ul><h2 id="第十三章-微服务架构"><a href="#第十三章-微服务架构" class="headerlink" title="第十三章 微服务架构"></a>第十三章 微服务架构</h2><h3 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h3><ul><li>微服务是由以单一应用程序构成的小服务，自己拥有自己的进程与轻量化处理，服务依业务功能设计，以全自动的方式部署，与其他服务使用HTTP API通信；</li></ul><h3 id="微服务-vs-单体系统"><a href="#微服务-vs-单体系统" class="headerlink" title="微服务 vs 单体系统"></a>微服务 vs 单体系统</h3><h4 id="微服务"><a href="#微服务" class="headerlink" title="微服务"></a>微服务</h4><ul><li>微服务架构将单个服务对应到单个业务功能，方便理解、开发和维护。</li><li>其次，服务独立部署，可以根据每个服务的请求量来部署满足需求的规模；在需要添加新功能的时候，可以独立进行开发，随时更新、部署，不会影响其他线上的服务。</li></ul><h4 id="单体系统"><a href="#单体系统" class="headerlink" title="单体系统"></a>单体系统</h4><ul><li>单体应用将系统所有的逻辑都放到一起，所有的功能模块都整合在一起，逻辑复杂，代码臃肿，任何一个模块出现异常，都可能会导致应用服务器宕机；一旦系统需要扩展，不管是功能扩展还是性能扩展，对于单体系统难度都很大，尤其是性能扩展，只能把整个单体应用复制到多态服务器上。</li></ul><h3 id="微服务的特性"><a href="#微服务的特性" class="headerlink" title="微服务的特性"></a>微服务的特性</h3><ul><li>服务组件化</li><li>按业务组织团队</li><li>做产品的态度</li><li>轻量化通信机制</li><li>去中心化治理</li><li>去中心化管理数据</li><li>基础设施自动化</li><li>容错设计</li><li>演进式设计</li></ul><h3 id="微服务面临的挑战"><a href="#微服务面临的挑战" class="headerlink" title="微服务面临的挑战"></a>微服务面临的挑战</h3><h4 id="服务治理"><a href="#服务治理" class="headerlink" title="服务治理"></a>服务治理</h4><ul><li>将单体应用拆分为服务之后，需要对服务进行高效的管理，才能保证服务正常的运行，系统也才能为用户提供稳定的服务。</li></ul><h4 id="服务通信"><a href="#服务通信" class="headerlink" title="服务通信"></a>服务通信</h4><ul><li>微服务中不再像单体应用中一样，可以直接进行调用。服务之间需要进行网络通信。<strong>需要考虑服务之间如何高效地进行通信。</strong></li></ul><h4 id="负载均衡"><a href="#负载均衡" class="headerlink" title="负载均衡"></a>负载均衡</h4><ul><li>负载均衡是微服务架构中必须使用的技术，通过负载均衡才可以实现系统的高可用、服务集群化等优化性能。</li></ul><h4 id="服务网关"><a href="#服务网关" class="headerlink" title="服务网关"></a>服务网关</h4><ul><li>每个微服务在通信中都需要实现认证、权限控制和日志等通用网关功能，且通信协议多样，导致客户端复杂笨重；需要引入服务网关支持。</li></ul>]]></content>
    
    
    <categories>
      
      <category>服务开发技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>服务开发技术</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据仓库可能出的问答</title>
    <link href="/2025/05/28/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%8F%AF%E8%83%BD%E5%87%BA%E7%9A%84%E9%97%AE%E7%AD%94/"/>
    <url>/2025/05/28/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%8F%AF%E8%83%BD%E5%87%BA%E7%9A%84%E9%97%AE%E7%AD%94/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="495e622fcfb81f7c4e8a5afb94cd073010132dda46638f5c232ad7a41426efba"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>数据仓库数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据仓库数据挖掘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据仓库算法</title>
    <link href="/2025/05/28/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%AE%97%E6%B3%95/"/>
    <url>/2025/05/28/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="01f698d7918eace4ca4e44311cb84d04bbc2dd6f8063018eb75240f3119b9b0d">843c319bbffd590b79d8db7444b17f935b7ebd85c8adea1d95ffb74a9374d136bcb54c58e46a911248216886b8af7f16ef52eb73c213264690a39e600f551615190c5d3cf1f5f3e50becf4c4cb7752d2c2dbdd237be563e3bf4845187c0306e6e6a5c9f2f800f8b484dca7377aebf045660fd418d0828bd6192f910375e0d9c14ce240942050021b8959f8413be57974b308209e7edd25ae0ecab0d55d44e33554ec3a3ca7cf74adb58f05fd86c6bc6cc9bb3a744a9424c85903e5a587acbaa9e7690690a5d9f283367f43ab187b41e4ac0a45ac0234047334d3f157bc06d563d07f1a699561160a62c5f724e519703189f33e914bccaa178ee2bd6027711423e98f60fbe7eaae8726fc9a58cce759f131c44cae03ff354c0604dfe04e7b2062f3abb493d20e1ea03839b2a73f9399656e6d1a241997edac08b6a48eb8726918b22836ac2d62592c29ce658d1a6b8b4a0037e82dcdfe900ffc7059db52bfe49f58981d28e34e2fdecbc6ae0282b84b89ffb5f6a0fb5166158c0bb16d4c0610e99dcec0f4b3ec390681b0bf81136b3bc020753caf090bdcc3f7c6f0e8892506d4d6a333f7e531b47891d9ebc454539b531d46d34b44f177e920ead580039a43cda32dbdedfcc05222ede3e0396e930d2d03d66b90fd5bb19ef01b5bb76570e5e9cc014759e27986e5c016202e13bd25183b578a89f1163a76742fdd747e52b160d284a2172469609a226e7d6d9be896806375194dd5af4b39c456bc642d71443bb1f8be04baf4441a8e52fedd2a9ba88a5cbf2512e4f0a64e457e0984de4e2a73a650aa41228c5f1a79d27a98b06180c6f797a8ac1b5ac27da2e54c626bab1d0b96e76af979c8fd1e8030e53ad8bf6c86197c622ee69f7f3b83ab2e2e9ca23a7f1a340894ec10027f5acda4f563261c05a4ddca68e9ab0f7f99b945c6c9b4d8387878e7ecc123bf201ec1c2f6a9babe57a33c91e9f4b5a49a22aa12667e7a7c8f9e05b83f5e87891ccb4ba1dfd016539cf93c8e7ad62eb01b84bb87bb526c4f706dada976e12b8cbb3a0518dbd40cc14992a18a54b7e53ca2f3084e8604d2e54ae5a9a95da9c19a8998f5070408953b9b3e70dc35f788e29964a183ec8dac2d83dd8306fce69f7c6ac0d52a7014cfcea908a13f4e118cc9474ac9b1dfe0c07148f9c585362295f47d467a69ab961deaef9255fa18c64f058f162a0f5873e8527c760e7d6e63c7b92e9589fdce4fc66c0a89315568ef9ccb981ad511f61be1c30f884dfa9bcac87f54889cc88ebd7b36199f3dea33cf4bf9304d8633706d673cc0547607dd2e285ee3763b525e2f59e393fc20c91d5f99419787836f6c7c7d6d6724e9ab16c6d24fd80ff62ea20f52f13ba647a18222bfe29587217739c2a651111f94e8733bc1dc510d8ce2b25976c4582809161c4dc51b247c2ef354eadd2ea836132df5aa916131279e62f7d384485e20ec0a9535ff858cf8bdc13d1d2debcf4ab94412cbfbea0d44d183bcda33afb8809dbb9c12607712b5c2d9e63214e6728477a040cf135e6e6b96aa9d449fd98d5a3e8271e55854d81eeef5d8d7d3d8d703764d49ff5860538e9d30bdf7add6e6908ca7fd1937feaab41dbb56f3df44320e21d74d037a3adcca412c69d0a5ba235d8f8ce5f69803db828b8eaef11ef888b2096062402b324173a497a66f55fbe1b281c7baf4a608fa6767704edde5ad649e3f13b62638097196bb70bb4a9f4e3974d4455bbdf2ead877433968327d522b24cae60ec080ce32cb8664f78c37cce59d4b355e5754f18a1e1ed918b24f420e2578311488000bd7e1f92ead6fa7f17d6d0813cf26f819ebceb727c35be223d14648413aa90025577b51379fddefc5e2559733d1a704e3f357a4ce6c97fe1395180163564033d6fecffb1841a9f0b5ab174ec919881f9b6a9eb1f23a831c21fb79f29b916d9e08c7b895d4c8a32f7050e28fe8d889af1cf68faf855610452a76f775686b439198b8b6656ed0cc2abf9352801bd491c18baa831d3cdeb1cdea7fd1f17126e6c0f5a4c504359f514f7f558021a1d09269098704fb4b447cc4130cd179db6ff382aeac7eb109999edec9179a3ef7f25c73f7dfeab80f13536d79079994858d4b666f4f712dc41b4e01dda705b27bcebb6f4423ba08c8bc0c193eb198010c34c5fdaf957a08bc1d00451b0fc2e618e557fff66445246c6c834fcfef68f8f345d73a1a3d36ca9fb7f4ec65e1438dcf4e96573dafe2d216c8e68d685f49aed1dce54f3d4aff67af7d5d556ce5f9cde9bfe6c56ef5ce9e0fbeeb15dab9f49a606e68ab2f69c2a592e0d77ec9e81988576d729aa008c57678a7c44191de1617808164f46c6e7e5984c1e328c174a4d0cd2d97c0480726f7ed660fc32c412a41644d7454b5eaaa731cc873a3af4ab394f185c0c7a4d273f21a7cdc9966884ced1ac06289f419df05230da84874e653abc4b59b688d44de78b56d5863a343ecfcd2cd2b6b43423d64637cac7d46715b48339c8861bb6eae89386276fc6dbbadf9d80ea708cf71ce13a84aa4d7de45c5eb2ad797d755001103e039d0953e8705b37ca6c934bb7680b1da09a643d8e246e10a94db5c8b837fe5173788e4666c7de012c7335a937b3a9f7582e77360164ad12f63e2f0ad153ef0c4ada5541d8268fe046b2044e106af66fdd0823cdd9c8b862fbe2b47e93d92bb11ca216208a4ae070f7febecabccae4082fd4aef9a87b63dcb2143a7dce88712d7be2b7f245f216b6cc34b21c21ae96ac9cd4299308790da66d4f5018f4bb09743da9e995670150a437dda5c1c19d334c725747842f7e3a389a065bdb475bea93e73dd7efd93b8a4849c527584ac2de02b658e9520f9df0b6fd8e3d055ef71b35bffd3deefac8b046af77e2758f6c072f4d5328dc1252d201b9dfa3cf99b7494de7dc50f174f8c87a180f4be7ee45241ed9f1999c54e5ee2e83eb18b1cb67018cec5362e0ab079cd471dc8d9a49465deb39d63a8aba16ec9c3fd56b2f5e174765d102a3f63a4d1afa1aeb212fe72553404414485d702bc8e5ef0711e353470ec7cf9dd8cdbbef9b2afe6cdb9bb2a71e331282c531fd7938b52634920bf624c504e02a35c118bc05763579864f552ac267fe0f317069b7f7c8a15aa590b1e83ed5c0c86c0da1a6e506ce6db70b13ac3673aa8133c6874e54f564ee69559f223a77791a3f4210ffd5c7e27550b03cb0913f106dd8b75f74d19c0fcef47b48f3d53fc53c2d574d0265234f8cbac11c7b3e607aed258e6166c75de62983437b0092b77629176ecff0d3a0c2da206f187899d734c249493deb7921b5a89de16ba678ad6972f670675b9f948ae00bdb3cf759cd535aa86b7b1f66aab0083357fab127a65ceb090b794294fa94deebd2e0031580f50b5c0705d0fe262111ae939e4a10c3c4b7a077c8fdbcdcc6884177c050062999bf88ec10a0c8792a99e54fdf9103ecb6904de0adf1179acbc229f6f743e9822fb9cf8a0f26baee1f327b445959cd8ea7c39c59f3c3f0ea7002c3dbd7203775afe135466f4ef917e7a541f9749017e017cba11a5a50bdfefefea20af7838c2a361efa408afbdd9bc617eda798cc2a7935414b26020a250568853489db0af5850002eed5facb63b8ff640869f0371bbe20531bab7eb99af2516f45a5e843515066843425f01753fa537cd1fbe189acd6e38b295699e439553ca33b6df83b662a5173d53e2ada33c7e626260365ae2b00c657f0fa29f43405b47e0ac1c216197f6be11d8a1c32968a144cd107240e3120c7d4f48b2597c66865189ef372b0b33ca2e7c03f8a5230d8173267a05f9d15574f7f58a518a2805e2df0ea5af0a2f3c2f5b2ffc55d9dc5b277873e0655029fa2b39d4ef365f7dd52e3f8d79c141aa081649a158d0cac1ba3f1883b560353f754dba19307aadb5c9bd9d624eed5c6b70719bb7684f728768f56c09e385b861fca4410e16872382f9d28068935f0ebbc58f3df94e7082b61434b59865ec7a541714b354d987358e95885e3b80085cef883e946a001f83b9433288d7c9e5d1e1f13d134537e9d11b73af315e1351df76682fe4051940289414ea745bd59cf30bfdb98de034eb6cecb0fdbe22fd300456c34a1c84994ac6f52f39c39bf1233262fbd396b4778bfb4aaf6cd58203c3cd3c85095c247d40b0e9d2b3b343520b1eff2ca9f1892b5c3be097420119c1c4a81cf7f2f7c802ccd83e6214dbef1b3ef97883a1cfd10d8b75cf9904239444a0268c349ef9467391c45467e6b62f0a94ce675a7524fbbcf2b3a4f4eee52adcfa133d708fc56c344513b05eec30f4cc9c4863a4aa02e65e029493c536dca3a54f3a28ad2fc5300a49efa8c27e8072c0a42819796f7802dd77775cc3ccd596039c23dcb3bfa192ae3a8bb200320d1c771edd11b02af94596a0f1cafc32762948d22dbef5af16fd6705103ed4f78df98b5da5c697d971c72dd3f8cb0a1ca685eda973380df4f3439c54384946a67c5f43b3e0eedd2998b93a84f47c704b9854a10f986653ec5131d60e6ffebdad50b80937e4e79490bb25dec705995630d1068a675436550585121236db8412013ff966e7cabf8590834b9b642ddcaac8955ba3c1d98c8ba8bc53ee9c97779b80ee0c5f228489cd7355a57693b53b820ab428858b654215b04ce92c63a1f9bf34a92f4a705ec02bc4f6a9ec7b683fae2f7953670b278f33d4dc34180fafd01cd950c5656691ed975c8c3ef5e6f4edb74cd1fdc911380dfbefa0674adafd1b166c8217850fd1debce2e17861620d9438519fce6e4d3d595a39eeeb1c4baa90088ed7649a1a0a85974943d2c7256d43e2563d44e88c27cb345819b6c7387f8056f2743cd3aecc3dfad558247008ce7ae9d50cfddb617f5806b14b9dc0628860638ed26f04193ed9009d5343d9e79bc41d67cba264173aa2487f3b4871a25f227b93bd9abbca3fd016d144c503a7eaecae9ab4387b7547f05c5e43218a643342d03f2b81b5be68420cdcc202f2437690f63764898c06c080441126c906390bafe9cdfd444a87e18b59c0558b54c2c58378b57aef70fea0810e514e4f260918f7f7c70b4c9bb3a5e2214084480ea5e610d31a2e41d8bcfad4f23ebf660effda5fba50e060d96c70681d78f7734565cee0e692d916a54dbbeee5be0b605e7537397371585cd65580f1ab3d6e0ee6463007104e92d22f4b0dd9a38d639eae54a6f9c2c260a29b0d639bf78edaf7e6bdd50f307e41a6eb23b638c3744cf56cb56b22e68c824e5bfda376131e0dd00eeca923896b09c6ecfbb2957249c1b6f37c1f5d4c0a8445539d4f7c051277ae96ba389041adc99d002c6db71e2372608db19eb0680771f64a58e623369661a43cc4b40331a1798434b339e753ffd6d1d8ba94e153cf015484da959a37c2b74d970ecfafd20fe2c3990dae9e141ad651b5c75df51d75da747eccc0577bdaf7876567f1a3df6a5d2fbda827be22a93fdd446ba9fddd995133ba04a2d82597e5487727cf2785d0ee900efef6d6d51dd437d79c25f05c0b066245ce35e6ea5bfbfb66e435051f058a39d84fde184b99abd6ee4f2e44add9e3ccbf6f36bf09d778608e0e80f3e108c131391798836645b36a685cd5dd329e95de88b424d35a4d55fb580941a31294701b78beb15b8b5c1d95595aba6104263236743455a4d05d580f2cb2af73b02dd38acf862b06c5199e53d1559a35207c1bb90b6a651b12d10e75c22f83fe8f1c0b2acdb59e901b5e07d97d72b414696778722c7c48e5fd7c4e5e879a4b85def5aacb0a7b10713264deeb7d9fafbd7ee808e950b862ee217e0b3ec59c6810bacce34a506631ac90d5e30c62d32d726984b3927c8164388ab39d23a06395cf16ae8f1ed21661c081210f8d12f41ac70dc9665310f5b706e9957cc8d1720a784c67e1a122ab40d5c3cab4ee2468183f1079d78a79bfb548603069200fe8f45c8fb280612852af4ccd13c13121f440a3fcf23949ca110827d9ca72dc9312126b86d1d5345501f5ea9c46bface9a7693184d6579b86efc4fe6a8a4e83657d7e77d83f8058d493f89e6d6db0fc174e6f505fde0df57fc87ed12bf3b540f8ced978fd64fc872ceac79e07946f548ced4fddd1af9b1d26e55742c0d4fcb4d25415c319fdc2562f27673cfe60a2e98523ebdc34c8bebbe3fe384e85ad1f620b9a1e60dd1f58c6e1f653d4e147f8b218fb4fde5c711c8f980c2abd6384f0034019f2d7b9e73cb266d7a80d7ae031eedd32ebb799996bf8487d9556f46e1838573c1cf14a6fae30afa6505848de0333ffff7b8ebad9c6357694060eb746bee86ff434ff864e973f3c8e9b1fa3f7ae4c53ef5309a5c03de423f69bfbe62985271197d496da0baae9026a3efb1a9d8a4f9439fc8dc3c51637db8c16cd28d9e05cb04d59a2213192ddc9214d41e3abc116f0fd56a9c91b1fbad01e13d3dcc118a20923cd0a9244e1d635645fe299f83ed76150d6a205cec58ee8d9f905a0d080c48053509b50a88c164c7f37be5b01aa208e28c3b483d2ebb4155e57ee6764b9996a55cd82156ea211d8f2b6f0bd0198a0185c92579e2fd7559992fa86234604bf467f62e76db03f63cb48335098ca11707571641394b47ae6eb3ec897640d0bc90f8bfb982a28f762433b87b9c4914fe39cdda0098b2f764d9de9b87accaf3a0d80d6500885f7ede17448741b63f474be8953b4141d47f4a18e7d30d995bf76cd8a76d4e971bbf3841c7527f3c77475e24e8ec9005cc897050113eb7f93cdd011ae349bcddef275cfd5d7082fd6e3b0e92761e97be092ab13721e627c3ee192bb3342e6c6ccc707a1d91f00e7452eeec82e74bfb49c4ba01722d681e9ad39dd82f05fb50858ed0d520430a5c8d62629593e69d2bcc14d58a82e7366ff1c52782492d853603526e7468921618eb602cdd5ddf36618a7a0b3bccd1949b24a2618e1d2bd8450a2d7ec761164aff8f4a313572190813bffee4482cc2353a20b971513d1fb5248a9f09d2df80c407879aaf4fcd6f4a77eae802b96d5d202adc479172c8efbecd72aa3e774b3b59d586ac59ebaed335d888d255abb22cd5fc7f45a7daf17d7af9653831acd9c992d12ce28555cd27519d3c4d683ca9d4fac7f13571ef94edb8110563214c2638d98fcafdbf292f377dc706f384caffbd7149eb7011be856dde08e0dc3543cf33232e312dac07a6b70117ccd77d787b2303ee5b7b396306c0465fda50fc60aacec5298420c074b5055d32970bc2c1fbe57c4447b8759da7b4153ae521f2f3256311b87c4dd513c8fce0103018d800d769695ae65d968eb8d33820ef80412d2711eeb3fcc4cf432388b5f5fe00e52c85c2bf455d1a1e9a61ec28cd7a8d27e2c12dc61315c4d70e49701ed27d8336c392f8a311ddabb3165f8f79a2cc54c2bb2dcde0b5b4a47a08b6d446dcb820cd9ccea73d410b145f4d38c9fd063efe5f16d7ff7ee74b47a530d413303a41273d35e61186e1e418e1fef5bcc667210a3515c85cf8278565cec9a74f56d82d9c3bf13b7c02164719433ac446c6c2c54cf1e6b85a4888b824a27e1ee69af4f749b48ae4d9627d3f9cf36aa7d288def016d747c388e6401133b4d09db7c105f02f67952e12593eeaf781e20122c2ee4943e8cac08d41c37096bf8845f2187f979948dee5004d5069b819ec6d3ede2e5e4658f53d2964b2efa8eeed6254f657afd2db7c7a99ea13ac6f5de4ba0f3d734de5e9632e3c1c4de87a6432e68c55c81e1c5a913e0e955923550262c2addcbb53c1a26e4b378909c541a5963946ff7f08570be42159f454107612782ffc376144c984e53e81df71c9508b397342527b2611e860765a19b94e23a49027ab8ab2de41d5b5bacf3af8ba1071d850474c23bdc4dc94eaa02e48e964e04be4191cb6f011c083610333c89fc89c32b727ad807523670a80fa992cb1f04c6f8702bf989ac48aa09f9ec44069b1ccdcb80c327348bf5438d435378517f749b4e50a58b033da59cf09a4e10a5d2f3679db89608efe7a36f70ef7c0584805dec9955544f13bab83139668e58735e12e4243f8aaea38c5d8a27ed437e094b5682210c129721f75d58b87c9cbc77e93d44d31e9102144123f5672f7546dc3cac513d3a3dca008c78136e27e00c419a9af08189448c79d43d724832429c07c971ebabcda237a35cb301a310f93e0c0dabccd69bd0bb5eae934924d39e90964255cb588ff95a2ae646105678cc6bc14e40c0930a0501ea68dc595f2bf60b18662270ee47f33acaab17ef322b71cd1d1931eb3a9f15f0d1232f834f1925bf328fc652f4cf973420b7c9eff7a07fdaf7e3499a13134b2e8c7a868625614536347bb39600877478f906b94519c8d3fa8658d292da81041f6278bad55b6a05a9634a260a7f9fca0f3abcff761b48afd4b42e21683a90c6b3b08debbd710984a408929912dc3f606a312a7f258af8c96503ef9c0f40663540c256189b1b1c368430a77487c25ca198e3ec55e83a5b27fe7473683ecd14fd0ce5dec3b59d90d889eb41beb6638c12e434b9b99163c0cef10111984b5c3e6817541e98ec8182f7fd740b1e561584fa1b33db4961e2b2f3c80de48b9b381f191e175956a3d9f7fb765a86383b2c248d702d7e726e2b69257783c4e22149a4212b935aff5fe5dfa34556a0a209c3b07cb24dfc762c3c328996606862ff26d6918045878b374b3ca5917856dad71f9ea4dcaeef4150ea97bce7a4ff7adb6d2ad7b94d76f26b2a7ee0eaf8aed31aab7cece30b7581ed73351a6dc5dc5b2ebf21911dee33b09b1223045be00e5de7a6b2269eab48d610c1306fbad872ac66292c8f964d732b14dc8e43a87ff8fa66f0e007a280fad76c599f9f281c0d6c8d0a457e2166bc65aacfa50c4f11c44907f2f70fcd6e55730126f70cb247f4237979638bc1bccabcadf9c86a3a8c90a7dc55dd464f81afd2114cf70e3b2eac48d6de4cdc507e1e641520d27a5028401957e13add721d40f5171e81d9385fc31c41b86f970a2d67f2e690f1fed38b24df4efa21a93d5b7ec672cd199121519781f84ff727f2d5b641319160c230635239312de2f09d632bbd0db18bcbcbef7097a1a51c6ff6a2799a5becd7a9fae4c52ce5188153ac1f27e65c069b4a214c8cb6c67262f223d44c27411580c87fb9ba129187e40b2faec2293202d0a6a8578220ccd6de8c1199f30065aa07a8e69e36283cdb754726584659c9916ca919cd5c66fdeadc9abc0c1b6f06e3f83f3179f5a982d31c1bb2e7c63c87828a4702944449f6d90bc468a3881df12030d82d45cd51c0e6e9ec8dfd7500c0cd8dfb9c47655c54f27c94913e2a694b3a348036ceb0d3fd741d439c00815156db4eae33eaa2ff732b889dbbce084ea7d096f6c935d5d02775c2cd066d75d2f49e8a8dbe7d0e28ad3e0462043e3b5f6065eb470a5a8248b0ac17e9cd1c3076b056a540a0d894404453e0ed2c8bd76fae7c16ef601337ba667add681c2062be6fd57daddd851b02353a794ccdc458fca1d2cb7d5431a41e37db3f09f86cdfb8529ff593293b72192208cf45ebb9540cbf2e8a08147f052e450626ef9b4eaa906d109611d8b858cf0bbff1af6be3948224210a62aa50e4a388b8afba123ed7f59b3e95a333c6d88cd480219c49f7902b71fb540708fdf9ed2835cc933944bcd4caa564f6c5651e39841fe420469f38916375d8c245636542566b42c8c4397c109b4b06ed368ea7a4a22abb30366a8507fe8b19734a227f57907d06185aabc0ccf61f92ceef6293b1827417d8a13d2e17df71d3a47d3106fdc69ff31fd9e0d390b3a570ed716bd0c9e97b7128f3bb14b4d13dfd777311d159caa48dba87e205263442197fa165993e35432c37fd78a81dc345025ef5ea3290fa1233da7e31cf44962c1c50a624368ecbae4fb5f9cfde17087ea3db01d4f6b99911937080165141f0333142453a21513ca8673438020f7a64dd02abee7fb87674baefb9458c9e74a864c0127f87dcd4a6f553eeaf09c6fefc9e01a38ae8065217c2d046dabcd478a49784ff5fbcb3f85499fe9ad2557e3d9047e54ff33c3a8f822479e4d79b602704fe9e3b17f6b1118b13546484f14f67bef0679bcea10fa056834208b9955074691beecf5a698f6a028086ac726be728214bc4fa698e3c37042b690d64850119b659f17c2da63f35da5db502266ad3c889adaf4410d2158665662da72f33f43c27ba8570da8595a3180b98c45c9db4b89d98734b16715217b9bb8b6ccd6c67986a4931ec9f3745818e5e77ac5c1aa85765258fe514d12cbb98557fec403d0a2f333f8ec9d2b64dd23dd32ab3114dd71809b8af8d3e1aa23a6a12f0d1294d0d0b5164e30d9069af431f8281f97ca1afa355338a039159408ab3e75d5cab8a2f71fa55271f2f90b5ee35596fd35261133aa88a981c60f79997b782bda158d7f007845a522917f471b1a6f89c63cacf8e1ce9c14167e8acefe120f4631739e52a77a5fc391feda307b9d53fd66ddf96883e06a461d8a12655947855250d5e768a054dd3bd0ce8ed44a6ceb73ab6131a5949b1cd5683dc0e6f35289821ababe79372f50f52a8c505680cdbcaa4cf247f47778f44e5035946fdd48512af34af576d114003a0e3cb968919a7eb97f47d3408adeba46efb0cd604ca69530d87a225c5e243fa5ee1b1a5718f8be95d283d085a0d790449bd24956955d2175cacb1a97788deefd68ebed7f31cf0c68626ed01a6edf792a6b6a8476b1669c7365255f826e25cc7b91f3d16d74c47277f05cb9935baa9ea6739ac25fcddd18a2007ee584a63b90a3890834d407cbfbee22c884e61b86265ae521ab9057fb9b05e8bced2085523a0a08b69d97d51a475263607f4377d327349fa8f1ef4c359c3d1f5805b8807cfbbb09f28c2f4e99605b1aca30ea47414f0989a431fce9272b7a5f0bb8a00af94385a8d91a00f959b6721ad50326274284c9bef1180ddc863fe343de9e6068735b9cd74f3d7dc5a23cdb5485895500c62677b8e1c8ed985bebbddb65358f8f11593da56825eb8f3f2abada107af03d45e9251d4c1f3c63e313d2fa6ffe613bedd61b35861016cdb0bd6b94c0a8d793e62f2a5c292fa1ecb627e8f6eb589eb6bf4deba917ab430993800b1929d8ba8c128be14afe6f498d95688cf4a4916955045a5a0a4c799d06921dd59744e1ecbe875ec44ecaac53fcb3691aa893ae1079a9b24b10a7a1401be5fca4137e8a171dc5a1f960d60f3b2ba6932576d680778923fee6d23d7833ceaad8c91eeebc0a2023962e9b68d2b58ad3bd9489b78a75b3c7d34d34dd5f877adebfb2682aa86aa60f3604e71ee24d23ff5f779fd114ef55706f8aa2f685a17bebba52c9a458f1ad45eab28005811d03783be07d6375b4b2aadb8170c6651045bf9ad89b5e0e91bfd287351c0bc5015e92f6c6dda7be4d23e36295a10d0dfb8be52b8a44c6db13656c64463b73b622bef013735f4336a4863dba8bf168888adafb736789897aecb793b7fbd87f9f3f867798c65f5790a28188e7fa73d778b3e5d52443ff2fc1de489022dc07ffe6a4690a4c1a13f243e8c93a4bf8479c27c94d743d6da4eee7f0bea4f7812922c21612a36439ca259f021534d6b9428184318ec34e6587e4729c4700f7b7a71bdeb7e36fdd087cab283696cc26f6feb931ab1f53a0e8ac0f74e14eaa799d371bab2713891b265670ef357dd3a28e04563c030ac0056278e08c7c30a9fb55c1d17948da5644996970ba60080b21617ca1b03ad10ac7e7d76b7ab56da785cc90520986693e2cd7cf16dddbcf020e897efa33985ae41acc67e2c665dd23b91874d2d68186d692cd85bcf340feb5a92ec5f630a5009d2a98f1cb0fe0960905947458b1224fe591b3df6a4f22e267bc1131f9a0b2c0a0bd98d34a467b620f430719c3ee29e496d9c6a164460f4103b8751d1a0e1f9bd960c07afa28abf9e3bfbaab13e5cfef20575f81392edf573af4364edcaa2fef19a9a930a4b5b7794b7f6fe84347c1e4b613863187e9332e613de8ad7ca396012b0acb0ea0a5805cd0f4ab8f791139072e44bca1bdbf722abee61be288c69b7dfa6f3003982d6f8f9d712a984e2ed6e7d8db47eee88c03ee58cd3269bd1941a4cd0665fe512e704b286b036a74153c565aafc7e5979df9863ca286e36777ca9def8e7ab0de8015a0946af2cb2aa0a1a8ae474f10a25c50020cd3ebeaab37490198ed97f77ca473f85a08f2a86e609416f8c5a4fa7435d552bd8ad5376292e6dd765644062ba966789c9e2be4f2780171bf9329633cc3c94dd66c7e54334be182fcd8ca2e13c14ec3b649b9977b49d9214b5e9f56eea35cf8db35a9361039d15089f741c5d7543a40f8309c5fde9f1adb4720415a1b16d89cc604a8e49431ee70bef0dd4126e91780e5c5a6e52857f06a5d05041eb3d9e89228765b2ba83f08566b910d9c8f44b919cacdf21ad3c636b1edd6cdd370274d5542a2769015e4991887a2c82479b9b01041d1001063263f70dbdf3791e79c72980ec542ce6c36d84e6cf5301acb039d171df1a2828954d1a0e80daa68a710aab98240bde1f87282613024224e425c72a23cd13b2f359d3a212aa00e07b24276f8c326e79042aca8b60f8fbb44ed7799fc19b84fb895853f5fc818bbd27d036a68bdecbc2ea1ed6f34bfe43b5be68c119645104ed426282efa9bcfdace4a8c460c7f5d416a1d35f3d4988da7cf05649b5c5000c53a49351d92c10342bbd21da558386978e1c757829f951a1b61915f21e89c0204a171dc097c547d2357f13c4742a9f466386691c949d3dcb52d6a97230988948310ae5cd5356764b7ab12e2a9267e9e46495d585c4d6db6fba1ea7f316f52a97d4f7815d5fc540d63ebf01741eb9aab795df024d064e3afa31f7268d48bfea306e777e7f161028cfb059419dbac8db243af07fd099a5121c38ce4e9905bd31cfa8b913aeab21248aa372e2df19e4f08ec329f52e9f47a67ccec311e4bad228e76b0ee81eff3996412c84f8ce897f6ff7586d68851d4d158bcd766213682f546ed68828827ca1d751ff5f241c5167f97f11631e2c3eea277438962dece2d57bd95ae9e3148c5df708bcccf436707139ab49d614f275bf26f9141c12dff39ba3ff197b39630b5b5c7adf65bde5271381a00be5355bf1100232895ce145c2d3cd98d89b28ea905010726e3f382a6c246d39fea1040a6f6332b6ba729f357ac50fca592a92dd043fc09b28a47d5e9ef6105af144b13a6467348b5db57d918642fd7ad6a644372143ba5fd71df873138b054dbca5cabfe937b6e9117a512a5a106781ed042aee2cd0447c9551e9934c03762e8115e9a169a09741d34f58c9327d8435930f458e8d926ff53f08738db6c89f72cf13972feb37b20388f9dcb8d61edad7e7f4e8c0548b8dcc6b3a62a978283016bdd12140b719b1071c318bf5158c0af18b3ff8b5b744935eca645a5c44263312c81fbf96985bb4bbf96d099b2e6425277df876bd33e3e1ffcbce8d30b824bfe1ee23d2df94a4c718601590642259a242ad391085eb00d354c4efcc389998718756654eff151da58773c68abb6c81cdec7ed8c560b38ddbcef7a7209cfa9300ab44cd5ff66203eed3cecafec009de0568e617fc83844897adfb59a5fa9e587180b264477e00b20488f3b5ec12006a6a718b937bfb20a4667a13a29f50f2481630b64a5a70a8770250ed8862a44ecd86df4acad09b553b5c1fafcc944dee4d7306931ecbdc6f6ad34d53ddf103d42689e8192f3b3fe620d371743d4fb5021307e31bf35d3294cb0c47c17eb122494a095b1dc8500af9659865f56045072eb00a0eb043c234a2e1339c70ad4b973840fe58cd7c38b0303c7112ac06fe2e6dc7ab780e8abee1d9a8b3d01357ee4333ae4e8dc64c126ebc9f2c16cba81ed58a9322eb1fdb5935b075df8036a01dd611e12f70b0db637d078d5808b63cd39abb116dd66e216d6abd6c96476f163800e51960e0f2bb6ccb50ffa27a414657c2bb5f9cf1b2560418b2a840cd4e16eab588f50f77b3d42ee1d28316cecde4fd9b28ba0dcab5e10309b221d371117c83c1c8dc33cfb6d6706efaa3ad45e5ef8fefd87f9104aa75bda91096c7d4a3a43d5b00dee4f07cc9faf52683ff69db1f3020cab0eb1c941af48d853823b595256ca3c2e8356f2a1e51712c53fb8e2031ff096226430a9046e0869984b40f984adde86f103c287efa2deeeb7e45c08f3d8b74f8c22faf9b02945877bb8baa313dccd877b080602f8cacfed83fcb10c07aca68c3cceace38759505a1f337c93224a74469f185031df303d020302a1acf029e5876412554aea92d4595916759c958cc2926c85ac7bb06b6cb39c25c278ba97b5f0a521c7e65d556559feea258358b80e8bd6f686381ed0b09e5dd128eea7ef6df908a1729d2b595515a5345996d011a758f9d08a64efba2c9c7a496278197a11ad529495796ed02903dc83aeb77a426a303bf0f23167bb72e803da1db8a198a80cb42a0b47ca60b91553fd58281ae1ce78d89710bb8cfff0c6242d1e849d85b20a377f9e1706366a7c7ad82658d65f24fccaeb3477a0af722363a5a687433780297640556950b2f7f1dfb5dd38545c865a6bb98d63558e5d43e569d7aaf4b20894f56d16f5230d8c276e43a73bdbba0f404d0905c5b4bc176686f75bf4c85b827ba7f281be347e0d040c6dfc68863e11c4872f6da39235515db59d58b95cb5e83ab40d9cb4de465ea17bcb749b80da48d74a540cf8c148fe297eae584f1582813f8eeb543c2ad9428a9aa253b624b241302a97473c214fdf041b08889574cb9707ca137020e0bea6284b89c3d973314af48c956146936ae7ef2b9e182ecb3de1af3bdcc4b944577ee36fbbe37031530a42bb18e694a48c5632d417222f2aedee20ddc39c2846f9364aaa8225fc9d4e79a7d3a34ae4556bbfe048ec4d61d93651e937537510c063d0a920f6c4971ec0c3a1cf34aa40ecb86a7fc5b1f4611ba443a453752e3a468491fd7fa806678a0a98903df73c5adba1f9874060f9fc999f5ee3ff9459a4d1cc5f8c399627bcbf9a68a294926057c65f690a1322150a78068962b4c77455c28a743b1d5fa439640dd9f8d5eca58062051ecc52032093dd4bb49c202595438bb2c735bacdcea4bbc3fea4c509530c487f04381893f3f5dbb43c741d06356bbc353fabe8e910444b3b364bb0fb5e757cc58e134420fe579b2712bfd885ccfd6eb570eaee544c7f3f947c939be9e5721dd508b2d766e79fd13833d8158942239feae8cace56de93c185d1023f2316f65fb4138d8edf180d921f5e766339ec99c766c9139a5e56d87c9a053006e49e2d5c2c084afdd75faf0a20a714279d34cb96229e55982b90af18c90719aa70515bb905159ce03c5c9588dbee2df11dbfbab7abd893788cf444d876cdca51ad00216499323397a2efc458d1fc3a306321b6cd3408ba61fa4cfb240e9e4c16e4f727717c99efb32cde16f1d9229737e1bfd21a6aab35ddcab3ccdf6152a8f4233c5174895ddd91e3524708d4c131b2e901c93877d3d4837957dbfd1e6049630a29c48542e08f460678a99e2ab64b31535061ab86d47164ad5d6d7f5cdafdf632f70e3223003f3eeb38b567ab14380441925ad25181b5cfee925dac854d478805a7944033b94c61fe83f8a167cd4e77310d9ba2ee37ab3d1d2c7c15b1ee99f2b2234a6fc34870f1e85eb19a6c003debf61b40428280f07bf4738ebd1052972468ff63e7bcef97267aaf360c1b498c58799dd5b9e88be68e2772dfb483f57c4037e05d700745151a4c706b1d3d8052c0cd2efc482bc73e07abed0fc2313139730ff6e0edd2ec8552001e3f768292d00a9f2ae796af7e45854cc0f36e6e0b3753c5c1d05d43ec99464f04dba7c22aea924ad377dbd0597a8cdef4d2861b1c6559335d9d8ef4efcc7385a57529aee99acd04faac7eb2936f9bc6b9bb3cc2a4eb1184db2dd28b66e8723615b81d191e5c03136892e45daeec81c2deeb00d7b41b773fbe87c104377a51c32636443d47b1a213335825af716c7c1f1b2d44823cc2ec7e7e40a5b920b38407a5a3016e57ebab4c7b4b3a24078f7baf32f2f23319a948ae1bc55cd27ca7678ed3809f6822654f203d1bbb71ae731e9136ef5e9658e2c5e0dcc2aa0c03c3b7aeec6da52d10a97b3e012d52828e0994a5e61f291f494007add08aaddf0e3cb8dfc9722efd44b1b1e4951a034ebe8a520a3f6007aff760957fdcb28fc98969b329608f3579bc27f24f22bef1970525a883f64c678b41e51fe5e31024815d8f9fcc91476113e7d8480f4babda98972df4c9823f859cf5b7f66f5aff9ab9690e0aa9c8f812191ee6511c388f794fd20b081da4767c5a4045f64df88fa19bac44bc76bff5b8691c81e7a2deeafc330e146574e47ca1e6c5ef0436d1e427f42b2f43f6925dca83fbfffd04d14011731e77694c1aa384b9c43c80693170085812c78f51d85a2027882e8162edb39800fdbff2792be5a04f1c34c5e083f57bebbce76201c66edbb8f6b3726a13daa18ff0ec51c71ffdf2152216c7bb3e7fb82e09f0ef73082f051cb7f5906e1e04dad0a3b4b7e4833e04890ca537fb3986e7ae5cae73f66ae16b91b97ddb259b6cbdcac103b04f5049f8d6a8c8854ee4eb7753f5ee29ee32d0397b6ab2b7f3f977c84d5144672e184477b8d8b513a4cac5b5a82da95ef9475b27cbbe96f585c6989a3ff03eba95cf61c96cd63a54e5b02d1584debdf630a0fee82b6dea10de7b6dff5b4bef087f9e938acb4355f64a542a089aca1bc5e16c7666fa5cf33a1946ec54a7508ef150882bd59a2a562c823aedcf08008ce332423c881c05623d1393669ebd700fedee3db56f520038be53e3b26c1119b5fabbf91aa6d939183bc68dbc0802a6f72bb7169491899aaf1578f087cabe7fcec7024ce9338d533c6ddaf53844b7b63a4909786bd7ac7e7c3c4fb529dd5f27fa55dbc77bf64f1101ff57d4ee3a3aa48c7504f726da3537ba9ecb646954698727fee8d4286d5c400a606170a7e1c736ef16d0c567f7e86d7395ebd58d743182b7a2301a906084c481bee2100e35af21b3cbdc96e92ba73f075fe462b1223ca8663bd1d504c1f0fc05b2086b4837018ce093101eeceb32985db34ed6b42bf524c24a1ce2b23413eda69f99f5d4a276ea723d38baeedd4f5202ba412e9a1cb947a239af1757cc1f0aff21f183dc6fc8995f0748a63ec158bb41ef55372311647c883634614b63be93d0abf93aefb731dcdeaf1ce107517e7b16c2be63a3f2182399d8314082190e792d8dd481a22458b7ad3340e328c05f1edb205ce4e61cf282b752cebb0df23cbfd7a59a8b375a6f959a84d81f535aba2c7c73de54162d4e0227a3df51661dc830b46e71966326da8afd4bbe4c906dec3bcd81aa42d78b602480922bc14d22b181ae7c260a5a93608df881f8d9fee3560b6515c23b90dd6f9084a8379ad6acc0d9f65d1630a7cd93f1cbc76eda22fdac13508047bf2ac920caa684f9050e976f4023d343551c80b181ce3831b60673a41f29ff199feacc0fe931a744f820535cc798446fc966cd9d309e80043245eaf7b67c0ffd5fd595b93628fac176d96daec4a32e78f43082726e08688bb23b513ba7d867052246cfedeb98fef32b4f879f2507721d55df71f2cb574990a0a571a53c464d36c84cc33294fda5b767779b8933793dfd198946c52d9f30a589cc376ddb884c17dd21bf35eefa8b7670d3a4ef56af007f3c96e285ad692bd9ac409c5bf40afa4d172c45f9b75500d5c3cc2b6ecd7026e799967f87855d489df68b589fdf7fd9de316914bcd5fefcdb1626490f0eb3f3415677c25ffcbfd7933e0f46a72a15b59019285d71a2ce99c269a6dcab85354b1f6fd61ec1e3a97f84b300d4de3fafdf8d3510a98e3ae2ba67fefddaed4fd7decbf8ab9c09ed726aa2de0256bb8f2b10d2bd79713799737561db93aa5277ff3deee510c008b7bb8a691ec144b7768e8ddf618ff9f10c7e3c10441812d260894e6910c088107577f4bb282e17d61557ba43e5886268ec5eb910fc176d9867d1405cddc138404ff23e8e4bd2cc726c70225c3f4d0294158d2bde078f7868b9cb7e6e8541e0655f6b0c93832adf39cca335186643dad02913877d04ad47ba37ed5c01534b62f995a1615550859dd5b120cc281bca3cbf443d1cb22f6396e09c1ae9bc523f841f039bbce910220aa8cae70716f9430698dda3b83e36e582ee264c9f10a0807461efcf1ad687e2b7b68f5e475d9c71eb290c10cf388ec3f1b4d656fcbd36c5cc69cab44f10d2136cfc40d51bee1d5252875e567f085ae690cefd2cd3462ed6fa7ebcc09554c628e293055f2cf4e65100baf38f8aa33442bfcec3583f4bf5e2d2caa270224417142a87377ebb9b589e2ff51c256788ac34405054d343db4ffb4026a1672ca7aaf7b6fe574edd0c65506676f160465520b3a82215388216740b17759a66c126c4305cdc0376fb7cd160541ef56939edd8c173b05f653b151b41347e84dbac23c3a4767a99ba5887a29e01c05aee12fdf47a45a2ee154a8899f3077e3a6f32b3a9cd9f1ee72850e63d0eef7b9923670a92447daa38a5adb84382984fb9e1494e2b57e5351bf7456cf0880804074cf35a40ba7e3c20921f894b1f10216faa637302eb34fdebccb8b0a2641a5cc6a2ccb3644f82c8490d0fa6fe8b85412fb079669e26ccab598dc2f4299119539267c22e9ab1484362d2716d70ba3c93c9fe1dff3a48df708090ab50c0dde122b1be0f9ac1238e923b08d2534c03d98f9ebc62552b1b031cfecb9dea104edd91385081977fc1743fc71fc3930230533355a1b7bebc7ee501fb17c303e9f3ac322452352a2dbf4999d8a1ee3f54ab6b2d9cb373836f220a0460846bf6348e05f820b49aed2bec5001f973398db4b1cd366b7a205bf01719c1b9a69b8358bca95a332307d694d2b3f78ff93f090a3673910c101601ea1017eb2b55e74130c6d33645d5b6a088158df3e7f759962acc9efc8bf5d9a6afd041fda5679d9bee1956a5c2ec529fd953d5794523d55b4d8b48a146d89651baf0860f110a1398aa6da250a458ca2a321ecb374392cd229defec93858138c51be88c71384cb80392aa06b10dc941238ef13e9066d92d262dbf140d9cb57013bbb45fef941146ce6760379b1cfdbca8b565d8cc6274611f0626d8a30f6193d947bb9b5fa2aa2d3c3b08d0ea142f5a67702ddc2ab36d3069880da30b8ccb00145daa8fde886ce4d81c0edc66d582990492c70c4f29d91b70cb5a5d61e875126fd07d438f4a843b60018a0feaa928b96bfb2ee48515dcaacd7c092f4bf1d59fc3b4e3e41ad235baba2083ec7e4f49352b652ce2c76d71baae832c691619e5a5b868129034247b28a6b44316e4a17caa78e13e9c74343b5028e17ba6f7d18c8e1b25ab5ba498df5dfc4eb5b26077498502b702762a1ffb5005fb6edab365ff6979671d1e5ce18f0b6ca89a2a0f5f65c143808ee12d09509ea1bead140c1cfd92c65b0e601c73db4b4c536792d6891b4e899bafecfde07cf8231c7989775129bc8edb2cc9aac41597172da1be80b29c6e0c253e60052048ff57bdd0bd738ea713a89604d26ee2c428467867e8bbee48b19ee3c30f705c070870952f51315285514a03a7a282473209b98e1a2f5d25353ea1062cf755bd198b37421598caeb75c0a107ddbf486eff7dcf8feb2b020afda2c925061473fb145dc49a76dde889013c99a4f30180be3249041f45a72f36cab43b60f15a7fc77db323180b8368096459412659f8ad8729a90533834646a74c22deb075d63de572c093b06c6cb0a7df3219c4d211ab7c4fe735289bc3d6320b4b8ecbe60865ddeac275dada781c5127b2dc24d778a1725377c46a1aa9d500e33d781b28dab42118ba5267e1c93231dcc77d2aab98da34f980e454762a8d29e4e237bbe4214ae1ee44cb56d3b8fe1e8c998eab64e8be997de401f4330370718f7ed342bce1a84e51c13c86bda05efa0b91dc0b0cf2aa4d1403560175162fd57612db17e827b95fe3a916cc1e4a505a3e9e682daf4b8d1c2287d0ca6a6b02a491c82808c75607d21a9399bbb831e0985bd6e19eefd6124ac3a1036d1fca093947a923ea9a66011abb34eba7157c2915a9439d47d07947552bee8e16451f1435afea344fe1606f5677de9b44660637c35e4532e24fa9fd962018eca4f02112de0f99f1c789b493852de8c60be5c093c98ae08aef96471b748ddd3c0459586f04fe3aebf2bb9e6f3cdffaaa68d6290f477fa4420671c98646d94ca510deb27c29751809e0edc909c8ef867a6854f4ad035e1f44975f35dd3ba1cb296b2cb1f31c0293be30e3842f4e15f66ba728f4ba4380a5e757b64bf9c3dd3ab8d1102976daf3ba8624a399a5da0071349dc1d79616ee22ae2d5a85d1f92d77c1ecc1df624d87e715f673f11ed1a8d3dd3c1099c23597148c0a7e021d6e2cefd7a0acc1fa4882ffbfd1ac908b4a073998ddbd6283d0a8ce68c8d09fec8aa04d05c6c38346baf0d84c2c379c5666feac0af98f80eaa3fe716a43425a72ca8cba7b32235cb3126225b2e6e25522b6866263ac24c05e5e3a125d779a30544f31be12ba55f76608cddb04a8febdd022576bcb3619aa75361c7cd5e102c98c54bfadc4cb1962a8300886e65de12379a4aca4c42afba955c692d0248c55e2b6b4f2715ed6095a106ea89ac3f3ea0cf3fa8135986a5582db95c075922805c8457c201b75721a3ae04e5a86f9310a3176fc50ecf08980480825ea4aa1278218d76664492a130484e876fa1d9fe2c5942b7d0bf6042fe4d8db8961e46ad8f266b13e20a9f40226bdd6cbf4c313d999c38cf4e68ad82a370c1cfbd679649456035a3cc31f20f9d2220f171096f0de79b605a4b269a89edb636ac2e20bf843473aa3b2ccf66e1a525fd2c490522542ecb986ef2810113a3e4c53040cd196a6201dec0f7603ef3493eeb90bbad2424485280730af5a1aa15651fa7ec5b998002c6c9cb1189179fe73cdbc912213b73e76d03d8e1dac6369391d97ae65b5347c73bed7fb9eef8654c15dbdc61bb7541605e6f38ee25cdb60c0d17843571967a216bafd48cd34662b6f7c55057fc9c11387d0123a4b9072465ca5a17c8b16cb29ea60b64a1cf9986dd2d6042ad733c2d0dd15df499cd6a38814c3e82eb12f788677ff44f78048a9a13b4a2cbf419d32206818d21e650de43449ab1c98cfc561432beffa6b7eb886587e99ed25fc16c3a78d69246f21c133aef09289790dbbb22c4744ab99432ab47477356989f0d32fd974b080c86247ad2f69075ec253d0a1ed7b7fd005030aa18fa343c181c30fffc63a241091e066ca4456f8b4ef56474d9ce0fab6ee42cd788baf39a33cffed886472dfbb2c1c69c8a2608341d8ee3031c765ef7e74531a3f205ab8f3c35c6e7d9088a41f47abe0b2b6b990da7fe955c5eeba4e1a6784da0bbc8d004c9a7e516c50a2bc674896376307592b352907ea07680779fc98f6aee677b082f13608025df742af0ecca1d08e54668a6e5d24d96ece257bc9a77e364a2cb0cc513feaebd07d711a0f5a0137e1d643d01a331fd1ab5ed4fc893ab38615ae03af316dc24393758a2b74d76a571694daf98bcfcf8cd98938a3f4dff8839118e74a8a9534240107d709023f2c39a033ed827b56e42b7fd0ddfd67c8bb28ac1f65bfbae5e6ecb99e3732ded4393fb26b0a99343bc6ae6c0b604a072e2efe58fbfd41169b80afb3151205fb40dbe0600788d04a1f703167b2296b7ee96add4c3a9ad4015b310bd08a797e762443f8c1d9ba62a408f82b5ef5d0295141bdb66fc827f8081f6784bc843a75d57e49edc30e7c65d5138fa0434f9cf36fce24bde9dd077df4ac6ad5ef5115de9d6c220da061654b86958b5cd77919aa37d39ba36e18fe45215227b67be2315966dfc06a731d6a2bfb80af11fee96a35376bfe5bac28bc197925d251f8605d8c1cce0bcdaa8991fa90e61f52cd59cf633d42f3f4f01b20f76e2ee723fe773bb740cacd7ab76549bd953ff8552f24613b475a9d77b3cd06efd0e0e54d4461b08b0ae882ed724a04529d2650ca559fa6939e1bb2ae25eae3e8dab33d6545c32c346c16fa6603a8bd507f5c4e07c8150e21301c3570163c8c19107b16318cf737f790a950baf5494721e2882f1d8e68fd6b03575004a234de1c500343969763ed9b9862068b6a24996ce7f0c8374beec2522ef39b6c0a9b28196379e0e209a9b15f5a163bfb1c58762ba13a1933cfbab294c56455e2c97af083e0e468b2024fd96e62c94fa74ffe93b47b3c190e0da83e9ee486d1c21745d79ca9b4765d689f5573f91cfb26d8dc13797c8681a1fac1a2b965be9c2bf398c6f282ff4a166e93d33272446fc716c092dd3660d4f56d3db92bba4c07aaa7e4b486c8b87a988febab3d75096ee00c2375bcffbc75d476768cb3ea9428a2f3a1a994bdc899f93ddd6708e65fe102281587d790791506460fc70e07103d5ccc7bc2cce106ea24a2787b66e63ecd81a610dfecd2baf04fed30bdd839a4d9142525794f2fbdc4e197e4c8ad3a8117ee590e5535a7c88e8c81aa6ce7a5f0810801c0f028fefbdc308f51b17a6c76e0b3b64136cf4698b97aa1a6bea33b3dc45c7838b8228f815cd8f3b35adaf29034d8de570a8d6d501a2556c4f5d6fa05fda9151b552248c9f28b61f5d1d2e09660f991771473518a79519bda9f8a471a06588383b00691a4063f88da881216d008ad322d4305a77ad498b9c4087f86bbe1f824b7781ec511c90073a11d683c7ce75939838c3beb9ee532cf110686890ab52c90b937a77830104e955d990d763566fe69f459b3f7718e03e617e05ddda8efec0c2984a20ae231a55f82848b482f23db56d19a9c235fb126bc454dfc964c789c236e80044f7a7d100e2c150071ed15062ad63d32c5902f1b71da53e44891a5d421805af49046d6d674c167767dd4c4a18bba46e8b517771581a049dd0c476b99e213c90333ab9d70937de7c17d7d54124df55221408ebfc49045fc47913622a568b49ca92eb42b42eed471cc9df1e4d0badf5dd7f4bfc6701289558b2629d706c202fb72d94a21141817c5389ca022c5612365b60dd7910dcf7ed1cb27e6bdab57474841481de722a949d3ce40cbab952b0e8b629fe356bf1d20c4adc1a78307a1611bb03da5f7e9424cd88f7380dc9bfefedac409f13f0d8e0675dc9b0608f5812bfa77e1f23de48648881e210a9e7202e642fbc4d7854c578977c815d78c4e9ac4f409319af55e5d240f27d5d2939f99166826c087f652d584dbb82c3844817c0bfded82350e4ee785f5b0ebafebb2d1bc87b4b3f415937d67616b6ec815923505b97fce8feb8fefd305d96924104d45068cd4b11e9aa12f0269e2de41d9cfe3859c9815bcf8b6c26a3db03ff34201c036937803081c7d280926f8d635310793db040e1954ef68f5b974ed0b758a5a0730f26da7b19b630c77bf6485594cc8b7712e10d4a29b71222443e21cf4d9db2d85308fd1e32731b14cbf31e2ea89622136c8c4009a6e2ecd78bdd33e71a7a400497b483f5396b05ad2821de243752ab54c690e223cf29a5f519dd3c86894a42a8977e49b3dc2fd61e3506498fa835dddbf525f0b49846a9a3f27bc8b6c0b1b8b9391686c115a87f2dca1910955e768654cead0186786cbc6f56e33a34cc589006eede6ca90541243d6cdb14d332bdb2cc9dea6fd45f03fdc2e95d220c80856e57223a190ee3affc94985302fe5636e03cc8130d091042f73ce10efc55b30318e646de057bf2b3d353cde312240ccebd23524b5686fb8e061976a6d5fc95a4d2ad0e6fed40471bb7243583afff9d0f26185efd70a0ca2fc33b46d039be39b36dcb3a71daadf46a25ba2452d06303f95a2aa19f68f78fa34712edf510fcaa3d4a7103f55dd11fa9e2f4b224beae03bcb4e8e181ddc4255621a0d2c35f7d4937dc55b24cad1f9c4dc1d1155c0aceb9afaf0de22414c23463488aa148a45ad16d2cfe91eecb056646ca702e8299cecd4db3b23688bcd53e948042c6acceafe174895db815787db672ebaa747f204154a2be54b01af50cbadf612eb42c9b0ae885df33b3402b5238c42918fd446ba234c3fbf43e51e856aed6555578888396e25524afb8e54f6c83bf0a579ca8c222df5160f706102e744d20464f490be6c7d1c3985c953729c5eca017e7c4d8e630954e85254f8c688e57448396d93d7cc0d6ef139e296a13f155bdfc787c60feb37f5edc05aaf6610004c3f3b7daaf36aff7923f6b6b08f5518d9239337b3e3bd67a4fb25bc23fdac09a423940705851d51d728237af81c7ae220f01ebc71c5494b22a942543bd4d5579afaf6c5eee43eeba69df321a8a0e15b17801f1bb61d794ec763590180005573b988fa2229c0f8dbdd2e92250082fda49b7bf34d33ebcb987bb827ed79d41d52cf39cd230d3bf07f28d6cde91f126561014b9e22c7cfd73350fe03b71369d5b3eb5d8b60a1298bca10f5fdf0975fcbb887d685cb3b72b0cf395b56af90a8b51d5d968c61075c6e9133a1801625d097f4b22757204b709443afc68e040eabf3e5dcf6f09579bc4087a32e669f6503dc2c52a2c967dfaa0311f891c4d793486f381ec57dd298d336c6809a171a257cd56455e57513d923cc4a6ecf1099e60bb364de9e66a3f524164eceb6661eb8e066281a900aeaf484b5521db7c35f51540067b30ea1f8e4643ca1f95f6422b3e28dba9576823aa688a7ae782eb4dd4ef467a32a401d49d345befaa506238ef92216f9d4e7f4d411e9ad96e1626ffc1a4d227fd04ca6aab286ed02f781b175e2207f4d7fe9b73b9f5fd04b5cfacce146a3fe94071f9fc6ecaf881228e6b94f77cb8afa0db9d3020151a77e5552d660836d56297e9773b375ce1fb3e3e541ea742b8f12f71563ebbfb993c36b8e01ae49382e04f6036bec385f777c377beb2f165e70dd5a0cf67b3d30c8530b287131d66fdba9a864dcc316739a0f8d5b3e76f8e01c50b92c79b25f01e75654b68bac3b7d109239786dce04a78474f8f35e25d5cab0cad6b17e605e78732627ca17d4c18f32a260c094388457b13ff3d7e5d7be264bf3fdcbfd35d87dcab5835139c550c391a8196a1e06af0fea03e19e254961d4fae1f8a8bd9dd2ab946b74611c7040185abe3a08ab89a8e56204a578d4bb0d758a6c4163929bdc6c0159f40ef456286fa5e60f4093a704ac41179eb52dbbdd116f728d0d9eb65273833aba9426776f3716c9a035b2ce0e3770f3bd90e6854f36494d8fe4428bdab243e1b03eeb01722ea86b8c6924a3bd464ac9f0b88c626ed823764b7a9ba98daab29e72f413fc2bf280a709232110e92f1772cebe078467cb2faea0397fbf949b7f7049a678bb8f61fabadb6e10bb7fdb1580014afc40002cee2d3ca85318ba745b3004aa1207538a5aeb40d43f339f27415b686cb01a5160f1015cbe6b78ec818e407243a7257eeff7e08bc0f41121f54002163c6508416d8fa414414eadef7adab1688dc731df91eede060884894e925d40652eeac099372ef422ff9f382b267fdaf967925b1c7925f0be8f8f6ad01d2bb779e29e996d4aff71f2776f3b7055e3c254e59dc9c5dc9ad65b792403fe6e0dccdd8036584241cd59a7061fa6e22b47710bfa2206ba078dc2b1cc20a131fc99ab500e9f1c6f6c7cb0ab7b0f79bbb50da3af817cf64b23c245191450e19b54e1cf758cbb5b963ee509fcdaa074906b168b2f045f13f5ca6cef19a41fafabc3db9cd16339e2159526cb1d9e64c2314258d5fd6ba818e56fa453b5cedf3d2e3f2fcea17da9316e6b8bc882c517f14f2026a863066591f05094737668de20531e69e75dcf609a5f77c6b0bd165a5e81e9b21816c5f8c644ac10860bf1c4e7af10ff478f1d00ae1d13b8eb80383cf8506f8f861bdbad2e7ebda69b3c795aaf9f2fa5b517c0518f8af7f0dc1b82768b962d52bfa9e64ac4d4d4cc54297dfcbf268e12e93b36741924a1b585568f7628da60c482e8fde445dfed9b2c79849c95ee65a4d22eb53993b12e7b225a1b2a2a3396feb4e846b3d1e7ba60b0d72acfab943208177019ac7d08a90416f817006438b9790fe94ac4f9011341a1d7a0becde6cc52479aa458116b881b222100105f88ff3527132540f15fac8215a188e54442f4969a5b471e26d3df77ce034cf7627090131d9913bc8b8cae7eba0a6d7c7f56cf9a500db3451c4c8105b17d885803720a20a37991ed8e8784e24242cdf7bf72378a160d7c56ca2224350afb3529b7978acf98ec61ebb4622ccd757065ac8564af1e4dbd0c326313bdbaed57a732424005be013bbf5bb5f77ea48492f4282162b81d9a9757e77cd475b4b9896705e98d75f42f4325980a2a472fdde5fc70a1d2077e3df35c0e22a329c4a1e06b7c1ddb8424d2160b878824fa1d5c5630d0c5223f167d08cc91578e6ca6f1bc9863c98dcaa4c344d51d4372f7eb5a23c684392b67b736ca7a6f8396e3c30ebd63b89296209ff91a65a6052840f784ece29a618dc5053aa47ee6a4c3d29cfdbbf99bf42ea0e4d8abe2951001e14260f473b832aabd6010e4083f51302509332c4543325b013fcfd6d85164544e5809eb9fd2f6f1b049e4ae555fead433b323b74091a745ff59d8c7c6cd5498d55d2573131fc3c32f5fdb74880d95e6c1cf9505fb449223c301f2ac86d7349b3bd4c1c0c8a0816f0ac94f7c3ab86956e8fef17938fd9a1ebef076959dae19f3429aee146bc6c343320bfc0351cb07d46cc8b60c74e52bc17ef223c0439e18b420ae7b199d71ff08e7f22a30ab3bb78a89be10a6710d13315ad0f5ab0ee46d0fab035ee8c6295183fa04f77b705a2c3f2bcff55ceed0216b30450e50e8bd5971dc34442641b9d5f6caa778e92ade68543063dcedae9bd25d3bdd4a6c609f960fcc7ed5bdf23e564e545b8b755592456329f8b64fdaf3a21db43b230070fb11f2b746d30bdd3370bfd67a7e5c14891160a32d54561c0f77ff79a3bea2b08b17f0d5ed05dc60ea723a438146a9b3ca1ecbf179efd516a5fa667c7902ea450259c37e62e9e5c4ed7055c9eda498c77fd3b66bc9180c9dba7069611a645b26f7a3daecdf7bc3d67f4352e8ccdc963686870a4fb93ea7a3f0b293def665ef7a53b1b2dec587d832950938a91e69ff4029b5bfdde7b18b5195366b66efa237b61e95192e5fd6b953dad32176ec815a57dcf6f40e770e47613f386b75f734b4e009304fc0e7e0e88012cb04513063578c30c336897ce2cae55dcf067dc613be2065b0d82b5f1f83951e4b9a1e4f12a0ab930453734786b98668e7088e03fbeeee674362bfca6ee36994ab159109fb4b09f61a460b616fe04d5c1ec42556b40e62748c30ea2e28633be4b9f94fcf59e88ec6fca75d76a72c78144bf7c01db0b938ff8b0d2b79a3da1154b4ea87d3b3101a4bf1df7d3f9762c3cdce4f04ff64bedef4114d0a6c4f5092d88956fd4cd68cbf57cec8e0d9a10fe50ad87f28be729a174a4e2ef7dcdadeb54bb57ee12842efdb4f37160d142d6371ff8019746af4074daffaf8670acc32d30b5c6bf08217fe88352706e1a79e296dfc8cd0ef09552889a8d1153261500fb48a9ac6937786e02857f5ac18a8e8e404f93c7c9cb7fd960043dffe351210b14c22d750a732c62f71a615ae9279b46722fcba371b61be74cb9a177d951ceaf957866cde56b4482f3077c0db372aa73081095877710a4c4e2763c3a7a9899173b59dc36021c83a56b015d1f76f5524515d155c2313210161267551296451ba8b03289b909943b6620b4c1622b9af096b720d08651abac327a686232088e2285b9365c61c0fff1484cbf13c829ecd8ef2a05939832fd803cbe787858c5e768e0075970770bc371973db189359952c3bda7334bf7b8610539c749b07535c16b97b9867cfaa7d71242251c4d9c6189cd963fb4cf114cf1c491576a6bbd15ca852b59fd24932518bdf07f1930c2c778ad39303e584d533aca677465eb5020c41630ac89dda177da8051b53010abfe4070f9ee49eec5815a92f2a2966199461303909e218add05454169ce42a134c68bb434778c756ac093ea11248aae9e0144c9ad19d8d8fa2c9644d74d68270f9f139d603d8f3a140472a858bf6b75047fa83be7496cd716ee9e7632be8226923e611a50da4e78e00dc4d1f21556134810d5c37245cee8f5d02ad56b24e5e8cda7cea4594dd64c1e4d5ef5e141f09530f9573ded7d44625afa3c0e1d98b4a1ab66f43e55ee5e30fe8c441a4c017c000d777f44d41937da0ba05a630dcd3e661c037991db445ae9c0708462e81059158074a51f1eb493502fe61187a10f19112b602ec02afd363a4222fb49c5a9e2cf6a1256479545530e34ab8f45c2fb293370db6bdb3aeec3a21860053c147472ae5a06a6a4a5e509f760c27ec1eb64e1157062b70432081a799e1379113c23904abad8963c9043b9a8039afe82892f6eb8f7d40631966c9da8d2fb6386fb304f4e5f76e8cca27c526553885296518e786db4fa65791c24387a70796f9bbd5d88f3559b0f973ef233b17bbad6bd01cbbf58eab17564c7eb6964ba7169d03514d4ef19318a6e6ac5db94c66a231caa73bb71929add1e3d5da1c5939e7e37a048be37bdd0c88c39f1437a5ebfb3b634be31b15eda777c87d5fcc9d644d30ccf2743aba7060f0b99ceea0e27d704550e6ef2d1ed7f81f54943564dfb08244ba734a17611bede9bee1be6c26f76d107345ce650dd3ced7f8e96c203928efe7e1a6d6963d1c8f0685879ed479c4a93f95dd6ac745f1a9922bb08a00d0be7cb9117a6d2c75d7fbc1aba3182d06ccf03df3371b5c751cda4f51dfe5a1e7e5d1ce65d415c094e54b94b974413489d612a4b31cb17a38f376090998344c46b554ba7c8733e64a71be6df57f2a190c8d3071e35bf8482fb8473680eea731928407a2db52148d710f3c2f0242489b054aadbdcd9c780fd3577cf12c1576ce8aaf30b8b4418dbf85496a769b69dcf7ed8d51f0897165d133e679c8c0121d3c651793312346bc28c4a62b285bbfd2a9b4b57a26c1e0ebc4c11929fe2c1ee1c6b6cc0358e49aae0b0b3bd8d7a8d1e86d899f854087a2875b31810bc66be4526f5ed50c4e7e1214bffef4f6a25dd812e21397565095b36136c3ed87d1ebebae3ff96911fad51c8f7db9f4716e9787dbe1f9f2f4d7b0870da5ecab8a4436ae1183c0130411767137a444d6d97978e030ee3814a563bc5dc3a4de28056e9237cfb2849f673430fa11e3749d4c4aea996268f9d5f54b0a51b388832315b4ed9d05fa2459ceb0eaab3b7a9f30db34fec5806c9c9cada5fb16a53e1285d9ca91fb89ec699b18b6bba4c2c93f309e9f127ae55576faa4c7135368983b5e50636504135ede928f00bae99a3a0ddce0e9fc4aba2ccd4d20a13ee23cb895b18e718f601f04d9557d6472fa4f6d2b8a59c4974dffffdeb8a6e9329eb52de46c61d28577cdd64fcab35fb95e9b785277f9ce94d91e98dc82d8c7e4ae56597628fc4e0584fd6e229aeedc7175fc22093cd0d737381df13d0e4dccc9daac2c51348a50cb5fca4e16c43b4fbecaec9d9c3e3154cf57bda20bde431f6366639787db0c532924f155efff4b3adf4f05d2dc2d1d32c229a0400aa5182d91f0e15f68df0d2ee2a59a4879c39a93dec3ee50222999326e21f2e5a195262808837ada3c811833315b157f823fd5af544821d5f730020736a1d2e227b4d881fec3c3dfbe4a5019ab7cd95a7c33c2d8561a818aab846ef23f5473f37738b89a10b66eda2d3effc9574bea5db4ac4adbad201e23cffffca202cac216677a4b36a0f469fbe5c7f83af4fde7e04a33aabaa3d56bb6abac5eb30bd31de88d1abbc024191c426afdff133fd1c53eb214d6e727998e1a57eb8deb671020f4e23f4486ea572b4e6f76cd03ba69fa767831d78bd31ff5353500fdab2b155c93f9ba82a30ae77cba7e003ce1fbdfbb4dc7c512d34043bdb505caf666d5dabeb34ea4dd0d4b784e3645f6dff30a1eb916d62c5d49b808a321c592b4bbd3979a20e07cee9dbad163f93e5caa27eef55de284c43b3ee54284e8d4c7fa00d0a4f4436669cdadcce1e1f62bfe40d134c7afcfbc17f7bbcba7604a7ced90d30f9efe7c26eedbd9da17dc32b5e5d917f14c8c7908f65df71feffeb065b451e98808b8ddecf2bd8fb6c8497880756207a044433c05bf33637d6dfa222957cfb07e91e941d2bbc3231d67945d0a646eb71635052b6163f69a46c26c7ed541eb5f650fc2b1c99407154ff9585064b37f39b928395dbfd42ef3fec11ea40f56a52c9635401a56eaaa85a68baeea098da78145cc026cb31a8ce05e5d1b049492d5dfef83d3956312baeceb472f64691fcfc53e0070384bb8141914d76a3f3b13268f1f941a296f1ee8e8f51ed25fe137ab14eeb40ef0f62d3842138ae7b0ffb6e191f5cb75dd0181c318e9322c7cdfe00b74e8419fd9f4c15474df6d637da11ad06915fe212296b30d7290310aa98a54a2f9f53b9f5b9402cf6667462f0f9ae9654509cb800a6d6cdce160beb8c23c3c526fa41260ff090c66cfae6d00fc795a36e7d64251256d6ed514d5bd8b7427c8b05e43baf43098c41d14a2a73fe94f0726debe5e5a61379f72957842e32cc4006fd202411abf2fdc0c084028d6aa8d7b604f238c70f19ce109da6cac307726780933a2fe21bf83f625946f7690d2f544ee0ddadc1323fe0ecee15c655307e40c25b0ddc4a16bb21d336fc9fcdd10dd03c3e8fe627a1e9b2ee55c8c822c3d5cc10490d4bf50e2f272aa4a15467d8dfadcb4c3e6cea8a6dbf4b5780c115fe2a5a513310b61a9e958b3db6c7a13461a8d2b12e1cf3903c695b4d8982f354e2e8022298f0c74812eaf93c788f9386238871c8dddb75b2334796de37c185e2cc5de0ebe4d27813008903cd9aa606ac89ed9cad14caccf93cd795a0ff5d5dd2fb8d17d65d4a5991523258ae45eaea778e863b909ef210288e811f6aba5a1e522a61e17963b61cd302586a7fb4d4adf4ece9b267be7ee155a9eb9ad8af96c595a0585dd6cf3656b6d720ecc88ca856bc054f091a9725c3834a29a1303809b9a60328aca00e4d14a4ae0982805762e4a3177f77186af7d3ecbc7a8ad2c406d5a19207a11a6a0a965362f3d021382090c3c7ac5d84fc472ba1a933120ea6e3906182532a41567123ec00140751ce9fa83f45061c47b5c03bfd7f9b1efdc90cc113fefde56570a0614a3a6096d77da516d821902a0ca2802201f3e2ac8992584c7eadd031340423d2b660898c41c6d6789f2d5e46924b0e37b2a4066a9028e0ed1fa36de929bc3a6cc5051960af0c475fb24257ab66ab2895b18324d0bdaa8e21571475c392c8e7c4bb0d6032c9833a5ef7e0283c30d6ca8f195e9b6983b46728516c33af0b8866104138247a4101c534d4418947ba178b42768bfe700ee00454951d0511430c4ff93270e896e4b35c2e8bec1fba5a919c3df4bb79895d029d51adb48ff677907ee75ea500c49ef16914d02feb31f548616752eb01f95d55b37889fb454a283deddba0214145762781893d97f22c7ed2b238fa0f5ccf6ddcc7351d4a88298546a22b952ea9efec34a2588e0af0adfbf67f9621232d3e11752b781baf0564b6a490f54145c230dbb6b44ed7ea68aa5ff83163dda484087e89a9938eee8ed12e631ab567cc87bf840e096f2122a19255406bdb41c66010ad71ba99055c9ea2c708ed6381bbadfe163a07b22db7fb1a121ccbc6d034aab983e71fc4634ff00bc61c082b85531b541ab0ec75d86961df162408e483644e1fcf9fe2d44de31c4deacf425002409da853be7efd70a6362735debee13139b17c2c97cc292ac5f09cefb44f4db99b961d722f110fa797c8687da78176a62be967ed7498a6a86be4f7e9d36b078255b464be6bf35678875a71435bdfadb1e53876e9b889cccf2ce93c16698250d0d054de05f3a66c42f221d2b07c18312fb8951d5d3241de2ed32ab51a8193bc74ff1b1d01c6dba1c77c936ac023979e2936151f789279ad7c248c46aa564308cdf2d5bd6950190bf41947cc2da3a73fa0bb8ef79aa3654753445e3f81117615eeedee9cbf84a3ffb8232897188ace6cd443f4d7c42fe96e5750b7ea6d031442c55a8f50007851592b3c1adfb576afbe2e45e1b39a1d5adc44e6564fbaeced9ce02af8da5d4f305aa4736044549f9e634c0f4aed61d8c23d4346aafe650c57020625e76b9ad411384e866617c295fe9f46f6970bb23dc6a5fd3913de2944a5f93fde2ebfada5421cd9e65bef46192d2f5e79d4bc89d296a629efffe7ee035ff6a9f04d823c24656a808ed4721fc1ed8d9b33d24398eb042b718fe1a2524ab8b945a2a51a6945f55b164eff0f2996c157892f68653080acd88ac0b7ae8ed3d8089c6b395c4015fc16509c09ee02834a6bdc33577b7a64182ce4486c6cd7dce8dad22d83c1d162c5b744feabbdcfe3e5123582b1d12447534a0e49602a8c3b4f2f120a52fcad5a20c8242cb6cf540fedfd789dcd3fa77daf349cf6e772227f440443a2875c6dade135262c88cc3f69ccecc63904b07bd83900d7ae302ae1082f7e7321277409c6785163179af0a6dddb7ee83e6a11461cd40ed2b0ae6930101374d3803abcff07e7d82cb03853d2d0633edf8a4933b8bd55eb7b93a2370e63e3cfc8e917e3c96ec4ac9ddb171e5c8f09c49a9179822f7ced387dc3aad368c7ea96540089e626791ad25a60c16c65e0aedcca16898a19937784b1ac9d7a3de5d3560f663c0adea8a129a16ed5062f1daf46ff077a132b144d01513f2f572478488e5f0fe1631c2fb4e8a1b4154e8d204b733688c62102b4e44808436908f61c674fab4916ffede8aced3ffeb5e680ee5f41c972aede1285f7f762ce6da35d6b897365386fc5608ded1e2273bce569dc8f42e2e96ba6295b4db05f3920d3fc53492502ac6db358f5782cad63c72949913bbab7c157d9f9015de2dea7a5348a83e8b8fc954a5821ad45b55ff4ee17a01ee092afa4d48b2467509e1319ccc1465884ec16a7dff4e7755f413879f93db3e4a2f58700365263dbbb96a38c2afeb409536d15d03a6d5035e15dcf94e95c816aac6261b88dfedb31505a4d8f581292063584b40b45e7cb7fc9f80a6b50e76158704ab36e4a4c0fa8be2315b96ea8ea1167514ceaeae57799ede3a0c3de7d631d0b53d69417dbcd32e5cc3efdded90fded855ce10bfe851e69825763bd66f010b0ddfbb200d9d448b0a0d430476df334d614e595233161bd06625886a99b2a2e2f5b32e9541debfba8560c9af470353c3f9bb2a80155a0e7304cf7cc048c65977f2f06460854a8b9f2e690aeff33dee70ace6d3d8217780903fa6d64fc318802438ec75f77eacf3dfe8d07942324ed2d773572556004432a1ce22c784e71d11c5393e7d108f10f454e04832cff71cce2f7b91e7a9b676bff6581debb515c83004d2f3aa987bc9b5097669b424445c5505846bf013cb924cf6e8375e218608f9f59ceb311f1d5b572c309f2c114b56f3d4150c61288f07809b8791ac3ecad9535fe189cbd2a51c9e6f511d2a6fa1a46e35ac758a586f982a25326af89f234594d4a6461381a88c7a47164159c85269e13e0effe154f5d102a405647ad1599de6a15076692a135a6e418b4c2262fe62fd17ed849106a8405e6a8431b076daa9ccc212e3324f835b34300da694cbf201027cf48e9b4e5960c4140705997f39284a1cd0e13467b66fa060b25485681380c875330dbb98f45175459f17adb3a46c16e4fc75018f60cd6affc812fc23f6bf0f25dc12b02fc3ecbbf51ccf8675bf7d5427d841a15987bda97e81ba63004a14a67b4c4204bd7f0b77469c672a3a89400db23d0bb782c49ceb44d0211abaa4a8e680353539aa7b5eac6d0c6d72323b932eff772cc68fd33fa73b3780da468c80eae12906ac36f515aa69449afa3a22c9ddfbf6dc03e64f63206f1b37be870afe452918d4293be56cb06b06eae092c8d3318df8e86893959b532095d39c0b0d8f5e2961421939519133bf4b62913474653c1052f1fddfa1b54c1bd797942ce973f726eee27edc9d742823702029cc9f2ba339d882b030190cdca6764468079cb0d0985305cb59692854c37860a489c3157a9fc4b31884b8675ec166f8b8d86489178871f2cc335b83111fca748dd05436b0c8bac67c31dff51389eb6707a9ad6c078c48c7d6c6632d03951ff40ce331f966ed9716def20c373354e6961b168c99519a0d395d474dab65569703b17e62784ff046d8afc48816228f15776607a05a1ab0afbf07318c3e0c93891c6f007fae5d91d8958c314aa15123e2e07b03dbd52b4cfa7c6431064b6379764ff72deb6f1332037cd8bb6c318a6691b4c71321d1859d274ea3ee7dd4412b6b49e58fc9e9458b32c7d1a89be0dc81ae2e362b7f9878ec5baac96501be0df0be10f2d23b38c05e160219179fa8332a337c92a3656931838099691a81332f6520b628cb196bcc913096d456f3deada6a264136aaea765356058f3b3942338aaf63072a539ba67a457e376ed335eea56dda5584e656dc3053ccdfc4d7a89e6e02c40485326061c6487b17bd9882804f91941c4b882e3be917ebe527ab1bd07d3d13aa97de27267279fb20ddd919b76dc3878273ea3985e92339da401c4a3ed68f22ce2bb8827291004ce4bb703a31e38c1a2ceba2126e7e6ec39fa6f1f69853a82488f02f85d84a0bd45801a3bb4f7eb4b7c0f2bd8f475335735a3a5a3d493c7bacc7755f1c9097c10ba489444914feb7504cca871b659f3bc5e89ca72154c12bd6792cbc643c6936b2674cd1628a7da7128e10326c92872c2d5379df69f0b6f0d88bb2bb0fa0b17a833204fa4fe6b2e2d2f69dd5aa617af7375ccdecc1b1a8c2f6a158a07e303c914714a9996a30c311352d08751e612b38363ddc921af40d7109573da50a08017693ce8ae65294497485c1c793327889625187710444fc1382889d421c9a75dc6b715cf3ffe3f08c41849d170dcad9f24aef72f56111b2ea2d3065f88fc0327224193d476da1ceee03abafd2168f71e42921afe8364e5a6252980d4fc5a97c8e3b4d4133f1d619184617ccc4a48c9b7508af3c3e2f80919b40bc97aacfa62defd876af32be342bb30d83fed27346d2cd3f44413c64d62644cdc59b94cdd51aa899d1f3ba0339c064e019c3f56f468e3e361c682869841396f684fb19fb3413e3ab1704a988bb3e29a32b69c9ef8ec776d2e3eae9f825745bce5c16f4ff80b65a2ed21e75348568bddf50ad1a6fea746d50031ced29aaef07d349af2a14eb89d774ed98df444177ad8e181e9a9912375a3c0e6144e79b7c47479c8ab89cd368bc81175c0a28184cbaf07653c53db5a6dbf8c31229ab5756e8b52a73d7b13dc542abd906397619dc4330b0850f703ea3c4bcf37dc037eb36f5f0f2e29e94c3a2e8b9498d84f778d8c6b3af2f36650d05a9e35aa65625473462dfb8754f5d7f3ee5a25cb8e1503914ca492466994163133868a28c37e0b8e86dae2c62748c6e4eeeeb13837bf18790564e33e023582558e6ad0a8fa9278b20c22b9600dcb6085df71be1982fa19a6e90e9231bb4af0ee0c192ca232ace3615affd5016d721c705578ba574d506e9de24b80c11dc014b77b6abf35063ab09dce9fc7f1b2427f0b435301bafcbca5a2c788bf4989c2cbf4c526d28660b6d6cdfd3f7e9798d8062c7c054952c9b16fa230913355e8562a3473b1d639534ea26d8d5c6888286253760d80900a45b2e175719b5777dafe536bcc5f6c571369b59b0e7c4c27219982378a1bfb5a666fba68b7a1e233805a7012ca6197a2475e3acae22eee9459120e7c4c57c20b73596dc12354ca577e7287ffa02bf462839c08c90f82dc92ab819dbf9522a5c954fdd12e4bec4bf2720afd625f0f41ad3188d88b3d2982c91cf5e44a8fa1e947477f0fd0d0b92ee7827616b13922eab636a62cd3969b26322a90e90bdaae9b5ad47cb08870927262e1a0b9e648af6ea2170ac7b2b7eb1cbbd90a99f0e6fd0e68efb3cfe82ed97c68863df4587a6a7d39ad01f279c2bdba91b9e3a0b72952543cfebcb8a4abf7369c53155ba39115cd035499d2daa930cbbd50982532f76e7a9f0958ad67e19eaa244b6d65e05c68192d6d40e7a6d25ef871de571b9b16b775645a976eb693440463645f87cb415d6354d69c8ca8bda4841303aa20b946294babe9d7d28f48f76260c01da12ca78e290d0dfa86871331fe54d391204a5056e59477f978d3aa72a83d9f03dcc5421c7a775a1f12f43bb1ea6eababa36d99cfcddc6631fa9c6d7a5edb62da1657e3da9a545ec1e3d8f499df508e790371815cfd39117ac13a3f452eee085e0ae8bce18d634fadc64139a7f7205911aeae5e00442070e777315393426c7269750e0cb8056426e71f8d332c8b7951cd121a2d46eded40f741dc44c828a9bcdf7e2c27a671b10cd9c707fc987f98035a90225d464738dacbfb9e3526f47a2883997047650121da4d58819aa6c57632dc90d353d3a4900ea4c6fc964ed8b9366590af7924841c283f2e6eeb6f549b01e060b9216873e795b2794603e832147e8af6f69ed2f2b0d4d8114b98ab72a6f438292e789492720ac33305543caafbc813ad5ea06798c4fc6fb1a5b94e9796c4e816e36a8483690fe01fdf26c144cfacbd6c0ea53b88174710fb74cd313e10ff7b7ae67a619daa2ddb43fb5d5ceb6227aff2ba2c6c236ffed7766a9a65e5202751aff0c39fc5d8ead03dfb4a3347f6141e6d82e9911d4f409a15ba69cfbaaace0bccd057fd17c45f219ea8aa1fd7d11c4641a0d3a832c8ee7f1379425a54b30657cca2b5e95c13550509543f5822fa598eb99192156465775faede56bbc0c40f6390693c64af79a51354ec9f827c53511de18b190203f3e9989b0bc1806e5349e626b7f73b4deb7689a3bc0676507c306846c3e7798fb1085f218a0b7752f2367379eea02b3702b7a2c5f13ea277ba075213f7751ba586d2bff2a4f3ae21d64c56b2f65d29eb905ddacb84aab15e4be5c58e555b5f89655efb5b286484312e1f9f667e4da19d0a51ac48fb36d3b4539688b065dc6fca6f85a2cae42abcd925cdefb63470fa09366a9ad9be67c3a453b08d4d0cd7f0095770d66f59005026ad32fda30cf231b16402cfe22a64cfd85bd1f473a498a32bc82c818a965090c59f16607346815fb0f54a8e3b8bce7f3c5e8b92930ce92f1f4d8fd5c8f7cdba9bc0a15da1bb1a79b2ad9759cb9130acc7319ab09d8a1090c6b388fb9ff36a0daa3fd52579f58d82577971e85d77b6322f2065c6257d9e5da96d4e6c5c4e3add9ea40fad0bced0f5a2d3d859151c1d1530642abd12399becdc2820a7385c04f8fa835f2c4b51dc089d4f695f97b805dafff4ee7d008341c3e52a5c0076660815686cf16edfa15091289f28f939293f70aa34a55f31c2f4c53216dd942d2de04bd93f6d5673ac10b7474c1c3ae8fb610fd07061f7792f1654651b05a383a9d0e846cbd8bc947829affaef984ae476fa48adfd5834cf17518170455b709a05b7f87bb9305fdd8a68ad685ea05e5c5908f7c4851e8d16178e5e0cb784438ecfa22e029e89dae2518bc46d90411bbfb251f507e4089825d52907f66a43de4e9496384f2bbd04cc925fa73e588cdb049265d0183798ddbfaf27c3a5ded47bc13a88dee1f5d0e97cf6ab867468a536b6b5213d096654bcf2b62ca326e0e8430504530ab50ffa05164020fc316c63f262ab806e1f332d57aa348569504784fef336d3ef3f1335c22be13992d59977930ed90a82fbef9c55094e1ce981282e3d14e124de048ee618729976f324e53e7a4c0d129c88f00363d379d1ba7d580596206b52944889cb1c32e256520a2ea193c94627d90b1132f976740dc71336f074b0cabd8b1961175a95f9a676bc9a56b6665c879ecbfb5f4ee688de3a06e65e5fd05bfde07274d44c61f67c3b9ed1e602b2b42037b08c0abac06cf67c8e42295515fbb4dd490885122a779d498f257345f214103d437d05549c407d35aa097dfb478b5ffd43f023a18e4894afacf558d404daf829da7f02f389fe26cfefd8d44e76d98579bc7c56633945b480afba897e09e4aa1de2e61f53bba70a18d43bba956a15aa238a299fa73d93fe5eb2cee0a4fc5a94c219609b48eb8efc7cb2cab71ca88f6440febff33b8b808c228aabe4438f20999bdd6f0eca79da66d48383366dfb72f4f28ea621efab07542a0e64850c10014185e949b1cc8707dd8b4d9143c68d85cdacb403a0b16d6b28c293d989bde831b34b44aff7e539e6354396a7e24e8c8d213638bc26ced19cb93f0f801b80f4f13e5e04254ef33b2a519f55ceb41768cc0fa5ba730028c639d3ce9655a25cf2b60dfcfa3709b98464987645b6d372dac0aaaeb70b121493fa01e679181130053fbc2e02db389286ebfa2b8b8fa4e22d04ed43c2b5b09868a46a71a7863c1b34e899741f12f667668996c88f5f5731e28d945259db9d8ae4f9df00cf46597bb828db7f64d13bbe271ca3e29569982ee8aff7662e41f155cbfa884dec7e22dcf2a66fd857d60db588861293f8ab49db29b0a54eb37d937559ba2825e914d5ca9992c6f15e830d81082368ff2fe808d3ce8f9f6aecc7c95cbd7859fb29c1045bd67a410d8471b154056308577aad738dcf0b464d7620ff134cf1bb51529027794bb6015ea0d5e4a5bc93b48b6d38b495cd0189a86668f8f59ba0303942d548b3520dbbdb8fd52ce10bf43807619d585d604dc6158042ebb56ac2ce6cade8a2a53687864a16e188d0c1a9089e7b71a56ed98a744f20e1d42ad28ad9bcb81fdc1598b87d73a1209192d6f56095a885988525182a6f25243c4917928a1b5c12a34fac14297f4cd012f4a11daf06a2eee84d87b49c7d021ae0ed1b593ea77d4cf7c1eb660aafb0eda05682e8d508c9d33d7c8a83692515cb8dcb6010528427fc618c874e54684e47e146fd996c0f3323731254e481d18e8f0fc2bed13e6c142df067d0501989b257e75233b4292c0f23750af809fe047a41af538cc91ca0ed87ff833a6c7c2bbdc115f61fec344b0e4d14bcfaaa9b7b839039175f12a1f129079c7751449685fcceabb7f601af2f11b918342a1e8b3c5b8fc5cfd1e6609c74376e2beb2b25171dee3bc97f3a700ca02a7c67d67bb1f69f9ee44dc6f55039242ad7e4126d408224a3a19af6db2d430d870c32f6667146bd3ce0ed17f91d0119f22738e7dd5628f163092a4fdcdf88333122182fc67ccf8e70c3c16647784a1d883fe95133062767b205323e3cf9b4477ec03a13b4fa469a49bb79ec87323fdd67fc865170b85ef3dc823939360287012e0e140dece2a06a0ea4596743e89e5e1fe160da9772dc1000a5cd15eea19202e85f9e28502e886ef60069c8a4c18c73c03e49a0af21869f1551f3c12558e8ee008e40ce1ca3c0909367d6b5c06503c9404590a6bdfa5594fcaa51a59586a3272c94e44a8dd8da411832ac91e72f93ec06d36f09ebaebd516488e48a38c76134b43c2670c3dd66d9418f7549175e9e491a90b88b367782ec4e63b545cbd11b6f0ee88d04a8e9c132926bea1d9576027a812b43c33a156aab653ab704b44ebdbd5f1726302b5a9d6dda0dabc17e50f694ca3713e9d76864a22ad58ea82644ab658eda113a21f381c95331707b2b92b7b30e409dbc8adcee83885d6873ab30b577ed2aa5fcf500c5bb0af6f06db6c6ea979a4bbe467d2a7d158d6401808bb0c6ab4d2b263ac93c56b8f66921f3ee7e699c1143bd088f81915b69e8a0d69c316c65a819cd7843dfcdb01ad9fd9b278d3d943d851db6e00e27f31e1d9fcaa93405e8d273b38cc6b915961c814337300562c88ad1c73c6afa8d98b0038e7185faca58d6550b9b20847ee150b7c2c3709a9e736c5ee69c0de9f60898bf23531235df4db844e86beeeb4afe90200d851dfdcdee68d8a7127fe5b820cfe5d2d258393d9d8383d0a0c68c51ea0a67a0bcc87e236b43ed8b30a2e09761cbb306a2b90fd193dc5bdf24fd8b1a96d5738076fe4df88de8ef1e164432ef637f306e6deb25e5d7beeed3bcbec842662788418f86d6042076e928b41de212b0193b4d4437ad46158691d2b56c37890708aef10386684c5c12c35246f94041af69257c42cee414d8ae491e09d48a7f107d3e674c784f8595695b233397ffb7279ef453f904970ef43804ffb97f70b868d929b3fdf2754aef12a55532a31567b3574217074905a5b3f5111ae460162fbc7dd892face34c3bf7273fe21f6d05c487d5cd00be05cdc46d458c3e7c4b1f51c82bff388b4d6244d3448ce402bf5bccfb70f72516a1c5aa68db8ea8366a5cd1a07d78fd2ad75d92b658015810e3a6b99a898519cc64ac8b14f4d36847174ea677e095dc195d88d6ddabf4c53194e1f03b4d10920afa54f125ef470875856934ab0e55b804630a8c51e5bb9852d0ad90165cec9f37a8f689da4982a465a5d549470650a53dcf449d0bce646119bb4a454f30c34cf599dbf73222129aaa52f8c3aa3342ec3470b6ce76ac0abfb8bdee876136d1b634eaa00930db64b9b9855520d56fa6054c1b8d4de8e3cfe6f285ab790857024ba9bd4b3eae62902f0ad5a621cbbe85c210ae8bbe6f18d167eecdc7b302ac1a6427f6ae1f885a8e01a30b3d34e7efb471e5111b29f12caff8c9e2d39f349ddd8d687d1d592e6dce94ddc21704b8822a68eaa6c36dd248b6b69b5a7fb32374cb59b3f27265af66da89f087dfcaf3970963a9484a2c30f28e173373a37146f43c4c032b17afc2036fc02ff0f130a2630c05220a59153c9dcc2bc4b3b4b85f41466f64795d9c424db6320380c399dead20da773fbabf0fef3d06f6aff67555b97e0bba4e0b44e87cd6bb824daf2b04320dc5b4ddfb3444b309d9a4a7dd9d4fc417ad30c23de40501dc28c12412ff3de2a0f71c906697ee7702633a598a402cb384803329b7c3a2e3df476a9820afb03b8ac1af5cdcdf437163f909717a46f758b1ac2fce5473fe3576bf0f0c46281b1c87b7db0de1d8c42c8251d0b844d8f186a1a844aee2d8257facb0d7d5cfe0181ea7e462b69e5243712435279a15294af6b5f80cc83b4a3c94091bb422c1f64171e391150428e045fde2c7c8a0e74aec99ef0a602bbca5e929b6362f2bc68d15d991627550ec8064adb5ec6963ffccf97a6fd4d33eeca7b38028725059bb8afba0ab5cb1d0bf21e06ef0c4311653ce0613aa55c2364f7205667791e41aae8538ae8d151ada4acdef9d3024d2d513f3e7e1e8b1233d9de4c047447e3770bec98f0b6588a41dd76a34dd16642a07865401d196bef5eb8139512f1749da4cf62127a7166fdff999332110d0ed4e135b5d97f704f7871a761a92dee4a8197ffc3aa8aa6a41be153420e8b0a58b06e03d582eb6b410b3b25d367d44443b8d2df61e50127ccb9d84331601a9a9250426fd8bf90667bed92d169a34ef677f232d869d80c5416023aa2b7df353082819d4d289dea6ac470d84194e8f664b66335f6505ec2893a2d9508c662dba53a029dd26f4fc787a5a0732ecec1aa8d2d458117d47b043f40072f30e5a3756182389896a67c52f4b9ed44ef38d8af3a62989ecf5e2dc9dad141cf7206e059eaec9efd98ec8ba9b4c15f76a5101f4afbbef862dc32896af7314a30765057cb882869a6bc104410b6d8001f2d3834ab2e5234a9d49ba4676670561642129750f88d8a66c7a3d41dc2ae74ed3af85b8220ab936ba4b689f3cd0025bb9bfc51489f3a6fa5e6fd6fe0bba3914763250029091b846ffb38613bea8caa37b690d58ea6bdb58ee26c17c1b090f0686d18f69d857f7f4f9b4d129377b6505ece6a23326fb60c78765abdb910119102708e150654b65e9cd3eedc9656ae58906a873852c9753bbf05d19e8e2cc2152923220f4ca58fb45b70348d35123cff1b82332b3fffd0363b1e42e18612a7d0471aaf40291d4fa9c981ed94f79b107af0483d6d248645e4f4d72ab3216b3602f883658fb965f77a2d36c461f7fc619b656faa2d279c822560a83ae61c767910ae940abca4a9a8461aeca7b0e4c89e5d5dfd30ee90c8a9997c98724b16edfbf76771fc93f4b98c046f060b5c9b38c10caac779e93747de12939414092d4fc6d9d2261fd51082cfe365676dfda8589d90b5b81e631a7f549d0c8ee4080c513ce9ba8dcfd5ad9cbb1cd4efb82d2a78897b8b75cdab4d1b5a9164ad63ccab1ccc986614f9f5f27b0afeeefd250e426cb65c352a64e43d7cbfe3cc4627130dad6928aa06abfffa3b1326c538062b30ddc6a384f5c771e706b45f65db27346f941d916b9aa1ee3f1092ddca0fa451db8235f9d0e38518eab91714b6ead14356424f53ab69743ad07a3f7583d076c32f7ba448c7d66533b047ab67ecaee45fccd8a919236eeff7c05fd6c4210e45899724cd0409b59a121f5dbf1ae945260c4b58ef62770bd42265155fa6705eec3e7dc3c58920be0ef2103753e771898cf3669c54e0c80351a272ee3424399b5290def716aa3f784aedea8e584086dd95438989bdbb91305efcff616882cfff135668e73156de66f3d0761242b55eeee6a02663d100d8e6047e1f1533300857e1c667531765e87e06b137a8e1ffd69a43bef311838dcd7243d102ff528f756cbe5393bd9a7f37ef246da77cecdb51af8ef9bd13dc03bc623d30c2823f22cd1c348bb5925251dcd1aae7f78d8646d67f4ee2a9b658a3eb9847476e57a7aa7ff5f0b8406777a633a5ade4d8ed797627cec866e292e3b4de6fe4ac65d78c32628ab9dd7e9dde933a149befd3ceaab440c4141d06b7345f4d692577c4fe46c24b9c3d1f31b9147e0700f60e190ee5bb9574727b1b58a8be33b85bb9cf68233b1ba30628fde741ad79936de443635c026a9f48f521766cda562d4b22b62d62cbd538336d8b49b6c0019170d367b77d1e2d0f14dd2df3f8c63c9fec6764cfebbdfce63464a5c1a87cb18902a6a3531f7ad15ad43e715fa859df406ee0fd24ac08c876f22fc23485817d9701b508918e267654c075514b01c971d178c32b253d00bd7058249e58a58b6f60c2d6fd9eabc44d589df6d4613dfed340d787ddaa985785888fe161a0508fa9e10c7d72022e5fdf9591245702909e16c198979f4f817c804f50117f25ea0bab0b19c76a1f9f1916b3f9afda56a301ef9b85766b2b254873bacd08a34ad52e409eb9e1963c2a45101827345a61ceca165e90ca56043669fe742b08caccb62de54df80ef3cbb35149d85839888ecbeb5c0089dd5979aa3f853c8dffc92a98801c4600b8e6f039e949b8698e1417d73aaeb6633ab187b6078036656b0c8f774e6407f1e325a3db94ffc40b5168f21211174342f17fd8500f0fd8b2ec594e7b7f2baa1abb2b9ec5d8612e37e0f8ec05f530daf9ee5558fb5da035f64b1700301bfe5f9662e332c8d3ff49a174c03193591b59c6b7bb50aec0521bb5186164e4fd93ad36eac222e3cccf182dc81088529e5147787698b55629fa794535335fe70ef1b308760538d43f3f6d3a3c855da96ca0705c0f854c9919180f1f7d1d2743e955ea3761003e82e920234de59e4947892bec70957ac583b44927217a334a3d75fae30c39d59c01c8c3bbd27bc10d3073bfd841060fb793f98ce4657f9bd6e36cfa14e43e58f7fe2d04e84cc427f16dd490d6206aa4e516e378bcd68d9057c37e1fe3c6fed7544421193a500bbb8c2f84b12f6ff3ff8917d816738c262eb4c6b87196c84ee0fa516433454290c90131561af55b5e00435cffe0ca0c82d6256af94fa8676a17f1d3fac6de953d04eacf7ea420e79134b89b6e8793c5e9849f3c6d4afa7c5b7a81243052d922fbe0bc937ed76f3496299ddf275d92a5f49da908f75207361e40fed4854a51836253c7b57aa18f1dc52fcc60ce0fd295346fa0ebc4c16482ad926c7c34aa993a919c8a3200d4e532cb92bcf44682d08a149c9232b6e5f68f88079a5917c6bd1baad96e86d490952b8715648abb93d6e9b4d34de1cd9fbe3c988532ccd28fd382056a679394b24440eb313777775679e91a0f932af3e15e40c5628d076752ae6c3167865ba50836b0a6c50d0e263f8ca8bb9f96f4303cbfb8fda31c80ddca3ef5ea5edd64138c0d02c20262f376fd3c7a745d28585d34bf8ce8c687fa3acfbfcdb28f31bf9e4a4ac77f0eaf86a99c7341ed0f25abcf7ae64309cfcfb5afed10e9ece17343e3a9907cc23309bd8dce0823bd2cfda81692827f9c1cfb73af55912e8eadad4781181b08b9b58bec4999c2b768b0c518d57b3e6d920b6422d07d025a81e454fd53d872adc38f2298f4ea7c67be671d15f6b7e5a8807649699411ea520b4f7a02f39a73ff0c88dc5243a8c41d2d6bf91edb9953735feaee7192229c99a45397f8e5f16a2a40d7c0abedb5730c6ce068f6b39bb5f23dbaa8a89e4cacd42b4dc24ffab673fca0517a8c4b4ab3433ecf081d34b5c60bfae857934dbdc66ac66d28d96f18cd52b6ecd0a5a419b1175f38426433f3e5d242a35da0f6a32a2669818f3e6cd0b1a98af482c1be326561b2508bb80dfdeda574fb47be39a86ccd54deaa501141b003b65a5d9ad19acabbfe77c54eb9855bb87bf20b14c8be18f407d0d0502b821fdd91636148f86b7187f7b30019ca6b79c6352a347b2c0827ec3940c8c533fa1871500730313511f90b2c6028a0965ba22245540c4d292a3faf319d2f67a465126da5c3e48a0b6cbebc6a6d4b7fd307b059bfb853af9dbd565b1d1ef2250b0c56baf6d56d95ce56d8c2038e537e67037b16aed2f8f3349f37ca85de6a0696ecd932def215b25b35faa8e349aa1b7940ab8d0ec6383445eb9c73ca4f535b834165b824389a1d8a805a7edb6596d0a952b3870174dea8ec3c37682acb2e81d807d728304582c027087d55fc710387a7da9ecbf4756bbb5e34290f01a2dde5d9bf41ce4e577a2962d2ce633198a62154cd26b32bbeec72f22141d7e60a7a4b2c528ccdfde51181e6fdc0963230060d131ee0ee614d30ba0fe4dc530cbc412b406d0f31589b13aa88314d82c2262ddc99edc85812da61a3da62d495651c7a02d4fbd5ea942a8b5c45830be5aa221092302ce214f932b15946757e9c15dc51be9c6d60c1cabe4e5fbb1add8a9d943443ed317d77966c45805c6d5a4d504921303e1c023aa49cc152fce824fe3d400fe0afb9b07e21860cfbab2fe7ea028db0e52fbe283759365555e73a1ed7511c6a69f67f1817fd7f9bad93831c2dbbe026b4fa0fa08e380ee50dd79484f78d3bfe05d7335aafbdb71fcea77eb5d5465abf8f1a7743209aa9d8e4e1b00c6bb35391f6404a6541ead25fae9d9de03eff6701459ed7a5fe571002fa0a336d3733b9278a0d986970cadbc3152cf57f8a538c94be45eac2b2a43bd2ce1782122fcd475f8196e20d460cd6bfe334bc0d3503d1101f6e20f0d152560790cc2ef00f63acafa361f81a69215dabd7655463764dcd32ba82c38517e64aee9cc65a7a47640ceaa582d3bc6867ad50c97c0456fb65038ed0ae1f79424abf9926ff03adc27f2fe1c0d5cd2feabd988d7247c58c332a9995754c76420a86b18b3e8bc8197222c9388f5c440687734562ddc1e6e0bc4fd2458ed3b970c35bcfea426483175e0ae7113b34855512acce0a3b74e6d7f99735f3926353d964f62639a88f1d29372d63c4e97b1d779279cfc3ec01a85132d8bc8ca45847f7a75f0fb6826376e7edcf2da1358541cb4074f7deb12dc68f439868668f30925faa656b0d3a9800d6a0d65a49cd10ac35767f663fd0d875e22a43453907a3ca5cb70f93b93563276f7c8494f8775ab6570c290953d32de6f214f199237c420aa494be488bbfdec2ac94c5ea0f6a0b86d17e6569b4e1f439e23bb4333eab01cc5729c329ab59482a0b6a364bae7898e6afc0ce77acef68218857ce20c4f008610c13a1bbf6aa18f8a49b5494e694bc0187d8de29d682138b2a8e279eb7edde84cb01c26e0a71dc4f33ce42af5427f8bbe048dd6a97b6b74c1a94537f476848e3dba30498740fbf6286d0c6535c237218f56b3ac2f37ffc4e494d40d71e8ca2cca17eaf3f9553eb16b88de6ca161d14b25173d3ab50e3553430a1d27d9a3bf4acc0d287b205d90788fe5e7ead8f36e5e897da7100acc1a13c989d53594802a2304ed2de45888201d2c3edb01ac45b6663e5fafb2560e660eb7f65f353a3c86df1c2c2d4186d461d11e83163cd0a0000ac80485d6bfc63666fe1e60642323f79ee59589f4ec67e8a940d382f72991096cce86fbf863abdbd3fb5781f80b0033304d1f4efc09d36c7a561fea069a50b486709e7afd407369949e0815435143027e9969cca97d97e61474af3e791d76d91cd80c65147e2571d5cb8b928ee5f2a6ff08fdeffb1239d54cbe6f663dfe126307f5f0b4944b40806a4a22d87d0e0757691322871906dda6fa516fd65058bc8dc70f63562cdd56fe1ccbab42b1e5ba925cbf8a121b30852a0891aa3cd90a12973eeb0275afe01c6f053284a2d6179e2a57c406da46ba4054dbe0581a53e86f7625fc7aa9579789e073b460b85f1f8fa7f0c761f782e9cada5625e2a35c552613fdb03dd719caeb560ae69abd4f1ea44c65658772aec02a7c8b1b879150dc4fd9b8ada1c83f53d4ad414c77f88c7f734db849ff3851d8f964a80ab5f76d1a8ebbb976edcec435c1c11b9507d099183742b613ad1bda52f587df2c42e3e1ae3ff11779b516c5c2f62e0af3465a9252f2f0fdf363d79b99403ae0dfecc0a2543dcb886407ac8c761e2c316a7afbfea42d3444a0ed2adbe377ba7a86eb9594aff1b1f5c72857660788d43679927b5c37fd638660306164e406b76d072e06214bac05112b56c601aa0def6ecb3e528d24d046d8f394b54ccfae26b0b3d03a775c0e28bd85f3dcbe82154020e1ab47c5df4e58163ffff78562dcb6a32a702c0ab70f3b9db0dc077bde92a9d3901c22c0dda324d8e25050ecf021fe71274f569dc9cc9f09c31f92d16f53ace90bdc42dda492e036e919670f6b7645c41305344b2d2e1ebcec21c6162529d93935c345051028ce26cfbb017c323b350a44a026b747c92e2502f5c6af9cec95b5e3e844913522f82a3066a5f937aded38a346341acf9f91b09c4162e93636e048bca58f628eb34af0e37cfbc0132efea0e18bf22bbf9f563dafd0a9650c664ee29997dcb2b42ec93d5de4e76ca4df54f66e85502baf3dc226c16456a917e842bb196c9b888cc1c294519339511e5570c618192c6cf797eac4bcd25d91f83e0c10879212632fa5d9851000d63a4252126cf653da04718397116e7750bb40272a0440b5b8980ca9d21a4917d508303de14acddd5b074976aa81aed713a1134c4c1d0aa1ae7dfc4275966474fbedadd8a3c93d6efab</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>数据仓库数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据仓库数据挖掘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据仓库数据挖掘期末复习题（2024-2025第2学期限选版）</title>
    <link href="/2025/05/12/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC2%E5%AD%A6%E6%9C%9F%E9%99%90%E9%80%89%E7%89%88%EF%BC%89/"/>
    <url>/2025/05/12/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC2%E5%AD%A6%E6%9C%9F%E9%99%90%E9%80%89%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="a0b77e4c684a59a5cd9fca16547d0bbc591634e93adf822aebf3b3adb66df4a4"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>数据仓库数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据仓库数据挖掘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据仓库数据挖掘期末复习题（2024-2025第2学期限选版）</title>
    <link href="/2025/05/12/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC2%E5%AD%A6%E6%9C%9F%E9%99%90%E9%80%89%E7%89%88%EF%BC%89/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC2%E5%AD%A6%E6%9C%9F%E9%99%90%E9%80%89%E7%89%88%EF%BC%89/"/>
    <url>/2025/05/12/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC2%E5%AD%A6%E6%9C%9F%E9%99%90%E9%80%89%E7%89%88%EF%BC%89/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC2%E5%AD%A6%E6%9C%9F%E9%99%90%E9%80%89%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="dd31cd687b7b74fb82563565b4dd373e9b54c983c16c489a4f6cddbd9c25af1f"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <categories>
      
      <category>数据仓库数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据仓库数据挖掘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据仓库数据挖掘期末复习题（2024-2025第1学期大数据版）</title>
    <link href="/2025/03/03/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC1%E5%AD%A6%E6%9C%9F%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%89%88%EF%BC%89/"/>
    <url>/2025/03/03/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E6%95%B0%E6%8D%AE%E6%8C%96%E6%8E%98%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0%E9%A2%98%EF%BC%882024-2025%E7%AC%AC1%E5%AD%A6%E6%9C%9F%E5%A4%A7%E6%95%B0%E6%8D%AE%E7%89%88%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<p>1 数据分析的基本步骤有哪些？每个步骤的主要工作<br>2 关于大数据的4V理论是什么？<br>3 四种基本度量尺度适用的集中趋势和离散度量方法有哪些？<br>4 数据对象的相似性有哪些方法<br>5 数据属性的相关性有哪些方法（斯皮尔曼等级相关系数，皮尔森）<br>6 数据预处理的主要任务有哪些？每个任务要解决的问题主要有哪些？<br>7 脏数据主要有哪几种？产生的主要原因是什么？<br>8缺失值的处理方法有哪些？<br>9 什么是噪音数据？产生的原因有哪些？<br>10噪声数据的检测和处理方法有哪些？</p><p>11 什么叫数据集成？集成的框架结构？分类？数据集成解决的主要问题有哪些？例子</p><p>12 什么叫数据归约？主要有哪几类归约问题？</p><p>13 维度归约有哪两类技术？有什么区别？<br>14 什么是数据离散化和概念分层？<br>15 数据规范化&#x2F;标准化的方法有哪些？形式，有什么作用？</p><p>16 数据仓库的主要特征是什么，对每一特征给予简要解释<br>17 数据仓库的作用<br>18 典型的数据仓库体系结构，各层简要说明<br>19数据库与数据仓库系统在设计上的差别<br>20数据仓库设计的过程有哪些<br>21模型设计（概念——逻辑；星型模型；粒度选择）<br>22ETL的内容</p><p>23 五种OLAP的操作，并说明每种的具体内容<br>24 MOLAP和ROLAP的体系结构，工作原理</p><p>25 什么叫数据立方体的预计算？为什么要进行预计算？面临的问题有哪些？有哪些策略？<br>26完整数据立方体的预计算方法<br>27什么叫数据泛化<br>28面向属性的泛化方法有哪两种方法及规则</p><p>29频繁模式挖掘相关概念（关联规则，支持度，置信度）<br>30关联规则挖掘的步骤<br>31Apriori方法（原理，例子）<br>32 FP-TREE（原理，例子）<br>33 为什么进行关联规则的主观性测试？有哪些指标及其特点</p><p>33 序列挖掘的相关概念<br>34 apriori-all算法（原理，例子）<br>35 GSP算法（原理，例子）</p><p>37过拟合的主要原因及其解决方法<br>38 关于基于混淆矩阵的几个主要指标及其作用<br>39 ROC曲线及其特点，计算</p><p>40 划分聚类基本思想和原理，k-means, K-medoid算法（原理，例子）<br>41 层次聚类基本思想和原理，AGNES, DIANA算法（原理，例子）<br>42 BIRCH算法相关概念，基本思想，例子<br>43 Chameleon基本思想和步骤<br>44 密度聚类相关概念（邻域，密度可达等）<br>45 DB-SCAN算法<br>46 OPTICS算法原理，例子<br>47 CLIQUE算法基本思想</p><p>48 什么是离群点？离群点挖掘有什么意义？主要有哪几类方法<br>49 基于距离和密度的离群点发现方法（相关概念，原理，例子）<br>50 基于聚类的离群点发现方法（原理，例子）</p><p>51 基于物品的协同推荐算法（原理，例子）<br>52 基于用户的协同推荐算法（原理，例子）<br>53 基于内容的推荐算法（原理）</p>]]></content>
    
    
    <categories>
      
      <category>数据仓库数据挖掘</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数据仓库数据挖掘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人工智能导论考试预测</title>
    <link href="/2025/01/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E8%80%83%E8%AF%95%E9%A2%84%E6%B5%8B/"/>
    <url>/2025/01/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E8%80%83%E8%AF%95%E9%A2%84%E6%B5%8B/</url>
    
    <content type="html"><![CDATA[<h4 id="演绎推理※23"><a href="#演绎推理※23" class="headerlink" title="演绎推理※23"></a>演绎推理※23</h4><ul><li>一般到个别</li></ul><h4 id="归纳推理"><a href="#归纳推理" class="headerlink" title="归纳推理"></a>归纳推理</h4><ul><li>个别到一般</li><li>完全归纳推理和不完全归纳推理</li></ul><h4 id="默认推理"><a href="#默认推理" class="headerlink" title="默认推理"></a>默认推理</h4><ul><li>缺省推理，假设某些知识已经具备</li></ul><h4 id="确定性推理"><a href="#确定性推理" class="headerlink" title="确定性推理"></a>确定性推理</h4><ul><li>知识证据确定，结论也确定</li></ul><h4 id="不确定性推理※22"><a href="#不确定性推理※22" class="headerlink" title="不确定性推理※22"></a>不确定性推理※22</h4><ul><li>推理时所用的知识与证据不都是确定的，推出的结论也是不确定的。</li></ul><h4 id="单调推理"><a href="#单调推理" class="headerlink" title="单调推理"></a>单调推理</h4><ul><li>随推理深入，越来越接近目标</li></ul><h4 id="非单调推理"><a href="#非单调推理" class="headerlink" title="非单调推理"></a>非单调推理</h4><ul><li>由于新知识加入，反而要否定已有结论，使推理返回到某一步重新开始</li></ul><h4 id="启发式推理"><a href="#启发式推理" class="headerlink" title="启发式推理"></a>启发式推理</h4><ul><li>启发性知识：与问题有关且能加快推理过程、提高搜索效率的知识。</li></ul><h2 id="↓"><a href="#↓" class="headerlink" title="↓"></a>↓</h2><h4 id="正向推理"><a href="#正向推理" class="headerlink" title="正向推理"></a>正向推理</h4><ul><li>已知事实→结论</li><li>从初始已知事实出发，在知识库KB中找出当前可适用的知识，构成可适用知识集KS。</li><li>按某种冲突消解策略从KS中选出一条知识进行推理，并将推出的新事实加入到数据库DB中作为下一步推理的已知事实，再在KB中选取可适用知识构成KS。</li><li>重复（2），直到求得问题的解或KB中再无可适用的知识</li></ul><h4 id="逆向推理"><a href="#逆向推理" class="headerlink" title="逆向推理"></a>逆向推理</h4><ul><li>以某个假设目标作为出发点</li><li>寻找证明这个目标的证据，若都能找到，则假设成立；若找不到则换假设目标</li></ul><h4 id="混合推理"><a href="#混合推理" class="headerlink" title="混合推理"></a>混合推理</h4><ul><li>先正向后逆向</li><li>先逆向后正向</li></ul><h4 id="双向推理"><a href="#双向推理" class="headerlink" title="双向推理"></a>双向推理</h4><ul><li>正逆同时进行，在推理过程中的某一步“碰头”</li></ul><h2 id="↑"><a href="#↑" class="headerlink" title="↑"></a>↑</h2><h4 id="信任函数和似然函数区别和联系※2022"><a href="#信任函数和似然函数区别和联系※2022" class="headerlink" title="信任函数和似然函数区别和联系※2022"></a>信任函数和似然函数区别和联系※2022</h4><h4 id="盲目搜索※2023"><a href="#盲目搜索※2023" class="headerlink" title="盲目搜索※2023"></a>盲目搜索※2023</h4><ul><li>在不具有对特定问题的任何有关信息的条件下，按固定的步骤（依次或随机调用操作算子）进行的搜索。</li></ul><h4 id="启发式搜索"><a href="#启发式搜索" class="headerlink" title="启发式搜索"></a>启发式搜索</h4><ul><li>考虑特定问题领域可应用的知识，动态地确定调用操作算子的步骤，优先选择较适合的操作算子，尽量减少不必要的搜索，以求尽快地到达结束状态。</li></ul><h4 id="状态空间搜索※2022"><a href="#状态空间搜索※2022" class="headerlink" title="状态空间搜索※2022"></a>状态空间搜索※2022</h4><ul><li>状态空间：利用状态变量和操作符号，表示系统或问题的有关知识的符号体系</li><li>利用状态空间进行搜索，得出一个从初始状态到目标状态的路径</li></ul><h4 id="带回溯策略的搜索※2023"><a href="#带回溯策略的搜索※2023" class="headerlink" title="带回溯策略的搜索※2023"></a>带回溯策略的搜索※2023</h4><ul><li>从初始状态出发，不停地、试探性地寻找路径，直到它到达目的或“不可解结点”，即“死胡同”为止。</li><li>若它遇到不可解结点就回溯到路径中最近的父结点上，查看该结点是否还有其他的子结点未被扩展。若有，则沿这些子结点继续搜索；如果找到目标，就成功退出搜索，返回解题路径。</li></ul><h4 id="启发式图搜索"><a href="#启发式图搜索" class="headerlink" title="启发式图搜索"></a>启发式图搜索</h4><ul><li>启发信息：用来简化搜索过程有关具体问题领域的特性的信息叫做启发信息。</li><li>利用启发信息进行搜索，例如A搜索算法和A*搜索算法</li></ul><h4 id="智能计算※2023"><a href="#智能计算※2023" class="headerlink" title="智能计算※2023"></a>智能计算※2023</h4><ul><li>受自然界和生物界规律的启迪，人们根据其原理模仿设计了许多求解问题的方法，这些算法称为智能计算或计算智能</li></ul><h4 id="遗传算法定义"><a href="#遗传算法定义" class="headerlink" title="遗传算法定义"></a>遗传算法定义</h4><ul><li>一类借鉴生物界自然选择和自然遗传机制的随机搜索算法,非常适用于处理传统搜索方法难以解决的复杂和非线性优化问题。</li></ul><h4 id="遗传算法的基本思想※2022"><a href="#遗传算法的基本思想※2022" class="headerlink" title="遗传算法的基本思想※2022"></a>遗传算法的基本思想※2022</h4><p>在求解问题时从多个解开始，然后通过一定的法则进行逐步迭代以产生新的解。</p><h4 id="双倍体遗传算法※2023"><a href="#双倍体遗传算法※2023" class="headerlink" title="双倍体遗传算法※2023"></a>双倍体遗传算法※2023</h4><ul><li>采用显性和隐性两个染色体同时进行进化，提供了一种记忆以前有用的基因块的功能。</li></ul><h4 id="多种群遗传算法"><a href="#多种群遗传算法" class="headerlink" title="多种群遗传算法"></a>多种群遗传算法</h4><ul><li>建立两个遗传算法群体，分别独立地运行复制、交叉、变异操作，同时当每一代运行结束以后，选择两个种群中的随机个体及最优个体分别交换。</li></ul><h4 id="自适应遗传算法"><a href="#自适应遗传算法" class="headerlink" title="自适应遗传算法"></a>自适应遗传算法</h4><ul><li>当种群各个体适应度趋于一致或者趋于局部最优时，使$P_c、P_m$增加，以跳出局部最优；而当群体适应度比较分散时，使$P_c、P_m$减少，以利于优良个体的生存。</li></ul><h4 id="群智能算法"><a href="#群智能算法" class="headerlink" title="群智能算法"></a>群智能算法</h4><ul><li>受动物群体智能启发的算法。</li><li>群体智能：简单个体组成的群落与环境以及个体之间的交互行为</li></ul><h4 id="粒子群优化算法基本思想※2023"><a href="#粒子群优化算法基本思想※2023" class="headerlink" title="粒子群优化算法基本思想※2023"></a>粒子群优化算法基本思想※2023</h4><ul><li>将每个个体看作n维搜索空间中一个没有体积质量的粒子，在搜索空间中以一定的速度飞行，该速度决定粒子飞行的方向和距离。所有粒子有一个由优化函数决定的适应值。</li></ul><h4 id="蚁群算法基本思想"><a href="#蚁群算法基本思想" class="headerlink" title="蚁群算法基本思想"></a>蚁群算法基本思想</h4><ul><li>信息素跟踪：按照一定的概率沿着信息素较强的路径觅食。</li><li>信息素遗留：会在走过的路上会释放信息素，使得在一定的范围内的其他蚂蚁能够觉察到并由此影响它们的行为。</li></ul><h4 id="专家系统定义※2023"><a href="#专家系统定义※2023" class="headerlink" title="专家系统定义※2023"></a>专家系统定义※2023</h4><ul><li>一类包含知识和推理的智能计算机程序。</li></ul><h4 id="专家系统的基本结构，并解释其核心部件的功能※2022"><a href="#专家系统的基本结构，并解释其核心部件的功能※2022" class="headerlink" title="专家系统的基本结构，并解释其核心部件的功能※2022"></a>专家系统的基本结构，并解释其核心部件的功能※2022</h4><p><img src="/2025/01/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E8%80%83%E8%AF%95%E9%A2%84%E6%B5%8B/image.png" alt="专家系统基本结构"></p><ul><li>知识库：存储专家的知识和经验，通常以规则、事实和关系的形式表示。</li><li>推理机：利用知识库中的知识进行推理和决策，模拟专家的思维过程。</li></ul><h4 id="机器学习概念※2023"><a href="#机器学习概念※2023" class="headerlink" title="机器学习概念※2023"></a>机器学习概念※2023</h4><ul><li>机器学习（Machine learning）使计算机能模拟人的学习行为，自动地通过学习来获取知识和技能，不断改善性能，实现自我完善。</li></ul><h4 id="学习系统基本结构※2023"><a href="#学习系统基本结构※2023" class="headerlink" title="学习系统基本结构※2023"></a>学习系统基本结构※2023</h4><p><img src="/2025/01/07/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E8%80%83%E8%AF%95%E9%A2%84%E6%B5%8B/image-1.png" alt="学习系统基本结构"></p><h4 id="知识发现※2023"><a href="#知识发现※2023" class="headerlink" title="知识发现※2023"></a>知识发现※2023</h4><ul><li>从数据库中发现知识（KDD）。</li></ul><h4 id="数据挖掘※2022"><a href="#数据挖掘※2022" class="headerlink" title="数据挖掘※2022"></a>数据挖掘※2022</h4><ul><li>是从数据库中挖掘知识。</li></ul><h4 id="BP神经网络"><a href="#BP神经网络" class="headerlink" title="BP神经网络"></a>BP神经网络</h4><ul><li><p>初始化权重和偏置：在开始训练之前，随机初始化网络中的权重和偏置。</p></li><li><p>前向传播：输入数据通过网络层层传播，最终得到输出。</p></li><li><p>计算误差：比较输出结果与实际结果，计算误差。</p></li><li><p>反向传播：通过误差反向传播算法，计算每个权重和偏置的梯度。</p></li><li><p>更新权重和偏置：根据计算出的梯度，更新权重和偏置，以减小误差。</p></li><li><p>重复上述步骤：直到网络收敛，即误差达到预定阈值或达到最大迭代次数。</p></li></ul><h4 id="卷积"><a href="#卷积" class="headerlink" title="卷积"></a>卷积</h4><ul><li><p>卷积操作的目的是从输入图像中提取特征。具体而言，卷积层通过卷积核（也称为滤波器）对输入进行卷积操作，生成特征图（feature map）。卷积操作的步骤如下：</p></li><li><p><strong>选择卷积核</strong>：卷积核是一个小矩阵，用来扫描输入图像的不同区域。</p></li><li><p><strong>局部加权求和</strong>：将卷积核与图像的局部区域进行加权求和，即点积运算。</p></li><li><p><strong>生成特征图</strong>：将结果赋值到特征图的对应位置，并继续扫描下一位置。</p></li><li><p>卷积核可以帮助检测图像中的边缘、纹理、颜色等低级特征，逐层堆叠后可提取更高级别的特征。</p></li></ul><h4 id="池化"><a href="#池化" class="headerlink" title="池化"></a>池化</h4><ul><li><p>池化操作的目的是减少特征图的尺寸，同时保留重要信息，从而减少计算量和防止过拟合。常见的池化操作有两种：最大池化（Max Pooling）和平均池化（Average Pooling）。</p></li><li><p><strong>最大池化</strong>：在局部区域内选择最大值作为输出。最大池化可以提取最显著的特征，增强模型的鲁棒性。</p></li><li><p><strong>平均池化</strong>：在局部区域内计算平均值作为输出。平均池化则较平滑特征图，减少过拟合。</p></li><li><p>通过卷积和池化操作，卷积神经网络可以逐步提取输入图像的特征，并进行分类或回归等任务。</p></li></ul><h4 id="生成式对抗网络"><a href="#生成式对抗网络" class="headerlink" title="生成式对抗网络"></a>生成式对抗网络</h4><ul><li><p>GAN的基本思想是通过两个神经网络相互对抗来生成新的、与原始数据类似的数据。具体来说，它由两个主要部分组成：</p></li><li><p><strong>生成器（Generator）</strong>：负责生成类似于真实数据的假数据。生成器接受一些随机噪声作为输入，并将其转换为数据（例如图片、文本等）。</p></li><li><p><strong>判别器（Discriminator）</strong>：负责区分真实数据和生成器生成的假数据。判别器的输入是一个数据样本，并输出一个概率，表示该样本是否为真实数据。</p></li><li><p>在训练过程中，生成器和判别器通过博弈论中的零和博弈不断提升自己的能力。生成器试图生成尽可能真实的假数据，而判别器则不断提高识别真假数据的能力。最终，生成器生成的数据将会非常逼真，难以被判别器识别出来。</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>人工智能导论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人工智能导论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络复习</title>
    <link href="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/"/>
    <url>/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a><center>计算机网络</center></h1><h2 id="第一章-引入"><a href="#第一章-引入" class="headerlink" title="第一章 引入"></a>第一章 引入</h2><h3 id="计算机网络的概念"><a href="#计算机网络的概念" class="headerlink" title="计算机网络的概念"></a>计算机网络的概念</h3><ul><li>以资源共享为目的的自治系统的集合</li></ul><h3 id="点对点网络P2P（peer-to-peer）"><a href="#点对点网络P2P（peer-to-peer）" class="headerlink" title="点对点网络P2P（peer-to-peer）"></a>点对点网络P2P（peer-to-peer）</h3><ul><li>每台设备既可以是服务器，也可以是客户机，关系对等（平等）</li><li>用户之间是Connected，主要用软件支持，如资源的定位，数据传递路径的确定等。每个节点需要有路由功能。</li></ul><h3 id="计算机网络技术设计最基本的要求"><a href="#计算机网络技术设计最基本的要求" class="headerlink" title="计算机网络技术设计最基本的要求"></a>计算机网络技术设计最基本的要求</h3><ul><li>数据送达、资源使用高效</li></ul><h3 id="计算机网络按传输技术分类Transmission-Technologies"><a href="#计算机网络按传输技术分类Transmission-Technologies" class="headerlink" title="计算机网络按传输技术分类Transmission Technologies"></a>计算机网络按传输技术分类Transmission Technologies</h3><h4 id="广播式链路Broardcast-Links"><a href="#广播式链路Broardcast-Links" class="headerlink" title="广播式链路Broardcast Links"></a>广播式链路Broardcast Links</h4><ul><li>通信信道被网络上所有机器所共享</li><li>两种广播式：总线型、环形</li></ul><h4 id="点到点链路Point-to-Point-Links"><a href="#点到点链路Point-to-Point-Links" class="headerlink" title="点到点链路Point-to-Point Links"></a>点到点链路Point-to-Point Links</h4><ul><li>点到点链路将一对单独的机器连接起来。可能中间经过一个或多个中间机器。直接相连的两个机器是点到点链路的最简单的形式。</li><li><strong>路由</strong>：点到点链路的确定过程称为路由。</li></ul><h3 id="网络中常见的数据递交方式（功能需求）"><a href="#网络中常见的数据递交方式（功能需求）" class="headerlink" title="网络中常见的数据递交方式（功能需求）"></a>网络中常见的数据递交方式（功能需求）</h3><ul><li>单播：将数据发送给某个特定接收方的方式。</li><li>广播：将数据发送给所有接收方的方式。</li><li>组播：将数据发送给某些接收方的方式。</li></ul><h3 id="计算机网络按规模分类"><a href="#计算机网络按规模分类" class="headerlink" title="计算机网络按规模分类"></a>计算机网络按规模分类</h3><table><thead><tr><th>规模</th><th>类型</th></tr></thead><tbody><tr><td>个人区域网络</td><td>PAN (Personal Area Network)</td></tr><tr><td>局域网</td><td>LAN (Local Area Network)</td></tr><tr><td>城域网</td><td>MAN (Metropolitan Area Network)</td></tr><tr><td>广域网</td><td>WAN (Wide Area Network)</td></tr><tr><td>全球</td><td>互联网 (所有网络的网络)</td></tr></tbody></table><ul><li>PAN (Personal Area Network)规模一般覆盖一个办公室、一个楼层、一栋楼、几栋楼或一个校园 。</li><li>MAN（Metropolitan Area Network）的范围覆盖一个城市。典型的例子为有线电视网。</li><li>WAN（Wide Area Network）的范围覆盖一个国家、地区或大陆。例如通信子网</li></ul><h3 id="计算机网络分层结构"><a href="#计算机网络分层结构" class="headerlink" title="计算机网络分层结构"></a>计算机网络分层结构</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E5%88%86%E5%B1%82%E6%96%B9%E5%BC%8F.png" alt="计算机网络的分层方式"></p><ul><li>每个协议实例都与其对等体进行虚拟通信</li><li>每一层仅使用下一层进行通信</li><li>通过接口访问下层服务</li><li>在底层，消息通过介质传输</li></ul><h3 id="面向连接的服务和无连接的服务"><a href="#面向连接的服务和无连接的服务" class="headerlink" title="面向连接的服务和无连接的服务"></a>面向连接的服务和无连接的服务</h3><ul><li>面向连接的服务<ul><li>使用之前必须建立连接，使用后释放连接</li><li>打电话</li></ul></li><li>无连接的服务<ul><li>消息被单独处理</li><li>例如邮政快递<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E9%9D%A2%E5%90%91%E8%BF%9E%E6%8E%A5%E5%92%8C%E6%97%A0%E8%BF%9E%E6%8E%A5.png" alt="面向连接和无连接"></li></ul></li></ul><h3 id="服务与协议的关系"><a href="#服务与协议的关系" class="headerlink" title="服务与协议的关系"></a>服务与协议的关系</h3><ul><li>一个层为上一层提供服务（垂直）</li><li>一个层使用协议与其对等层进行通信（水平）</li></ul><h3 id="网络体系结构"><a href="#网络体系结构" class="headerlink" title="网络体系结构"></a>网络体系结构</h3><ul><li>层和协议的集合。</li></ul><h3 id="OSI参考模型（口诀：物联网输会示用）"><a href="#OSI参考模型（口诀：物联网输会示用）" class="headerlink" title="OSI参考模型（口诀：物联网输会示用）"></a>OSI参考模型（口诀：物联网输会示用）</h3><h4 id="1-物理层：实现相邻节点之间比特的传输"><a href="#1-物理层：实现相邻节点之间比特的传输" class="headerlink" title="(1)物理层：实现相邻节点之间比特的传输"></a>(1)物理层：实现相邻节点之间比特的传输</h4><ul><li>需定义电路接口参数（形状、尺寸、引脚数等）</li><li>需定义传输信号的含义、电气特征（如：5V表示1，1V表示0；每比特电信号持续时间0.1ms）</li></ul><h4 id="2-数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）"><a href="#2-数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）" class="headerlink" title="(2)数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）"></a>(2)数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）</h4><ul><li><strong>差错控制</strong>：检错+纠错；或检错+丢弃+重传</li><li>流量控制：协调两个结点的速率</li></ul><h4 id="3-网络层：把“分组”从源节点转发到目的节点"><a href="#3-网络层：把“分组”从源节点转发到目的节点" class="headerlink" title="(3)网络层：把“分组”从源节点转发到目的节点"></a>(3)网络层：把“分组”从源节点转发到目的节点</h4><ul><li><strong>路由选择</strong>：构造并维护路由表，决定分组到达目的节点的最佳路径</li><li><strong>分组转发</strong>：将“分组”从合适的端口转发出去</li><li>拥塞控制：发现网络拥塞，并采取措施缓解拥塞</li><li>网际互连：实现异构网络互连</li><li>其他功能：差错控制、流量控制、连接的建立与释放、可靠传输管理</li></ul><h4 id="4-传输层：实现端到端的通信"><a href="#4-传输层：实现端到端的通信" class="headerlink" title="(4)传输层：实现端到端的通信"></a>(4)传输层：实现端到端的通信</h4><ul><li>复用和分用：发送端几个高层实体复用一条低层的连接，在接收端再进行分用</li><li>其他功能（以“报文”段为单位）：差错控制、流量控制、连接建立与释放、可靠传输管理</li></ul><h4 id="5-会话层：管理进程间会话"><a href="#5-会话层：管理进程间会话" class="headerlink" title="(5)会话层：管理进程间会话"></a>(5)会话层：管理进程间会话</h4><ul><li>主要功能：会话管理（采用检查点机制，当通信失效时从检查点继续恢复通信）</li></ul><h4 id="6-表示层：解决不同主机上信息表示不一致的问题"><a href="#6-表示层：解决不同主机上信息表示不一致的问题" class="headerlink" title="(6)表示层：解决不同主机上信息表示不一致的问题"></a>(6)表示层：解决不同主机上信息表示不一致的问题</h4><ul><li>主要功能：数据格式转换（如编码转换、压缩&#x2F;解压、加密&#x2F;解密）</li></ul><h4 id="7-应用层：实现特定的网络应用"><a href="#7-应用层：实现特定的网络应用" class="headerlink" title="(7)应用层：实现特定的网络应用"></a>(7)应用层：实现特定的网络应用</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/OSI%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B.png" alt="OSI参考模型"></p><h3 id="TCP-IP参考模型"><a href="#TCP-IP参考模型" class="headerlink" title="TCP&#x2F;IP参考模型"></a>TCP&#x2F;IP参考模型</h3><ul><li>链路层（网络接入层）：不同的网络，需要按照一定的接口功能接入到互联网。</li><li>互联网层（网络层）：完成从发送方到接收方的分组（数据包）递交。主要协议是互联网协议（IP），和用于网络维护的互联网控制信息协议（ICMP）。还有完成路径规划的路由协议，用于地址转换的地址解析协议（ARP）等。</li><li>传输层：实现端到端的数据传输服务。最主要的两个协议是提供面向连接的、可靠的数据传输控制协议（TCP）和非连接的、不可靠的用户数据报协议（UDP）。</li><li>应用层：为网络用户提供网络应用。包括将域名转换为IP地址的域名系统（DNS），虚拟终端协议（TELNET）、文件传输协议（FTP）、电子邮件协议（POP3，SMTP）、超文本传输协议（HTTP）等。</li></ul><h3 id="TCP-IP主要协议"><a href="#TCP-IP主要协议" class="headerlink" title="TCP&#x2F;IP主要协议"></a>TCP&#x2F;IP主要协议</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%B8%BB%E8%A6%81%E5%8D%8F%E8%AE%AE.png" alt="主要协议"></p><h2 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章 物理层"></a>第二章 物理层</h2><h3 id="波特率和比特率"><a href="#波特率和比特率" class="headerlink" title="波特率和比特率"></a>波特率和比特率</h3><ul><li>波特率（Baud per second, Bps）：信道上每秒钟信号变化的次数；或信道上每秒钟传递的周期信号个数。</li><li>比特率（bit per second, bps）：信道上每秒钟发送或接收的比特位数（bit）。</li><li>bps&#x3D;Bps*W<ul><li>W表示一个周期信号能够表达的信息位数</li></ul></li></ul><h3 id="奈奎斯特定理"><a href="#奈奎斯特定理" class="headerlink" title="奈奎斯特定理"></a>奈奎斯特定理</h3><ul><li>对于一个<strong>理想低通信道</strong>（没有噪声、带宽有限的信道）<strong>极限波特率</strong>&#x3D;2W（单位：波特，即码元&#x2F;秒）</li><li>W是信道的频率带宽（单位：Hz）</li><li>极限比特率&#x3D;$2Wlog_2K \space b&#x2F;s$</li></ul><h3 id="香农定理"><a href="#香农定理" class="headerlink" title="香农定理"></a>香农定理</h3><ul><li>对于一个有噪声、带宽有限的信道，极限比特率&#x3D;$Wlog_2(1+S&#x2F;N)$，单位b&#x2F;s</li><li>S&#x2F;N：信噪比，无单位，信号的功率&#x2F;噪声的功率，信号功率往往比噪声功率大得多</li><li>为方便记录信噪比，信噪比$&#x3D;10lgS&#x2F;N$，单位：分贝（db）</li></ul><h3 id="导向型传输介质"><a href="#导向型传输介质" class="headerlink" title="导向型传输介质"></a>导向型传输介质</h3><h4 id="1-双绞线"><a href="#1-双绞线" class="headerlink" title="(1)双绞线"></a>(1)双绞线</h4><ul><li>主要构成：两根导线相互绞合而成<ul><li>有屏蔽层：屏蔽双绞线（STP）</li><li>没有屏蔽层：非屏蔽双绞线（UTP）</li></ul></li><li>抗干扰能力：较好。<strong>绞合、屏蔽层</strong> 可以提升抗电磁干扰的能力</li><li>代表应用：近些年的局域网线、早期电话线<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%8F%8C%E7%BB%9E%E7%BA%BF.png" alt="双绞线"></li></ul><h4 id="2-同轴电缆"><a href="#2-同轴电缆" class="headerlink" title="(2)同轴电缆"></a>(2)同轴电缆</h4><ul><li>主要构成：内导体（用于传输信号）+外导体屏蔽层（用于抗电磁干扰）<ul><li>内导体越粗，电阻越低，传输过程中信号衰减越少，传输距离越长</li></ul></li><li>抗干扰能力：好。屏蔽层带来良好的抗干扰性</li><li>代表应用：早期局域网、早期有线电视<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%90%8C%E8%BD%B4%E7%94%B5%E7%BC%86.png" alt="同轴电缆"></li></ul><h4 id="3-光纤"><a href="#3-光纤" class="headerlink" title="(3)光纤"></a>(3)光纤</h4><ul><li>主要构成：纤芯（高折射率）+包层（低折射率）<ul><li>利用光的全反射特性，在纤芯内传输光脉冲信号</li></ul></li><li>分类：<ul><li>单模光纤：只有一条光线在一根光纤中传输，适合长距离传输，信号传输损耗小</li><li>多模光纤：多条光线在一根光纤中传输，适合近距离传输，远距离传输光信号容易失真</li></ul></li><li>抗干扰能力：非常好。光信号对电磁干扰不敏感</li><li>其他优点：信号传输损耗小，长距离传输时中继器少；很细很省布线空间<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%85%89%E7%BA%A4.png" alt="光纤"></li></ul><h3 id="编码方法"><a href="#编码方法" class="headerlink" title="编码方法"></a>编码方法</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E7%BC%96%E7%A0%81%E6%96%B9%E6%B3%95.png" alt="编码方法"></p><h3 id="调制方法"><a href="#调制方法" class="headerlink" title="调制方法"></a>调制方法</h3><h4 id="1-调幅"><a href="#1-调幅" class="headerlink" title="(1)调幅"></a>(1)调幅</h4><ul><li>使信号幅度变化</li></ul><h4 id="2-调频"><a href="#2-调频" class="headerlink" title="(2)调频"></a>(2)调频</h4><ul><li>使信号频率变化</li></ul><h4 id="3-调相"><a href="#3-调相" class="headerlink" title="(3)调相"></a>(3)调相</h4><ul><li>使信号相位变化</li></ul><h4 id="4-正交幅度调制"><a href="#4-正交幅度调制" class="headerlink" title="(4)正交幅度调制"></a>(4)正交幅度调制</h4><ul><li>既调频，又调相<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E8%B0%83%E5%88%B6%E6%96%B9%E6%B3%95.png" alt="调制方法"><br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%AD%A3%E4%BA%A4%E5%B9%85%E5%BA%A6%E8%B0%83%E5%88%B6.png" alt="正交幅度调制"></li></ul><h3 id="多路复用"><a href="#多路复用" class="headerlink" title="多路复用"></a>多路复用</h3><h4 id="时分复用-Time-Division-Multiplexing"><a href="#时分复用-Time-Division-Multiplexing" class="headerlink" title="时分复用(Time Division Multiplexing)"></a>时分复用(Time Division Multiplexing)</h4><ul><li>将时间分为等长的“TDM帧”，每个TDM帧又分为等长的m个“时隙”，将m个时隙分配给m对用户（节点）使用</li></ul><h5 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h5><ul><li>每个节点最多只能分到信道总带宽的1&#x2F;m</li><li>如果某节点暂不发送数据，会导致被分配的时隙闲置，信道利用率低</li></ul><h4 id="统计时分复用-STDM-Statistic"><a href="#统计时分复用-STDM-Statistic" class="headerlink" title="统计时分复用(STDM,Statistic)"></a>统计时分复用(STDM,Statistic)</h4><ul><li>又称异步时分复用，在TDM的基础上，动态按需分配时隙</li></ul><h5 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h5><ul><li>如果需要时，一个节点可以在一段时间内获得所有信道带宽资源</li><li>如果某节点暂不发送数据，可以不分配时隙，信道利用率更高</li></ul><h4 id="频分复用-Frequency-Division-Multiplexing"><a href="#频分复用-Frequency-Division-Multiplexing" class="headerlink" title="频分复用(Frequency Division Multiplexing)"></a>频分复用(Frequency Division Multiplexing)</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E9%A2%91%E5%88%86%E5%A4%8D%E7%94%A8.png" alt="频分复用"></p><ul><li>将信道的总频划分为多个子频带，每个子频带作为一个子信道，没对用户使用一个子信道进行通信</li><li>不同子频带之间并不相连，有隔离频带</li><li>优点：各节点可同时发送信号；充分利用了信道带宽（Hz）</li><li>缺点：FDM技术只能用于模拟信号的传输</li></ul><h4 id="波分复用"><a href="#波分复用" class="headerlink" title="波分复用"></a>波分复用</h4><ul><li>光的频分复用</li><li>不同波长的光频率也不同，C&#x3D;λf</li><li>光信号的频带范围（带宽）非常大，因此很适合采用波分复用技术，将一根光纤在逻辑上拆分为多个子信道</li></ul><h4 id="码分复用-CDM"><a href="#码分复用-CDM" class="headerlink" title="码分复用(CDM)"></a>码分复用(CDM)</h4><h5 id="1-给各节点分配专属“码片序列”"><a href="#1-给各节点分配专属“码片序列”" class="headerlink" title="(1)给各节点分配专属“码片序列”"></a>(1)给各节点分配专属“码片序列”</h5><ul><li>“码片序列”包含m个码片（信号值），可以看作“m维向量”</li><li>要求：各节点的向量必须正交（内积为0）</li><li>相互通信的各节点知道彼此的“码片序列”</li></ul><h5 id="2-发送方发送数据"><a href="#2-发送方发送数据" class="headerlink" title="(2)发送方发送数据"></a>(2)发送方发送数据</h5><ul><li>发出的向量与码片序列相同表示1，不同表示0</li></ul><h5 id="3-信号在传输过程中“叠加”"><a href="#3-信号在传输过程中“叠加”" class="headerlink" title="(3)信号在传输过程中“叠加”"></a>(3)信号在传输过程中“叠加”</h5><ul><li>当多个发送方同时发送数据时，信号值会叠加（本质是向量加法）</li></ul><h5 id="4-接收方接收数据"><a href="#4-接收方接收数据" class="headerlink" title="(4)接收方接收数据"></a>(4)接收方接收数据</h5><ul><li>接收方收到的是叠加信号，需要将信号分离</li><li>方法：叠加信号与码片序列做规格化内积，结果为1表示比特1，为0表示比特0</li></ul><h4 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BF%A1%E9%81%93%E5%88%92%E5%88%86%E5%92%8C%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%B0%8F%E7%BB%93.png" alt="信道划分和介质访问控制小结"></p><h3 id="公共交换电话网络Public-Switched-Telephone-Network"><a href="#公共交换电话网络Public-Switched-Telephone-Network" class="headerlink" title="公共交换电话网络Public Switched Telephone Network"></a>公共交换电话网络Public Switched Telephone Network</h3><h4 id="本地回路"><a href="#本地回路" class="headerlink" title="本地回路"></a>本地回路</h4><ul><li>使用模拟信号尽可能快速的传递数据。主要设备是调制解调器</li></ul><h4 id="中继线"><a href="#中继线" class="headerlink" title="中继线"></a>中继线</h4><ul><li>用于连接不同层次的交换局，使用数字信号传输，采用多路复用技术</li></ul><h4 id="交换局"><a href="#交换局" class="headerlink" title="交换局"></a>交换局</h4><ul><li>是把一条入境线路上来的呼叫交换到一条出境线路上。</li><li>电路交换<ul><li>呼叫——建立连接——传输——挂断 </li><li>缺点<ul><li>建立连接的时间长；</li><li>一旦建立连接就独占线路，线路利用率低；</li><li>无纠错机制；</li></ul></li><li>优点<ul><li>建立连接后，传输延迟小。</li></ul></li></ul></li><li>分组交换<ul><li>将报文划分为若干个大小相等的分组(Packet)进行存储转发。</li><li>优点<ul><li>存储量要求较小，可以用内存来缓冲分组——速度快；</li><li>转发延时小——适用于交互式通信；</li><li>某个分组出错仅重发该分组——效率高；</li><li>各分组可通过不同路径传输，可靠性高。</li></ul></li><li>特点<ul><li>数据传输前不需要建立一条端到端的通路。</li><li>有强大的纠错机制、流量控制和路由选择功能。</li></ul></li></ul></li></ul><h2 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章 数据链路层"></a>第三章 数据链路层</h2><h3 id="帧Frame"><a href="#帧Frame" class="headerlink" title="帧Frame"></a>帧Frame</h3><ul><li>数据链路层对等体之间交换的协议数据单元</li></ul><h3 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h3><h4 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h4><ul><li>信息位（有效数据）：指帧的“数据部分”</li><li>加上校验位，使整个校验码1的个数是奇数&#x2F;偶数</li><li>偶数用的多，因为便于硬件实现，使用异或（模2加）运算</li><li>只能检验奇数位错误，无纠错能力</li></ul><h4 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C%E5%B0%8F%E7%BB%93.png" alt="奇偶校验小结"></p><h4 id="循环冗余校验码-Cyclic-Redundancy-Check-CRC"><a href="#循环冗余校验码-Cyclic-Redundancy-Check-CRC" class="headerlink" title="循环冗余校验码(Cyclic Redundancy Check,CRC)"></a>循环冗余校验码(Cyclic Redundancy Check,CRC)</h4><ul><li>数据发送方、接收方约定一个“除数”</li><li>K个信息位+R个校验位作为“被除数”。添加校验位后需保证除法的余数是否为0</li><li>若不为0则出错<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/CRC%E4%BE%8B.png" alt="CRC例"></li><li>若信息位+校验位&lt;&#x3D;2^R-1，那么可以纠1位错，否则不能</li><li>计算过程：<ul><li>被除数：信息码+G(x)最高次个0（除数位数-1位）</li><li>除数：G(x)变二进制</li><li>结果：信息码+余数（除数位数-1位）<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/CRC%E4%BE%8B2.png" alt="CRC例2"><br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/CRC%E4%BE%8B3.png" alt="CRC例3"></li></ul></li></ul><h4 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/CRC%E7%A0%81%E5%B0%8F%E7%BB%93.png" alt="CRC码小结"></p><h3 id="组帧（封装成帧）"><a href="#组帧（封装成帧）" class="headerlink" title="组帧（封装成帧）"></a>组帧（封装成帧）</h3><h4 id="1-主要问题"><a href="#1-主要问题" class="headerlink" title="(1)主要问题"></a>(1)主要问题</h4><ul><li>帧定界：如何让接收方能够确定帧的界限</li><li>透明传输：接收方要能够去除“帧定界”的附加信息，把帧“恢复原貌”</li></ul><h4 id="2-组帧方法"><a href="#2-组帧方法" class="headerlink" title="(2)组帧方法"></a>(2)组帧方法</h4><h5 id="字符计数法"><a href="#字符计数法" class="headerlink" title="字符计数法"></a>字符计数法</h5><ul><li>原理：在每个帧开头，用一个定长计数字段表示帧长</li><li>帧长&#x3D;计数字段长度+数据字段长度</li><li>最大缺点：任何一个计数字段出错，都会导致后续所有帧无法定界</li></ul><h5 id="字节填充法"><a href="#字节填充法" class="headerlink" title="字节填充法"></a>字节填充法</h5><ul><li>头部加上00000001(01H)，表示ASCII中的SOH(Start Of Header)</li><li>尾部加上00000100(04H)，表示ASCII中的EOT(End Of Transimission)</li><li>转义字符ESC(Escape Character)：解决在数据中出现SOH和EOT时导致帧定界错误的情况<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.png" alt="转义字符"></li></ul><h5 id="零比特填充法"><a href="#零比特填充法" class="headerlink" title="零比特填充法"></a>零比特填充法</h5><ul><li>在头部和尾部，添加01111110（课上没说，不考虑）</li><li>发送方要对数据部分进行处理，每当遇到连续5个1，就填充一个0</li><li>接收方要对数据部分进行处理，每当遇到连续5个1，就删除后边紧跟的0</li></ul><h5 id="违规编码法（不考虑）"><a href="#违规编码法（不考虑）" class="headerlink" title="违规编码法（不考虑）"></a>违规编码法（不考虑）</h5><ul><li>曼彻斯特编码（IEEE标准）上跳0下跳1，中间必变</li><li>如果周期中间没变，则“违规”，来分辨帧的边界</li></ul><h4 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E7%BB%84%E5%B8%A7%E5%B0%8F%E7%BB%93.png" alt="组帧小结"></p><h3 id="滑动窗口机制"><a href="#滑动窗口机制" class="headerlink" title="滑动窗口机制"></a>滑动窗口机制</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%BA%E5%88%B61.png" alt="滑动窗口机制1"><br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%BA%E5%88%B62.png" alt="滑动窗口机制2"><br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E9%87%8D%E7%82%B9%E5%85%B3%E6%B3%A8.png" alt="重点关注"></p><h3 id="停止-等待协议-S-W"><a href="#停止-等待协议-S-W" class="headerlink" title="停止-等待协议(S-W)"></a>停止-等待协议(S-W)</h3><h4 id="1-滑动窗口机制"><a href="#1-滑动窗口机制" class="headerlink" title="(1)滑动窗口机制"></a>(1)滑动窗口机制</h4><ul><li>发送窗口$W_T&#x3D;1$</li><li>接收窗口$W_R&#x3D;1$</li></ul><h4 id="2-帧编号"><a href="#2-帧编号" class="headerlink" title="(2)帧编号"></a>(2)帧编号</h4><ul><li>只需1bit给帧编号</li><li>要求$W_T+W_R≤2^n$（n是bit位数）</li></ul><h4 id="3-几个概念"><a href="#3-几个概念" class="headerlink" title="(3)几个概念"></a>(3)几个概念</h4><ul><li>帧的首尾主要是一些控制信息，如：帧定界信息、校验码、帧类型、帧序号。</li><li>帧类型：实际应用中，通信一般都是双向的，双方都可能发送数据帧或确认帧。</li><li>帧序号：标明帧的帧号。</li><li>数据帧的数据部分通常很短，甚至可以为空。<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5.png" alt="几个概念"></li></ul><h4 id="4-正常情况"><a href="#4-正常情况" class="headerlink" title="(4)正常情况"></a>(4)正常情况</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%81%9C%E7%AD%89%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5.png" alt="停等正常情况"></p><ul><li>发送方发送i号数据帧</li><li>接收方接收到i号数据帧</li><li>接收方向发送方发送确认帧ACK_i，滑动窗口右移</li><li>发送方收到确认帧，滑动窗口右移</li></ul><h4 id="5-异常情况"><a href="#5-异常情况" class="headerlink" title="(5)异常情况"></a>(5)异常情况</h4><h5 id="数据帧丢失"><a href="#数据帧丢失" class="headerlink" title="数据帧丢失"></a>数据帧丢失</h5><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%81%9C%E7%AD%89%E8%B6%85%E6%97%B6%E9%87%8D%E4%BC%A0.png" alt="停等超时重传"></p><ul><li>解决方法：超时重传</li><li>发送方在在发送后会开启一个计时器，当超时还没收到确认帧时，重新传输</li></ul><h5 id="确认帧丢失"><a href="#确认帧丢失" class="headerlink" title="确认帧丢失"></a>确认帧丢失</h5><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%81%9C%E7%AD%89%E7%A1%AE%E8%AE%A4%E5%B8%A7%E4%B8%A2%E5%A4%B1.png" alt="停等确认帧丢失"></p><ul><li>解决方法<ul><li>丢弃重复帧</li><li>返回重复帧的ACK</li></ul></li><li>接收方向发送方发送的确认帧，并且滑动窗口右移</li><li>接收方没有收到确认帧，向接收方重传</li><li>接收方丢弃重复帧，并返回重复帧的ACK</li></ul><h5 id="为什么给帧编号？"><a href="#为什么给帧编号？" class="headerlink" title="为什么给帧编号？"></a>为什么给帧编号？</h5><ul><li>若没有编号，则无法辨别重复帧</li></ul><h5 id="数据帧有“差错”"><a href="#数据帧有“差错”" class="headerlink" title="数据帧有“差错”"></a>数据帧有“差错”</h5><ul><li>接收方直接将数据帧丢弃，且不返回ACK</li><li>发送方超时重传</li></ul><h4 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%81%9C%E7%AD%89%E5%B0%8F%E7%BB%93.png" alt="停等小结"></p><ul><li>停等协议窗口大小为1，所以没有失序问题</li></ul><h3 id="后退N帧协议-GBN"><a href="#后退N帧协议-GBN" class="headerlink" title="后退N帧协议(GBN)"></a>后退N帧协议(GBN)</h3><h4 id="1-滑动窗口"><a href="#1-滑动窗口" class="headerlink" title="(1)滑动窗口"></a>(1)滑动窗口</h4><ul><li>发送窗口大于1，接收窗口等于1</li></ul><h4 id="2-正常情况"><a href="#2-正常情况" class="headerlink" title="(2)正常情况"></a>(2)正常情况</h4><ul><li>发送方发送W_T个帧</li><li>接收方每收到一个数据帧，滑动窗口就向后移一位，接收到最后一个数据帧后向发送方发送一个最后帧确认帧（累计确认）</li><li>发送方接收到确认帧，窗口向后移动</li></ul><h4 id="3-数据帧丢失"><a href="#3-数据帧丢失" class="headerlink" title="(3)数据帧丢失"></a>(3)数据帧丢失</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%90%8E%E9%80%80N%E6%95%B0%E6%8D%AE%E5%B8%A7%E4%B8%A2%E5%A4%B11.png" alt="后退N数据帧丢失1"><br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%90%8E%E9%80%80N%E6%95%B0%E6%8D%AE%E5%B8%A7%E4%B8%A2%E5%A4%B12.png" alt="后退N数据帧丢失2"></p><ul><li>若数据帧i丢失，或数据帧i出错被丢弃，则接收方向发送方发送最后一个正确的帧的确认帧，数据帧i以后的帧全部丢弃</li><li>发送方收到确认帧，滑动窗口向右移动到$i+1(mod W_T)$号帧处，然后超时重传，将i+1号帧后的所有帧全部重传，被重传的帧要重置计时器</li></ul><h4 id="4-确认帧丢失"><a href="#4-确认帧丢失" class="headerlink" title="(4)确认帧丢失"></a>(4)确认帧丢失</h4><ul><li>接收方向发送方发送确认帧，确认帧丢失</li><li>发送方超时重传</li><li>接收方收到“非法帧”，直接丢弃，返回最后一个正确帧的确认帧</li><li>发送方收到确认帧，滑动窗口移动</li></ul><h4 id="5-若不满足-W-T-W-R≤2-n"><a href="#5-若不满足-W-T-W-R≤2-n" class="headerlink" title="(5)若不满足$W_T+W_R≤2^n$"></a>(5)若不满足$W_T+W_R≤2^n$</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%B8%8D%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F.png" alt="不满足不等式"></p><h4 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%90%8E%E9%80%80N%E5%B0%8F%E7%BB%93.png" alt="后退N小结"></p><h3 id="选择重传协议-SR"><a href="#选择重传协议-SR" class="headerlink" title="选择重传协议(SR)"></a>选择重传协议(SR)</h3><h4 id="1-窗口大小"><a href="#1-窗口大小" class="headerlink" title="(1)窗口大小"></a>(1)窗口大小</h4><ul><li>$W_T+W_R≤2^n$</li><li>接收窗口的大小要小于等于发送窗口大小<blockquote><p>若接收窗口大于发送窗口，则接收窗口多出来的窗口会长期保持空状态（我猜，接收方更需要确保低延迟，所以不允许有空窗口等待发送方窗口移动的情况），通常取相等。</p></blockquote></li></ul><h4 id="2-正常情况-1"><a href="#2-正常情况-1" class="headerlink" title="(2)正常情况"></a>(2)正常情况</h4><ul><li>发送方向接收方发送帧，每个帧一个计时器</li><li>接收方每收到一个帧，都返回一个正确帧，都返回正确帧后，接收方滑动窗口向后移动</li><li>发送方接收到所有的正确帧，滑动窗口向后移动</li></ul><h4 id="3-数据帧丢失-1"><a href="#3-数据帧丢失-1" class="headerlink" title="(3)数据帧丢失"></a>(3)数据帧丢失</h4><ul><li>发送方发送一些数据帧，但有一个数据帧丢失</li><li>接收方收到部分数据帧，返回收到帧的确认帧，滑动窗口向后移动到没收到的帧序号的位置</li><li>发送方收到部分确认帧，滑动窗口移动到没有收到确认帧的位置，若窗口末尾有空位，则可以继续发送数据帧</li><li>发送方超时重传</li></ul><h4 id="4-数据帧差错而被丢弃"><a href="#4-数据帧差错而被丢弃" class="headerlink" title="(4)数据帧差错而被丢弃"></a>(4)数据帧差错而被丢弃</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/SR%E5%B8%A7%E5%B7%AE%E9%94%99%E8%A2%AB%E4%B8%A2%E5%BC%83.jpg" alt="SR帧差错被丢弃"></p><ul><li>接收方在收到错误帧后，会向发送方发送一个NCK否认帧</li><li>发送方收到否认帧后，立即重传，并重置计时器</li><li>请求重传机制</li></ul><h4 id="5-确认帧丢失"><a href="#5-确认帧丢失" class="headerlink" title="(5)确认帧丢失"></a>(5)确认帧丢失</h4><ul><li>确认帧丢失会导致发送方计时器超时，发送方重传</li><li>与此同时，接收方滑动窗口正常移动</li><li>接收方收到重传的帧后，帧落在窗口外，重新发送ACK</li></ul><h4 id="6-不满足-W-T-W-R≤2-n-导致的问题"><a href="#6-不满足-W-T-W-R≤2-n-导致的问题" class="headerlink" title="(6)不满足$W_T+W_R≤2^n$导致的问题"></a>(6)不满足$W_T+W_R≤2^n$导致的问题</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/SR%E4%B8%8D%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F.png" alt="SR不满足不等式"></p><h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/SR%E5%B0%8F%E7%BB%93.png" alt="SR小结"> </p><h3 id="三种协议的信道利用率分析"><a href="#三种协议的信道利用率分析" class="headerlink" title="三种协议的信道利用率分析"></a>三种协议的信道利用率分析</h3><h4 id="1-停等协议-SW"><a href="#1-停等协议-SW" class="headerlink" title="1.停等协议(SW)"></a>1.停等协议(SW)</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/SW%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87.png" alt="SW信道利用率"></p><ul><li>只考虑发送信道</li><li>理想状态指没有帧丢失、错误等情况</li></ul><h4 id="2-后退N、选择重传协议的信道利用率分析"><a href="#2-后退N、选择重传协议的信道利用率分析" class="headerlink" title="2.后退N、选择重传协议的信道利用率分析"></a>2.后退N、选择重传协议的信道利用率分析</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/GBN%E6%88%96SR%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87.png" alt="GBN或SR信道利用率"><br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%9C%80%E5%A4%A7%E7%AD%89%E4%BA%8E1.png" alt="最大等于1"></p><h4 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87%E5%B0%8F%E7%BB%93.png" alt="信道利用率小结"></p><h2 id="第四章-媒体访问控制子层MAC（Media-Access-Control-Sublayer）"><a href="#第四章-媒体访问控制子层MAC（Media-Access-Control-Sublayer）" class="headerlink" title="第四章 媒体访问控制子层MAC（Media Access Control Sublayer）"></a>第四章 媒体访问控制子层MAC（Media Access Control Sublayer）</h2><h3 id="ALOHA协议和时隙ALOHA协议"><a href="#ALOHA协议和时隙ALOHA协议" class="headerlink" title="ALOHA协议和时隙ALOHA协议"></a>ALOHA协议和时隙ALOHA协议</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/ALOHA.png" alt="ALOHA"></p><ul><li>几个节点共享一个信道</li><li>纯ALOHA在数据准备完毕后立刻传输</li><li>时隙ALOHA将时间分为一个个时隙，时隙大小等于传输一个帧需要的时间，每次发送都需要从时隙的开头发送。</li><li>时隙ALOHA避免了用户发送数据的随意性，降低了冲突概率，提高了信道利用率</li></ul><h3 id="CSMA协议-Carrier-Sense-Multiple-Access，载波监听多路访问协议"><a href="#CSMA协议-Carrier-Sense-Multiple-Access，载波监听多路访问协议" class="headerlink" title="CSMA协议(Carrier Sense Multiple Access，载波监听多路访问协议)"></a>CSMA协议(Carrier Sense Multiple Access，载波监听多路访问协议)</h3><ul><li>在发送数据之前，先<strong>监听</strong>信道是否空闲，只有信道空闲时，才会尝试发送</li></ul><h4 id="1-1-坚持CSMA协议"><a href="#1-1-坚持CSMA协议" class="headerlink" title="(1)1-坚持CSMA协议"></a>(1)1-坚持CSMA协议</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/1-%E5%9D%9A%E6%8C%81CSMA%E5%8D%8F%E8%AE%AE.png" alt="1-坚持CSMA协议"></p><ul><li>坚持：指坚持监听信道</li><li>优点：信道利用率高，信道一旦空闲，就可以被下一个节点使用</li><li>缺点：当多个节点都已准备好数据时，一旦信道空闲，就会开始发送，冲突概率大</li></ul><h4 id="2-非坚持CSMA协议"><a href="#2-非坚持CSMA协议" class="headerlink" title="(2)非坚持CSMA协议"></a>(2)非坚持CSMA协议</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E9%9D%9E%E5%9D%9A%E6%8C%81CSMA%E5%8D%8F%E8%AE%AE.png" alt="非坚持CSMA协议"></p><ul><li>非坚持：当信道不空闲时，不坚持监听，而是随机推迟一段时间再监听</li><li>优点：当多个节点都已准备好数据时，如果信道不空闲，则各节点会随机推迟一段时间并再次尝试监听，从而使各节点错开传输数据，降低了冲突概率</li><li>缺点：信道刚恢复空闲时，可能不会被立即利用，导致信道利用率降低</li></ul><h4 id="3-p-坚持CSMA协议"><a href="#3-p-坚持CSMA协议" class="headerlink" title="(3)p-坚持CSMA协议"></a>(3)p-坚持CSMA协议</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/p-%E5%9D%9A%E6%8C%81CSMA%E5%8D%8F%E8%AE%AE.png" alt="p-坚持CSMA协议"></p><ul><li>p指的是信道空闲时，节点选择发送数据的概率</li><li>降低了冲突概率，提升信道利用率</li></ul><h4 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E9%9A%8F%E6%9C%BA%E8%AE%BF%E9%97%AE%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6.png" alt="随机访问介质访问控制"></p><h3 id="CSMA-CD协议-Collision-Detection"><a href="#CSMA-CD协议-Collision-Detection" class="headerlink" title="CSMA&#x2F;CD协议(Collision Detection)"></a>CSMA&#x2F;CD协议(Collision Detection)</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/CSMACD%E5%8D%8F%E8%AE%AE.png" alt="CSMACD协议"></p><ul><li>用于早期的有线以太网（总线型）</li><li>先听后发，边听边发，冲突停发，随机重发</li></ul><h4 id="1-如何随机重发"><a href="#1-如何随机重发" class="headerlink" title="(1)如何随机重发"></a>(1)如何随机重发</h4><ul><li>截断二进制指数退避算法<ul><li>随机等待一段时间&#x3D;r倍争用期，其中r是随机数，k是重发次数</li><li>当k≤10，在$[0,2^k-1]$随机取一个整数r</li><li>当k&gt;10，在$[0,2^10-1]$随机取一个整数r</li></ul></li><li>第10次冲突是随机重发的分水岭</li><li>第16次冲突，直接躺平，放弃传帧，报告网络层</li></ul><h4 id="2-最短帧长限制"><a href="#2-最短帧长限制" class="headerlink" title="(2)最短帧长限制"></a>(2)最短帧长限制</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%9C%80%E7%9F%AD%E5%B8%A7%E9%95%BF.png" alt="最短帧长"></p><ul><li>最短帧长&#x3D;2*最大单向传播时延*信道带宽。若收到的帧小于最短帧长，视为无效帧</li><li>最短帧长&#x3D;争用期长度*数据传输速率</li><li>同样也有最长帧长限制，防止某些节点一直占用信道</li><li>以太网规定，最短帧长&#x3D;64B，最长帧长1518B（包含CRC4字节）</li></ul><h4 id="小结-9"><a href="#小结-9" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E9%9A%8F%E6%9C%BA%E8%AE%BF%E9%97%AE%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%B0%8F%E7%BB%93.png" alt="随机访问介质访问控制小结"></p><h3 id="CSMA-CA协议-Collision-Avoidance"><a href="#CSMA-CA协议-Collision-Avoidance" class="headerlink" title="CSMA&#x2F;CA协议(Collision Avoidance)"></a>CSMA&#x2F;CA协议(Collision Avoidance)</h3><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/CSMACA%E5%8D%8F%E8%AE%AE.png" alt="CSMACA协议"></p><ul><li>适用于无线网络（无线局域网WiFi）</li><li>发送方：先听后发，忙则退避</li><li>接收方：停止等待协议</li></ul><h4 id="1-AP-Access-Point"><a href="#1-AP-Access-Point" class="headerlink" title="1.AP(Access Point)"></a>1.AP(Access Point)</h4><ul><li>接入点，也就是你平时连接的无线WiFi热点</li><li>校园网&#x3D;路由器+n台交换机+n*m个AP</li><li>漫游：切换WiFi热点的动作</li><li>不使用CSMA&#x2F;CD原因<ul><li>硬件上很难实现“边听边发，冲突检测”，因为接收信号的强度往往远小于发送信号的强度，且在无线介质上信号强度的动态变化范围很大</li><li>存在“隐蔽站”问题，在无线通信中，并非所有站点都能够听见对方。发送节点处没有冲突并不意味着在接收节点处没有冲突。</li></ul></li></ul><h4 id="2-信道预约机制"><a href="#2-信道预约机制" class="headerlink" title="2.信道预约机制"></a>2.信道预约机制</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BF%A1%E9%81%93%E9%A2%84%E7%BA%A6%E6%9C%BA%E5%88%B6.png" alt="信道预约机制"></p><h4 id="小结-10"><a href="#小结-10" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/CSMACA%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.png" alt="CSMACA协议小结"></p><h3 id="令牌传递协议"><a href="#令牌传递协议" class="headerlink" title="令牌传递协议"></a>令牌传递协议</h3><h4 id="令牌帧"><a href="#令牌帧" class="headerlink" title="令牌帧"></a>令牌帧</h4><ul><li>包含令牌号，与主机编号对比来确定哪个主机发送数据</li><li>若是自己的令牌号但无需传数据，则立即释放此令牌帧并重新生成一个新令牌帧</li></ul><h3 id="数据帧"><a href="#数据帧" class="headerlink" title="数据帧"></a>数据帧</h3><ul><li>若是该主机发送数据，主机会把令牌帧转化为数据帧，包括令牌号、源地址、目的地址、数据部分、bool已接收</li><li>主机收到数据帧后，判断目的地址是否是自己，若不是则传给下一个节点，若是，将数据部分复制一份并把bool已接收设为true<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BB%A4%E7%89%8C%E5%B8%A7%E5%92%8C%E6%95%B0%E6%8D%AE%E5%B8%A7.png" alt="令牌帧和数据帧"></li></ul><h4 id="小结-11"><a href="#小结-11" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BB%A4%E7%89%8C%E4%BC%A0%E9%80%92%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.png" alt="令牌传递协议小结"></p><h3 id="以太网和IEEE802-3"><a href="#以太网和IEEE802-3" class="headerlink" title="以太网和IEEE802.3"></a>以太网和IEEE802.3</h3><h4 id="以太网标准（物理层）"><a href="#以太网标准（物理层）" class="headerlink" title="以太网标准（物理层）"></a>以太网标准（物理层）</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BB%A5%E5%A4%AA%E7%BD%91%E6%A0%87%E5%87%86.png" alt="以太网标准"></p><ul><li>半双工：同一时刻只能单向传输，可以改变方向</li><li>全双工：可以双向传输</li></ul><h4 id="介质访问控制子层（MAC子层）"><a href="#介质访问控制子层（MAC子层）" class="headerlink" title="介质访问控制子层（MAC子层）"></a>介质访问控制子层（MAC子层）</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/MACV2.png" alt="MACV2"></p><ul><li>记忆口诀：662N4，收发协数验</li><li>帧长范围：64B-1518B（包含CRC4字节），因此数据部分长度为46B-1500B</li><li>V2版本的MAC子层就是数据链路层，而IEEE802.3版本的MAC子层上方还有逻辑链路控制子层(LLC)</li><li>违规编码：曼彻斯特编码为跳0反跳1看中间，中必变，因此中间不变就违规</li></ul><h4 id="帧的传播"><a href="#帧的传播" class="headerlink" title="帧的传播"></a>帧的传播</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%B8%A7%E7%9A%84%E4%BC%A0%E6%92%AD.png" alt="帧的传播"></p><ul><li>冲突域：如果两个节点同时发送数据会导致冲突，则节点组成冲突域</li><li>广播域：如果一个节点发送广播帧，可被另一个节点接收，则二者处于广播域</li></ul><h4 id="小结-12"><a href="#小结-12" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%B0%8F%E7%BB%93.png" alt="以太网小结"></p><h3 id="VLAN基本概念与基本原理"><a href="#VLAN基本概念与基本原理" class="headerlink" title="VLAN基本概念与基本原理"></a>VLAN基本概念与基本原理</h3><h4 id="大型局域网可能遇到的问题"><a href="#大型局域网可能遇到的问题" class="headerlink" title="大型局域网可能遇到的问题"></a>大型局域网可能遇到的问题</h4><ul><li>局域网内任何一个结点发出的广播帧，都会被广播至所有节点。可能出现广播风暴</li><li>不安全，局域网内可能会有一些敏感节点被黑客攻击</li></ul><h4 id="VLAN（虚拟局域网）"><a href="#VLAN（虚拟局域网）" class="headerlink" title="VLAN（虚拟局域网）"></a>VLAN（虚拟局域网）</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/VLAN.png" alt="VLAN"></p><ul><li>可将一个大型局域网分割成若干个较小的VLAN，每个VLAN是一个广播域</li><li>需要用支持VLAN功能的以太网交换机实现</li><li>每个VLAN对应一个VID</li><li>当A发出一个广播帧，则VLAN-10的所有主机都会收到广播帧，而其他VLAN不会</li></ul><h3 id="VLAN划分方式"><a href="#VLAN划分方式" class="headerlink" title="VLAN划分方式"></a>VLAN划分方式</h3><h4 id="基于接口"><a href="#基于接口" class="headerlink" title="基于接口"></a>基于接口</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%9F%BA%E4%BA%8E%E6%8E%A5%E5%8F%A3.png" alt="基于接口"></p><ul><li>缺点：当一个主机的接口改变，无法改变映射</li><li>交换机2如何判断1发来的广播帧从属于哪个VLAN？<blockquote><p>主机与交换机之间传输的是标准以太网帧，但交换机与交换机之间传输的是802.1Q帧。这个帧会在标准以太网帧中插入4个字节的数据，包含VID<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/802.1Q%E5%B8%A7.png" alt="802.1Q帧"></p></blockquote></li></ul><h4 id="基于MAC地址"><a href="#基于MAC地址" class="headerlink" title="基于MAC地址"></a>基于MAC地址</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%9F%BA%E4%BA%8EMAC%E5%9C%B0%E5%9D%80.png" alt="基于MAC地址"></p><h4 id="基于IP地址"><a href="#基于IP地址" class="headerlink" title="基于IP地址"></a>基于IP地址</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%9F%BA%E4%BA%8EIP%E5%9C%B0%E5%9D%80.png" alt="基于IP地址"></p><ul><li>注：这种方式可以让VLAN的范围跨越路由器，让多个局域网的主机组成一个VLAN（需要网络层功能支持）</li></ul><h4 id="小结-13"><a href="#小结-13" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/VLAN%E5%B0%8F%E7%BB%93.png" alt="VLAN小结"></p><h3 id="无线局域网"><a href="#无线局域网" class="headerlink" title="无线局域网"></a>无线局域网</h3><h4 id="1-有固定基础设施无线局域网"><a href="#1-有固定基础设施无线局域网" class="headerlink" title="(1)有固定基础设施无线局域网"></a>(1)有固定基础设施无线局域网</h4><ul><li>如802.11无线局域网</li><li>结点地位不同</li></ul><h4 id="2-无固定基础设施移动自组织网络"><a href="#2-无固定基础设施移动自组织网络" class="headerlink" title="(2)无固定基础设施移动自组织网络"></a>(2)无固定基础设施移动自组织网络</h4><ul><li>如AirDrop，华为分享</li><li>所有结点地位相同</li></ul><h3 id="802-11无线局域网"><a href="#802-11无线局域网" class="headerlink" title="802.11无线局域网"></a>802.11无线局域网</h3><h4 id="1-一个普通家用路由器的硬件架构"><a href="#1-一个普通家用路由器的硬件架构" class="headerlink" title="(1)一个普通家用路由器的硬件架构"></a>(1)一个普通家用路由器的硬件架构</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%AE%B6%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8.png" alt="家用路由器"></p><h4 id="2-802-11无线局域网的基本概念"><a href="#2-802-11无线局域网的基本概念" class="headerlink" title="(2)802.11无线局域网的基本概念"></a>(2)802.11无线局域网的基本概念</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%97%A0%E7%BA%BF%E5%B1%80%E5%9F%9F%E7%BD%91%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.png" alt="无线局域网基本概念"></p><ul><li>扩展服务集ESS：将多个AP连接到同一个分配系统，组成一个更到服务集<ul><li>全屋WiFi</li></ul></li><li>漫游：一个移动站从一个基本服务集切换到另一个基本服务集，仍然可以保持通信<ul><li>丝滑切换WiFi热点</li></ul></li></ul><h4 id="802-11帧的分类"><a href="#802-11帧的分类" class="headerlink" title="802.11帧的分类"></a>802.11帧的分类</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/802.11%E5%B8%A7%E7%9A%84%E5%88%86%E7%B1%BB.png" alt="802.11帧的分类"></p><h4 id="数据帧格式"><a href="#数据帧格式" class="headerlink" title="数据帧格式"></a>数据帧格式</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E5%B8%A7%E6%A0%BC%E5%BC%8F.png" alt="数据帧格式"></p><h4 id="小结-14"><a href="#小结-14" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E6%97%A0%E7%BA%BF%E5%B1%80%E5%9F%9F%E7%BD%91%E5%B0%8F%E7%BB%93.png" alt="无线局域网小结"></p><h3 id="以太网交换机"><a href="#以太网交换机" class="headerlink" title="以太网交换机"></a>以太网交换机</h3><h4 id="1-以太网交换机的自学习功能"><a href="#1-以太网交换机的自学习功能" class="headerlink" title="1.以太网交换机的自学习功能"></a>1.以太网交换机的自学习功能</h4><ul><li>主机之间互相知道对方的MAC地址（后续学习）</li><li>当主机向另一个主机发送数据时，会先将MAC帧发送给交换机，交换机以（MAC地址，端口号）将发送方的MAC地址放在交换表中，交换机不知道MAC地址（交换表中无对应项），会将MAC帧广播给每一个端口</li><li>交换表每个表项有一个有效期，有效期过后自动作废</li></ul><h4 id="2-交换机的交换方式"><a href="#2-交换机的交换方式" class="headerlink" title="2.交换机的交换方式"></a>2.交换机的交换方式</h4><h5 id="1-直通式交换方式"><a href="#1-直通式交换方式" class="headerlink" title="(1)直通式交换方式"></a>(1)直通式交换方式</h5><ul><li>仅接收并处理目的地址，直接将收到的帧转发给对应的端口</li><li>优点：<ul><li>转发时延低</li></ul></li><li>缺点：<ul><li>不适用需要速率匹配、协议转换或差错检测的线路</li></ul></li></ul><h5 id="2-存储转发交换方式"><a href="#2-存储转发交换方式" class="headerlink" title="(2)存储转发交换方式"></a>(2)存储转发交换方式</h5><ul><li>接收并处理整个帧（差错控制等）</li><li>优点：<ul><li>适用于需要速率匹配、协议转换或差错检测的线路</li></ul></li><li>缺点：<ul><li>转发时延高</li></ul></li></ul><h4 id="小结-15"><a href="#小结-15" class="headerlink" title="小结"></a>小结</h4><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%B0%8F%E7%BB%93.png" alt="交换机小结"></p><h2 id="第五章-网络层"><a href="#第五章-网络层" class="headerlink" title="第五章 网络层"></a>第五章 网络层</h2><h3 id="数据交换技术"><a href="#数据交换技术" class="headerlink" title="数据交换技术"></a>数据交换技术</h3><h4 id="1-电路交换"><a href="#1-电路交换" class="headerlink" title="1.电路交换"></a>1.电路交换</h4><h5 id="1-过程："><a href="#1-过程：" class="headerlink" title="(1)过程："></a>(1)过程：</h5><ul><li>建立连接（尝试占用通信资源）</li><li>通信（一直占用通信资源）</li><li>释放连接（归还通信资源）</li></ul><p><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E7%9A%84%E8%BF%87%E7%A8%8B.png" alt="电路交换的过程"></p><h5 id="2-优点："><a href="#2-优点：" class="headerlink" title="(2)优点："></a>(2)优点：</h5><ul><li>通信前从主叫端到被叫端建立一条专用的物理通路，在通信的全部时间内，两个用户始终占用端到端的线路资源。数据直送，传输效率高。（更适合低频次、大量传输数据）</li></ul><h5 id="3-缺点："><a href="#3-缺点：" class="headerlink" title="(3)缺点："></a>(3)缺点：</h5><ul><li>建立&#x2F;释放连接，需要额外的时间开销。（计算机往往是突发式传输，往往高频次、少量传输数据）</li><li>线路被通信双方独占，利用率低。</li><li>线路分配的灵活性差。（若有节点坏了，只能重新建立）</li><li>交换节点不支持“差错控制”（无法发现传输过程中发生的数据错误）</li></ul><h4 id="2-电报网络"><a href="#2-电报网络" class="headerlink" title="2.电报网络"></a>2.电报网络</h4><h5 id="1-过程：-1"><a href="#1-过程：-1" class="headerlink" title="(1)过程："></a>(1)过程：</h5><ul><li>计算机将控制信息（发送方和接收方）和用户数据（想发送的信息）组合成一个“报文”</li><li>计算机将报文发送到交换机，交换机将收到的报文储存在内存中</li><li>交换机根据转发表，将报文发送给下一交换机</li></ul><h5 id="2-优点：-1"><a href="#2-优点：-1" class="headerlink" title="(2)优点："></a>(2)优点：</h5><ul><li>通信前不需要建立连接</li><li>数据以“报文”为单位被交换节点间“存储转发”，通信线路可以灵活分配</li><li>在通信时间内，两个用户无需独占一整条物理线路。相比于电路交换，线路利用率高</li><li>交换节点支持“差错控制”（通过校验技术）</li></ul><h5 id="3-缺点：-1"><a href="#3-缺点：-1" class="headerlink" title="(3)缺点："></a>(3)缺点：</h5><ul><li>报文不定长，不方便存储转发管理</li><li>长报文的存储转发时间开销大、缓存开销大</li><li>长报文容易报错，重传代价高</li></ul><h4 id="3-分组交换（现代计算机采用）"><a href="#3-分组交换（现代计算机采用）" class="headerlink" title="3.分组交换（现代计算机采用）"></a>3.分组交换（现代计算机采用）</h4><h5 id="1-过程：-2"><a href="#1-过程：-2" class="headerlink" title="(1)过程："></a>(1)过程：</h5><ul><li>计算机将用户数据拆分分组</li><li>将分组依次通过分组交换机发送（路由器，通过IP地址知道应该向哪里发送）</li><li>接收者计算机将所有分组排序，去掉首部，合并成用户数据<br><img src="/2025/01/04/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%A4%8D%E4%B9%A0/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2%E7%9A%84%E8%BF%87%E7%A8%8B.png" alt="分组交换的过程"></li></ul><h5 id="2-优点：-2"><a href="#2-优点：-2" class="headerlink" title="(2)优点："></a>(2)优点：</h5><ul><li>所有报文交换的优点</li><li>相对于报文交换，分组交换：<ul><li>分组定长，方便存储转发管理</li><li>分组的存储转发时间开销小、缓存开销小</li><li>分组不容易出错，重传代价低</li></ul></li></ul><h5 id="3-缺点：-2"><a href="#3-缺点：-2" class="headerlink" title="(3)缺点："></a>(3)缺点：</h5><ul><li>相比于报文交换，控制信息占比增加</li><li>相比于电路交换，依然存在存储转发时延</li><li>报文被拆分为多个分组，传输过程中可能出现失序、丢失等问题，增加处理的复杂度</li></ul><h4 id="4-“虚电路交换”技术（基于分组交换）"><a href="#4-“虚电路交换”技术（基于分组交换）" class="headerlink" title="4.“虚电路交换”技术（基于分组交换）"></a>4.“虚电路交换”技术（基于分组交换）</h4><h5 id="1-过程：-3"><a href="#1-过程：-3" class="headerlink" title="(1)过程："></a>(1)过程：</h5><ul><li>建立连接（虚拟电路）</li><li>通信（分组按序、按已建立好的既定线路发送，通信双方不独占线路）</li><li>释放连接</li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人工智能导论复习</title>
    <link href="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/"/>
    <url>/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="第四章-不确定性推理方法"><a href="#第四章-不确定性推理方法" class="headerlink" title="第四章 不确定性推理方法"></a>第四章 不确定性推理方法</h2><h3 id="可信度方法"><a href="#可信度方法" class="headerlink" title="可信度方法"></a>可信度方法</h3><h4 id="推理"><a href="#推理" class="headerlink" title="推理"></a>推理</h4><ul><li>从已知事实（证据）出发，通过运用相关知识逐步推出结论或者证明某个假设成立或不成立的思维过程。</li></ul><h4 id="不确定性推理"><a href="#不确定性推理" class="headerlink" title="不确定性推理"></a>不确定性推理</h4><ul><li>从不确定性的初始证据出发，通过运用不确定性的知识，最终推出具有一定程度的不确定性但却是合理或者近乎合理的结论的思维过程。</li></ul><h4 id="可信度"><a href="#可信度" class="headerlink" title="可信度"></a>可信度</h4><ul><li>根据经验对一个事物或现象为真的相信程度。</li></ul><h4 id="C－F模型"><a href="#C－F模型" class="headerlink" title="C－F模型"></a>C－F模型</h4><ul><li>基于可信度表示的不确定性推理的基本方法。</li></ul><h4 id="知识的不确定性表示"><a href="#知识的不确定性表示" class="headerlink" title="知识的不确定性表示"></a>知识的不确定性表示</h4><p><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E7%9F%A5%E8%AF%86%E7%9A%84%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E8%A1%A8%E7%A4%BA.png" alt="知识的不确定性表示"></p><ul><li>CF（H，E）的取值范围: [-1,1]。</li><li>若由于相应证据的出现增加结论 H 为真的可信度，则 CF（H，E）&gt; 0，证据的出现越是支持 H 为真，就使CF（H，E) 的值越大。</li><li>反之，CF（H，E）&lt; 0，证据的出现越是支持 H 为假，CF（H，E）的值就越小。</li><li>若证据的出现与否与 H 无关，则 CF（H，E）&#x3D; 0。</li></ul><h4 id="证据不确定性的表示"><a href="#证据不确定性的表示" class="headerlink" title="证据不确定性的表示"></a>证据不确定性的表示</h4><p>$$<br>CF(E)＝0.6： E的可信度为0.6<br>$$</p><ul><li>证据E的可信度取值范围：[-1，1] 。</li><li>对于初始证据，若所有观察S能肯定它为真，则CF(E)&#x3D; 1。</li><li>若肯定它为假，则  CF(E) &#x3D; –1。</li><li>若以某种程度为真，则   0 &lt; CF(E) &lt; 1。</li><li>若以某种程度为假，则 －1 &lt; CF(E) &lt; 0 。</li><li>若未获得任何相关的观察，则 CF(E) &#x3D; 0。</li><li>静态强度CF（H，E）：知识的强度，即当 E 所对应的证据为真时对 H 的影响程度。</li><li>动态强度 CF（E）：证据 E 当前的不确定性程度。</li></ul><h4 id="组合证据不确定性的算法"><a href="#组合证据不确定性的算法" class="headerlink" title="组合证据不确定性的算法"></a>组合证据不确定性的算法</h4><ul><li>组合证据：多个单一证据的合取</li></ul><p>$$<br>E&#x3D;E1 \space\space AND \space\space E2 \space\space AND …AND \space\space En<br>$$<br>$$<br>则CF(E)&#x3D;min \lbrace CF(E_1),CF(E_2),CF(E_3),…,CF(E_n) \rbrace<br>$$</p><ul><li>组合证据：多个单一证据的析取</li></ul><p>$$<br>E&#x3D;E1 \space\space OR \space\space E2 \space\space OR… OR \space\space En<br>$$<br>$$<br>则CF(E)&#x3D;max\lbrace CF(E_1),CF(E_2),CF(E_3),…,CF(E_n) \rbrace<br>$$</p><h4 id="不确定性的传递算法"><a href="#不确定性的传递算法" class="headerlink" title="不确定性的传递算法"></a>不确定性的传递算法</h4><ul><li>C－F模型中的不确定性推理：从不确定的初始证据出发，通过运用相关的不确定性知识，最终推出结论并求出结论的可信度值。结论 H 的可信度由下式计算：<br>$$<br>CF(H)&#x3D;CF(H,E)*max\lbrace 0,CF(E)\rbrace<br>$$</li></ul><h4 id="结论不确定性的合成算法"><a href="#结论不确定性的合成算法" class="headerlink" title="结论不确定性的合成算法"></a>结论不确定性的合成算法</h4><p><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E7%BB%93%E8%AE%BA%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E7%9A%84%E5%90%88%E6%88%90%E7%AE%97%E6%B3%951.png" alt="结论不确定性的合成算法1"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E7%BB%93%E8%AE%BA%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E7%9A%84%E5%90%88%E6%88%90%E7%AE%97%E6%B3%952.png" alt="结论不确定性的合成算法2"></p><h4 id="结论不确定性的合成算法例子"><a href="#结论不确定性的合成算法例子" class="headerlink" title="结论不确定性的合成算法例子"></a>结论不确定性的合成算法例子</h4><p><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E7%BB%93%E8%AE%BA%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E7%9A%84%E5%90%88%E6%88%90%E7%AE%97%E6%B3%95%E4%BE%8B%E5%AD%90.png" alt="结论不确定性的合成算法例子"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%90%88%E6%88%90%E7%AE%97%E6%B3%95%E8%A7%A3%E7%AD%941.png" alt="合成算法解答1"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%90%88%E6%88%90%E7%AE%97%E6%B3%95%E8%A7%A3%E7%AD%942.png" alt="合成算法解答2"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%90%88%E6%88%90%E7%AE%97%E6%B3%95%E8%A7%A3%E7%AD%943.png" alt="合成算法解答3"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%90%88%E6%88%90%E7%AE%97%E6%B3%95%E8%A7%A3%E7%AD%944.png" alt="合成算法解答4"></p><h3 id="证据理论"><a href="#证据理论" class="headerlink" title="证据理论"></a>证据理论</h3><h4 id="样本空间"><a href="#样本空间" class="headerlink" title="样本空间"></a>样本空间</h4><ul><li>设 D 是变量 x 所有可能取值的集合，且 D 中的元素是互斥的，在任一时刻 x 都取且只能取 D 中的某一个元素为值，则称 D 为 x 的样本空间。</li></ul><h4 id="基本概率分配函数"><a href="#基本概率分配函数" class="headerlink" title="基本概率分配函数"></a>基本概率分配函数</h4><ul><li>基本概率分配函数（Basic Probability Assignment, BPA）是从集合 $2^\Omega $到区间$[0, 1]$的映射，满足以下两个条件：</li></ul><p>$$<br>m: 2^\Omega \rightarrow [0, 1]<br>$$</p><ol><li>$$m(\emptyset) &#x3D; 0$$</li><li>$$\sum_{A \subseteq \Omega} m(A) &#x3D; 1$$</li></ol><ul><li><p>其中，$m(A)$表示对命题A的支持程度。如果 $m(A) &gt; 0$ ，则称A为一个焦元（focal element）。</p></li><li><p>则 $M: 2^\Omega \rightarrow [0, 1] $ 上的基本概率分配函数，$ M(A): A$的基本概率数。</p></li><li><p>例如，设 A&#x3D;{红}，M（A）&#x3D;0.3：命题“x是红色”的信任度是0.3。</p></li></ul><h4 id="信任函数"><a href="#信任函数" class="headerlink" title="信任函数"></a>信任函数</h4><p>$$<br>Bel(A) &#x3D; \sum_{B \subseteq A} m(B)<br>$$</p><ul><li>其中， Bel(A) 表示对命题A的总的信任程度。根据基本概率分配函数的特点，我们可以知道：</li></ul><p>$$<br>Bel(\emptyset) &#x3D; m(\emptyset) &#x3D; 0<br>$$</p><p>$$<br>Bel(\Omega) &#x3D; \sum_{B \subseteq \Omega} m(B) &#x3D; 1<br>$$</p><p>$$<br>Bel(A): A \text{ 的信任度。}<br>$$</p><h4 id="似然函数"><a href="#似然函数" class="headerlink" title="似然函数"></a>似然函数</h4><p>$$<br>\text{似然函数（Plausibility Function）定义如下：}<br>$$</p><p>$$<br>Pl(A) &#x3D; \sum_{B \cap A \neq \emptyset} m(B)<br>$$</p><ul><li>其中，$Pl(A) $ 表示对命题 $ A $ 的似然程度。</li><li>根据基本概率分配函数的特点，我们可以知道：</li></ul><p>$$<br>Pl(\emptyset) &#x3D; 0<br>$$</p><p>$$<br>Pl(\Omega) &#x3D; 1<br>$$</p><p>$$<br>Pl(A): A \text{ 的似然度。}<br>$$</p><ul><li>例如<br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E4%BC%BC%E7%84%B6%E5%87%BD%E6%95%B0.png" alt="似然函数"></li></ul><h4 id="概率分配函数的正交和（证据的组合）"><a href="#概率分配函数的正交和（证据的组合）" class="headerlink" title="概率分配函数的正交和（证据的组合）"></a>概率分配函数的正交和（证据的组合）</h4><ul><li>设$M_1$和$M_2$是两个概率分配函数，则其正交和$M&#x3D;M_1 \oplus M_2$<br>$$M(\emptyset)&#x3D;0$$<br>$$M(A) &#x3D; \frac{1}{1 - k}\sum_{x \cap y &#x3D; A}M_1(x)M_2(y)$$<br>$$K &#x3D; 1- \sum_{x \cap y &#x3D; \emptyset}M_1(x)M_2(y)&#x3D;\sum_{x \cap y \neq \emptyset}M_1(x)M_2(y)$$</li><li>如果$K \neq 0$，则正交和 M也是一个概率分配函数；</li><li>如果$K &#x3D; 0$，则不存在正交和 M，即没有可能存在概率函数，称$M_1$与$M_2$矛盾。</li><li>例<br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E6%AD%A3%E4%BA%A4%E5%92%8C1.png" alt="正交和1"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E6%AD%A3%E4%BA%A4%E5%92%8C2.png" alt="正交和2"></li></ul><h4 id="基于证据理论的不确定性推理"><a href="#基于证据理论的不确定性推理" class="headerlink" title="基于证据理论的不确定性推理"></a>基于证据理论的不确定性推理</h4><p>基于证据理论的不确定性推理的步骤：</p><ul><li>（1）建立问题的样本空间D。</li><li>（2）由经验给出，或者由随机性规则和事实的信度度量求得基本概率分配函数。</li><li>（3）计算所关心的子集的信任函数值、似然函数值。</li><li>（4）由信任函数值、似然函数值得出结论。<br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%9F%BA%E4%BA%8E%E8%AF%81%E6%8D%AE%E7%90%86%E8%AE%BA%E7%9A%84%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86%E4%BE%8B.png" alt="基于证据理论的不确定性推理例"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%9F%BA%E4%BA%8E%E8%AF%81%E6%8D%AE%E7%90%86%E8%AE%BA%E7%9A%84%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86%E7%AD%94%E6%A1%881.png" alt="基于证据理论的不确定性推理答案1"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%9F%BA%E4%BA%8E%E8%AF%81%E6%8D%AE%E7%90%86%E8%AE%BA%E7%9A%84%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86%E7%AD%94%E6%A1%882.png" alt="基于证据理论的不确定性推理答案2"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%9F%BA%E4%BA%8E%E8%AF%81%E6%8D%AE%E7%90%86%E8%AE%BA%E7%9A%84%E4%B8%8D%E7%A1%AE%E5%AE%9A%E6%80%A7%E6%8E%A8%E7%90%86%E7%AD%94%E6%A1%883.png" alt="基于证据理论的不确定性推理答案3"></li></ul><h3 id="模糊集合"><a href="#模糊集合" class="headerlink" title="模糊集合"></a>模糊集合</h3><h2 id="第五章-搜索求解策略"><a href="#第五章-搜索求解策略" class="headerlink" title="第五章 搜索求解策略"></a>第五章 搜索求解策略</h2><h3 id="搜索的概念"><a href="#搜索的概念" class="headerlink" title="搜索的概念"></a>搜索的概念</h3><h4 id="搜索方向："><a href="#搜索方向：" class="headerlink" title="搜索方向："></a>搜索方向：</h4><ul><li>数据驱动：从初始状态出发的正向搜索。      <ul><li>正向搜索——从问题给出的条件出发。</li></ul></li><li>目的驱动：从目的状态出发的逆向搜索。<ul><li>逆向搜索：从想达到的目的入手，看哪些操作算子能产生该目的以及应用这些操作算子产生目的时需要哪些条件。</li></ul></li><li>双向搜索<ul><li>从开始状态出发作正向搜索，同时又从目的状态出发作逆向搜索，直到两条路径在中间的某处汇合为止。</li></ul></li></ul><h4 id="盲目搜索"><a href="#盲目搜索" class="headerlink" title="盲目搜索"></a>盲目搜索</h4><ul><li>在不具有对特定问题的任何有关信息的条件下，按固定的步骤（依次或随机调用操作算子）进行的搜索。</li></ul><h4 id="启发式搜索"><a href="#启发式搜索" class="headerlink" title="启发式搜索"></a>启发式搜索</h4><ul><li>考虑特定问题领域可应用的知识，动态地确定调用操作算子的步骤，优先选择较适合的操作算子，尽量减少不必要的搜索，以求尽快地到达结束状态。</li></ul><h3 id="状态空间的搜索策略"><a href="#状态空间的搜索策略" class="headerlink" title="状态空间的搜索策略"></a>状态空间的搜索策略</h3><h4 id="状态空间"><a href="#状态空间" class="headerlink" title="状态空间"></a>状态空间</h4><ul><li>利用状态变量和操作符号，表示系统或问题的有关知识的符号体系，状态空间是一个四元组：<br>$$(S,O,S_0,G)$$</li><li>S:状态集合。      </li><li>O：操作算子的集合。  </li><li>S0：包含问题的初始状态是S的非空子集。 </li><li>G：若干具体状态或满足某些性质的路径信息描述。<br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E7%8A%B6%E6%80%81%E7%A9%BA%E9%97%B4%E8%A1%A8%E7%A4%BA%E6%B3%95.png" alt="状态空间表示法"></li></ul><h4 id="八数码问题的状态空间"><a href="#八数码问题的状态空间" class="headerlink" title="八数码问题的状态空间"></a>八数码问题的状态空间</h4><p><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%85%AB%E6%95%B0%E7%A0%81%E9%97%AE%E9%A2%98%E7%9A%84%E7%8A%B6%E6%80%81%E7%A9%BA%E9%97%B41.png" alt="八数码问题的状态空间1"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%85%AB%E6%95%B0%E7%A0%81%E9%97%AE%E9%A2%98%E7%9A%84%E7%8A%B6%E6%80%81%E7%A9%BA%E9%97%B42.png" alt="八数码问题的状态空间2"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%85%AB%E6%95%B0%E7%A0%81%E9%97%AE%E9%A2%98%E7%9A%84%E7%8A%B6%E6%80%81%E7%A9%BA%E9%97%B43.png" alt="八数码问题的状态空间3"></p><h4 id="旅行商问题"><a href="#旅行商问题" class="headerlink" title="旅行商问题"></a>旅行商问题</h4><p><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%981.png" alt="旅行商问题1"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E6%97%85%E8%A1%8C%E5%95%86%E9%97%AE%E9%A2%982.png" alt="旅行商问题2"></p><h3 id="盲目的图搜索策略"><a href="#盲目的图搜索策略" class="headerlink" title="盲目的图搜索策略"></a>盲目的图搜索策略</h3><h4 id="带回溯策略的搜索"><a href="#带回溯策略的搜索" class="headerlink" title="带回溯策略的搜索"></a>带回溯策略的搜索</h4><ul><li>从初始状态出发，不停地、试探性地寻找路径，直到它到达目的或“不可解结点”，即“死胡同”为止。</li><li>若它遇到不可解结点就回溯到路径中最近的父结点上，查看该结点是否还有其他的子结点未被扩展。若有，则沿这些子结点继续搜索；如果找到目标，就成功退出搜索，返回解题路径。</li></ul><h4 id="回溯搜索的算法"><a href="#回溯搜索的算法" class="headerlink" title="回溯搜索的算法"></a>回溯搜索的算法</h4><ul><li>PS（path states）表：保存当前搜索路径上的状态。如果找到了目的，PS就是解路径上的状态有序集。 </li><li>NPS（new path states）表：新的路径状态表。它包含了等待搜索的状态，其后裔状态还未被搜索到，即未被生成扩展 。</li><li>NSS（no solvable states）表：不可解状态集，列出了找不到解题路径的状态。如果在搜索中扩展出的状态是它的元素，则可立即将之排除，不必沿该状态继续搜索。</li></ul><h4 id="宽度优先搜索"><a href="#宽度优先搜索" class="headerlink" title="宽度优先搜索"></a>宽度优先搜索</h4><ul><li>open表（NPS表）：已经生成出来但其子状态未被搜索的状态。</li><li>closed表（ PS表和NSS表的合并）：记录了已被生成扩展过的状态。<br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%AE%BD%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.png" alt="宽度优先搜索"></li><li>例<br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%AE%BD%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2%E4%BE%8B.png" alt="宽度优先搜索例"></li></ul><h4 id="深度优先搜索"><a href="#深度优先搜索" class="headerlink" title="深度优先搜索"></a>深度优先搜索</h4><p><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E6%B7%B1%E5%BA%A6%E4%BC%98%E5%85%88%E6%90%9C%E7%B4%A2.png" alt="深度优先搜索"></p><h3 id="启发式图搜索策略"><a href="#启发式图搜索策略" class="headerlink" title="启发式图搜索策略"></a>启发式图搜索策略</h3><h4 id="启发信息"><a href="#启发信息" class="headerlink" title="启发信息"></a>启发信息</h4><ul><li>用来简化搜索过程有关具体问题领域的特性的信息叫做启发信息。</li></ul><h4 id="A搜索算法"><a href="#A搜索算法" class="headerlink" title="A搜索算法"></a>A搜索算法</h4><ul><li>每次扩展结点都对OPEN表中的元素进行排序<br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/A%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%E4%BE%8B.png" alt="A搜索算法例"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/A%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%E7%AD%94%E6%A1%88%E5%9B%BE.png" alt="A搜索算法答案图"><br><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/A%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95%E7%AD%94%E6%A1%88.png" alt="A搜索算法答案"></li></ul><h2 id="第六章-智能计算及其应用"><a href="#第六章-智能计算及其应用" class="headerlink" title="第六章 智能计算及其应用"></a>第六章 智能计算及其应用</h2><h3 id="进化算法"><a href="#进化算法" class="headerlink" title="进化算法"></a>进化算法</h3><ul><li>进化算法(evolutionary algorithms，EA)是基于自然选择和自然遗传等生物进化机制的一种搜索算法。</li></ul><h3 id="基本遗传算法"><a href="#基本遗传算法" class="headerlink" title="基本遗传算法"></a>基本遗传算法</h3><h4 id="遗传算法"><a href="#遗传算法" class="headerlink" title="遗传算法"></a>遗传算法</h4><ul><li>遗传算法（genetic algorithms，GA）：一类借鉴生物界自然选择和自然遗传机制的随机搜索算法,非常适用于处理传统搜索方法难以解决的复杂和非线性优化问题。</li></ul><h4 id="遗传算法的基本思想"><a href="#遗传算法的基本思想" class="headerlink" title="遗传算法的基本思想"></a>遗传算法的基本思想</h4><p>在求解问题时从多个解开始，然后通过一定的法则进行逐步迭代以产生新的解。</p><h3 id="遗传算法的改进算法"><a href="#遗传算法的改进算法" class="headerlink" title="遗传算法的改进算法"></a>遗传算法的改进算法</h3><h4 id="双倍体遗传算法"><a href="#双倍体遗传算法" class="headerlink" title="双倍体遗传算法"></a>双倍体遗传算法</h4><ul><li>采用显性和隐性两个染色体同时进行进化，提供了一种记忆以前有用的基因块的功能。</li></ul><h4 id="多种群遗传算法"><a href="#多种群遗传算法" class="headerlink" title="多种群遗传算法"></a>多种群遗传算法</h4><ul><li>建立两个遗传算法群体，分别独立地运行复制、交叉、变异操作，同时当每一代运行结束以后，选择两个种群中的随机个体及最优个体分别交换。</li></ul><h4 id="自适应遗传算法"><a href="#自适应遗传算法" class="headerlink" title="自适应遗传算法"></a>自适应遗传算法</h4><ul><li>当种群各个体适应度趋于一致或者趋于局部最优时，使$P_c、P_m$增加，以跳出局部最优；而当群体适应度比较分散时，使$P_c、P_m$减少，以利于优良个体的生存。</li></ul><h3 id="群智能算法（swarm-algorithms，SI）"><a href="#群智能算法（swarm-algorithms，SI）" class="headerlink" title="群智能算法（swarm algorithms，SI）"></a>群智能算法（swarm algorithms，SI）</h3><ul><li>受动物群体智能启发的算法。</li></ul><h3 id="粒子群优化算法"><a href="#粒子群优化算法" class="headerlink" title="粒子群优化算法"></a>粒子群优化算法</h3><h4 id="基本思想"><a href="#基本思想" class="headerlink" title="基本思想"></a>基本思想</h4><ul><li>将每个个体看作n维搜索空间中一个没有体积质量的粒子，在搜索空间中以一定的速度飞行，该速度决定粒子飞行的方向和距离。所有粒子有一个由优化函数决定的适应值。</li></ul><h4 id="基本原理"><a href="#基本原理" class="headerlink" title="基本原理"></a>基本原理</h4><ul><li>PSO初始化为一群随机粒子，然后通过迭代找到最优解。在每一次迭代中，粒子通过跟踪两个“极值”来更新自己。第一个就是粒子本身所找到的最优解，这个解称为个体极值。另个一是整个种群目前找到的最优解，这个解称为全局极值。</li></ul><h3 id="蚁群算法"><a href="#蚁群算法" class="headerlink" title="蚁群算法"></a>蚁群算法</h3><h4 id="基本思想-1"><a href="#基本思想-1" class="headerlink" title="基本思想"></a>基本思想</h4><ul><li>信息素跟踪：按照一定的概率沿着信息素较强的路径觅食。</li><li>信息素遗留：会在走过的路上会释放信息素，使得在一定的范围内的其他蚂蚁能够觉察到并由此影响它们的行为。</li></ul><h2 id="第七章-专家系统与机器学习"><a href="#第七章-专家系统与机器学习" class="headerlink" title="第七章 专家系统与机器学习"></a>第七章 专家系统与机器学习</h2><h3 id="专家系统"><a href="#专家系统" class="headerlink" title="专家系统"></a>专家系统</h3><h4 id="专家系统定义"><a href="#专家系统定义" class="headerlink" title="专家系统定义"></a>专家系统定义</h4><ul><li>一类包含知识和推理的智能计算机程序。</li></ul><h4 id="专家系统实例"><a href="#专家系统实例" class="headerlink" title="专家系统实例"></a>专家系统实例</h4><ul><li>医疗诊断专家系统<ul><li>背景：医疗诊断专家系统旨在帮助医生诊断疾病，提供治疗建议。</li><li>工作原理：<ul><li>知识库：包含大量医学知识，包括疾病症状、诊断规则和治疗方案。</li><li>推理引擎：使用逻辑推理和规则匹配技术，根据输入的症状和体征，推断可能的疾病。</li><li>用户界面：医生或患者输入症状，系统输出诊断结果和建议。</li></ul></li><li>示例：<ul><li>输入：患者报告发热、咳嗽、喉咙痛。</li><li>推理过程：</li><li>系统检查知识库，发现这些症状与流感、感冒、咽炎等疾病相关。</li><li>系统根据症状的严重程度和持续时间，推断最可能的疾病。</li><li>输出：系统建议患者可能患有流感，并提供相应的治疗建议，如多休息、饮用温水、服用抗病毒药物等。</li></ul></li></ul></li></ul><h3 id="机器学习"><a href="#机器学习" class="headerlink" title="机器学习"></a>机器学习</h3><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><ul><li>机器学习（Machine learning）使计算机能模拟人的学习行为，自动地通过学习来获取知识和技能，不断改善性能，实现自我完善。</li></ul><h4 id="学习系统基本结构"><a href="#学习系统基本结构" class="headerlink" title="学习系统基本结构"></a>学习系统基本结构</h4><p><img src="/2025/01/01/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E5%AD%A6%E4%B9%A0%E7%B3%BB%E7%BB%9F%E5%9F%BA%E6%9C%AC%E7%BB%93%E6%9E%84.png" alt="学习系统基本结构"></p><h4 id="机械式学习"><a href="#机械式学习" class="headerlink" title="机械式学习"></a>机械式学习</h4><ul><li>记忆学习，或死记式学习：通过直接记忆或者存储外部环境所提供的信息达到学习的目的，并在以后通过对知识库的检索得到相应的知识直接用来求解问题。</li></ul><h4 id="指导式学习（learning-by-being-told）"><a href="#指导式学习（learning-by-being-told）" class="headerlink" title="指导式学习（learning by being told）"></a>指导式学习（learning by being told）</h4><ul><li>又称嘱咐式学习或教授式学习：由外部环境向系统提供一般性的指示或建议，系统把它们具体地转化为细节知识并送入知识库中。在学习过程中要反复对形成的知识进行评价，使其不断完善。</li><li>指导式学习的学习过程：征询指导者的指示或建议 、把征询意见转换为可执行的内部形式 、加入知识库、评价。</li></ul><h4 id="示例学习（learning-from-examples，实例学习或从例子中学习）"><a href="#示例学习（learning-from-examples，实例学习或从例子中学习）" class="headerlink" title="示例学习（learning from examples，实例学习或从例子中学习）"></a>示例学习（learning from examples，实例学习或从例子中学习）</h4><ul><li>通过从环境中取得若干与某概念有关的例子，经归纳得出一般性概念的一种学习方法。</li><li>示例学习中，外部环境（教师）提供一组例子（正例和反例），然后从这些特殊知识中归纳出适用于更大范围的一般性知识，它将覆盖所有的正例并排除所有反例。</li></ul><h3 id="知识发现与数据挖掘"><a href="#知识发现与数据挖掘" class="headerlink" title="知识发现与数据挖掘"></a>知识发现与数据挖掘</h3><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><ul><li>知识发现的全称是从数据库中发现知识（KDD）。</li><li>数据挖掘（DM）是从数据库中挖掘知识。</li></ul>]]></content>
    
    
    <categories>
      
      <category>人工智能导论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人工智能导论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NoSQL复习</title>
    <link href="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/"/>
    <url>/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="第一章-NoSQL数据库概述"><a href="#第一章-NoSQL数据库概述" class="headerlink" title="第一章 NoSQL数据库概述"></a>第一章 NoSQL数据库概述</h2><h3 id="关系数据库的不足"><a href="#关系数据库的不足" class="headerlink" title="关系数据库的不足"></a>关系数据库的不足</h3><ul><li>大量数据的写入处理</li><li>表结构变更及建立索引</li><li>字段不固定的应用</li><li>对简单查询需要快速返回结果的处理</li></ul><h3 id="NoSQL数据库的优势"><a href="#NoSQL数据库的优势" class="headerlink" title="NoSQL数据库的优势"></a>NoSQL数据库的优势</h3><ul><li>易于数据的分散</li><li>提升性能和增大规模</li><li>模式灵活</li><li>扩展性好</li></ul><h3 id="NoSQL数据库的种类"><a href="#NoSQL数据库的种类" class="headerlink" title="NoSQL数据库的种类"></a>NoSQL数据库的种类</h3><table><thead><tr><th>存储类型</th><th>代表解决方案</th><th>特点</th></tr></thead><tbody><tr><td>列存储</td><td>Hbase, Cassandra, Hypertable</td><td>按列存储,适用于数据压缩,对一个或几个字段进行查询的效率很高。</td></tr><tr><td>文档存储</td><td>MongoDB, CouchDB, riak</td><td>保证海量数据存储的同时,具有良好的查询性能。用类JSON格式进行存储。</td></tr><tr><td>key-value 存储</td><td>Dynamo, Redis, Tokyo Cabinet, MemcacheDB</td><td>具有极高的并发读写性能。通过key迅速查找到value,但只能通过key查询。</td></tr><tr><td>图数据库</td><td>Neo4j, HyperGraphDB</td><td>图形关系的最佳存储模式。</td></tr><tr><td>对象数据库</td><td>db4o, Versant</td><td>类似面向对象语言的语法操作数据库,通过对象的方式存取数据。</td></tr><tr><td>XML数据库</td><td>Berkerey DB XML, BaseX</td><td>高效存储XML数据,并支持XML的内部查询语法。</td></tr></tbody></table><h2 id="数据一致性理论"><a href="#数据一致性理论" class="headerlink" title="数据一致性理论"></a>数据一致性理论</h2><h3 id="CAP理论"><a href="#CAP理论" class="headerlink" title="CAP理论"></a>CAP理论</h3><ul><li>C: Consistency 一致性<ul><li>在分布式系统完成某写操作后任何读操作，都应该获取到该写操作写入的那个最新的值</li><li>相当于要求分布式系统中的各节点时时刻刻保持数据的一致性</li></ul></li><li>A: Availability 可用性<ul><li>一直可以正常的做读写操作。简单而言就是客户端一直可以正常访问并得到系统的正常响应</li><li>用户角度来看就是不会出现系统操作失败或者访问超时等问题</li></ul></li><li>P: Tolerance of network Partition 分区容错性<ul><li>指的分布式系统中的某个节点或者网络出现了故障的时候，整个系统仍然能对外提供满足一致性和可用性的服务，也就是说部分故障不影响整体使用</li></ul></li><li>一个分布式系统不可能满足一致性，可用性和分区容错性这三个需求，最多只能同时满足两个</li><li>选择CA，放弃P<ul><li>关系型数据库</li></ul></li><li>选择CP，放弃A<ul><li>分布式数据库</li></ul></li><li>选择AP，放弃C<ul><li>保证最终一致性，如BASE</li></ul></li></ul><h3 id="数据一致性"><a href="#数据一致性" class="headerlink" title="数据一致性"></a>数据一致性</h3><ul><li>强一致性：在任何时刻，所有节点的数据都保持一致。每次读操作都能返回最新的写操作结果，确保用户看到的是最新的数据。</li><li>最终一致性：在经历一段时间后，所有节点的数据会达到一致状态。虽然短期内可能不一致，但系统保证最终一致。是一种弱一致性特例</li><li>弱一致性：没有保证数据在任何时间点的一致性，可能在长时间内保持不一致。</li></ul><hr><ul><li>因果一致性<ul><li>如果Process A通知Process B它已经更新了数据，那么Process B的后续读取操作则读取A写入的最新值，而与A没有因果关系的C则可以最终一致性</li></ul></li><li>读自写一致性<ul><li>用户在写入数据后，立即进行读取操作时，能够读取到自己刚刚写入的数据。</li><li>用户在社交媒体上发布了一条状态，随后立即查看自己的个人主页，能够看到这条状态。</li></ul></li><li>会话一致性<ul><li>此种一致性要求客户端和存储系统交互的整个会话阶段保证读自写一致性</li></ul></li><li>单调读一致性<ul><li>如果一个读操作在某个时间点发生在另一个读操作之后，那么第二个读操作的结果不会比第一个读操作的结果更旧。</li></ul></li><li>单调写一致性<ul><li>如果一个写操作在某个时间点发生在另一个写操作之后，那么第一个写操作的结果会在第二个写操作之前生效。</li></ul></li></ul><h3 id="BASE模型"><a href="#BASE模型" class="headerlink" title="BASE模型"></a>BASE模型</h3><h4 id="Basically-Availble-–基本可用"><a href="#Basically-Availble-–基本可用" class="headerlink" title="Basically Availble –基本可用"></a>Basically Availble –基本可用</h4><ul><li>分布式系统在出现不可预知故障的时候，允许损失部分可用性——但请注意，这绝不等价于系统不可用</li></ul><h4 id="Soft-state-–软状态-柔性事务"><a href="#Soft-state-–软状态-柔性事务" class="headerlink" title="Soft-state –软状态&#x2F;柔性事务"></a>Soft-state –软状态&#x2F;柔性事务</h4><ul><li>是指允许系统中的数据存在中间状态，并认为该中间状态的存在不会影响系统的整体可用性，即允许系统在不同节点的数据副本之间进行数据同步的过程存在延时</li></ul><h4 id="Eventual-Consistency-–最终一致性"><a href="#Eventual-Consistency-–最终一致性" class="headerlink" title="Eventual Consistency –最终一致性"></a>Eventual Consistency –最终一致性</h4><ul><li>最终一致性强调的是系统中所有的数据副本，在经过一段时间的同步后，最终能够达到一个一致的状态。因此，最终一致性的本质是需要系统保证最终数据能够达到一致，而不需要实时保证系统数据的强一致性<br><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/ACID%E5%92%8CBASE%E5%AF%B9%E6%AF%94.png" alt="ACID和BASE对比"></li></ul><h3 id="NWR模型————数据一致性实现技术"><a href="#NWR模型————数据一致性实现技术" class="headerlink" title="NWR模型————数据一致性实现技术"></a>NWR模型————数据一致性实现技术</h3><ul><li>N: 复制的节点数量，即副本数</li><li>R: 成功读操作的最小节点数</li><li>W: 成功写操作的最小节点数</li><li>只需W + R &gt; N，就可以保证强一致性，因为读取数据的节点和被同步写入的节点是有重叠的<blockquote><p>N&#x3D;3，W&#x3D;2, R&#x3D;2 ，那么表示系统中数据有3个不同的副本，当进行写操作时，需要等待至少有2个副本完成了该写操作系统才会返回执行成功的状态，对于读操作，系统有同样的特性</p></blockquote></li><li>如果R+W&gt;N,那么分布式系统就会提供强一致性的保证，因为读取数据的节点和被同步写入的节点有重叠</li><li>如果R+ W≤N,这时读取和写入操作是不重叠的，系统只能保证最终一致性， 而副本达到一致的时间则依赖于系统异步更新的实现方式</li></ul><h3 id="两阶段提交协议"><a href="#两阶段提交协议" class="headerlink" title="两阶段提交协议"></a>两阶段提交协议</h3><ul><li>两阶段提交协议是很常见的解决分布式事务的方式，可以保证分布式事务中，要么所有参与的进程都提交事务成功，要么都取消事务，这样做可以在分布式环境中保持ACID中A(原子性)</li></ul><p><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%8D%8F%E8%AE%AE%E6%88%90%E5%8A%9F.png" alt="两阶段提交协议成功"><br><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/%E4%B8%A4%E9%98%B6%E6%AE%B5%E6%8F%90%E4%BA%A4%E5%8D%8F%E8%AE%AE%E5%A4%B1%E8%B4%A5.png" alt="两阶段提交协议失败"></p><ul><li>优点<ul><li>实现简单</li></ul></li><li>缺点<ul><li>同步阻塞问题：所有结点因为在执行事务，任何其他结点的访问都阻塞</li><li>单点故障：一旦协调者发生故障，参与者会一直阻塞下去。</li><li>数据不一致：若只有一部分参与者收到了提交请求，导致</li><li>协调者再发出commit消息之后宕机，而唯一接收到这条消息的参与者同时也宕机了。此时事务不知道执行与否</li></ul></li></ul><h2 id="第三章-文档型数据库"><a href="#第三章-文档型数据库" class="headerlink" title="第三章 文档型数据库"></a>第三章 文档型数据库</h2><h3 id="文档型数据库和关系数据库区别"><a href="#文档型数据库和关系数据库区别" class="headerlink" title="文档型数据库和关系数据库区别"></a>文档型数据库和关系数据库区别</h3><p><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/%E6%96%87%E6%A1%A3%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%E5%92%8C%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93.png" alt="文档型数据库和关系数据库"></p><h3 id="文档型数据库特性"><a href="#文档型数据库特性" class="headerlink" title="文档型数据库特性"></a>文档型数据库特性</h3><ul><li>一致性：开发者可以根据应用程序需要和业务需求，为每次操作指定数据库的“一致性”强度</li><li>事务：支持单文档级别的事务，也可以使用NWR协议来实现事务功能</li><li>可用性：文档数据库视图用主从数据复制技术来增强可用性</li><li>查询：可以使用视图查询，可用物化视图</li><li>可扩展性：可用“分片”技术</li></ul><h3 id="MongoDB语句"><a href="#MongoDB语句" class="headerlink" title="MongoDB语句"></a>MongoDB语句</h3><p><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/MongoDB%E8%AF%AD%E5%8F%A5.png" alt="MongoDB语句"></p><ul><li>or：<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">db<span class="hljs-selector-class">.col</span><span class="hljs-selector-class">.find</span>(&#123;<span class="hljs-variable">$or</span>:<span class="hljs-selector-attr">[&#123;<span class="hljs-string">&quot;by&quot;</span>:<span class="hljs-string">&quot;菜鸟教程&quot;</span>&#125;,&#123;<span class="hljs-string">&quot;title&quot;</span>: <span class="hljs-string">&quot;MongoDB 教程&quot;</span>&#125;]</span>&#125;)<span class="hljs-selector-class">.pretty</span>() <br></code></pre></td></tr></table></figure></li></ul><h3 id="QQ空间设计"><a href="#QQ空间设计" class="headerlink" title="QQ空间设计"></a>QQ空间设计</h3><p><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/QQ%E7%A9%BA%E9%97%B4.png" alt="QQ空间"></p><h3 id="空间刷新算法"><a href="#空间刷新算法" class="headerlink" title="空间刷新算法"></a>空间刷新算法</h3><ul><li>获取用户的好友列表：<ul><li>从用户集合中获取当前用户的好友列表。</li></ul></li><li>获取好友的最新动态：<ul><li>从日志集合、说说集合和相册照片集合中获取好友的最新动态，按时间戳排序。</li></ul></li><li>合并动态：<ul><li>将不同集合中的动态合并成一个列表，并按时间戳排序。</li></ul></li><li>分页加载：<ul><li>为了提高性能，可以采用分页加载的方式，每次加载一定数量的动态，用户滚动到页面底部时再加载更多。</li></ul></li></ul><h3 id="MongoDB怎样实现分页"><a href="#MongoDB怎样实现分页" class="headerlink" title="MongoDB怎样实现分页"></a>MongoDB怎样实现分页</h3><ul><li>在MongoDB中，可以通过使用skip和limit方法来实现分页。</li><li>例如，要查询第二页的数据（每页10条），可以使用以下代码：</li><li>db.collection.find().skip(10).limit(10)</li><li>这里的skip方法用于跳过前10条数据，limit方法用于限制返回的文档数。</li><li>如果要查询第三页的数据，可以使用以下代码：</li><li>db.collection.find().skip(20).limit(10)</li><li>以此类推，可以通过调整skip和limit方法的参数来实现分页查询。</li></ul><h2 id="第四章-列存储数据库"><a href="#第四章-列存储数据库" class="headerlink" title="第四章 列存储数据库"></a>第四章 列存储数据库</h2><h3 id="HBase表机构"><a href="#HBase表机构" class="headerlink" title="HBase表机构"></a>HBase表机构</h3><p><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/HBase%E8%A1%A8%E6%9C%BA%E6%9E%84.png" alt="HBase表机构"></p><h3 id="HLog"><a href="#HLog" class="headerlink" title="HLog"></a>HLog</h3><ul><li><p>预写日志（WAL，Write Ahead Log）是HBase中用于保证数据一致性的机制。</p></li><li><p>原理是在对数据进行修改操作之前，先将修改操作的信息写入WAL中，然后再进行实际的数据修改。如果在数据修改过程中发生错误，可以通过WAL中记录的信息来恢复数据。</p></li><li><p>预写日志在HBase中有如下作用：</p><ul><li><p>(1)保证数据一致性：在数据修改过程中，如果发生错误，可以通过WAL中记录的信息来恢复数据，保证数据的一致性。</p></li><li><p>(2)支持数据恢复：如果HBase服务器意外崩溃，可以通过WAL中记录的信息来恢复数据。</p></li><li><p>(3)支持多种数据修改操作：WAL支持多种数据修改操作，包括插入、更新和删除操作。</p></li><li><p>(4)加速数据修改：由于WAL的写入是异步的，因此可以在写入WAL的同时进行数据修改，从而加速数据修改的速度。</p></li><li><p>(5)保证最终一致性：WAL可以保证最终一致。</p></li></ul></li></ul><h3 id="热点"><a href="#热点" class="headerlink" title="热点"></a>热点</h3><ul><li>热点发生在大量的client直接访问集群的一个或极少数个节点（访问可能是读，写或者其他操作）</li><li>大量访问会使热点数据块所在的单个机器超出自身承受能力，引起性能下降甚至数据块不可用，这也会影响同一个节点上的其他数据块，由于主机无法服务其他数据块的请求</li></ul><h2 id="第五章-键值数据库"><a href="#第五章-键值数据库" class="headerlink" title="第五章 键值数据库"></a>第五章 键值数据库</h2><h3 id="Redis设计示例（文章网站后端）"><a href="#Redis设计示例（文章网站后端）" class="headerlink" title="Redis设计示例（文章网站后端）"></a>Redis设计示例（文章网站后端）</h3><p><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/%E6%96%87%E7%AB%A0.png" alt="文章"><br><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/%E6%97%B6%E9%97%B4%E5%92%8C%E8%AF%84%E5%88%86.png" alt="时间和评分"></p><ul><li>通过这两个有序集合，网站既可根据文章发布的先后顺序来展示文章，又可根据文章评分的高低来展示文章<br><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/%E6%8A%95%E7%A5%A8%E5%89%8D%E5%90%8E%E7%9A%84%E6%95%B0%E6%8D%AE%E5%8F%98%E5%8C%96.png" alt="投票前后的数据变化"></li></ul><h2 id="第六章-图数据库"><a href="#第六章-图数据库" class="headerlink" title="第六章 图数据库"></a>第六章 图数据库</h2><h3 id="Neo4J数据模型"><a href="#Neo4J数据模型" class="headerlink" title="Neo4J数据模型"></a>Neo4J数据模型</h3><p><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/Neo4J%E6%95%B0%E6%8D%AE%E6%A8%A1%E5%9E%8B.png" alt="Neo4J数据模型"><br><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/Neo4j%E7%A4%BA%E4%BE%8B.png" alt="Neo4j示例"></p><h3 id="图数据库转Mongo示例"><a href="#图数据库转Mongo示例" class="headerlink" title="图数据库转Mongo示例"></a>图数据库转Mongo示例</h3><p>将Neo4j转换到MongoDB数据库中，写明设计思路和逻辑结构，以及两种数据库如何进行图书平均评分Top k的查找。<br><img src="/2024/12/30/NoSQL%E5%A4%8D%E4%B9%A0/%E5%9B%BE%E6%95%B0%E6%8D%AE%E5%BA%93%E8%BD%ACMongo%E7%A4%BA%E4%BE%8B%E9%A2%98%E7%9B%AE.png" alt="图数据库转Mongo示例题目"></p><h4 id="逻辑结构"><a href="#逻辑结构" class="headerlink" title="逻辑结构"></a>逻辑结构</h4><p>1.<strong>books集合</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;_id&quot;</span><span class="hljs-punctuation">:</span> ObjectId(<span class="hljs-string">&quot;60b1234567890abcdef012345&quot;</span>)<span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;book_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;B001&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Java开发手册&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;author&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;阿里巴巴&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;price&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">99.99</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;stock&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">100</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>2.<strong>readers集合</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;_id&quot;</span><span class="hljs-punctuation">:</span> ObjectId(<span class="hljs-string">&quot;60b7890abcdef0123456789&quot;</span>)<span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;reader_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;R001&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;name&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;小明&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;email&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;xiaoming@example.com&quot;</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><p>3.<strong>reviews集合</strong></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-punctuation">&#123;</span><br>  <span class="hljs-attr">&quot;_id&quot;</span><span class="hljs-punctuation">:</span> ObjectId(<span class="hljs-string">&quot;60b789abcdef0123456789ab&quot;</span>)<span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;book_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;B001&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;reader_id&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;R001&quot;</span><span class="hljs-punctuation">,</span><br>  <span class="hljs-attr">&quot;score&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-number">4.5</span><br><span class="hljs-punctuation">&#125;</span><br></code></pre></td></tr></table></figure><h4 id="查找图书平均评分Top-k"><a href="#查找图书平均评分Top-k" class="headerlink" title="查找图书平均评分Top k"></a>查找图书平均评分Top k</h4><p>1.<strong>Neo4j</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs sql"><span class="hljs-keyword">MATCH</span> (b:Book)<span class="hljs-operator">-</span>[r:RATED_BY]<span class="hljs-operator">-</span><span class="hljs-operator">&gt;</span>(r:Reader)<br><span class="hljs-keyword">RETURN</span> b.title, <span class="hljs-built_in">AVG</span>(r.score) <span class="hljs-keyword">AS</span> avg_score<br><span class="hljs-keyword">ORDER</span> <span class="hljs-keyword">BY</span> avg_score <span class="hljs-keyword">DESC</span><br>LIMIT k<br></code></pre></td></tr></table></figure><p>2.<strong>Mongo</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs javascript">db.<span class="hljs-property">reviews</span>.<span class="hljs-title function_">aggregate</span>([<br>  &#123; <span class="hljs-attr">$group</span>: &#123; <span class="hljs-attr">_id</span>: <span class="hljs-string">&quot;$book_id&quot;</span>, <span class="hljs-attr">avg_score</span>: &#123; <span class="hljs-attr">$avg</span>: <span class="hljs-string">&quot;$score&quot;</span> &#125; &#125; &#125;,<br>  &#123; <span class="hljs-attr">$sort</span>: &#123; <span class="hljs-attr">avg_score</span>: -<span class="hljs-number">1</span> &#125; &#125;,<br>  &#123; <span class="hljs-attr">$limit</span>: k &#125;,<br>  &#123; <span class="hljs-attr">$lookup</span>: &#123;<br>      <span class="hljs-attr">from</span>: <span class="hljs-string">&quot;books&quot;</span>,<br>      <span class="hljs-attr">localField</span>: <span class="hljs-string">&quot;_id&quot;</span>,<br>      <span class="hljs-attr">foreignField</span>: <span class="hljs-string">&quot;book_id&quot;</span>,<br>      <span class="hljs-attr">as</span>: <span class="hljs-string">&quot;book_info&quot;</span><br>    &#125;<br>  &#125;,<br>  &#123; <span class="hljs-attr">$project</span>: &#123;<br>      <span class="hljs-attr">_id</span>: <span class="hljs-number">0</span>,<br>      <span class="hljs-attr">title</span>: &#123; <span class="hljs-attr">$arrayElemAt</span>: [<span class="hljs-string">&quot;$book_info.title&quot;</span>, <span class="hljs-number">0</span>] &#125;,<br>      <span class="hljs-attr">avg_score</span>: <span class="hljs-number">1</span><br>    &#125;<br>  &#125;<br>]);<br></code></pre></td></tr></table></figure><h3 id="聚合管道"><a href="#聚合管道" class="headerlink" title="聚合管道"></a>聚合管道</h3><h4 id="常用管道命令"><a href="#常用管道命令" class="headerlink" title="常用管道命令"></a>常用管道命令</h4><ul><li>$group： 将集合中的⽂档分组， 可⽤于统计结果</li><li>$match： 过滤数据， 只输出符合条件的⽂档</li><li>$project： 修改输⼊⽂档的结构， 如重命名、 增加、 删除字段、 创建计算结果</li><li>$sort： 将输⼊⽂档排序后输出</li><li>$limit： 限制聚合管道返回的⽂档数</li><li>$lookup: 关联其他表查询<ul><li>from: 关联的表名</li><li>localField：本表的属性</li><li>foreignField：from表的属性</li><li>as：命名为</li></ul></li><li><code>&#123; $arrayElemAt: [ &lt;array&gt;, &lt;index&gt; ] &#125;</code>：用于从数组中获取指定索引位置的元素<ul><li>&lt;array&gt;: 要从中获取元素的数组表达式。</li><li>&lt;index&gt;: 要获取的元素的索引位置。索引从0开始计数。</li></ul></li></ul><h3 id="描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点"><a href="#描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点" class="headerlink" title="描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点"></a>描述RDB数据库、NoSQL数据库和NewSQL数据库的区别和特点</h3><ul><li><p>(1)RDB数据库是将复杂的数据结构以行和列的形式进行存储及展示，对数据的操作几乎都是建立在一个或多个关系表的基础上。通过表的关系来实现数据库的管理。典型的关系型数据库有Oracle、MySql、SQL Server等。</p></li><li><p>RDBMS优势:</p></li><li><p>（通用性和高性能）保持数据的一致性（事务处理）、最小冗余、复杂查询如join、成熟的技术关系。</p></li><li><p>RDBMS不足：</p></li><li><p>大量数据的写入处理；表结构变更及建立索引；字段不固定的应用；对简单查询需要快速返回结果的处理。</p></li><li><p>(2)NoSQL指的是非关系型的数据库。NoSQL用于超大规模数据的存储。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。常见的有Redis、Hbase、MongoDB等。</p></li><li><p>NoSQL优势：</p></li><li><p>易于数据的分散；提升性能和增大规模；模式自由；扩展性好。</p></li><li><p>NoSQL缺点:</p></li><li><p>不能保证ACID，采取最终一致性原则。</p></li><li><p>(3)NewSQL是对各种新的可扩展&#x2F;高性能数据库的简称，具有NoSQL对海量数据的存储管理能力，保持了传统数据库支持ACID和SQL等特性。</p></li><li><p>NewSql特点:</p></li><li><p>支持关系数据模型；使用SQL作为其主要接口</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>Nosql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nosql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数据科学导论复习</title>
    <link href="/2024/12/26/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/"/>
    <url>/2024/12/26/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="第一章-大数据概述"><a href="#第一章-大数据概述" class="headerlink" title="第一章 大数据概述"></a>第一章 大数据概述</h2><h3 id="大数据定义"><a href="#大数据定义" class="headerlink" title="大数据定义"></a>大数据定义</h3><ul><li>大数据是指无法在一定时间内用常规软件工具对其内容进行抓取、管理和处理的数据集合</li></ul><h3 id="大数据特点"><a href="#大数据特点" class="headerlink" title="大数据特点"></a>大数据特点</h3><ul><li>数据量大</li><li>数据种类多样</li><li>高实时性</li><li>数据价值巨大但价值密度低</li></ul><h3 id="数据科学基本流程"><a href="#数据科学基本流程" class="headerlink" title="数据科学基本流程"></a>数据科学基本流程</h3><p><img src="/2024/12/26/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B.png" alt="数据科学基本流程"></p><h3 id="数据的不同处理模式"><a href="#数据的不同处理模式" class="headerlink" title="数据的不同处理模式"></a>数据的不同处理模式</h3><ul><li>批处理<ul><li>数据先保存起来，然后分析(全量数据)</li><li>响应时间分钟&#x2F;小时计</li></ul></li><li>流式处理<ul><li>数据及时处理，处理过后一般不保存</li><li>响应时间毫秒计</li></ul></li><li>交互式处理<ul><li>数据先保存起来，然后查询(部分数据)</li><li>响应时间秒级</li></ul></li></ul><h3 id="大数据应用"><a href="#大数据应用" class="headerlink" title="大数据应用"></a>大数据应用</h3><ul><li>社会网络大数据</li><li>交通大数据</li><li>文本大数据</li><li>时空数据</li></ul><h2 id="第二章-数据存储"><a href="#第二章-数据存储" class="headerlink" title="第二章 数据存储"></a>第二章 数据存储</h2><h3 id="数据的分类"><a href="#数据的分类" class="headerlink" title="数据的分类"></a>数据的分类</h3><ul><li>结构化数据<ul><li>可以使用关系型数据库表示和存储的数据，拥有固定结构</li></ul></li><li>半结构化数据<ul><li>弱结构化，虽然不符合关系数据模型的要求，但是含有相关标记（自描述结构），分割实体及期属性。如XML，JSON等</li></ul></li><li>非结构化数据<ul><li>没有固定数据结构，或很难发现统一数据结构的数据</li><li>文档、文本、图片、视频、音频等</li></ul></li></ul><h3 id="关系型数据库和NoSQL"><a href="#关系型数据库和NoSQL" class="headerlink" title="关系型数据库和NoSQL"></a>关系型数据库和NoSQL</h3><h3 id="SQL语言的类型"><a href="#SQL语言的类型" class="headerlink" title="SQL语言的类型"></a>SQL语言的类型</h3><ul><li>类别一：Data Definition Language (DDL) 数据定义语言</li><li>类别二：Data Manipulation Language (DML) 数据操作语言（增删改查）</li><li>类别三： Data Control Language（DCL）：数据控制语言，用来定义访问权限和安全级别</li><li>类别四：Data Query Language（DQL）：数据查询语言，用来查询记录（数据）。这些语言通过DBMS来操作DB，DBMS是一个系统</li></ul><h2 id="第三章-大数据计算"><a href="#第三章-大数据计算" class="headerlink" title="第三章 大数据计算"></a>第三章 大数据计算</h2><h3 id="HDFS"><a href="#HDFS" class="headerlink" title="HDFS"></a>HDFS</h3><ul><li>Hadoop Distributed File System(HDFS),这是在由普通服务器组成的集群上运行的分布式文件系统，支持大数据的存储；通过多个节点的并行IO，提供极高的吞吐能力<ul><li>一个HDFS集群，一般由一个NameNode和若干DataNode组成，分别负责元信息的管理和数据块的管理</li><li>HDFS支持TB级甚至PB级大小文件的存储，它把文件划分成数据块(Block),分布到多台机器上进行存储</li><li>为了保证系统的可靠性，HDFS把数据块在多个节点上进行复制(Replicate)</li></ul></li></ul><h3 id="Hadoop-MapReduce"><a href="#Hadoop-MapReduce" class="headerlink" title="Hadoop MapReduce"></a>Hadoop MapReduce</h3><ul><li>一种支持大数据处理的编程模型</li><li>MapReduce并行编程模型把计算过程分解为两个主要阶段，即Map 阶段和Reduce阶段。</li><li>Map函数处理&lt;Key,Value&gt;对，产生一系列的中间&lt;Key,Value&gt;对</li><li>Reduce函数合并所有具有相同Key值的中间键值对，计算最终结果</li><li>MapReduce计算模型，可以形式化地表达成Map:&lt;k1,v1&gt;-&gt; list&lt;k2,v2&gt;, Reduce:&lt;k2,list(v2)&gt;-&gt;list&lt;k3,v3&gt;<br><img src="/2024/12/26/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/MapReduce.png" alt="MapReduce"><br><img src="/2024/12/26/%E6%95%B0%E6%8D%AE%E7%A7%91%E5%AD%A6%E5%AF%BC%E8%AE%BA%E5%A4%8D%E4%B9%A0/MapReduce%E7%A4%BA%E4%BE%8B.png" alt="MapReduce示例"></li><li>缺点<ul><li>仅支持MapReduce计算模型</li><li>MapReduce通过磁盘数据交换，效率低下</li></ul></li></ul><h3 id="Spark"><a href="#Spark" class="headerlink" title="Spark"></a>Spark</h3><h3 id="RDD"><a href="#RDD" class="headerlink" title="RDD"></a>RDD</h3><h2 id="第四章-数据采集与整理"><a href="#第四章-数据采集与整理" class="headerlink" title="第四章 数据采集与整理"></a>第四章 数据采集与整理</h2><h3 id="检测冗余属性"><a href="#检测冗余属性" class="headerlink" title="检测冗余属性"></a>检测冗余属性</h3><ul><li>Pearson积距相关系数</li><li>卡方检验</li></ul><h3 id="数据的距离"><a href="#数据的距离" class="headerlink" title="数据的距离"></a>数据的距离</h3><ul><li>欧几里得距离</li><li>汉明距离</li><li>明氏距离</li><li>马氏距离</li></ul><h3 id="数据的相似度"><a href="#数据的相似度" class="headerlink" title="数据的相似度"></a>数据的相似度</h3><ul><li>Jaccard相关系数</li><li>余弦相似度</li></ul><h3 id="数据的相关性"><a href="#数据的相关性" class="headerlink" title="数据的相关性"></a>数据的相关性</h3><ul><li>Pearson相关系数</li></ul><h3 id="有序数据和无序数据"><a href="#有序数据和无序数据" class="headerlink" title="有序数据和无序数据"></a>有序数据和无序数据</h3><ul><li>无序数据：每个数据样本的不同维度没有顺序关系</li><li>有序数据：有</li></ul><h3 id="有序数据的距离测量"><a href="#有序数据的距离测量" class="headerlink" title="有序数据的距离测量"></a>有序数据的距离测量</h3><ul><li>Spearman Rank（斯皮尔曼等级）相关系数</li></ul><h2 id="第八章-数据分析方法"><a href="#第八章-数据分析方法" class="headerlink" title="第八章 数据分析方法"></a>第八章 数据分析方法</h2><h3 id="机器学习基本流程"><a href="#机器学习基本流程" class="headerlink" title="机器学习基本流程"></a>机器学习基本流程</h3><ul><li>业务场景分析</li><li>数据处理</li><li>训练机器模型和评价</li><li>使用机器学习模型</li></ul><h3 id="机器学习分类"><a href="#机器学习分类" class="headerlink" title="机器学习分类"></a>机器学习分类</h3><ul><li>有监督学习<ul><li>对于样本有输入X和预期输出Y</li></ul></li><li>无监督学习<ul><li>样本数据无需人工标注，无目标值</li></ul></li><li>半监督学习<ul><li>一小部分标注数据，大部分无标注数据</li></ul></li><li>强化学习<ul><li>对系统和环境建模，通过与外界不断交互，获得反馈，修正机器学习模型</li></ul></li></ul><h2 id="第十章-数据可视化"><a href="#第十章-数据可视化" class="headerlink" title="第十章 数据可视化"></a>第十章 数据可视化</h2><h3 id="数据可视化工具"><a href="#数据可视化工具" class="headerlink" title="数据可视化工具"></a>数据可视化工具</h3><ul><li>Google Refine</li><li>Echarts</li><li>Tableau</li><li>Processing</li><li>D3(JS)</li><li>ColorBrewer</li></ul><h2 id="第十一章-文本分析"><a href="#第十一章-文本分析" class="headerlink" title="第十一章 文本分析"></a>第十一章 文本分析</h2><h3 id="抓取控制"><a href="#抓取控制" class="headerlink" title="抓取控制"></a>抓取控制</h3><ul><li><p>meta robots</p><ul><li><p><code>&lt;meta name=&quot;robots&quot; content=&quot;...&quot;&gt;</code>中的content有多种取值</p></li><li><p>index：允许搜索引擎索引该页面。</p></li><li><p>noindex：禁止搜索引擎索引该页面。</p></li><li><p>follow：允许搜索引擎跟踪该页面上的链接。</p></li><li><p>nofollow：禁止搜索引擎跟踪该页面上的链接。</p></li><li><p>all：等同于index, follow，允许索引页面并跟踪链接。</p></li><li><p>none：等同于noindex, nofollow，禁止索引页面并跟踪链接。</p></li><li><p>noarchive：禁止搜索引擎缓存该页面的快照。</p></li><li><p>nosnippet：禁止搜索引擎在搜索结果中显示页面的摘要。</p></li><li><p>max-snippet:[number]：限制搜索引擎在搜索结果中显示的页面摘要的最大字符数。</p></li><li><p>noodp：禁止搜索引擎使用开放目录项目（ODP）中的描述作为页面的摘要。</p></li><li><p>notranslate：禁止搜索引擎提供该页面的翻译版本。</p></li></ul></li><li><p>robots.txt</p>  <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs HTML">User-agent: Googlebot   // 不允许谁抓取，不允许所有为*<br>Disallow: /             // 不允许抓取的页面路径<br></code></pre></td></tr></table></figure></li></ul><h3 id="纵容恶意爬虫的危害"><a href="#纵容恶意爬虫的危害" class="headerlink" title="纵容恶意爬虫的危害"></a>纵容恶意爬虫的危害</h3><ul><li>额外带宽负担</li><li>核心文本被爬取</li><li>注册用户被扫描</li><li>点击欺诈</li></ul><h3 id="独热编码"><a href="#独热编码" class="headerlink" title="独热编码"></a>独热编码</h3><ul><li><p>词的独热表示是一种最简单最直接的词的向量化表示方式。主要步骤包含两步：</p><ul><li>对需要用到的文本中所有词进行编码（假设共用N个词），每个词有唯一的下标（0~N）。</li><li>根据词下标 i 生成一个长度为N的向量，除了第i位为1外，其他位都为0。</li></ul></li></ul><h3 id="绝对词频"><a href="#绝对词频" class="headerlink" title="绝对词频"></a>绝对词频</h3><ul><li>每个文档表示为一个n维向量，每一维对应一个单词，值为单词出现的次数</li></ul><h3 id="相对词频TF"><a href="#相对词频TF" class="headerlink" title="相对词频TF"></a>相对词频TF</h3><ul><li>该词出现的次数&#x2F;总词数</li></ul><h3 id="逆文档频率IDF"><a href="#逆文档频率IDF" class="headerlink" title="逆文档频率IDF"></a>逆文档频率IDF</h3><ul><li>lg(文档总数&#x2F;含有该词的文档数)</li></ul><h3 id="TF-IDF"><a href="#TF-IDF" class="headerlink" title="TF-IDF"></a>TF-IDF</h3><ul><li>相对词频*逆文档频率</li></ul>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>编译原理复习</title>
    <link href="/2024/12/24/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0/"/>
    <url>/2024/12/24/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h3 id="什么是有穷自动机？NFA和DFA有什么区别-2023-12-18"><a href="#什么是有穷自动机？NFA和DFA有什么区别-2023-12-18" class="headerlink" title="什么是有穷自动机？NFA和DFA有什么区别(2023&#x2F;12&#x2F;18)"></a>什么是有穷自动机？NFA和DFA有什么区别(2023&#x2F;12&#x2F;18)</h3><h5 id="一个确定的有穷自动机（DFA）M是一个五元组M-（S，Σ，δ，-s-0-，F），其中"><a href="#一个确定的有穷自动机（DFA）M是一个五元组M-（S，Σ，δ，-s-0-，F），其中" class="headerlink" title="一个确定的有穷自动机（DFA）M是一个五元组M&#x3D;（S，Σ，δ，$s_0$，F），其中"></a>一个确定的有穷自动机（DFA）M是一个五元组M&#x3D;（S，Σ，δ，$s_0$，F），其中</h5><ul><li>S是一个有穷集，它的每一个元素称为一个状态</li><li>Σ是一个有穷字母表，它的每个元素称为一个输入符号，所以也称Σ为输入符号表</li><li>δ是转换函数，是在S×Σ→S上的单值部分映射，即，如果 δ（s，a）&#x3D;s’，（s∈S，s’∈S）就意味着，当前状态为s，输入符为a时，将转换为下一个状态s’，s’称作s的一个后继状态</li><li>$s_0$ ∈S是唯一的一个初态</li><li>F ⊂ S是一个终态集（可空），终态也称可接受状态或结束状态</li></ul><h5 id="一个非确定的有穷自动机（NFA）M是一个五元组：-M-（S，Σ，-δ，S-0，F）-其中"><a href="#一个非确定的有穷自动机（NFA）M是一个五元组：-M-（S，Σ，-δ，S-0，F）-其中" class="headerlink" title="一个非确定的有穷自动机（NFA）M是一个五元组：$M&#x3D;（S，Σ， δ，S_0，F）$,其中:"></a>一个非确定的有穷自动机（NFA）M是一个五元组：$M&#x3D;（S，Σ， δ，S_0，F）$,其中:</h5><ul><li>S是一个有穷集，它的每个元素称为一个状态；</li><li>Σ是一个有穷字母表，它的每个元素称为一个输入符号，所以也称Σ为输入符号表；</li><li>δ是状态转换函数，是在S×Σ*→S的子集的映射，即， $δ : S×Σ^*→2^S $；表明在某状态下对于某输入符号可能有多个后继状态；</li><li>$S_0 ⊂ S$是一个非空初态集；</li><li>$F ⊂ K$是一个终态集（可空）。</li></ul><h3 id="简述推导和规约的概念-2023-12-18-2022-2023第二学期"><a href="#简述推导和规约的概念-2023-12-18-2022-2023第二学期" class="headerlink" title="简述推导和规约的概念(2023&#x2F;12&#x2F;18)(2022-2023第二学期)"></a>简述推导和规约的概念(2023&#x2F;12&#x2F;18)(2022-2023第二学期)</h3><ul><li>推导：将非终结符替换为它的某个产生式的体。</li><li>归约：将一个与某个产生式的体相匹配的特定子串替换为该产生式的头。</li></ul><h3 id="什么是文法的二义性？为什么要消除二义性？如何消除二义性？-2022-2023第二学期"><a href="#什么是文法的二义性？为什么要消除二义性？如何消除二义性？-2022-2023第二学期" class="headerlink" title="什么是文法的二义性？为什么要消除二义性？如何消除二义性？(2022-2023第二学期)"></a>什么是文法的二义性？为什么要消除二义性？如何消除二义性？(2022-2023第二学期)</h3><ul><li>给定文法，若存在某个句子，有多个最左&#x2F;右推导，即可以生成多棵解析树，则这个文法就是二义的。</li><li>通常要求程序设计语言的文法的无二义性的，否则会导致一个程序有多个“正确”的解释。即使文法允许二义性，但仍需要在文法之外加以说明，来剔除不要的语法分析树。总之，必须保证文法消除了二义性使得最后的语法解析树只有一棵。</li><li>①改写原文法 ②引入消除二义性的规则。</li></ul><h3 id="简述递归下降语法分析技术的基本思想。"><a href="#简述递归下降语法分析技术的基本思想。" class="headerlink" title="简述递归下降语法分析技术的基本思想。"></a>简述递归下降语法分析技术的基本思想。</h3><ul><li>对于LL(1)文法，不必实际构建解析树，而且可以借助系统栈来实现预测分析，这就是递归下降算法。</li></ul><h3 id="简述划分基本块的算法。"><a href="#简述划分基本块的算法。" class="headerlink" title="简述划分基本块的算法。"></a>简述划分基本块的算法。</h3><ul><li>①确定首指令：第一个三地址指令；任意一个转移指令的目标指令；转移指令后的一个指令。</li><li>②确定基本块：从一个首指令开始到下一个首指令之间的部分为一个基本块。</li></ul><h3 id="什么是语法制导定义（SDD）-L-SDD和S-SDD的区别"><a href="#什么是语法制导定义（SDD）-L-SDD和S-SDD的区别" class="headerlink" title="什么是语法制导定义（SDD）? L-SDD和S-SDD的区别"></a>什么是语法制导定义（SDD）? L-SDD和S-SDD的区别</h3><ul><li>SDD<ul><li>SDD 将每个文法符号和一个语义属性集合相关联，将每个产生式和一组语义规则相关联，用来计算该产生式中各文法符号的属性值。</li></ul></li><li>L-SDD<br><img src="/2024/12/24/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0/LSDD.png" alt="LSDD"></li><li>S-SDD<ul><li>仅仅使用综合属性的SDD称为S属性的SDD</li></ul></li></ul><h3 id="简述语法制导翻译的思想"><a href="#简述语法制导翻译的思想" class="headerlink" title="简述语法制导翻译的思想"></a>简述语法制导翻译的思想</h3><ul><li>对字符串进行语法分析，构建语法分析树，然后根据需要遍历语法树并在语法书的各结点处按语义规则进行计算。这种有源程序的语法结构驱动的处理方法就是语法制导翻译。</li></ul><h3 id="列举至少四种代码优化的方法，并简述他们的基本思想-写出至少四个优化方法，并简述其算法。"><a href="#列举至少四种代码优化的方法，并简述他们的基本思想-写出至少四个优化方法，并简述其算法。" class="headerlink" title="列举至少四种代码优化的方法，并简述他们的基本思想&#x2F;写出至少四个优化方法，并简述其算法。"></a>列举至少四种代码优化的方法，并简述他们的基本思想&#x2F;写出至少四个优化方法，并简述其算法。</h3><ul><li>①删除公共子表达式：如果表达式 x op y 先前已被计算过，并且从先前的计算到现在，x op y 中变量的值没有改变。那么可以删除公共子表达式。</li><li>②删除无用代码：在复制语句x &#x3D; y的后面尽可能地用y代替x</li><li>③常量合并：如果在编译时刻推导出一个表达式的值是常量，就可以 使用该常量来替代这个表达式</li><li>④代码移动：对于那些不管循环执行多少次都得到相同结果的表达式，在进入循环之前就对它们求值。</li><li>⑤强度削弱：用较快的操作代替较慢的操作。</li></ul><h3 id="解释综合属性和继承属性，终结符的综合属性和继承属性是什么"><a href="#解释综合属性和继承属性，终结符的综合属性和继承属性是什么" class="headerlink" title="解释综合属性和继承属性，终结符的综合属性和继承属性是什么"></a>解释综合属性和继承属性，终结符的综合属性和继承属性是什么</h3><ul><li>属性文法：<ul><li>基础文法</li><li>每个文法符号都有一个属性</li><li>每个文法产生式$A → α$有一组形式为$b :&#x3D;f(c_1, c_2, …, c_k )$的语义规则，其中$f$是函数，$b,c_1, c_2, …, c_k$ 是该产生式文法符号的属性</li></ul></li><li>综合属性<ul><li>b是A的属性，$c_1, c_2, …, c_k$是产生式右部文法符号的属性或A的其他属性</li></ul></li><li>继承属性<ul><li>b是产生式右部某个文法符号X的属性</li></ul></li></ul><h3 id="什么是依赖图"><a href="#什么是依赖图" class="headerlink" title="什么是依赖图"></a>什么是依赖图</h3><ul><li>依赖图是用来描述相应语法树中属性的信息流；</li><li>在语法树的基础上，对每个文法符号的属性都有一个结点</li><li>针对每一个语义规则，从产生式右边的属性向产生式左边的属性引一条有向边</li></ul><h3 id="说明局部优化和全局优化的不同"><a href="#说明局部优化和全局优化的不同" class="headerlink" title="说明局部优化和全局优化的不同"></a>说明局部优化和全局优化的不同</h3><ul><li>局部优化是指单个基本块范围内的优化；全局优化是指面向多个基本块的优化。</li></ul><h3 id="什么是上下文无关文法CFG"><a href="#什么是上下文无关文法CFG" class="headerlink" title="什么是上下文无关文法CFG"></a>什么是上下文无关文法CFG</h3><ul><li>这个文法中所有的产生式左边只有一个非终结符</li></ul><h3 id="什么是LL1文法"><a href="#什么是LL1文法" class="headerlink" title="什么是LL1文法"></a>什么是LL1文法</h3><ul><li>第一种<br><img src="/2024/12/24/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86%E5%A4%8D%E4%B9%A0/LL1%E6%96%87%E6%B3%95%E5%AE%9A%E4%B9%891.png" alt="LL1文法定义1"></li><li>第二种</li><li>一个上下文无关文法是LL(1)文法的充分必要条件是每个非终结符A的两个不同产生式，$A→α ,A→β$；满足$SELECT(A →α ) ∩ SELECT(A →β)&#x3D; Ф$。其中α、β不能同时 $\overset{*} {\Rightarrow} \varepsilon$。</li></ul><h3 id="3型文法"><a href="#3型文法" class="headerlink" title="3型文法"></a>3型文法</h3><ul><li>产生式右边要么没有非终结符，要么只有一个</li></ul>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络Ch5</title>
    <link href="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/"/>
    <url>/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/</url>
    
    <content type="html"><![CDATA[<h1 id="第五章-传输层"><a href="#第五章-传输层" class="headerlink" title="第五章 传输层"></a><center>第五章 传输层</center></h1><h2 id="一、传输层概述"><a href="#一、传输层概述" class="headerlink" title="一、传输层概述"></a>一、传输层概述</h2><h3 id="1-进程、端口号、传输协议之间的关系"><a href="#1-进程、端口号、传输协议之间的关系" class="headerlink" title="1.进程、端口号、传输协议之间的关系"></a>1.进程、端口号、传输协议之间的关系</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/%E5%85%B3%E7%B3%BB.png" alt="进程、端口号、传输协议之间的关系"></p><ul><li>端口号占16bit，范围是0到65535</li><li>0到1023为熟知端口号，开发的时候一般不使用，只能用于被熟知的重要应用程序</li></ul><h3 id="2-功能"><a href="#2-功能" class="headerlink" title="2.功能"></a>2.功能</h3><ul><li>实现端到端（进程之间）的通信</li><li>复用和分用<ul><li>复用（从上到下）：在发送数据时，同一台主机上的多个进程可以使用同一个传输层协议</li><li>分用（从下到上）：在接收数据时，传输层可以把数据正确交付到目的进程</li></ul></li><li>差错检测<ul><li>TCP会丢弃并通知重传</li><li>UDP会丢弃不通知</li></ul></li><li>向应用层提供两种服务<ul><li>面向连接的、可靠的端到端传输服务（TCP）<ul><li>确保数据正确，开销大，实时性较差</li></ul></li><li>无连接的、不可靠的端到端传输服务（UDP）<ul><li>数据可能出错，但速度快，开销小</li></ul></li><li>有连接：传输前先打招呼建立连接，传输结束告知对方结束</li><li>可靠传输：接收方有确认机制，通知发送方哪些被接收成功</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/%E4%BC%A0%E8%BE%93%E5%B1%82%E6%A6%82%E8%BF%B0%E5%B0%8F%E7%BB%93.png" alt="传输层概述小结"></p><h2 id="二、UDP协议"><a href="#二、UDP协议" class="headerlink" title="二、UDP协议"></a>二、UDP协议</h2><h3 id="1-UDP协议、UDP数据报、UDP首部"><a href="#1-UDP协议、UDP数据报、UDP首部" class="headerlink" title="1.UDP协议、UDP数据报、UDP首部"></a>1.UDP协议、UDP数据报、UDP首部</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/UDP%E5%8D%8F%E8%AE%AE.png" alt="UDP协议"></p><ul><li>UDP首部很小，8B</li><li>UDP每次传输一个完整的报文，不支持自动拆分、重装，数据过大会拒绝</li><li>UDP无连接不可靠，不支持拥塞控制</li><li>UDP支持一对一、一对多传输</li></ul><h3 id="2-UDP数据报格式"><a href="#2-UDP数据报格式" class="headerlink" title="2.UDP数据报格式"></a>2.UDP数据报格式</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/UDP%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F.png" alt="UDP数据报格式"></p><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/UDP%E5%B0%8F%E7%BB%93.png" alt="UDP小结"></p><h3 id="3-UDP检验（发送方）"><a href="#3-UDP检验（发送方）" class="headerlink" title="3.UDP检验（发送方）"></a>3.UDP检验（发送方）</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/%E5%8F%91%E9%80%81%E6%96%B9UDP%E6%A0%A1%E9%AA%8C.png" alt="发送方UDP校验"></p><ul><li>如果最高位进位，则将进位加到最低位</li></ul><h3 id="4-UDP校验（接收方）"><a href="#4-UDP校验（接收方）" class="headerlink" title="4.UDP校验（接收方）"></a>4.UDP校验（接收方）</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/%E6%8E%A5%E6%94%B6%E6%96%B9UDP%E6%A0%A1%E9%AA%8C.png" alt="接收方UDP校验"></p><h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/UDP%E6%A3%80%E9%AA%8C%E5%B0%8F%E7%BB%93.png" alt="UDP检验小结"></p><h2 id="三、TCP协议"><a href="#三、TCP协议" class="headerlink" title="三、TCP协议"></a>三、TCP协议</h2><h3 id="1-TCP协议通信过程"><a href="#1-TCP协议通信过程" class="headerlink" title="1.TCP协议通信过程"></a>1.TCP协议通信过程</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/TCP%E5%8D%8F%E8%AE%AE%E9%80%9A%E4%BF%A1.png" alt="TCP协议通信"></p><h3 id="2-TCP数据传输"><a href="#2-TCP数据传输" class="headerlink" title="2.TCP数据传输"></a>2.TCP数据传输</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/TCP%E6%95%B0%E6%8D%AE%E4%BC%A0%E8%BE%93.png" alt="TCP数据传输"></p><h3 id="3-TCP段格式"><a href="#3-TCP段格式" class="headerlink" title="3.TCP段格式"></a>3.TCP段格式</h3><p><img src="/2024/12/13/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh5/TCP%E6%AE%B5%E6%A0%BC%E5%BC%8F.png" alt="TCP段格式"></p><ul><li>序号seq：用于标记数据部分的第一个字节在原始字节流中的位置</li><li>确认ack：用于反馈ack号之前的所有字节都已收到</li><li>ACK：为0时ack无效，为1时ack有效，只有握手1的ACK为0</li><li>数据偏移：表示TCP首部长度，以4B为单位</li><li>SYN：表示这是一个连接请求或者连接接受的报文，只有握手1和握手2为1</li><li>FIN：为1表示此报文的发送方的数据已经发送完毕，要求释放连接，只有挥手1和挥手3为1</li><li>窗口（rwnd）：表示接收窗口的大小。即从本报文ack算起，接收方还能接收多少数据，以字节为单位</li><li>选项：在握手1和握手2中，选项中协商MSS（Max Segment Size，最大段长），表示TCP报文段最多携带多少数据（不算头部），通常不会太大，以免在IP层被分片</li></ul><h3 id="4-TCP连接管理"><a href="#4-TCP连接管理" class="headerlink" title="4.TCP连接管理"></a>4.TCP连接管理</h3>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件工程复习</title>
    <link href="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/"/>
    <url>/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="软件工程复习提纲"><a href="#软件工程复习提纲" class="headerlink" title="软件工程复习提纲"></a><center>软件工程复习提纲</center></h1><h2 id="Chapter-1-Why-Software-Engineering"><a href="#Chapter-1-Why-Software-Engineering" class="headerlink" title="Chapter 1 Why Software Engineering"></a>Chapter 1 Why Software Engineering</h2><h3 id="1-软件工程的的定义、目的、方法及作用"><a href="#1-软件工程的的定义、目的、方法及作用" class="headerlink" title="1.软件工程的的定义、目的、方法及作用"></a>1.软件工程的的定义、目的、方法及作用</h3><ul><li>定义：用系统科学的方法解决问题，采用工具、技术等用来解决现实问题的综合过程</li><li>目的：给出包含高质量软件的解决方案，并考虑有助于提高质量的特征</li><li>方法及作用<ul><li>分析：分析问题，检查软件失败或成功的例子</li><li>设计：给出解决方案</li><li>开发团队，描述在团队中的人员的角色和职责</li><li>开发：实现解决方案</li><li>项目管理：将系统分为小部分，逐步明确过程，控制进度，处理每个改变等等</li></ul></li></ul><h3 id="2-说明错误、缺陷、失败的含义与联系。（请举例说明）"><a href="#2-说明错误、缺陷、失败的含义与联系。（请举例说明）" class="headerlink" title="2.说明错误、缺陷、失败的含义与联系。（请举例说明）"></a>2.说明错误、缺陷、失败的含义与联系。（请举例说明）</h3><ul><li>错误：软件生产过程中人为的错误（误解需求、错误代码）</li><li>缺陷：函数实现中出现的问题（例如for循环中大于等于号忘记取等）</li><li>失败：在运行时，软件违背了它应该有的行为。（比如，使用者发现某个计算功能算不出结果，是动态的）</li></ul><h3 id="3-软件质量应从哪几个方面来衡量？论述之。"><a href="#3-软件质量应从哪几个方面来衡量？论述之。" class="headerlink" title="3.软件质量应从哪几个方面来衡量？论述之。"></a>3.软件质量应从哪几个方面来衡量？论述之。</h3><ul><li>Quality of the product（最终）产品的质量<ul><li>要从用户和开发者两方面去评判质量</li></ul></li><li>Quality of the process（软件开发及维护）过程的质量<ul><li>许多活动都影响最后的软件质量</li></ul></li><li>Business value（商业应用背景下的软件质量）商业质量<ul><li>商业应用背景下的软件质量</li></ul></li></ul><h3 id="4-现代软件工程大致包含的几个阶段及各个阶段文档。"><a href="#4-现代软件工程大致包含的几个阶段及各个阶段文档。" class="headerlink" title="4.现代软件工程大致包含的几个阶段及各个阶段文档。"></a>4.现代软件工程大致包含的几个阶段及各个阶段文档。</h3><ul><li>需求分析：软件需求规格说明书《SRS》 Software Requirement Specification</li><li>系统设计：系统结构图《SAD》software architecture diagrams</li><li>程序设计：模块功能算法与数据描述</li><li>程序实现：源码和注释</li><li>单元测试：单元测试报告</li><li>集成测试：集成测试报告文档</li><li>系统测试：系统测试报告文档</li><li>系统交付：用户手册</li><li>维护：维护记录文档</li></ul><h3 id="5-什么是软件过程？软件过程的重要性是什么？包含几个阶段？"><a href="#5-什么是软件过程？软件过程的重要性是什么？包含几个阶段？" class="headerlink" title="5.什么是软件过程？软件过程的重要性是什么？包含几个阶段？"></a>5.什么是软件过程？软件过程的重要性是什么？包含几个阶段？</h3><ul><li>软件开发活动中产生某种期望结果的一系列有序任务，涉及活动、约束和资源</li><li>过程有助于保持大量不同人员开发的产品和服务之间的一致性和质量</li><li>上一题的9个阶段</li></ul><h3 id="6-什么是重用、抽象等现代软件工程Wasserman所述的主要概念？"><a href="#6-什么是重用、抽象等现代软件工程Wasserman所述的主要概念？" class="headerlink" title="6.什么是重用、抽象等现代软件工程Wasserman所述的主要概念？"></a>6.什么是重用、抽象等现代软件工程Wasserman所述的主要概念？</h3><ul><li><strong>Abstraction（抽象）</strong>：基于某种层次归纳水平的问题描述。它使我们将注意力集中在问题的关键方面而非细节。</li><li><strong>Reuse（重用）</strong>：重复采用以前开发的软件系统中具有共性的部件, 用到新的开发项目中去</li><li><strong>Measurement（度量&#x2F;测度）</strong>：定量的方法-&gt;描述过程、资源、方法-&gt;提高质量<ul><li>quantitative way(approach)—&gt;describe process,resource,methods—&gt;improving quality</li></ul></li></ul><h2 id="Chapter-2-Modeling-the-Process-and-life-cycle"><a href="#Chapter-2-Modeling-the-Process-and-life-cycle" class="headerlink" title="Chapter 2 Modeling the Process and life cycle"></a>Chapter 2 Modeling the Process and life cycle</h2><h3 id="1-什么是软件过程？软件过程的重要性是什么？软件生命周期"><a href="#1-什么是软件过程？软件过程的重要性是什么？软件生命周期" class="headerlink" title="1.什么是软件过程？软件过程的重要性是什么？软件生命周期"></a>1.什么是软件过程？软件过程的重要性是什么？软件生命周期</h3><ul><li>软件开发活动中产生某种期望结果的一系列有序任务，涉及活动、约束和资源</li><li>过程有助于保持大量不同人员开发的产品和服务之间的一致性和质量</li><li>软件开发过程有时被称为软件生命周期，因为它描述了软件产品从构思到实施、交付、使用和维护的生命周期</li></ul><h3 id="2-瀑布模型及各阶段文档，优缺点"><a href="#2-瀑布模型及各阶段文档，优缺点" class="headerlink" title="2.瀑布模型及各阶段文档，优缺点"></a>2.瀑布模型及各阶段文档，优缺点</h3><ul><li>瀑布模型及各阶段文档：<ul><li>需求分析：软件需求规格说明书《SRS》 Software Requirement Specification</li><li>系统设计：系统结构图《SAD》software architecture diagrams</li><li>程序设计：模块功能算法与数据描述</li><li>程序实现：源码和注释</li><li>单元测试：单元测试报告</li><li>集成测试：集成测试报告文档</li><li>系统测试：系统测试报告文档</li><li>系统交付：用户手册</li><li>维护：维护记录文档</li></ul></li><li>可强迫开发人员用规范的方法。严格地规定了每个阶段必须提交的文档。要求每个阶段交出的产品都必须经过质量保证小组的仔细验证</li><li>面临软件变动时, 该模型无法处理实际过程中的重复开发问题</li></ul><h3 id="3-论述分阶段开发模型的含义-其基本分类及特点是什么"><a href="#3-论述分阶段开发模型的含义-其基本分类及特点是什么" class="headerlink" title="3.论述分阶段开发模型的含义, 其基本分类及特点是什么"></a>3.论述分阶段开发模型的含义, 其基本分类及特点是什么</h3><ul><li>系统被设计成部分提交, 每次用户只能得到部分功能, 而其他部分处于开发过程中</li><li>incremental development (增量式开发)<ul><li>系统需求按照功能分成若干子系统，开始建造的版本是规模小的、部分功能的系统，后续版本添加包含新功能的子系统，最后版本是包含全部功能的子系统集</li></ul></li><li>iterative development (迭代式开发)<ul><li>系统开始就提供了整体功能框架，后续版本陆续增强各个子系统，最后版本使各个子系统的功能达到最强性能</li></ul></li></ul><h3 id="4-螺旋模型四个象限的任务及四重循环的含义"><a href="#4-螺旋模型四个象限的任务及四重循环的含义" class="headerlink" title="4.螺旋模型四个象限的任务及四重循环的含义"></a>4.螺旋模型四个象限的任务及四重循环的含义</h3><ul><li>plan(计划),  goals&#x2F;alternatives(目标&#x2F;可选方案),  risk evaluating(风险评估), develop and test(开发和测试)</li><li>第一次循环得到操作概念，第二次循环得到软件需求，第三次循环中系统开发产生设计，第四次循环能够进行测试</li></ul><h3 id="5-什么是敏捷方法？以及其代表性方法"><a href="#5-什么是敏捷方法？以及其代表性方法" class="headerlink" title="5.什么是敏捷方法？以及其代表性方法"></a>5.什么是敏捷方法？以及其代表性方法</h3><ul><li>不要求遵循传统的软件开发流程，强调快速开发和有效适应需求变化，典型代表如极限编程、测试驱动开发等。</li></ul><h3 id="6-什么是UP，-RUP，迭代等市场流行的过程模型"><a href="#6-什么是UP，-RUP，迭代等市场流行的过程模型" class="headerlink" title="6.什么是UP， RUP，迭代等市场流行的过程模型"></a>6.什么是UP， RUP，迭代等市场流行的过程模型</h3><ul><li>UP（统一过程）：它是用例驱动的、以基本架构为中心的、迭代式和增量性的软件开发过程框架</li><li>RUP（进化式UP）：是IBM等机构提供支持和包装的UP系统</li><li>进化式迭代：迭代开发是统一开发过程(RUP)的关键实践开发被组织成一系列固定的短期小项目每次迭代都产生经过测试、集成并可执行的局部系统每次迭代都具有各自的需求分析、设计、实现和测试随着时间和一次次迭代，系统增量式完善</li></ul><h2 id="Chapter-3-Planning-and-Managing-the-project"><a href="#Chapter-3-Planning-and-Managing-the-project" class="headerlink" title="Chapter 3 Planning and Managing the project"></a>Chapter 3 Planning and Managing the project</h2><h3 id="1-什么是项目进度？活动？里程碑？项目成本？"><a href="#1-什么是项目进度？活动？里程碑？项目成本？" class="headerlink" title="1.什么是项目进度？活动？里程碑？项目成本？"></a>1.什么是项目进度？活动？里程碑？项目成本？</h3><ul><li>项目进度：对特定项目的软件开发周期的刻画。包括对项目阶段、步骤、活动的分解，对各个离散活动的交互关系的描述，以及对各个活动完成时间及整个项目完成时间的初步估算。</li><li>活动：项目的一部分, 一般占用项目进度计划中的一段时间</li><li>里程碑：指特定的时间点, 标志着活动的结束, 通常伴随着提交物</li><li>项目成本：为支持软件开发而购买软件和工具的开支,用于支持需求分析,设计,编码,测试,处理需求变更等等,另外加上工作量开支</li></ul><h3 id="2-如何计算软件项目活动图的关键路径？（习题2，3）冗余时间？最早和最迟开始时间"><a href="#2-如何计算软件项目活动图的关键路径？（习题2，3）冗余时间？最早和最迟开始时间" class="headerlink" title="2.如何计算软件项目活动图的关键路径？（习题2，3）冗余时间？最早和最迟开始时间"></a>2.如何计算软件项目活动图的关键路径？（习题2，3）冗余时间？最早和最迟开始时间</h3><h3 id="3-软件项目团队组织的基本结构？"><a href="#3-软件项目团队组织的基本结构？" class="headerlink" title="3.软件项目团队组织的基本结构？"></a>3.软件项目团队组织的基本结构？</h3><ul><li>主程序员组<ul><li>由一个主程序员主导系统的设计和开发。</li></ul></li><li>忘我方法<ul><li>每个成员平等的承担责任，批评和表扬只针对产品，不针对个人。</li></ul></li></ul><h3 id="4-试述COCOMO模型的三个阶段基本工作原理或含义。"><a href="#4-试述COCOMO模型的三个阶段基本工作原理或含义。" class="headerlink" title="4.试述COCOMO模型的三个阶段基本工作原理或含义。"></a>4.试述COCOMO模型的三个阶段基本工作原理或含义。</h3><ul><li>阶段一，计划阶段<ul><li>项目通过构建原型来解决用户界面、软件、交互、性能、技术成熟度等方面的高风险问题 在这一步，使用应用点AP来进行规模测量，比如估算屏幕数、报表数、组件数等</li></ul></li><li>阶段二，早期设计阶段<ul><li>设计者要考察集中可选的体系结构和操作的概念 在这一步，使用需求文档中的功能点FP来进行规模测量</li></ul></li><li>阶段三，后体系结构阶段<ul><li>开发已经开始，软件已经被部分构造出来 在这一步，使用功能点FP和代码量作为衡量标准</li></ul></li></ul><h3 id="5-什么是软件风险？"><a href="#5-什么是软件风险？" class="headerlink" title="5.什么是软件风险？"></a>5.什么是软件风险？</h3><ul><li>在软件生产过程中不希望看到的、有负面结果的事件</li></ul><h3 id="6-弄懂活动图基本原理（参考课本），找出课后练习题–图3-23和3-24的关键路径。"><a href="#6-弄懂活动图基本原理（参考课本），找出课后练习题–图3-23和3-24的关键路径。" class="headerlink" title="6.弄懂活动图基本原理（参考课本），找出课后练习题–图3.23和3.24的关键路径。"></a>6.弄懂活动图基本原理（参考课本），找出课后练习题–图3.23和3.24的关键路径。</h3><h2 id="Chapter-4-Capturing-the-Requirement"><a href="#Chapter-4-Capturing-the-Requirement" class="headerlink" title="Chapter 4  Capturing the Requirement"></a>Chapter 4  Capturing the Requirement</h2><h3 id="1-需求的含义是什么"><a href="#1-需求的含义是什么" class="headerlink" title="1.需求的含义是什么?"></a>1.需求的含义是什么?</h3><ul><li>是对来自用户的关于软件系统的期望行为的综合描述, 涉及系统的对象、状态、约束，功能等</li></ul><h3 id="2-需求阶段作为一个工程，其确定需求的过程是什么？"><a href="#2-需求阶段作为一个工程，其确定需求的过程是什么？" class="headerlink" title="2.需求阶段作为一个工程，其确定需求的过程是什么？"></a>2.需求阶段作为一个工程，其确定需求的过程是什么？</h3><ul><li>原始需求获取：收集用户需求</li><li>问题分析：理解和建模期望的行为</li><li>规格说明草稿：文档化要开发的软件系统的行为</li><li>需求核准：检查我们的规格说明是否与用户的需求匹配</li><li>正式需求文档：SRS软件需求规格说明书</li></ul><h3 id="3-举例说明获取需求时，若有冲突发生时，如何考虑根据优先级进行需求分类。"><a href="#3-举例说明获取需求时，若有冲突发生时，如何考虑根据优先级进行需求分类。" class="headerlink" title="3.举例说明获取需求时，若有冲突发生时，如何考虑根据优先级进行需求分类。"></a>3.举例说明获取需求时，若有冲突发生时，如何考虑根据优先级进行需求分类。</h3><ul><li>绝对要满足的需求（必须的）</li><li>非常值得要但并非必须的需求（值得要的）</li><li>可要可不要的需求（可选的）</li><li>之所以有上述分类的原因：有的软件开发项目受到了技术、开发时间、合作路径、认知差别（画像为证）和资源等诸多因素的限制，有的需要二次资金投入等</li><li>信用卡记账系统必须能够列出最近的费用，将他们加起来并要求在某个日期前支付，这是必须的需求。但是，该记账系统也可能按照购买类型区分费用，以帮助消费者理解购买的模式，这是值得要的需求。最后，记账系统可能要求用黑色来打印贷方账目，用红颜色打印借方账目，这用需求是有用的，但它是可选的需求。</li></ul><h3 id="4-需求文档分为哪两类？"><a href="#4-需求文档分为哪两类？" class="headerlink" title="4.需求文档分为哪两类？"></a>4.需求文档分为哪两类？</h3><ul><li>需求定义：是客户想要的每一件事情的完整列表</li><li>需求规格说明：将需求重新陈述为关于要构建的系统将如何运转的规格说明</li></ul><h3 id="5-什么是功能性需求和非功能性需求-质量需求？"><a href="#5-什么是功能性需求和非功能性需求-质量需求？" class="headerlink" title="5.什么是功能性需求和非功能性需求&#x2F;质量需求？"></a>5.什么是功能性需求和非功能性需求&#x2F;质量需求？</h3><ul><li>描述系统内部功能或系统与外部环境的交互作用,涉及系统输入应对,实体状态变化,输出结果,设计约束与过程约束等</li><li>描述软件方案必须具备的某些质量特征</li></ul><h3 id="6-了解DFD图的构成及画法。"><a href="#6-了解DFD图的构成及画法。" class="headerlink" title="6.了解DFD图的构成及画法。"></a>6.了解DFD图的构成及画法。</h3><ul><li>Data Flow Diagrams（DFD数据流图）<br><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/DFD%E7%BB%84%E7%BB%87.png" alt="DFD组织"><br><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E6%95%B0%E6%8D%AE%E6%B5%81%E5%9B%BE.png" alt="数据流图"></li></ul><h2 id="Chapter-5-Designing-the-system"><a href="#Chapter-5-Designing-the-system" class="headerlink" title="Chapter 5 Designing the system"></a>Chapter 5 Designing the system</h2><h3 id="1-什么是软件体系结构？设计模式？设计公约？设计？"><a href="#1-什么是软件体系结构？设计模式？设计公约？设计？" class="headerlink" title="1.什么是软件体系结构？设计模式？设计公约？设计？"></a>1.什么是软件体系结构？设计模式？设计公约？设计？</h3><ul><li>软件体系结构：一种软件解决方案，用于解释如何将系统分解为单元，以及单元如何相互关联，还包括这些单元的所有外部特性。</li><li>设计模式：一种针对单个软件模块或少量模块而给出的一般性解决方案，它提供较低层次的设计决策。</li><li>设计公约：一系列设计决策和建议的集合，用于提高系统某方面的设计质量。</li><li>设计：将需求中的问题描述转变成软件解决方案的创造性过程</li></ul><h3 id="2-软件设计过程模型的几个阶段？"><a href="#2-软件设计过程模型的几个阶段？" class="headerlink" title="2.软件设计过程模型的几个阶段？"></a>2.软件设计过程模型的几个阶段？</h3><ul><li>初始建模（Modeling）: 尝试可能的分解：根据需求描述的系统的关键特性等确定软件体系结构风格，进行系统级别的决策。<ul><li>(比如：MVC模式就不适合路由选择服务程序的设计，因为事件触发引起的服务程序指向很明确，没有太多的逻辑处理。其对于时间驱动的周期性任务也不适合。)</li></ul></li><li>分析（Analysis）: 关注软件系统的功能及质量属性（性能、安全性、可靠性等）、各种约束等等。(关注系统级别决策)</li><li>文档化（Documentation）: 确定各个不同的模型视图</li><li>复审（Review）: 检查文档是否满足所有功能及质量需求</li><li>final output：Software Architecture Document(正式的 &lt;SAD&gt; ：软件体系结构文档)</li></ul><h3 id="3-论述设计用户界面应考虑的问题"><a href="#3-论述设计用户界面应考虑的问题" class="headerlink" title="3.论述设计用户界面应考虑的问题"></a>3.论述设计用户界面应考虑的问题</h3><ul><li>关键要素：寓意&#x2F;比喻、思维模型、如何在数据、功能、活动和角色中移动及切换、外观、感觉</li><li>文化差异：信仰，价值观，道德规范，传统，风俗，传说</li><li>用户爱好</li></ul><h3 id="4-耦合与内聚的概念及各个层次划分"><a href="#4-耦合与内聚的概念及各个层次划分" class="headerlink" title="4.耦合与内聚的概念及各个层次划分"></a>4.耦合与内聚的概念及各个层次划分</h3><ul><li>耦合：两个软件部件之间的相互关联程度<ul><li>高度耦合 松散耦合 非耦合</li></ul></li><li>内聚：软件部件内部各组成成分的关联程度</li></ul><h3 id="5-举例说明耦合与内聚的基本分类。以及各个分类的含义与特征"><a href="#5-举例说明耦合与内聚的基本分类。以及各个分类的含义与特征" class="headerlink" title="5.举例说明耦合与内聚的基本分类。以及各个分类的含义与特征"></a>5.举例说明耦合与内聚的基本分类。以及各个分类的含义与特征</h3><ul><li>非直接耦合（uncoupled） ：模块相互之间没有信息传递<ul><li>数据耦合（data coupling） ：模块间传递的是数据</li><li>特征耦合（stamp coupling）：模块间传递的是数据结构</li><li>控制耦合（control coupling）：模块间传递的是控制量</li><li>公共耦合（common coupling）：不同模块访问公共数据</li><li>内容耦合（content coupling）：一个模块直接修改另一个模块(A模块直接调用B模块的私有数据, 或直接转移到B模块中去)</li></ul></li><li>偶然性内聚（coincidental）：不相关的功能, 过程,数据等出现在同一个部件中.<br>  - 例如，如果有几个模块都需要执行“读A”、“写Ｂ”等相同的一组操作，为了避免重复书写，可以把这些操作汇成一个模块，供有关的模块调用 （例如：某些数据准备模块等等。）<ul><li>逻辑性内聚（logical）：逻辑上相关或相似的功能或数据放置在同一个部件内<ul><li>例如一个用于计算全班学生平均分和最高分的模块，无论计算哪种分数，都要经过读入全班学生分数，进行计算，输出计算结果等步骤。实际上除中间的一步须按不同的方法计算外，前、后这两步都是相同的。把这两种在逻辑上相似的功能放在一个模块中，就可省去程序中的重复部分</li></ul></li><li>时间性内聚（temporal）：部件各部分要求在同一时间完成<ul><li>例如:一个初始化模块可能包含“为变量赋初值”、“打开某个文件”等为正式处理作准备的功能。又例如：打包一帧数据，内容来自不同数据集。由于要求它们在同一时间内执行，故称为时间性内聚。</li></ul></li><li>过程性内聚（procedural）：各部分有特定次序</li><li>通讯性内聚（communicational）：各个部分访问共享数据（或私有共享、远程共享、云共享等等）</li><li>顺序性内聚（sequential）：各部分有输入输出关系</li><li>功能性内聚（functional）：各部分组成单一功能</li></ul></li></ul><h3 id="6-软件过程中复审的概念，设计复审的重要性"><a href="#6-软件过程中复审的概念，设计复审的重要性" class="headerlink" title="6.软件过程中复审的概念，设计复审的重要性"></a>6.软件过程中复审的概念，设计复审的重要性</h3><ul><li>复审：检查文档是否满足所有功能及质量需求<ul><li>可以和用户一起检查软件的概要设计。</li><li>可以向开发者呈现并明确软件的技术设计。</li><li>程序员通过复审可以在下一阶段的工程实施前得到本阶段工作的反馈。</li></ul></li></ul><h2 id="Chapter-6-Considering-Object"><a href="#Chapter-6-Considering-Object" class="headerlink" title="Chapter 6 Considering Object"></a>Chapter 6 Considering Object</h2><h3 id="1-什么是设计模式？"><a href="#1-什么是设计模式？" class="headerlink" title="1.什么是设计模式？"></a>1.什么是设计模式？</h3><ul><li>一种针对单个软件模块或少量模块而给出的一般性解决方案，它提供较低层次的设计决策。</li></ul><h3 id="2-了解OO设计的基本原则？"><a href="#2-了解OO设计的基本原则？" class="headerlink" title="2.了解OO设计的基本原则？"></a>2.了解OO设计的基本原则？</h3><ul><li>单一职责原则：一个类只负责一个功能领域中的相应职责</li><li>重用原则</li><li>开闭原则</li><li>替换原则</li><li>依赖倒置原则</li><li>接口隔离原则</li><li>迪米特原则：一个软件实体应当尽可能少地与其他实体发生相互作用。</li></ul><h3 id="3-了解OO开发有何优势？"><a href="#3-了解OO开发有何优势？" class="headerlink" title="3.了解OO开发有何优势？"></a>3.了解OO开发有何优势？</h3><ul><li>语言的一致性：采用相同的语义结构（类、对象、接口、属性、行为）描述问题和解决方案</li><li>过程的一致性：需求分析和定义、高层设计、底层设计、编码、测试等各个过程全都采用相同的语义结构</li></ul><h3 id="4-OO开发过程有几个步骤？"><a href="#4-OO开发过程有几个步骤？" class="headerlink" title="4.OO开发过程有几个步骤？"></a>4.OO开发过程有几个步骤？</h3><ul><li>面向对象需求</li><li>面向对象高层设计</li><li>面向对象低层设计</li><li>面向对象编程</li><li>面向对象测试</li></ul><h3 id="5-掌握用例图的组成和画法，用例的几个要素的含义。"><a href="#5-掌握用例图的组成和画法，用例的几个要素的含义。" class="headerlink" title="5.掌握用例图的组成和画法，用例的几个要素的含义。"></a>5.掌握用例图的组成和画法，用例的几个要素的含义。</h3><p><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E7%94%A8%E4%BE%8B%E5%9B%BE%E7%9A%84%E7%BB%84%E6%88%90.png" alt="用例图的组成"></p><h3 id="6-掌握※用例图的实例解析方法，如何辨识和确定一个用例？"><a href="#6-掌握※用例图的实例解析方法，如何辨识和确定一个用例？" class="headerlink" title="6.掌握※用例图的实例解析方法，如何辨识和确定一个用例？"></a>6.掌握※用例图的实例解析方法，如何辨识和确定一个用例？</h3><h3 id="7-用例模型相关建模步骤是什么？"><a href="#7-用例模型相关建模步骤是什么？" class="headerlink" title="7.用例模型相关建模步骤是什么？"></a>7.用例模型相关建模步骤是什么？</h3><ul><li>确定系统边界</li><li>识别并描述参与者，确定角色。我们要找到：谁使用系统？谁从系统获取信息？谁为系统提供信息？<ul><li>参与者：又称执行者。是在系统之外，透过系统边界与系统进行有意义交互的任何事物。</li></ul></li><li>识别用例，给出简要描述。我们可以问自己：参与者用该系统做什么？参与者如何操作系统中的数据？<ul><li>在UML中，用例被定义成系统执行的一个动作（功能单元）。只显示系统外部的功能表现，不考虑系统内部的实现过程。</li><li>参与者和用例分别描述了 <strong>“谁来做？”和“做什么？”</strong> 这两个问题</li></ul></li><li>识别参与者与用例间的关联</li><li>给出每一个用例的详细描述</li><li>细化用例模型</li></ul><h3 id="8-用例图、类图等针对面向对象的项目开发的意义是什么？"><a href="#8-用例图、类图等针对面向对象的项目开发的意义是什么？" class="headerlink" title="8.用例图、类图等针对面向对象的项目开发的意义是什么？"></a>8.用例图、类图等针对面向对象的项目开发的意义是什么？</h3><ul><li>用例图<ul><li>用例图描绘了系统完整功能的<strong>图景</strong></li><li>它们对于与客户、设计师和测试人员沟通特别<strong>有用</strong></li><li>它是系统分析过程中更正式的建模的<strong>基础</strong></li></ul></li><li>类图</li></ul><h3 id="9-熟悉类图中各个类之间的基本关系分类及其含义。"><a href="#9-熟悉类图中各个类之间的基本关系分类及其含义。" class="headerlink" title="9.熟悉类图中各个类之间的基本关系分类及其含义。"></a>9.熟悉类图中各个类之间的基本关系分类及其含义。</h3><p><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E7%B1%BB%E5%9B%BE%E7%9A%84%E7%BB%93%E6%9E%84.png" alt="类图的结构"><br><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E7%B1%BB%E5%9B%BE%E4%B8%AD%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="类图中的关系"></p><h3 id="10-绘制类图最常用的方法及步骤是什么？识别一个类的基本思路？"><a href="#10-绘制类图最常用的方法及步骤是什么？识别一个类的基本思路？" class="headerlink" title="10.绘制类图最常用的方法及步骤是什么？识别一个类的基本思路？"></a>10.绘制类图最常用的方法及步骤是什么？识别一个类的基本思路？</h3><ul><li>step1：确定类和属性<ul><li>从需求中寻找对象</li><li>可以先定义一个系统中应该有的部分，然后去需求中出现的名词中找到符合的</li></ul></li><li>step2：确定行为<ul><li>去需求里找动词</li><li>思考确定的类应该有什么行为</li></ul></li><li>step3：绘制</li></ul><h3 id="11-熟悉用例图、类图、状态图的组成和画法。"><a href="#11-熟悉用例图、类图、状态图的组成和画法。" class="headerlink" title="11.熟悉用例图、类图、状态图的组成和画法。"></a>11.熟悉用例图、类图、状态图的组成和画法。</h3><ul><li>状态图：<ul><li>描述活动和过程流</li><li>画法：<img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E6%B4%BB%E5%8A%A8%E5%9B%BE%E7%94%BB%E6%B3%95.png" alt="活动图画法"></li><li>示例：<img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E6%B4%BB%E5%8A%A8%E5%9B%BE%E7%A4%BA%E4%BE%8B.png" alt="活动图示例"></li></ul></li></ul><h3 id="12-掌握顺序图的含义及画法。"><a href="#12-掌握顺序图的含义及画法。" class="headerlink" title="12.掌握顺序图的含义及画法。"></a>12.掌握顺序图的含义及画法。</h3><p><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E9%A1%BA%E5%BA%8F%E5%9B%BE%E7%A4%BA%E4%BE%8B.png" alt="顺序图示例"></p><ul><li>对象：顺序图中对象的符号和对象图中对象所用的符号一样。将对象置于顺序图的顶部意味着在交互开始的时候对象就已经存在了，如果对象的位置不在顶部，那么表示对象是在交互的过程中被创建的。</li><li>生命线：生命线是一条垂直的虚线，表示顺序图中的对象在一段时间内的存在。每个对象的底部中心的位置都带有生命线。生命线是一个时间线，所用的时间取决于交互持续的时间。</li><li>控制焦点：在对象的生命线上，包含一个矩形，表示对象处于激活状态，处于激活状态的对象正在执行某个任务。对象在完成自己的工作后，被去激活，对象就处于空闲状态。</li></ul><h3 id="13-了解UML其他图示结构的基本用途。"><a href="#13-了解UML其他图示结构的基本用途。" class="headerlink" title="13.了解UML其他图示结构的基本用途。"></a>13.了解UML其他图示结构的基本用途。</h3><h2 id="Chapter-7-Writing-the-Programs"><a href="#Chapter-7-Writing-the-Programs" class="headerlink" title="Chapter 7 Writing the Programs"></a>Chapter 7 Writing the Programs</h2><h3 id="1-一般性的编程原则应该从哪三个方面考虑？"><a href="#1-一般性的编程原则应该从哪三个方面考虑？" class="headerlink" title="1.一般性的编程原则应该从哪三个方面考虑？"></a>1.一般性的编程原则应该从哪三个方面考虑？</h3><ul><li>控制结构：要让程序设计反映出在体系结构和设计中的各种控制结构</li><li>算法：程序设计通常会制定一类算法，用于编写组件。不过在实现算法的编码过程中，自由度还是很大的。但是实现一个高性能的算法还可能引起隐性代价，比如难读</li><li>数据结构：编写程序时，应该安排数据的格式并进行存储，让数据结构决定项目结构，并尽可能以此简化程序</li></ul><h3 id="2-在编写程序内部文档时，除了HCB外，还应添加什么注释信息？注意什么？"><a href="#2-在编写程序内部文档时，除了HCB外，还应添加什么注释信息？注意什么？" class="headerlink" title="2.在编写程序内部文档时，除了HCB外，还应添加什么注释信息？注意什么？"></a>2.在编写程序内部文档时，除了HCB外，还应添加什么注释信息？注意什么？</h3><ul><li>HCB：头部注释板块，是总览性的信息，用于标识程序、描述数据结构、算法、控制结构</li><li>其他程序注释<ul><li>版本注释：随着时间进行修改的记录</li><li>解释性注释：本段源代码是在做什么的注释</li><li>分解性注释：通过注释将代码分解成多个段</li></ul></li><li>编写内部文档还要注意什么？<ul><li>分段注释</li><li>修改代码的同时也要修改注释</li><li>写代码同时就写注释，不延后</li><li>注释要带来新的信息，通过变量名或者简单阅读代码就可以获得的信息是不用加入注释的</li><li>使用有意义的变量名和标签</li><li>使用统一易读的编码格式</li><li>注释应当描述数据结构和它的用法，这一点在强调封装性的OO中尤为重要</li></ul></li></ul><h3 id="3-敏捷方法的大致思想？什么是极限编程-XP-以及派对编程？"><a href="#3-敏捷方法的大致思想？什么是极限编程-XP-以及派对编程？" class="headerlink" title="3.敏捷方法的大致思想？什么是极限编程(XP)? 以及派对编程？"></a>3.敏捷方法的大致思想？什么是极限编程(XP)? 以及派对编程？</h3><ul><li>人与人之间的交互复杂、难以预期，但是这是开发中最重要的方面。 敏捷开发强调人与人的交流，并且以“尽可能早地、持续地交付有价值的软件”为最高目标，而不是把时间精力都花在文档、谈判、计划上，随机应变，唯快不破。</li><li>极限编程（XP）是一种轻量级的软件开发方法论，属于敏捷开发方法。其主要特征是要适应环境变化和需求变化，充分发挥开发人员的主动精神</li><li>派对编程属于主要的敏捷开发方法，其开发方式是两个程序员共同开发程序，且角色分工明确。一个负责编写程序，另一个负责复审与测试。两人定期交换角色。</li></ul><h2 id="Chapter-8-Testing-the-Programs"><a href="#Chapter-8-Testing-the-Programs" class="headerlink" title="Chapter 8 Testing the Programs"></a>Chapter 8 Testing the Programs</h2><h3 id="1-了解产生软件缺陷的原因？"><a href="#1-了解产生软件缺陷的原因？" class="headerlink" title="1.了解产生软件缺陷的原因？"></a>1.了解产生软件缺陷的原因？</h3><ul><li>the software itself (处理大量的系统状态, 处理复杂的公式、活动、数据及算法、网络通讯误差等)</li><li>causes from customer and designer(uncertain、missing、impossible requirement, faults in design，etc.)</li><li>other factor (项目的场景及规模因素, 众多参与者等)</li></ul><h3 id="2-有几种主要的缺陷类型？"><a href="#2-有几种主要的缺陷类型？" class="headerlink" title="2.有几种主要的缺陷类型？"></a>2.有几种主要的缺陷类型？</h3><ul><li>算法缺陷<ul><li>算法的某些处理步骤或逻辑有问题，以至于软件部件对给定的输入数据无法产生正确的输出</li></ul></li><li>计算和精度缺陷<ul><li>算法或公式在编程实现时出现错误或最终结果达不到精度要求</li><li>不同精度变量的混合运算, 浮点数据的不当使用，意料之外的数据截断，实现时操作次序不当，数据的对象化包装不当等等，都会导致精度的下降或失真。</li></ul></li><li>文档缺陷<ul><li>文档描述与程序动作不相符</li></ul></li><li>过载缺陷<ul><li>程序运行时，数据填充量会超过数据结构的规定容量引起的缺陷</li></ul></li><li>能力缺陷 &#x2F; 容量缺陷<ul><li>系统活动量达到系统极限时，系统性能变的不可接受，称为能力缺陷（例如用户数量接近上限）</li></ul></li><li>性能缺陷<ul><li>系统在常规状态下就不能以需求规定的速度执行（例如：响应时间）</li></ul></li><li>时序性缺陷<ul><li>几个同时或有严格执行顺序的进程协调出现问题</li></ul></li><li>恢复性缺陷<ul><li>系统失效时，程序无法再恢复也是一种缺陷</li></ul></li><li>硬件和系统软件缺陷<ul><li>作为底层支持的硬件和系统软件没有按照文档中的操作条件和步骤运作时，也可能引起我们软件的问题，这就是硬件和系统软件缺陷</li></ul></li><li>代码的标准和规程缺陷<ul><li>代码没有遵守组织机构的标准和过程。这个缺陷最大的影响在于：不按照标准的代码可能在测试和修改时让人不好理解，引起问题</li></ul></li></ul><h3 id="3-测试的各个阶段及其任务？涉及的文档？（图8-3）"><a href="#3-测试的各个阶段及其任务？涉及的文档？（图8-3）" class="headerlink" title="3.测试的各个阶段及其任务？涉及的文档？（图8.3）"></a>3.测试的各个阶段及其任务？涉及的文档？（图8.3）</h3><ul><li>单元测试 验证组件的功能<ul><li>依据文档：程序代码与配套文档</li></ul></li><li>集成测试 验证系统组件是否能正确的协同工作<ul><li>依据文档：系统体系结构文档SAD、程序设计规格说明</li></ul></li><li>功能测试 验证系统是否能执行需求规格说明中描述的功能<ul><li>依据文档：软件需求规格说明书SRS</li></ul></li><li>性能测试 验证系统的软硬件表现和性能是否符合需求规格说明文档 这一步之后，软件系统应当能在客户的实际工作环境中成功执行，这时我们说产生了一个被确认的系统<ul><li>依据文档：软件需求规格说明书SRS</li></ul></li><li>验收测试 验证系统是否满足了客户的需求定义（需求定义和需求规格说明是有区别的）<ul><li>依据文档：客户需求定义</li></ul></li><li>安装测试 验证系统能否在用户使用的真实环境中安装并正常运行<ul><li>依据文档：用户环境的说明</li></ul></li><li>系统测试 &#x3D; 功能测试+性能测试+验收测试+安装测试</li></ul><h3 id="4-掌握测试的方法—-黑盒、白盒的概念？"><a href="#4-掌握测试的方法—-黑盒、白盒的概念？" class="headerlink" title="4.掌握测试的方法—-黑盒、白盒的概念？"></a>4.掌握测试的方法—-黑盒、白盒的概念？</h3><ul><li>黑盒测试：<ul><li>测试人员在完全不了解程序内部的逻辑结构和内部特性的情况下，只依据程序的需求规格及设计说明，检查程序的功能是否符合它的功能说明。</li><li>优点：不受测试对象内部结构和逻辑的约束，只采用有代表性的测试用例完成测试</li><li>缺点：并不总是能够以这种方式运行完整的测试用例</li></ul></li><li>白盒测试：<ul><li>以测试对象的内部结构为基本依据，手工或自动的展开各种测试</li><li>优点：模块的详细测试</li><li>缺点：可能不切实际</li></ul></li></ul><h3 id="5-什么是单元测试？-什么是走查和检查？"><a href="#5-什么是单元测试？-什么是走查和检查？" class="headerlink" title="5.什么是单元测试？ 什么是走查和检查？"></a>5.什么是单元测试？ 什么是走查和检查？</h3><ul><li>将每个程序构件与系统中其他构件隔离，对其单独进行测试</li><li>走查：程序员向评审小组提交代码和相关文档，评审小组非正式地进行讨论，注意力集中在代码上。发现缺陷，不必修改（非正式的代码复审的类型）</li><li>检查：复审团队根据一系列事先准备好的关注点列表核对代码和文档</li></ul><h3 id="6-黑盒、白盒方法各自的分类？测试用例的设计方法和给出方法。"><a href="#6-黑盒、白盒方法各自的分类？测试用例的设计方法和给出方法。" class="headerlink" title="6.黑盒、白盒方法各自的分类？测试用例的设计方法和给出方法。"></a>6.黑盒、白盒方法各自的分类？测试用例的设计方法和给出方法。</h3><ul><li>黑盒测试：</li><li>等价分类法<ul><li>将输入域划分为若干等价类，并且从每个等价类里选择有代表性的少量用例代表其余所有情况。其根本逻辑在于：如果这些代表性用例没有出现问题，那么其他的一般也没有问题</li></ul></li><li>边界值分析法<ul><li>在等价分类法中，代表一个类的测试数据可以在这个类的允许范围内任意选择。但如果把测试值选在等价类的边界上，往住有更好的效果，这就是边界值分析法的主要思想。</li></ul></li><li>错误猜测法<ul><li>猜测程序中哪些地方容易出错，并据此设计测试用例。更多的依赖于测试人员的直觉和经验。</li></ul></li><li>因果图法<ul><li>适用于被测试程序有很多输入条件，程序的输出又依赖输入条件的各种组合的情况。</li></ul></li><li>白盒测试</li><li>逻辑覆盖法：<ul><li>语句覆盖<ul><li>给出的测试用例能使模块中的每一条语句至少执行一遍</li></ul></li><li>分支覆盖<ul><li>每一分支至少执行一次</li></ul></li><li>条件覆盖<ul><li>要求判定中的每个条件均按照“真”、“假”两种结果至少执行一次。</li></ul></li><li>条件组合覆盖<ul><li>要求所有条件结果的组合都至少出现一次(比如 A&amp;&amp;B，两个条件，那么就有四种条件的组合)。</li></ul></li></ul></li><li>路径测试法：借助程序图设计测试用例<br>  <img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E8%B7%AF%E5%BE%84%E6%B5%8B%E8%AF%95%E6%B3%95.png" alt="路径测试法"><ul><li>结点覆盖：经过所有结点</li><li>边覆盖：覆盖所有边</li><li>完全覆盖：边+点覆盖，这是测试简单程序的最低标准</li><li>路径覆盖：程序图中每条路径都至少经过一次</li></ul></li><li>测试用例的设计方法和给出方法<ul><li>黑盒：根据SRS和其他文档</li><li>白盒：根据模块的内部逻辑</li></ul></li></ul><h3 id="7-黑盒、白盒方法的分类原则，各种覆盖方法等。（课件等）"><a href="#7-黑盒、白盒方法的分类原则，各种覆盖方法等。（课件等）" class="headerlink" title="7.黑盒、白盒方法的分类原则，各种覆盖方法等。（课件等）"></a>7.黑盒、白盒方法的分类原则，各种覆盖方法等。（课件等）</h3><ul><li>如上</li></ul><h3 id="8-如何面对一个命题，设计和给出测试用例的问题。（课件）"><a href="#8-如何面对一个命题，设计和给出测试用例的问题。（课件）" class="headerlink" title="8.如何面对一个命题，设计和给出测试用例的问题。（课件）"></a>8.如何面对一个命题，设计和给出测试用例的问题。（课件）</h3><h3 id="9-——课堂练习的测试题目和讲解内容"><a href="#9-——课堂练习的测试题目和讲解内容" class="headerlink" title="9.——课堂练习的测试题目和讲解内容"></a>9.——课堂练习的测试题目和讲解内容</h3><ul><li>课堂练习:输入三角形三边长，输出是否能构成三角形，构成什么三角形<br><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E8%AF%BE%E5%A0%82%E7%BB%83%E4%B9%A01.png" alt="课堂练习1"><br><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E8%AF%BE%E5%A0%82%E7%BB%83%E4%B9%A01.2.png" alt="课堂练习1.2"></li><li>课堂练习2<br><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E8%AF%BE%E5%A0%82%E7%BB%83%E4%B9%A02.png" alt="课堂练习2"></li></ul><h3 id="10-集成测试及其主要方法的分类？（驱动模块、桩模块的概念）"><a href="#10-集成测试及其主要方法的分类？（驱动模块、桩模块的概念）" class="headerlink" title="10.集成测试及其主要方法的分类？（驱动模块、桩模块的概念）"></a>10.集成测试及其主要方法的分类？（驱动模块、桩模块的概念）</h3><ul><li>驱动模块：代替上级模块传递测试用例的程序（出现在自底而上集成测试中）</li><li>桩模块：代替下级模块的仿真程序（出现在自顶向下）</li><li>由底向上集成测试<ul><li>从模块结构图的最低层开始，由下而上按调用关系逐步添加新模块，组成子系统并分别测试，重复执行直到全部模块组装完毕。（雪球从底层滚起）<br>  <img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E7%94%B1%E5%BA%95%E5%90%91%E4%B8%8A%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95.png" alt="由底向上集成测试"></li></ul></li><li>自顶向下集成测试<ul><li>从顶层控制组件开始，首先对它本身进行测试，然后将被测组件调用的下级组件组合起来，对这个更大的子系统进行测试，反复采用这种组装方法，直到包含了所有组件为止。（雪球从顶层滚起）<br><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E8%87%AA%E9%A1%B6%E5%90%91%E4%B8%8B%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95.png" alt="自顶向下集成测试"></li></ul></li></ul><h3 id="11-传统测试和OO测试有何不同？OO测试有何困难？"><a href="#11-传统测试和OO测试有何不同？OO测试有何困难？" class="headerlink" title="11.传统测试和OO测试有何不同？OO测试有何困难？"></a>11.传统测试和OO测试有何不同？OO测试有何困难？</h3><ul><li>传统测试，系统发生改变时，我们只需要针对改变在原来的用例基础上，推出新的用例即可 OO测试在子类被重写时，我们需要重新测试，并可能需要使用不同的测试用例 OO测试，在单元测试中更加简单（对象的粒度更小），但是集成测试更难（设计接口、继承、多态等）</li><li>OO测试有何困难<ul><li>需求文档的验证缺乏工具支持。（很多时候依赖人工）</li><li>测试工具生成的测试用例，处理OO模型中的某些对象和方法时，其针对性不强。（某些OO关系是测试工具本身搞不清楚其内在逻辑关系的）</li><li>源代码分析：传统的测试方法（如环路复杂度等）在评价OO系统的规模和复杂性时，还不是很有效，或没有太强的针对性。</li><li>覆盖分析：对象的交互是OO系统复杂性的根源，传统的覆盖分析等测试方法和根据&#x2F;依据的作用有限。缺乏有效的交互模型</li></ul></li></ul><h2 id="Chapter-9"><a href="#Chapter-9" class="headerlink" title="Chapter 9"></a>Chapter 9</h2><h3 id="1-系统测试的主要步骤及各自含义？（图9-2）"><a href="#1-系统测试的主要步骤及各自含义？（图9-2）" class="headerlink" title="1.系统测试的主要步骤及各自含义？（图9.2）"></a>1.系统测试的主要步骤及各自含义？（图9.2）</h3><p><img src="/2024/12/09/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E5%A4%8D%E4%B9%A0/%E7%B3%BB%E7%BB%9F%E6%B5%8B%E8%AF%95%E6%AD%A5%E9%AA%A4.png" alt="系统测试步骤"></p><ul><li>功能测试 验证系统是否能执行需求规格说明中描述的功能<ul><li>依据文档：软件需求规格说明书SRS</li></ul></li><li>性能测试 验证系统的软硬件表现和性能是否符合需求规格说明文档 这一步之后，软件系统应当能在客户的实际工作环境中成功执行，这时我们说产生了一个被确认的系统<ul><li>依据文档：软件需求规格说明书SRS</li></ul></li><li>验收测试 验证系统是否满足了客户的需求定义（需求定义和需求规格说明是有区别的）<ul><li>依据文档：客户需求定义</li></ul></li><li>安装测试 验证系统能否在真实环境中安装并正常运行<ul><li>依据文档：用户环境的说明</li></ul></li></ul><h3 id="2-什么是回归测试？"><a href="#2-什么是回归测试？" class="headerlink" title="2.什么是回归测试？"></a>2.什么是回归测试？</h3><ul><li>回归测试是用于新的版本或者改进版本的一种测试，以验证与旧版本相比，软件是否仍然以同样的方式执行同样的功能。</li></ul><h3 id="3-功能测试的含义极其作用？"><a href="#3-功能测试的含义极其作用？" class="headerlink" title="3.功能测试的含义极其作用？"></a>3.功能测试的含义极其作用？</h3><ul><li>测试SRS（软件需求规格说明书）中的功能性需求</li><li>以高检测率发现缺陷 （因为一项功能测试只面向一小组组件，不容易导致多个缺陷彼此掩盖）</li></ul><h3 id="4-软件系统测试阶段软件功能测试的基本指导原则？"><a href="#4-软件系统测试阶段软件功能测试的基本指导原则？" class="headerlink" title="4.软件系统测试阶段软件功能测试的基本指导原则？"></a>4.软件系统测试阶段软件功能测试的基本指导原则？</h3><ul><li>A: 较高的查错概率</li><li>B: 独立的测试团队</li><li>C: 了解预期的输出结果</li><li>D: 对合法与非法的输入都予以测试（假设是弱健壮等价类）</li><li>E: 绝不能仅仅为了测试的方便而修改系统</li><li>F: 停止测试应该有前提条件</li></ul><h3 id="5-性能测试的含义与作用？"><a href="#5-性能测试的含义与作用？" class="headerlink" title="5.性能测试的含义与作用？"></a>5.性能测试的含义与作用？</h3><ul><li>测试SRS中的非功能性需求，例如：性能、准确度等</li><li>确保系统的可靠性、可用性和可维护性</li></ul><h3 id="6-性能测试的主要分类？"><a href="#6-性能测试的主要分类？" class="headerlink" title="6.性能测试的主要分类？"></a>6.性能测试的主要分类？</h3><ul><li>压力测试&#x2F;强度测试：短时间内加载极限负荷，验证系统能力，对经常产生负荷高峰的系统很有意义</li><li>容量测试&#x2F;巨额数据测试：验证系统处理巨量数据的能力</li><li>计时测试：评估涉及对用户的响应时间以及功能执行耗时的相关需求</li><li>配置测试：对系统软硬件的各种配置进行测试</li><li>兼容性测试：测试其接口在与其他系统互动时能否正常运作</li><li>环境测试：测试系统在安装场所的执行能力，这里指的是外部的物理条件，比如高温、潮湿</li><li>回归测试：验证软件的新版本与旧版本相比，是否仍能以相同的方式执行着相同的功能</li><li>安全性测试：确保安全性需求得到满足</li><li>质量测试：评估系统的可靠性、可维护性和可用性</li><li>恢复测试：检验系统是否能在故障或丢失电源、数据、设备时自我恢复</li><li>人为因素测试&#x2F;可用性测试：检查设计系统用户界面的需求</li></ul><h3 id="7-确认测试概念，确认测试分类？（基准测试和引导测试）"><a href="#7-确认测试概念，确认测试分类？（基准测试和引导测试）" class="headerlink" title="7.确认测试概念，确认测试分类？（基准测试和引导测试）"></a>7.确认测试概念，确认测试分类？（基准测试和引导测试）</h3><ul><li>客户检验系统是否达到需求定义的标准</li><li>分类：<ul><li>基准测试：客户准备一组代表在实际安装后系统运作的典型情况的测试用例，由客户来评估执行的情况。</li><li>引导测试：在试验环境中安装系统，依赖系统的日常工作来进行测试。没有正式和结构化的测试用例。包括alpha测试和beta测试</li><li>并行测试：新系统和旧版本共同运行，使用户适应新系统</li></ul></li></ul><h3 id="8-什么是alpha测试？β测试？"><a href="#8-什么是alpha测试？β测试？" class="headerlink" title="8.什么是alpha测试？β测试？"></a>8.什么是alpha测试？β测试？</h3><ul><li>α：在组织内进行试点测试（由开发人员进行）</li><li>β：由软件应用程序的“真实用户”在“真实环境”中进行的，它可以被认为是一种外部用户验收测试。</li></ul>]]></content>
    
    
    <categories>
      
      <category>软件工程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>软件工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch11</title>
    <link href="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/"/>
    <url>/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/</url>
    
    <content type="html"><![CDATA[<h1 id="第十一章-目标代码生成"><a href="#第十一章-目标代码生成" class="headerlink" title="第十一章 目标代码生成"></a><center>第十一章 目标代码生成</center></h1><h2 id="一、目标代码生成器"><a href="#一、目标代码生成器" class="headerlink" title="一、目标代码生成器"></a>一、目标代码生成器</h2><h3 id="1-任务"><a href="#1-任务" class="headerlink" title="1.任务"></a>1.任务</h3><ul><li>把分析、翻译、优化后的中间代码变换成目标代码</li></ul><h3 id="2-输入"><a href="#2-输入" class="headerlink" title="2.输入"></a>2.输入</h3><ul><li>源程序的中间表示，以及符号表中的信息</li><li>类型检查（已经在中间代码生成完成）</li></ul><h3 id="3-输出"><a href="#3-输出" class="headerlink" title="3.输出"></a>3.输出</h3><h4 id="1-绝对指令代码"><a href="#1-绝对指令代码" class="headerlink" title="(1)绝对指令代码"></a>(1)绝对指令代码</h4><ul><li>能够立即执行的机器语言代码，所有地址已经定位</li></ul><h4 id="2-可重新定位指令代码"><a href="#2-可重新定位指令代码" class="headerlink" title="(2)可重新定位指令代码"></a>(2)可重新定位指令代码</h4><ul><li>待装配的机器语言模块，执行时，由连接装配程序把它们和某些运行程序连接起来，转换成能执行的机器语言代码</li></ul><h4 id="3-汇编语言代码"><a href="#3-汇编语言代码" class="headerlink" title="(3)汇编语言代码"></a>(3)汇编语言代码</h4><ul><li>需要经过汇编程序转换成可执行的机器语言代码</li></ul><h3 id="4-目标代码生成需要考虑的问题"><a href="#4-目标代码生成需要考虑的问题" class="headerlink" title="4.目标代码生成需要考虑的问题"></a>4.目标代码生成需要考虑的问题</h3><ul><li>如何充分利用计算机的指令系统的特点<br><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E5%88%A9%E7%94%A8%E6%8C%87%E4%BB%A4%E7%89%B9%E7%82%B9.png" alt="利用指令特点"></li><li>如何充分利用计算机的寄存器，减少目标代码中访问贮存单元的次数<ul><li>在寄存器分配期间，为程序的某一点选择驻留在寄存器中的一组变量</li><li>在随后的寄存器指派阶段，挑出变量将要驻留的具体寄存器</li></ul></li></ul><h3 id="5-计算机模型"><a href="#5-计算机模型" class="headerlink" title="5.计算机模型"></a>5.计算机模型</h3><ul><li>具有多个通用寄存器，可用作累加器和变址器</li><li>运算必须在某个寄存器中进行</li><li>含有四种类型的指令形式<br><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E6%8C%87%E4%BB%A4%E5%BD%A2%E5%BC%8F.png" alt="指令形式"></li><li>op可以是常见的二目运算符：加减乘除</li><li>也可以是一目运算符：op(M)→Ri<br><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E5%85%B6%E4%BB%96%E6%8C%87%E4%BB%A4.png" alt="其他指令"></li></ul><h3 id="6-最简单的代码生成"><a href="#6-最简单的代码生成" class="headerlink" title="6.最简单的代码生成"></a>6.最简单的代码生成</h3><p><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E6%9C%80%E7%AE%80%E5%8D%95%E7%9A%84%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90.png" alt="最简单的代码生成"></p><h3 id="7-带寄存器分配优化的代码生成"><a href="#7-带寄存器分配优化的代码生成" class="headerlink" title="7.带寄存器分配优化的代码生成"></a>7.带寄存器分配优化的代码生成</h3><ul><li>以基本块为单位生成目标代码<ul><li>依次把四元式的中间代码变换成目标代码</li><li>在基本块的范围内考虑如何充分利用寄存器</li><li>进入基本块时，所有寄存器空闲</li><li>离开基本块时，把存在寄存器中的现行的值存回主存中，释放所有寄存器</li><li>不特别说明，所有说明变量在基本块出口之后均为非活跃变量</li></ul></li><li>在一个基本块的范围内考虑充分利用寄存器<ul><li>要做到：</li><li>尽可能留：在生成计算某变量值的目标代码时，尽可能让该变量<strong>保留在寄存器中</strong></li><li>尽可能用：后续的目标代码尽可能利用<strong>变量在寄存器中的值</strong>，而不访问主存</li><li>及时腾空：在离开基本块时，把存在寄存器中的现行的值放到主存中</li><li>要知道：</li><li>四元式指令：每条指令中各变量在将来会被使用的情况</li><li>变量：每个变量现行值的存放位置</li><li>寄存器：每个寄存器当前的使用情况</li></ul></li></ul><h2 id="二、待用信息和活跃信息"><a href="#二、待用信息和活跃信息" class="headerlink" title="二、待用信息和活跃信息"></a>二、待用信息和活跃信息</h2><h3 id="1-待用信息"><a href="#1-待用信息" class="headerlink" title="1.待用信息"></a>1.待用信息</h3><ul><li>如果在一个基本块内，四元式i对A定值，四元式j要引用A值，而从i到j之间没有其他对A的定值，我们称j是四元式i的变量A的待用信息，即下一个引用点<ul><li>i：A:&#x3D;B op C……j：D:&#x3D;A op E</li></ul></li><li>变量的符号表登记项中含有记录待用信息和活跃信息的栏</li></ul><h3 id="2-待用信息和活跃信息的表示"><a href="#2-待用信息和活跃信息的表示" class="headerlink" title="2.待用信息和活跃信息的表示"></a>2.待用信息和活跃信息的表示</h3><ul><li>二元组（x，x）表示变量的待用信息和活跃信息<ul><li>第一元：i表示待用信息，^表示非待用</li><li>第二元：y表示活跃，^表示非活跃</li></ul></li><li>待用信息和活跃信息的变化<ul><li>(x, x)→(x, x)，用后者更新前者<br>  <img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E5%BE%85%E7%94%A8%E5%92%8C%E6%B4%BB%E8%B7%83%E7%9A%84%E5%8F%98%E5%8C%96.png" alt="待用和活跃的变化"></li></ul></li></ul><h3 id="3-待用信息和活跃信息的计算"><a href="#3-待用信息和活跃信息的计算" class="headerlink" title="3.待用信息和活跃信息的计算"></a>3.待用信息和活跃信息的计算</h3><p><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E5%BE%85%E7%94%A8%E5%92%8C%E6%B4%BB%E8%B7%83%E8%AE%A1%E7%AE%97.png" alt="待用和活跃计算"></p><ul><li>正向计算每次都需要向后扫描，效率低，所以从后向前计算</li><li>算法：<br><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E5%BE%85%E7%94%A8%E5%92%8C%E6%B4%BB%E8%B7%83%E7%AE%97%E6%B3%95.png" alt="待用和活跃算法"></li></ul><h2 id="二、变量地址描述和寄存器描述"><a href="#二、变量地址描述和寄存器描述" class="headerlink" title="二、变量地址描述和寄存器描述"></a>二、变量地址描述和寄存器描述</h2><h3 id="1-变量地址描述数组AVALUE"><a href="#1-变量地址描述数组AVALUE" class="headerlink" title="1.变量地址描述数组AVALUE"></a>1.变量地址描述数组AVALUE</h3><ul><li>动态记录各变量现行值得存放位置</li><li>AVALUE[A]&#x3D;{$R_1, R_2, A$}</li></ul><h3 id="2-寄存器描述数组RVALUE"><a href="#2-寄存器描述数组RVALUE" class="headerlink" title="2.寄存器描述数组RVALUE"></a>2.寄存器描述数组RVALUE</h3><ul><li>动态记录各寄存器的使用信息</li><li>RVALUE[R]&#x3D;{A, B}</li></ul><h3 id="3-使用"><a href="#3-使用" class="headerlink" title="3.使用"></a>3.使用</h3><ul><li>对于四元式A:&#x3D;B<ul><li>如果B的现行值在某寄存器$R_i$中，则无需生成目标代码</li><li>只需在RVALUE(Ri)中增加A，即把Ri同时分配给B和A，并把AVALUE(A)改为Ri</li></ul></li></ul><h2 id="三、代码生成算法"><a href="#三、代码生成算法" class="headerlink" title="三、代码生成算法"></a>三、代码生成算法</h2><h3 id="1-具体算法"><a href="#1-具体算法" class="headerlink" title="1.具体算法"></a>1.具体算法</h3><p><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E7%AE%97%E6%B3%95.png" alt="代码生成算法"></p><h3 id="2-寄存器分配算法"><a href="#2-寄存器分配算法" class="headerlink" title="2.寄存器分配算法"></a>2.寄存器分配算法</h3><ul><li>寄存器分配：GETREG(i：A:&#x3D;B op C)返回一个用于存放A的值的寄存器<ul><li>尽可能用B独占的寄存器</li><li>尽可能用空闲寄存器</li><li>抢占非空闲寄存器</li></ul></li><li>算法：<br><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E5%AF%84%E5%AD%98%E5%99%A8%E5%88%86%E9%85%8D%E7%AE%97%E6%B3%95.png" alt="寄存器分配算法"></li></ul><h3 id="3-生成存数指令算法"><a href="#3-生成存数指令算法" class="headerlink" title="3.生成存数指令算法"></a>3.生成存数指令算法</h3><p><img src="/2024/12/07/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch11/%E7%94%9F%E6%88%90%E5%AD%98%E6%95%B0%E6%8C%87%E4%BB%A4%E7%AE%97%E6%B3%95.png" alt="生成存数指令算法"></p><h3 id="4-为基本块生成代码示例"><a href="#4-为基本块生成代码示例" class="headerlink" title="4.为基本块生成代码示例"></a>4.为基本块生成代码示例</h3><p><a href="https://www.bilibili.com/video/BV1DJ411M7eV?p=229&vd_source=91c1408476b2fc672c9212aeb2e40090">点击跳转</a></p>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch10</title>
    <link href="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/"/>
    <url>/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/</url>
    
    <content type="html"><![CDATA[<h1 id="第十章-优化"><a href="#第十章-优化" class="headerlink" title="第十章 优化"></a><center>第十章 优化</center></h1><h2 id="一、优化"><a href="#一、优化" class="headerlink" title="一、优化"></a>一、优化</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><ul><li>对程序进行各种等价变换，使得从变换后的程序出发能够生成更有效得目标代码</li></ul><h3 id="2-优化的级别"><a href="#2-优化的级别" class="headerlink" title="2.优化的级别"></a>2.优化的级别</h3><ul><li><strong>局部优化、循环优化</strong>、全局优化</li></ul><h3 id="3-优化组成"><a href="#3-优化组成" class="headerlink" title="3.优化组成"></a>3.优化组成</h3><ul><li>对程序控制流分析</li><li>数据流分析</li><li>代码变换<br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E4%BC%98%E5%8C%96%E7%BC%96%E8%AF%91%E5%99%A8%E7%9A%84%E7%BB%84%E7%BB%87.png" alt="优化编译器的组织"></li></ul><h3 id="4-目的"><a href="#4-目的" class="headerlink" title="4.目的"></a>4.目的</h3><ul><li>产生更高效的代码</li></ul><h3 id="5-遵循的原则"><a href="#5-遵循的原则" class="headerlink" title="5.遵循的原则"></a>5.遵循的原则</h3><h4 id="1-等价原则"><a href="#1-等价原则" class="headerlink" title="(1)等价原则"></a>(1)等价原则</h4><ul><li>优化不应改变程序运行的结果</li></ul><h4 id="2-有效原则"><a href="#2-有效原则" class="headerlink" title="(2)有效原则"></a>(2)有效原则</h4><ul><li>使优化后所产生的目标代码运行时间较短，占用的存储空间较小</li></ul><h4 id="3-合算原则"><a href="#3-合算原则" class="headerlink" title="(3)合算原则"></a>(3)合算原则</h4><ul><li>应尽可能以较低的代价取得较好的优化效果</li></ul><h3 id="6-优化的种类"><a href="#6-优化的种类" class="headerlink" title="6.优化的种类"></a>6.优化的种类</h3><ul><li>删除多余运算（删除公用子表达式）</li><li>合并已知量</li><li>复写传播</li><li>删除无用赋值</li><li>代码外提</li><li>强度消弱</li><li>变换循环控制条件</li></ul><h3 id="6-优化示例"><a href="#6-优化示例" class="headerlink" title="6.优化示例"></a>6.优化示例</h3><h4 id="1-源程序"><a href="#1-源程序" class="headerlink" title="(1)源程序"></a>(1)源程序</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E6%BA%90%E7%A8%8B%E5%BA%8F.png" alt="源程序"></p><h4 id="2-中间代码"><a href="#2-中间代码" class="headerlink" title="(2)中间代码"></a>(2)中间代码</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E4%B8%AD%E9%97%B4%E4%BB%A3%E7%A0%81.png" alt="中间代码"></p><h4 id="3-复写传播"><a href="#3-复写传播" class="headerlink" title="(3)复写传播"></a>(3)复写传播</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD1.png" alt="复写传播1"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD2.png" alt="复写传播2"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD3.png" alt="复写传播3"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD4.png" alt="复写传播4"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD5.png" alt="复写传播5"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD6.png" alt="复写传播6"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD7.png" alt="复写传播7"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD8.png" alt="复写传播8"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%8D%E5%86%99%E4%BC%A0%E6%92%AD9.png" alt="复写传播9"></p><h4 id="4-删除无用赋值"><a href="#4-删除无用赋值" class="headerlink" title="(4)删除无用赋值"></a>(4)删除无用赋值</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%88%A0%E9%99%A4%E6%97%A0%E7%94%A8%E8%B5%8B%E5%80%BC1.png" alt="删除无用赋值1"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%88%A0%E9%99%A4%E6%97%A0%E7%94%A8%E8%B5%8B%E5%80%BC2.png" alt="删除无用赋值2"></p><h4 id="5-强度削弱"><a href="#5-强度削弱" class="headerlink" title="(5)强度削弱"></a>(5)强度削弱</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%BC%BA%E5%BA%A6%E5%89%8A%E5%BC%B11.png" alt="强度削弱1"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%BC%BA%E5%BA%A6%E5%89%8A%E5%BC%B12.png" alt="强度削弱2"></p><h4 id="6-删除归纳变量"><a href="#6-删除归纳变量" class="headerlink" title="(6)删除归纳变量"></a>(6)删除归纳变量</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%88%A0%E9%99%A4%E5%BD%92%E7%BA%B3%E5%8F%98%E9%87%8F1.png" alt="删除归纳变量1"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%88%A0%E9%99%A4%E5%BD%92%E7%BA%B3%E5%8F%98%E9%87%8F2.png" alt="删除归纳变量2"></p><h2 id="二、局部优化"><a href="#二、局部优化" class="headerlink" title="二、局部优化"></a>二、局部优化</h2><h3 id="1-基本快"><a href="#1-基本快" class="headerlink" title="1.基本快"></a>1.基本快</h3><ul><li>连续的语句序列，控制流从它的开始进入，并从它的末尾离开</li><li>再用有向边表示基本块之间的控制流信息，就能得到程序的流图</li></ul><h3 id="2-划分基本快算法"><a href="#2-划分基本快算法" class="headerlink" title="2.划分基本快算法"></a>2.划分基本快算法</h3><ul><li>找出中间语言（三地址语句）程序中各个基本快的入口语句<ul><li>程序的第一个语句</li><li>能由条件转移语句或无条件转移语句转移到的语句</li><li>紧跟在条件转移后面的语句</li></ul></li><li>对以上求出的每个入口语句，确定七所属的基本快。它是由该入口语句到下一入口语句（不包括该入口语句）、或到以转移语句（包括该转移语句）、或一停语句（包括停语句）之间的语句序列组成的</li></ul><h3 id="3-流图"><a href="#3-流图" class="headerlink" title="3.流图"></a>3.流图</h3><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E6%B5%81%E5%9B%BE.png" alt="流图"></p><h2 id="三、有向无环图"><a href="#三、有向无环图" class="headerlink" title="三、有向无环图"></a>三、有向无环图</h2><h3 id="1-DAG的扩充"><a href="#1-DAG的扩充" class="headerlink" title="1.DAG的扩充"></a>1.DAG的扩充</h3><ul><li>在DAG增加标记和附加信息<ul><li>图的叶节点以一标识符或常数作为标记，表示该结点代表该变量或常数的值</li><li>图的内部结点以一运算符作为标记，表示该结点代表应用该运算符对其后继结点所代表的值进行运算的结果</li><li>各个结点上可能附加一个或多个标识符（称附加标识符）表示这些变量具有该结点所代表的值</li></ul></li></ul><h3 id="2-四元式的DAG表示"><a href="#2-四元式的DAG表示" class="headerlink" title="2.四元式的DAG表示"></a>2.四元式的DAG表示</h3><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%9B%9B%E5%85%83%E5%BC%8F%E7%9A%84DAG%E8%A1%A8%E7%A4%BA1.png" alt="四元式的DAG表示1"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%9B%9B%E5%85%83%E5%BC%8F%E7%9A%84DAG%E8%A1%A8%E7%A4%BA2.png" alt="四元式的DAG表示2"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%9B%9B%E5%85%83%E5%BC%8F%E7%9A%84DAG%E8%A1%A8%E7%A4%BA3.png" alt="四元式的DAG表示3"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%9B%9B%E5%85%83%E5%BC%8F%E7%9A%84DAG%E8%A1%A8%E7%A4%BA4.png" alt="四元式的DAG表示4"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%9B%9B%E5%85%83%E5%BC%8F%E7%9A%84DAG%E8%A1%A8%E7%A4%BA5.png" alt="四元式的DAG表示5"></p><h3 id="3-基本块的优化算法"><a href="#3-基本块的优化算法" class="headerlink" title="3.基本块的优化算法"></a>3.基本块的优化算法</h3><ul><li>一个基本块，可用一个DAG表示</li><li>对基本块中每一条四元式代码，依次构造对应的DAG图，最后基本块中所有四元式构造出来DAG连成整个基本块的DAG<ul><li>准备操作数的结点</li><li>合并已知量</li><li>删除公共子表达式</li><li>删除无用赋值</li></ul></li></ul><h3 id="4-构造基本块的DAG示例"><a href="#4-构造基本块的DAG示例" class="headerlink" title="4.构造基本块的DAG示例"></a>4.构造基本块的DAG示例</h3><p><a href="https://www.bilibili.com/video/BV1DJ411M7eV/?p=211&vd_source=91c1408476b2fc672c9212aeb2e40090">点击跳转</a></p><h3 id="5-构造基本块的DAG的算法"><a href="#5-构造基本块的DAG的算法" class="headerlink" title="5.构造基本块的DAG的算法"></a>5.构造基本块的DAG的算法</h3><ul><li>引入函数Node<br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/Node%E5%87%BD%E6%95%B0.png" alt="Node函数"></li></ul><h4 id="1-准备操作数结点"><a href="#1-准备操作数结点" class="headerlink" title="(1)准备操作数结点"></a>(1)准备操作数结点</h4><ul><li>如果Node(B)无定义，则构造一标记为B的叶节点并定义Node(B)为这个结点<ul><li>如果当前四元式是0型（A:&#x3D;B），则记Node(B)的值为n，转4</li><li>如果当前四元式是1型（A:&#x3D;op B），则转2(1)</li><li>如果当前四元式是2型（A:&#x3D;B op C），则(i)如果Node(C)无定义，则构造一标记为C的叶节点并定义Node(C)为这个结点;(ii)转2(2)</li></ul></li></ul><h4 id="2-合并已知量"><a href="#2-合并已知量" class="headerlink" title="(2)合并已知量"></a>(2)合并已知量</h4><ul><li>如果Node(B)是标记为常熟的叶节点，则转2(3);否则，转3(1)（用来处理1型指令）</li><li>如果Node(B)和Node(C)都是标记为常数的叶节点，则转2(4);否则，转3(2)（用来处理2型指令）</li><li>执行op B（即合并已知量）。令得到的新常数为P，如果Node(B)是处理当前四元式时新构造出来的结点，则删除它。如果Node(P)无定义，则构造一用P作标记的叶节点n。置Node(P)&#x3D;n，转4（用来处理1型指令）</li><li>执行B op C（即合并已知量）。令得到的新常数为P。如果Node(B)或Node(C)是处理当前四元式时新构造出来的结点，则删除它。如果Node(P)无定义，则构造一用P作标记的叶节点n。置Node(P)&#x3D;n，转4（用来处理2型指令）</li></ul><h4 id="3-删除公共子表达式"><a href="#3-删除公共子表达式" class="headerlink" title="(3)删除公共子表达式"></a>(3)删除公共子表达式</h4><ul><li>检查DAG中是否已有一结点，其唯一后继为Node(B)且标记为op（即公共子表达式）。如果没有，则构造该结点n，否则，把已有的结点作为它的结点并设该节点为n。转4</li><li>检查DAG中是否已有一结点，其左后继为Node(B)，右后继为Node(C)，且标记为op（即公共子表达式）。如果没有，则构造该结点n，否则，把已有的结点作为它的结点并设该节点为n。转4</li></ul><h4 id="4-删除无用赋值-1"><a href="#4-删除无用赋值-1" class="headerlink" title="(4)删除无用赋值"></a>(4)删除无用赋值</h4><ul><li>如果Node(A)无定义，则把A附加在结点n上冰令Node(A)&#x3D;n；否则，先把A从Node(A)结点上的附加标识符集中删除（注意，如果Node(A)是叶节点，则其A标记不删除）。把A附加到新结点n上并置Node(A)&#x3D;n。转处理下一四元式</li></ul><h3 id="6-从DAG中得到的优化信息"><a href="#6-从DAG中得到的优化信息" class="headerlink" title="6.从DAG中得到的优化信息"></a>6.从DAG中得到的优化信息</h3><ul><li>在基本快外被定值并在基本快内被引用的所有标识符，就是作为叶子结点上标记的那些标识符</li><li>在基本块内被定值并且该值在基本块后面可以被引用的所有标识符，就是DAG各结点上的那些标记或者附加标识符</li></ul><h2 id="四、循环优化"><a href="#四、循环优化" class="headerlink" title="四、循环优化"></a>四、循环优化</h2><h3 id="1-循环优化的措施（主要介绍前三种）"><a href="#1-循环优化的措施（主要介绍前三种）" class="headerlink" title="1.循环优化的措施（主要介绍前三种）"></a>1.循环优化的措施（主要介绍前三种）</h3><ul><li>代码外提</li><li>强度消弱</li><li>删除归纳变量（变换循环控制条件）</li><li>循环展开</li><li>循环合并</li></ul><h3 id="2-代码外提"><a href="#2-代码外提" class="headerlink" title="2.代码外提"></a>2.代码外提</h3><h4 id="1-定值到达"><a href="#1-定值到达" class="headerlink" title="(1)定值到达"></a>(1)定值到达</h4><ul><li>所谓变量A在某点d的定值到达另一点u（或称变量A的定值点d到达另一点u），是指：流图中从d有一通路到达u且该通路上没有A的其他定值</li><li>A在d点的定值到达了u<br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%AE%9A%E5%80%BC%E5%88%B0%E8%BE%BE.png" alt="定值到达"></li></ul><h4 id="2-循环不变运算"><a href="#2-循环不变运算" class="headerlink" title="(2)循环不变运算"></a>(2)循环不变运算</h4><ul><li>对四元式A:&#x3D;B op C，若B和C是常数，或者到达它们的B和C的定值点都在循环外</li></ul><h4 id="3-查找循环中不变运算的算法"><a href="#3-查找循环中不变运算的算法" class="headerlink" title="(3)查找循环中不变运算的算法"></a>(3)查找循环中不变运算的算法</h4><ul><li>依次查看L中各基本块的每个四元式，如果它的每个运算对象或为常数，或者定值点在L外，则将此四元式标记为“不变运算”</li><li>重复第3步直到没有新的四元式被标为“不变运算”为止</li><li>一次查看尚未标记为“不变运算”的四元式，如果它的每个运算对象或为常数，或者定值点在L外，或只有一个到达定值点且该点上的四元式已被标记为“不变运算”，则把被查看的四元式标记为“不变运算”</li></ul><h4 id="4-把循环不变运算提到循环体外"><a href="#4-把循环不变运算提到循环体外" class="headerlink" title="(4)把循环不变运算提到循环体外"></a>(4)把循环不变运算提到循环体外</h4><h4 id="5-代码外提的位置"><a href="#5-代码外提的位置" class="headerlink" title="(5)代码外提的位置"></a>(5)代码外提的位置</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%96%E6%8F%90%E7%9A%84%E4%BD%8D%E7%BD%AE.png" alt="外提的位置"></p><h4 id="6-示例"><a href="#6-示例" class="headerlink" title="(6)示例"></a>(6)示例</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E4%BB%A3%E7%A0%81%E5%A4%96%E6%8F%90%E4%BE%8B%E5%AD%90.png" alt="代码外提例子"></p><h4 id="7-外提的条件"><a href="#7-外提的条件" class="headerlink" title="(7)外提的条件"></a>(7)外提的条件</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%96%E6%8F%90%E6%9D%A1%E4%BB%B6%E4%BE%8B%E5%AD%90.png" alt="外提条件例子"></p><ul><li>出现这种情况是因为$B_3$结点并不是所有循环出口的必经结点</li><li>因此，必须保证<strong>不变运算所在结点是L所有出口结点的必经结点</strong></li><li>但不变运算所在结点是L所有出口结点的必经结点，也不一定能外提<br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%96%E6%8F%90%E6%9D%A1%E4%BB%B6%E4%BE%8B%E5%AD%902.png" alt="外提条件例子2"></li><li><strong>A在循环中其他地方未再定值</strong>，才能把循环不变运算A:&#x3D;B op C外提</li><li>但不变运算所在结点是L所有出口结点的必经结点，且A在循环中其他地方未再定值，也不一定能外提<br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%A4%96%E6%8F%90%E6%9D%A1%E4%BB%B6%E4%BE%8B%E5%AD%903.png" alt="外提条件例子3"></li><li>此例中，$B_3$中的I不仅可能来自于$B_4$中的I，还有可能来自于$B_1$中的I</li><li><strong>循环中所有A的引用点只有S中的A的定值才能到达</strong>，此例中，要想将(5)外提，则对I的引用点(3)不能再有其他定值(1)到达</li><li>或者：（2.3相同，1不同）<ul><li>A在离开L后不再是活跃的</li><li>A在L中其他地方未再定值</li><li>L中所有A的引用点只有S中的A的定值才能到达</li></ul></li></ul><h4 id="8-代码外提算法"><a href="#8-代码外提算法" class="headerlink" title="(8)代码外提算法"></a>(8)代码外提算法</h4><ul><li>求出L的所有不变运算</li><li>对于每个不变运算S:A:&#x3D;B op C 或A:&#x3D;op B或A:&#x3D;B检查是否满足上述条件中的一个</li><li>按步骤1所找出的不变运算的次序，依次把符合步骤2的条件的不变运算S提到L的前置结点中。但是，如果S的运算对象B或C是在L中定值的，那么，只有当这些定值四元式都已外提，才能把S也外提。即将A依赖的B和C的所有定值运算都外提后才能外提A</li></ul><h3 id="3-强度消弱"><a href="#3-强度消弱" class="headerlink" title="3.强度消弱"></a>3.强度消弱</h3><h4 id="1-示例"><a href="#1-示例" class="headerlink" title="(1)示例"></a>(1)示例</h4><p><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%BC%BA%E5%BA%A6%E6%B6%88%E5%BC%B1%E4%BE%8B1.png" alt="强度消弱例1"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%BC%BA%E5%BA%A6%E6%B6%88%E5%BC%B1%E4%BE%8B2.png" alt="强度消弱例2"></p><h4 id="2-强度消弱"><a href="#2-强度消弱" class="headerlink" title="(2)强度消弱"></a>(2)强度消弱</h4><ul><li>强度消弱通常是针对<strong>与循环控制变量有线性关系的变量赋值</strong>进行</li><li>经过强度消弱后，循环中可能出现一些新的无用赋值</li><li>对于消弱下标变量地址计算的强度非常有效</li></ul><h4 id="3-删除归纳变量"><a href="#3-删除归纳变量" class="headerlink" title="(3)删除归纳变量"></a>(3)删除归纳变量</h4><ul><li>如果循环中对于变量I只有唯一的形如I:&#x3D;I±C的赋值，且C为循环不变量，则称I为循环中的基本归纳变量</li><li>若I是循环中的一个基本归纳变量，J在循环中的定值总是可化归为I的同一线性函数，即J是I的一次函数，则J是归纳变量，并称J与I同族。基本归纳变量也是一归纳变量<br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%88%A0%E9%99%A4%E5%BD%92%E7%BA%B3%E5%8F%98%E9%87%8F%E4%BE%8B1.png" alt="删除归纳变量例1"><br><img src="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch10/%E5%88%A0%E9%99%A4%E5%BD%92%E7%BA%B3%E5%8F%98%E9%87%8F%E4%BE%8B2.png" alt="删除归纳变量例2"></li><li>删除归纳变量在强度消弱以后进行</li></ul><h4 id="4-强度削弱和删除归纳变量的统一算法框架"><a href="#4-强度削弱和删除归纳变量的统一算法框架" class="headerlink" title="(4)强度削弱和删除归纳变量的统一算法框架"></a>(4)强度削弱和删除归纳变量的统一算法框架</h4><ul><li>利用循环不变运算信息，找出循环中的所有基本归纳变量</li><li>找出所有其他归纳变量A，并找出A与已知基本归纳变量X的同族线性函数关系$F_A(X)$</li><li>对2中找到的每一个归纳变量A，进行强度消弱</li><li>删除对归纳变量的无用赋值</li><li>删除基本归纳变量，如果基本归纳变量B在循环出口后不是活跃的，并且在循环中，除在其自身的递归赋值中被引用外，只在形如if B rop Y goto L的语句中被引用，则可选取一与B同族的归纳变量M来替换B进行条件控制。最后删除循环中对B的递归赋值的代码</li></ul>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch9</title>
    <link href="/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch9/"/>
    <url>/2024/12/04/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch9/</url>
    
    <content type="html"><![CDATA[<h1 id="第九章-运行时存储空间的组织"><a href="#第九章-运行时存储空间的组织" class="headerlink" title="第九章 运行时存储空间的组织"></a><center>第九章 运行时存储空间的组织</center></h1><h2 id="一、存储分配策略"><a href="#一、存储分配策略" class="headerlink" title="一、存储分配策略"></a>一、存储分配策略</h2><h3 id="1-静态分配策略"><a href="#1-静态分配策略" class="headerlink" title="1.静态分配策略"></a>1.静态分配策略</h3><ul><li>在编译时能确定数据空间的大小，并为每个数据项目确定出在运行时刻的存储空间位置</li></ul><h3 id="2-动态分配策略"><a href="#2-动态分配策略" class="headerlink" title="2.动态分配策略"></a>2.动态分配策略</h3><ul><li>在编译时不能确定运行时数据空间的大小，允许递归过程和动态申请释放内存</li></ul>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch7</title>
    <link href="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/"/>
    <url>/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/</url>
    
    <content type="html"><![CDATA[<h1 id="第七章-语义分析和中间代码生成"><a href="#第七章-语义分析和中间代码生成" class="headerlink" title="第七章 语义分析和中间代码生成"></a><center>第七章 语义分析和中间代码生成</center></h1><h2 id="一、后缀式"><a href="#一、后缀式" class="headerlink" title="一、后缀式"></a>一、后缀式</h2><h3 id="1-后缀式表示法"><a href="#1-后缀式表示法" class="headerlink" title="1.后缀式表示法"></a>1.后缀式表示法</h3><ul><li>一种表示表达式的方法，又称逆波兰表示法</li></ul><h3 id="2-定义"><a href="#2-定义" class="headerlink" title="2.定义"></a>2.定义</h3><ul><li>一个表达式E的后缀形式可以如下定义<ul><li>如果E时一个变量或常量，则E的后缀式是E自身</li><li>如果E是$E_1 op E_2$形式的表达式，其中op是任何二元操作符，则E的后缀式为$E’_1E’_2op$，其中$E’_1$和$E’_2$分别是$E_1、E_2$的后缀式</li><li>如果E是$(E_1)$形式的表达式，则$E_1$的后缀式就是E的后缀式</li></ul></li><li>后缀式表示法不用括号<ul><li>只需要知道每个算符的目数，对于后缀式，不论从哪一端进行扫描，都能对它进行无歧义地分解</li></ul></li><li>后缀式的计算<ul><li>用一个栈实现</li><li>自左向右扫描后缀式，每碰到运算量就把它推进栈，每碰到k目运算符就把它作用于栈顶的k个项，并用运算结果代替这k个项</li></ul></li></ul><h3 id="3-中缀表达式翻译成后缀式的属性文法"><a href="#3-中缀表达式翻译成后缀式的属性文法" class="headerlink" title="3.中缀表达式翻译成后缀式的属性文法"></a>3.中缀表达式翻译成后缀式的属性文法</h3><p><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%BF%BB%E8%AF%91%E6%88%90%E5%90%8E%E7%BC%80%E5%BC%8F%E7%9A%84%E5%B1%9E%E6%80%A7%E6%96%87%E6%B3%95.png" alt="中缀表达式翻译成后缀式的属性文法"></p><h3 id="4-中缀表达式翻译成后缀式的翻译模式"><a href="#4-中缀表达式翻译成后缀式的翻译模式" class="headerlink" title="4.中缀表达式翻译成后缀式的翻译模式"></a>4.中缀表达式翻译成后缀式的翻译模式</h3><p><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E4%B8%AD%E7%BC%80%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%BF%BB%E8%AF%91%E6%88%90%E5%90%8E%E7%BC%80%E5%BC%8F%E7%9A%84%E7%BF%BB%E8%AF%91%E6%A8%A1%E5%BC%8F.png" alt="中缀表达式翻译成后缀式的翻译模式"></p><h2 id="二、图表示法"><a href="#二、图表示法" class="headerlink" title="二、图表示法"></a>二、图表示法</h2><h3 id="1-抽象语法树"><a href="#1-抽象语法树" class="headerlink" title="1.抽象语法树"></a>1.抽象语法树</h3><ul><li>赋值语句翻译成抽象语法树的属性文法<br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E8%B5%8B%E5%80%BC%E8%AF%AD%E5%8F%A5%E7%BF%BB%E8%AF%91%E6%88%90%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91%E7%9A%84%E5%B1%9E%E6%80%A7%E6%96%87%E6%B3%95.png" alt="赋值语句翻译成抽象语法树的属性文法"></li></ul><h3 id="2-有向无环图（DAG）"><a href="#2-有向无环图（DAG）" class="headerlink" title="2.有向无环图（DAG）"></a>2.有向无环图（DAG）</h3><h4 id="1-定义"><a href="#1-定义" class="headerlink" title="(1)定义"></a>(1)定义</h4><ul><li>对表达式中的每个子表达式，DAG中都有一个结点</li><li>一个内部结点代表一个操作符，它的孩子代表操作数</li><li>在一个DAG中代表公共子表达式的结点具有多个父节点<br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E5%AF%B9%E6%AF%94.png" alt="对比"></li></ul><h2 id="三、三地址代码"><a href="#三、三地址代码" class="headerlink" title="三、三地址代码"></a>三、三地址代码</h2><h3 id="1-形式"><a href="#1-形式" class="headerlink" title="1.形式"></a>1.形式</h3><ul><li>x:&#x3D;y op z</li><li>可以看成是抽象语法树或有向无环图的一种线性表示<br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91%E5%92%8C%E4%B8%89%E5%9C%B0%E5%9D%80%E4%BB%A3%E7%A0%81.png" alt="抽象语法树和三地址代码"><br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E6%9C%89%E5%90%91%E6%97%A0%E7%8E%AF%E5%9B%BE%E5%92%8C%E4%B8%89%E5%9C%B0%E5%9D%80%E4%BB%A3%E7%A0%81.png" alt="有向无环图和三地址代码"></li></ul><h3 id="2-三地址语句的种类"><a href="#2-三地址语句的种类" class="headerlink" title="2.三地址语句的种类"></a>2.三地址语句的种类</h3><h4 id="1-赋值"><a href="#1-赋值" class="headerlink" title="(1)赋值"></a>(1)赋值</h4><ul><li>二元运算赋值<ul><li>x:&#x3D;y op z</li></ul></li><li>一元运算赋值<ul><li>x:&#x3D;op y</li></ul></li><li>零元运算赋值<ul><li>x:&#x3D;y</li></ul></li></ul><h4 id="2-跳转"><a href="#2-跳转" class="headerlink" title="(2)跳转"></a>(2)跳转</h4><ul><li>无条件跳转<ul><li>goto L</li></ul></li><li>有条件跳转<ul><li>if x relop y goto L或if a goto L</li></ul></li></ul><h4 id="3-传参、转子"><a href="#3-传参、转子" class="headerlink" title="(3)传参、转子"></a>(3)传参、转子</h4><ul><li>param x</li><li>call p,n</li></ul><h4 id="4-返回语句"><a href="#4-返回语句" class="headerlink" title="(4)返回语句"></a>(4)返回语句</h4><ul><li>return y</li></ul><h4 id="5-索引赋值"><a href="#5-索引赋值" class="headerlink" title="(5)索引赋值"></a>(5)索引赋值</h4><ul><li>x:&#x3D;y[i]、x[i]:&#x3D;y</li></ul><h4 id="6-地址和指针赋值"><a href="#6-地址和指针赋值" class="headerlink" title="(6)地址和指针赋值"></a>(6)地址和指针赋值</h4><ul><li>x:&#x3D;&amp;y、x:&#x3D;*y、*x:&#x3D;y</li></ul><h3 id="3-实现形式——四元式"><a href="#3-实现形式——四元式" class="headerlink" title="3.实现形式——四元式"></a>3.实现形式——四元式</h3><ul><li>一个带有四个域的记录结构，这四个域分别称为op，arg1，arg2及result<br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E5%9B%9B%E5%85%83%E5%BC%8F%E4%BE%8B%E5%AD%90.png" alt="四元式例子"></li></ul><h3 id="4-实现形式——三元式"><a href="#4-实现形式——三元式" class="headerlink" title="4.实现形式——三元式"></a>4.实现形式——三元式</h3><ul><li>用三个域表示：op、arg1、arg2</li><li>计算结果引用：引用计算该值的语句的位置<br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E4%B8%89%E5%85%83%E5%BC%8F%E4%BE%8B%E5%AD%90.png" alt="三元式例子"></li></ul><h3 id="5-实现形式——简介三元式"><a href="#5-实现形式——简介三元式" class="headerlink" title="5.实现形式——简介三元式"></a>5.实现形式——简介三元式</h3><ul><li>三元式表+简介码表</li><li>简介码表<ul><li>一张指示器表，按运算的先后次序列出有关三元式在三元式表中的位置</li></ul></li><li>优点<ul><li>方便优化，节省空间<br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E9%97%B4%E6%8E%A5%E4%B8%89%E5%85%83%E5%BC%8F.png" alt="间接三元式"></li></ul></li></ul><h2 id="四、类型表达式"><a href="#四、类型表达式" class="headerlink" title="四、类型表达式"></a>四、类型表达式</h2><h3 id="1-基本类型"><a href="#1-基本类型" class="headerlink" title="1.基本类型"></a>1.基本类型</h3><ul><li>intrger</li><li>real</li><li>char</li><li>boolean</li><li>type_error</li><li>void</li></ul><h3 id="2-类型名"><a href="#2-类型名" class="headerlink" title="2.类型名"></a>2.类型名</h3><ul><li>可以为表达式命名，类型名也是类型表达式</li></ul><h3 id="3-将类型构造符作用于类型表达式可以构造新的类型表达式"><a href="#3-将类型构造符作用于类型表达式可以构造新的类型表达式" class="headerlink" title="3.将类型构造符作用于类型表达式可以构造新的类型表达式"></a>3.将类型构造符作用于类型表达式可以构造新的类型表达式</h3><h4 id="1-数组构造符array"><a href="#1-数组构造符array" class="headerlink" title="(1)数组构造符array"></a>(1)数组构造符array</h4><ul><li>若T是类型表达式，则array(I,T)是类型表达式<ul><li>int[3] -&gt; array(3,int)</li><li>int[2][3] -&gt; array(2,array(3,int))</li></ul></li></ul><h4 id="2-指针构造符pointer"><a href="#2-指针构造符pointer" class="headerlink" title="(2)指针构造符pointer"></a>(2)指针构造符pointer</h4><ul><li>若T是类型表达式，则pointer(T)是类型表达式，表示一个指针类型</li></ul><h4 id="3-笛卡尔乘积构造符×"><a href="#3-笛卡尔乘积构造符×" class="headerlink" title="(3)笛卡尔乘积构造符×"></a>(3)笛卡尔乘积构造符×</h4><ul><li>若T1和T2是类型表达式，则笛卡尔乘积T1×T2是类型表达式</li></ul><h4 id="4-函数构造符→"><a href="#4-函数构造符→" class="headerlink" title="(4)函数构造符→"></a>(4)函数构造符→</h4><ul><li>若T1、T2、……、Tn和R是类型表达式，则T1×T2×……×Tn→R是类型表达式，其中T是参数的类型，R是返回值类型</li></ul><h4 id="5-记录构造符record"><a href="#5-记录构造符record" class="headerlink" title="(5)记录构造符record"></a>(5)记录构造符record</h4><ul><li>若有标识符N1、N2、……、Nn与类型表达式T1、T2、……、Tn则record((N1×T1)×(N2×T2)×……×(Nn×Tn))是一个类型表达式<br><img src="/2024/11/22/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch7/%E7%B1%BB%E5%9E%8B%E8%A1%A8%E8%BE%BE%E5%BC%8F.png" alt="类型表达式"></li></ul><h2 id="五、声明语句"><a href="#五、声明语句" class="headerlink" title="五、声明语句"></a>五、声明语句</h2><h3 id="1-局部变量的存储分配"><a href="#1-局部变量的存储分配" class="headerlink" title="1.局部变量的存储分配"></a>1.局部变量的存储分配</h3><ul><li>对于声明语句，语义分析的主要内容就是收集标识符的类型等属性信息，并未每一个名字分配一个相对地址<ul><li>从类型表达式可以知道该类型在运行时刻所需的存储单元数量，称为类型的宽度</li><li>在编译时刻，可以使用类型的宽度为每一个名字分配一个相对地址</li></ul></li><li>名字的类型和相对地址信息保存在相应的符号表记录中</li></ul><h3 id="2-翻译过程"><a href="#2-翻译过程" class="headerlink" title="2.翻译过程"></a>2.翻译过程</h3><ul><li>看一遍网课：<a href="https://www.bilibili.com/video/BV1dL4y1H7T8?vd_source=91c1408476b2fc672c9212aeb2e40090&p=44&spm_id_from=333.788.videopod.episodes">点击跳转</a></li></ul><h2 id="六、简单赋值语句的翻译"><a href="#六、简单赋值语句的翻译" class="headerlink" title="六、简单赋值语句的翻译"></a>六、简单赋值语句的翻译</h2><h3 id="1-赋值语句翻译的任务"><a href="#1-赋值语句翻译的任务" class="headerlink" title="1.赋值语句翻译的任务"></a>1.赋值语句翻译的任务</h3><ul><li>基本文法<ul><li>$S → id &#x3D; E$</li><li>$S→E_1+E_2$</li><li>$E→E_1*E_2$</li><li>$E→-E_1$</li><li>$E→(E_1)$</li><li>$E→id$</li></ul></li><li>主要任务<ul><li>生成对表达式求值的三地址码</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络Ch4</title>
    <link href="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/"/>
    <url>/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/</url>
    
    <content type="html"><![CDATA[<h1 id="第四章-网络层"><a href="#第四章-网络层" class="headerlink" title="第四章 网络层"></a><center>第四章 网络层</center></h1><h2 id="一、网络层功能"><a href="#一、网络层功能" class="headerlink" title="一、网络层功能"></a>一、网络层功能</h2><h3 id="1-网络层所处的地位"><a href="#1-网络层所处的地位" class="headerlink" title="1.网络层所处的地位"></a>1.网络层所处的地位</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E7%BD%91%E7%BB%9C%E5%B1%82%E6%89%80%E5%A4%84%E7%9A%84%E5%9C%B0%E4%BD%8D.png" alt="网络层所处的地位"></p><h3 id="2-网络层的功能"><a href="#2-网络层的功能" class="headerlink" title="2.网络层的功能"></a>2.网络层的功能</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E7%BD%91%E7%BB%9C%E5%B1%82%E5%8A%9F%E8%83%BD.png" alt="网络层功能"></p><h2 id="二、IPV4"><a href="#二、IPV4" class="headerlink" title="二、IPV4"></a>二、IPV4</h2><h3 id="1-IP数据报（IP分组）"><a href="#1-IP数据报（IP分组）" class="headerlink" title="1.IP数据报（IP分组）"></a>1.IP数据报（IP分组）</h3><h4 id="1-格式"><a href="#1-格式" class="headerlink" title="(1)格式"></a>(1)格式</h4><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F1.png" alt="IP数据报格式1"></p><ul><li>首部包括固定部分（20B）和可变部分（0~40B）</li><li>版本用于指明是IPV4还是IPV6</li><li>首部长度以4B为单位，例如0101表示首部有5*4B字节</li><li>总长度用来指明总长度，包括首部+数据部分<br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F2.png" alt="IP数据报格式2"></li><li>标识：由源主机生成，一般是自增的，当数据报被分片时，通过标识+源地址判断分片从属于一个IP数据报</li><li>标志：<ul><li>最低位MF（more fragment）：为1表示后面还有其他分片</li><li>中间位DF（don’t fragment）：为1表示不允许分片<ul><li>路由器会把不允许分片且超过MTU的数据报直接丢弃，并给源主机发送一个ICMP报文，通知发生异常</li></ul></li><li>最高位不用管</li></ul></li><li>片偏移：表示数据部分在“被分片前”的位置，以8B为单位<br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F3.png" alt="IP数据报格式3"></li><li>生存时间：数据报在网络中可通过的路由器数的最大值，记作TTL，每转发一次，TTL减一，当TTL减到零时，路由器直接将IP数据报丢弃，并给源主机返回一个ICMP报文，用于通知发生异常</li><li>协议：指明当前在为哪个协议服务，让IP数据报向上递交时知道去处</li><li>首部校验和：只校验首部，网络层不管数据部分的矫错</li></ul><h4 id="2-IP数据报的分片问题"><a href="#2-IP数据报的分片问题" class="headerlink" title="(2)IP数据报的分片问题"></a>(2)IP数据报的分片问题</h4><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%88%86%E7%89%87%E9%97%AE%E9%A2%98.png" alt="IP数据报分片问题"></p><ul><li>MTU：最大传送单元，一个链路层数据帧能承载的最大数据量</li><li>三个分片标识部分相同，表示从属于同一个IP数据报</li><li>片偏移*8B就是数据部分分片前的位置</li><li>注意：<ul><li>IP数据报的“分片”可能在源主机、或任何一个路由器中发生</li><li>只有目的主机才会对分片进行“重组”</li><li>各分片有可能乱序到达目的主机</li><li>由于首部的“片偏移”字段时以8B为单位，因此，除了最后一个分片外，其他每个分片的数据部分必须是8B的整数倍</li></ul></li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E5%B0%8F%E7%BB%93.png" alt="IP数据报小结"></p><h2 id="三、IP地址"><a href="#三、IP地址" class="headerlink" title="三、IP地址"></a>三、IP地址</h2><h3 id="1-最初的IP地址分类方案"><a href="#1-最初的IP地址分类方案" class="headerlink" title="1.最初的IP地址分类方案"></a>1.最初的IP地址分类方案</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E6%9C%80%E5%88%9D%E7%9A%84IP%E5%9C%B0%E5%9D%80%E5%88%86%E7%B1%BB%E6%96%B9%E6%A1%88.png" alt="最初的IP地址分类方案"></p><ul><li>在那个年代，要求每台主机、每个路由器接口被分配的IP地址都是全球唯一的</li><li>路由器和路由器连接的接口可以不分配IP地址，但路由器和其他结点连接的接口必须分配IP地址</li><li>从属于同一个网络的所有主机、路由器接口的IP地址“网络号”相同</li></ul><h3 id="2-一些特殊用途的IP地址"><a href="#2-一些特殊用途的IP地址" class="headerlink" title="2.一些特殊用途的IP地址"></a>2.一些特殊用途的IP地址</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E7%89%B9%E6%AE%8A%E7%94%A8%E9%80%94%E7%9A%84IP%E5%9C%B0%E5%9D%80.png" alt="特殊用途的IP地址"></p><h2 id="四、子网划分与子网掩码"><a href="#四、子网划分与子网掩码" class="headerlink" title="四、子网划分与子网掩码"></a>四、子网划分与子网掩码</h2><h3 id="1-子网划分原理"><a href="#1-子网划分原理" class="headerlink" title="1.子网划分原理"></a>1.子网划分原理</h3><ul><li>将主机号n位中的前k位单独拿出来作为子网号，剩余n-k位作为主机号，那么就可以分为2^k个子网，每个子网包含的IP地址块大小相等</li><li>子网划分前，IP地址为两级结构&lt;网络号，主机号&gt;</li><li>子网划分后，IP地址为三级结构&lt;网络号，子网号，主机号&gt;</li><li>注：主机号不能全零或全一</li></ul><h3 id="2-子网掩码作用"><a href="#2-子网掩码作用" class="headerlink" title="2.子网掩码作用"></a>2.子网掩码作用</h3><ul><li>用子网掩码与IP地址逐位相与，可以提取出&lt;网络号，子网号&gt;（称为“网络前缀”）</li><li>网络前缀相同的IP地址归属于同一网络（子网）</li><li>如果一个网络进行了子网划分，那么网络中的每台主机、每个路由器接口都需要配置IP地址、默认网关、子网掩码</li><li>如果一台路由器支持子网划分，则其转发表中需包含&lt;目的网络号，子网掩码，转发接口&gt;</li></ul><h4 id="1-默认子网掩码"><a href="#1-默认子网掩码" class="headerlink" title="(1)默认子网掩码"></a>(1)默认子网掩码</h4><ul><li>如果一个传统网络（A&#x2F;B&#x2F;C）内部没有进行子网划分，则在转发表项给它设置一个默认子网掩码<ul><li>A：255.0.0.0</li><li>B：255.255.0.0</li><li>C：255.255.255.0<br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E7%BB%83%E4%B9%A01.png" alt="练习1"></li></ul></li><li>源地址与子网掩码相与得166.1.0.0，目的地址与子网掩码相与得166.1.128.0，二者不相等，说明在不同子网</li><li>H1将IP数据报封装成MAC帧，MAC地址写的是B3接口</li><li>路由器的网络层将目的地址与转发表中的子网掩码相与，得到的结果与网络号比较，发现应从B2接口转发出去，MAC地址为H3</li></ul><h4 id="2-默认路由"><a href="#2-默认路由" class="headerlink" title="(2)默认路由"></a>(2)默认路由</h4><ul><li>&lt;目的网络号全0，子网掩码全0&gt;</li><li>在路由转发表中，如果所有表项都不匹配，则从“默认路由转发出去”</li></ul><h4 id="3-主机发送IP数据报的过程"><a href="#3-主机发送IP数据报的过程" class="headerlink" title="(3)主机发送IP数据报的过程"></a>(3)主机发送IP数据报的过程</h4><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E4%B8%BB%E6%9C%BA%E5%8F%91%E9%80%81IP%E6%95%B0%E6%8D%AE%E6%8A%A5%E7%9A%84%E8%BF%87%E7%A8%8B.png" alt="主机发送IP数据报的过程"></p><h4 id="4-路由器转发一个IP数据报的过程"><a href="#4-路由器转发一个IP数据报的过程" class="headerlink" title="(4)路由器转发一个IP数据报的过程"></a>(4)路由器转发一个IP数据报的过程</h4><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E8%B7%AF%E7%94%B1%E5%99%A8%E8%BD%AC%E5%8F%91%E4%B8%80%E4%B8%AAIP%E6%95%B0%E6%8D%AE%E6%8A%A5%E7%9A%84%E8%BF%87%E7%A8%8B.png" alt="路由器转发一个IP数据报的过程"></p><h4 id="5-子网掩码的另一种记法"><a href="#5-子网掩码的另一种记法" class="headerlink" title="(5)子网掩码的另一种记法"></a>(5)子网掩码的另一种记法</h4><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E5%AD%90%E7%BD%91%E6%8E%A9%E7%A0%81%E7%9A%84%E5%8F%A6%E4%B8%80%E7%A7%8D%E8%AE%B0%E6%B3%95.png" alt="子网掩码的另一种记法"></p><h2 id="五、无分类编址CIDR"><a href="#五、无分类编址CIDR" class="headerlink" title="五、无分类编址CIDR"></a>五、无分类编址CIDR</h2><h3 id="1-为什么提出"><a href="#1-为什么提出" class="headerlink" title="1.为什么提出"></a>1.为什么提出</h3><ul><li>某单位有2000台主机需要联网，就不得不申请一个B类地址，但B类地址包含65536个地址，造成IP地址的浪费</li></ul><h3 id="2-无分类编址CIDR"><a href="#2-无分类编址CIDR" class="headerlink" title="2.无分类编址CIDR"></a>2.无分类编址CIDR</h3><ul><li>网络前缀可变长</li><li>例：2000台主机，可以分配一个21bit网络前缀的CIDR地址块，2^11&#x3D;2048</li><li>CIDR记法：128.14.32.0&#x2F;21<ul><li>21表示网络前缀位数</li><li>掩码：21个1+11个0</li></ul></li><li>当单位获得CIDR地址块后，可以把它划分为多个子网</li></ul><h3 id="3-定长子网划分"><a href="#3-定长子网划分" class="headerlink" title="3.定长子网划分"></a>3.定长子网划分</h3><ul><li>在一个CIDR地址块中，把主机号前kbit抠出来作为定长子网号，这样就能划分出2^k个子网（每个子网包含的IP地址块大小相等）</li><li>也会导致IP地址利用率低，浪费IP地址</li></ul><h3 id="4-变长子网划分"><a href="#4-变长子网划分" class="headerlink" title="4.变长子网划分"></a>4.变长子网划分</h3><ul><li>在一个CIDR地址块中，划分子网时，子网号长度不固定（每个子网包含的IP地址块大小不同）<br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E5%8F%98%E9%95%BF%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86.png" alt="变长子网划分"><br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E5%8F%98%E9%95%BF%E5%AD%90%E7%BD%91%E5%88%92%E5%88%86%E4%B9%A0%E9%A2%98.png" alt="变长子网划分习题"></li></ul><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/CIDR%E5%B0%8F%E7%BB%93.png" alt="CIDR小结"></p><h2 id="六、路由聚合"><a href="#六、路由聚合" class="headerlink" title="六、路由聚合"></a>六、路由聚合</h2><h3 id="1-过程"><a href="#1-过程" class="headerlink" title="1.过程"></a>1.过程</h3><ul><li>对于一个路由转发表，如果几条路由表项的<strong>转发接口</strong>相同，部分<strong>网络前缀</strong>也相同，那么可以将这几条路由表项聚合为一条。这种地址的聚合称为路由聚合，也称<strong>构成超网</strong>。</li><li>表更小，查询更快</li><li>可能会引入额外的无效地址</li><li>一个目的地址可能与多个表项匹配，最长前缀匹配原则<br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E6%9C%80%E9%95%BF%E5%89%8D%E7%BC%80%E5%8C%B9%E9%85%8D%E5%8E%9F%E5%88%99.png" alt="最长前缀匹配原则"></li></ul><h2 id="七、NAT网络地址转换"><a href="#七、NAT网络地址转换" class="headerlink" title="七、NAT网络地址转换"></a>七、NAT网络地址转换</h2><h3 id="1-传输层的端口号"><a href="#1-传输层的端口号" class="headerlink" title="1.传输层的端口号"></a>1.传输层的端口号</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E7%AB%AF%E5%8F%A3%E5%8F%B7.png" alt="端口号"></p><h3 id="2-缓解IP地址不够用的问题"><a href="#2-缓解IP地址不够用的问题" class="headerlink" title="2.缓解IP地址不够用的问题"></a>2.缓解IP地址不够用的问题</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E7%BC%93%E8%A7%A3IP%E5%9C%B0%E5%9D%80%E4%B8%8D%E5%A4%9F%E7%94%A8%E7%9A%84%E9%97%AE%E9%A2%98.png" alt="缓解IP地址不够用的问题"></p><ul><li>在一个局域网中，每一台主机共享同一个全球IP地址（公网IP）</li><li>NAT路由器将&lt;公网IP，端口号&gt;映射为&lt;内网IP，端口号&gt;</li><li>局域网内，内网IP不重复，但局域网之间，内网IP可以重复</li></ul><h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/NAT%E5%B0%8F%E7%BB%93.png" alt="NAT小结"></p><h2 id="八、ARP协议"><a href="#八、ARP协议" class="headerlink" title="八、ARP协议"></a>八、ARP协议</h2><h3 id="1-各种协议之间的关系"><a href="#1-各种协议之间的关系" class="headerlink" title="1.各种协议之间的关系"></a>1.各种协议之间的关系</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E5%90%84%E7%A7%8D%E5%8D%8F%E8%AE%AE%E4%B9%8B%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.png" alt="各种协议之间的关系"></p><ul><li>回顾：以太网MAC帧<br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E4%BB%A5%E5%A4%AA%E7%BD%91MAC%E5%B8%A7IP.png" alt="以太网MAC帧IP"><br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E4%BB%A5%E5%A4%AA%E7%BD%91MAC%E5%B8%A7ARP.png" alt="以太网MAC帧ARP"></li></ul><h3 id="2-作用"><a href="#2-作用" class="headerlink" title="2.作用"></a>2.作用</h3><ul><li>在一个局域网内部，可以通过ARP协议查询到一个IP地址对应的MAC地址</li></ul><h3 id="3-过程"><a href="#3-过程" class="headerlink" title="3.过程"></a>3.过程</h3><ul><li>ARP请求分组<ul><li>内容<ul><li>我的IP地址是xxx，MAC地址是xxx</li><li>我想找的IP地址是xxx</li></ul></li><li>将ARP请求分组封装成MAC帧，源地址是我的MAC地址，目的地址全1</li><li>是广播帧</li></ul></li><li>ARP响应分组<ul><li>内容<ul><li>我的IP地址是xxx，我的MAC地址是xxx</li></ul></li><li>将ARP响应分组封装成MAC帧，源地址是我的MAC地址，目的地址是请求方的MAC地址</li></ul></li></ul><h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/ARP%E5%B0%8F%E7%BB%93.png" alt="ARP小结"></p><h2 id="九、DHCP协议（属于应用层）"><a href="#九、DHCP协议（属于应用层）" class="headerlink" title="九、DHCP协议（属于应用层）"></a>九、DHCP协议（属于应用层）</h2><h3 id="1-各种协议之间的服务关系"><a href="#1-各种协议之间的服务关系" class="headerlink" title="1.各种协议之间的服务关系"></a>1.各种协议之间的服务关系</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/%E5%90%84%E7%A7%8D%E5%8D%8F%E8%AE%AE%E4%B9%8B%E9%97%B4%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%85%B3%E7%B3%BB.png" alt="各种协议之间的服务关系"></p><ul><li>IP报文在协议栈中的位置<br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IP%E6%8A%A5%E6%96%87%E5%9C%A8%E5%8D%8F%E8%AE%AE%E6%A0%88%E4%B8%AD%E7%9A%84%E4%BD%8D%E7%BD%AE.png" alt="IP报文在协议栈中的位置"></li></ul><h3 id="2-DHCP协议工作过程"><a href="#2-DHCP协议工作过程" class="headerlink" title="2.DHCP协议工作过程"></a>2.DHCP协议工作过程</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/DHCP%E5%B7%A5%E4%BD%9C%E8%BF%87%E7%A8%8B.png" alt="DHCP工作过程"></p><blockquote><p>一台新接入网络的主机，只有自己的MAC地址，没有自己的IP地址、默认网关、子网掩码</p></blockquote><ul><li>主机向DHCP服务器发送一个DHCP发现报文，由主机上的DHCP客户端进程发送<ul><li>DHCP是应用层-&gt;传输层（UDP数据报）</li><li>本质是两个进程的通信</li><li>传输层-&gt;网络层（IP数据报），源地址填全0（本网络的本主机），目的IP地址全1</li><li>网络层-&gt;数据链路层（MAC帧），源MAC是自己的MAC地址，目的MAC全1</li></ul></li><li>DHCP服务器从IP地址池中找到一个没有被分配的IP地址分配给主机<ul><li>需要指明租用期是多少，如果到时间，可以续租</li><li>需要指明子网掩码和默认网关</li><li>网络层源地址依旧是全1，因为对方依旧还没有IP地址</li><li>链路层目的MAC写成主机的MAC</li></ul></li><li>主机向DHCP服务器发送请求报文<ul><li>报文中需指出自己的MAC地址和接受的IP地址</li><li>网络层IP数据报中，源地址依旧是全0，<strong>目的IP地址全1※</strong><ul><li>全1原因：一个内网可能有多个DHCP服务器，每个服务器都会给主机一个提供报文，因此主机需要告诉所有DHCP服务器最终接受的是哪个IP地址</li></ul></li><li>链路层目的IP依旧全1</li></ul></li><li>DHCP服务器向主机发送DHCP确认报文<ul><li>与提供报文类似</li></ul></li></ul><h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/DHCP%E5%B0%8F%E7%BB%93.png" alt="DHCP小结"></p><h2 id="十、IPV6"><a href="#十、IPV6" class="headerlink" title="十、IPV6"></a>十、IPV6</h2><h3 id="1-IPV6数据报格式"><a href="#1-IPV6数据报格式" class="headerlink" title="1.IPV6数据报格式"></a>1.IPV6数据报格式</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IPV6%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F.png" alt="IPV6数据报格式"><br><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IPV6%E8%AF%A6%E7%BB%86%E6%95%B0%E6%8D%AE%E6%8A%A5%E6%A0%BC%E5%BC%8F.png" alt="IPV6详细数据报格式"></p><h3 id="2-IPV6和IPV4区别"><a href="#2-IPV6和IPV4区别" class="headerlink" title="2.IPV6和IPV4区别"></a>2.IPV6和IPV4区别</h3><ul><li>IPV6有128位，IPV4有32位</li><li>IPV6将校验和字段移除，以减少每跳的处理时间</li><li>IPV6将可选字段移出首部，变为扩展首部，称为灵活的首部格式，路由器通常不对扩展首部进行检查，大大提高了路由器的处理效率</li><li>IPV6支持即插即用（自动配置），不需要DHCP协议</li><li>IPV6首部长度必须是8B的整数倍，IPV4首部是4B的整数倍</li><li>IPV6只能在主机处分片，IPV4可以在路由器和主机处分片</li><li>ICMPv6：附加报文类型“分组过大”</li><li>IPV6支持资源的预分配，支持实时视像等要求，保证一定的带宽和时延的应用</li><li>IPV6取消了协议字段，改成下一个首部字段</li><li>IPV6取消了总长度字段，改用有效载荷长度字段</li><li>IPV6取消了服务类型字段</li></ul><h3 id="3-IPV6地址表示形式"><a href="#3-IPV6地址表示形式" class="headerlink" title="3.IPV6地址表示形式"></a>3.IPV6地址表示形式</h3><ul><li>冒号十六进制记法</li><li>压缩形式</li></ul><h3 id="4-IPV6基本地址类型"><a href="#4-IPV6基本地址类型" class="headerlink" title="4.IPV6基本地址类型"></a>4.IPV6基本地址类型</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IPV6%E5%9F%BA%E6%9C%AC%E5%9C%B0%E5%9D%80%E7%B1%BB%E5%9E%8B.png" alt="IPV6基本地址类型"></p><h3 id="5-IPV4向IPV6过渡"><a href="#5-IPV4向IPV6过渡" class="headerlink" title="5.IPV4向IPV6过渡"></a>5.IPV4向IPV6过渡</h3><p><img src="/2024/11/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh4/IPV4%E5%90%91IPV6%E8%BF%87%E6%B8%A1.png" alt="IPV4向IPV6过渡"></p><h2 id="十一、路由算法和路由协议"><a href="#十一、路由算法和路由协议" class="headerlink" title="十一、路由算法和路由协议"></a>十一、路由算法和路由协议</h2>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch6</title>
    <link href="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/"/>
    <url>/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/</url>
    
    <content type="html"><![CDATA[<h1 id="第六章-语法制导的翻译"><a href="#第六章-语法制导的翻译" class="headerlink" title="第六章 语法制导的翻译"></a><center>第六章 语法制导的翻译</center></h1><h2 id="一、属性文法"><a href="#一、属性文法" class="headerlink" title="一、属性文法"></a>一、属性文法</h2><h3 id="1-属性文法定义的形式"><a href="#1-属性文法定义的形式" class="headerlink" title="1.属性文法定义的形式"></a>1.属性文法定义的形式</h3><ul><li>基础文法</li><li>每个文法符号都有一个属性</li><li>每个文法产生式$A → α$有一组形式为$b :&#x3D;f(c_1, c_2, …, c_k )$的语义规则，其中$f$是函数，$b,c_1, c_2, …, c_k$ 是该产生式文法符号的属性</li></ul><h3 id="2-综合属性"><a href="#2-综合属性" class="headerlink" title="2.综合属性"></a>2.综合属性</h3><ul><li>b是A的属性，$c_1, c_2, …, c_k$是产生式右部文法符号的属性或A的其他属性</li></ul><h4 id="1-S属性定义"><a href="#1-S属性定义" class="headerlink" title="(1)S属性定义"></a>(1)S属性定义</h4><ul><li>仅仅使用综合属性的语法制导定义</li></ul><p><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/S%E5%B1%9E%E6%80%A7%E6%96%87%E6%B3%95.png" alt="S属性文法"></p><h4 id="2-注释分析树"><a href="#2-注释分析树" class="headerlink" title="(2)注释分析树"></a>(2)注释分析树</h4><ul><li>在语法树的基础上，将文法符号的属性标明</li></ul><h3 id="3-继承属性"><a href="#3-继承属性" class="headerlink" title="3.继承属性"></a>3.继承属性</h3><ul><li>b是产生式右部某个文法符号X的属性</li></ul><p><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E7%BB%A7%E6%89%BF%E5%B1%9E%E6%80%A7%E6%96%87%E6%B3%95.png" alt="继承属性文法"></p><h4 id="1-万能钥匙法"><a href="#1-万能钥匙法" class="headerlink" title="(1)万能钥匙法"></a>(1)万能钥匙法</h4><p><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E4%B8%87%E8%83%BD%E9%92%A5%E5%8C%99%E6%B3%95.png" alt="万能钥匙法"></p><ul><li>违反了“遍”的原则</li><li>在注释分析树的基础上，遍历每一个属性规则，若有属性之间的依赖，则引一条从决定方到被决定方的有向边</li><li>形成的有向图的拓扑排序为万能钥匙</li><li>addType函数：addtype (id.entry,L.in)的意义是在符号表中找到id，将其entry属性设置为L.in</li><li>虚综合属性：类似addtype (id.entry,L.in)的语义规则我们会虚拟构造一个L.s&#x3D;addtype，此时s就是虚综合属性</li></ul><h2 id="二、基于属性文法的处理方法"><a href="#二、基于属性文法的处理方法" class="headerlink" title="二、基于属性文法的处理方法"></a>二、基于属性文法的处理方法</h2><h3 id="1-构造语法分析树"><a href="#1-构造语法分析树" class="headerlink" title="1.构造语法分析树"></a>1.构造语法分析树</h3><h3 id="2-构造依赖树"><a href="#2-构造依赖树" class="headerlink" title="2.构造依赖树"></a>2.构造依赖树</h3><ul><li>在语法分析树的节点旁边再构造一个节点，表示其属性</li><li>虚综合属性也要构造</li><li>遍历每一个属性规则，若有属性之间的依赖，则引一条从决定方到被决定方的有向边</li></ul><h3 id="3-依赖图的构建算法"><a href="#3-依赖图的构建算法" class="headerlink" title="3.依赖图的构建算法"></a>3.依赖图的构建算法</h3><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs lasso">for 语法树中的每一个节点n <span class="hljs-keyword">do</span><br>    for 节点n的文法符号的每个属性a <span class="hljs-keyword">do</span><br>        为a在依赖图中建立一个节点;<br>for 语法树中的每一个节点n <span class="hljs-keyword">do</span><br>    for 节点n所用产生式对应的每一个语义规则 b:=f(c1,c2,<span class="hljs-params">...</span>,ck) <span class="hljs-keyword">do</span><br>        for i:=<span class="hljs-number">1</span> <span class="hljs-keyword">to</span> k <span class="hljs-keyword">do</span><br>            从节点ci到b节点构造一条有向边<br></code></pre></td></tr></table></figure><p><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E4%BE%9D%E8%B5%96%E5%9B%BE%E7%A4%BA%E4%BE%8B.png" alt="依赖图示例"></p><h3 id="4-良定义的属性文法"><a href="#4-良定义的属性文法" class="headerlink" title="4.良定义的属性文法"></a>4.良定义的属性文法</h3><ul><li>如果一属性文法不存在属性之间的循环依赖关系，则称该文法为良定义的</li><li>一个依赖图的任何拓扑排序都给出一个语法树中结点的语义规则计算的有效顺序</li></ul><h3 id="5-结果"><a href="#5-结果" class="headerlink" title="5.结果"></a>5.结果</h3><ul><li>按照属性文法的语义规则，实现了语义分析，在符号表中登记了每个变量标识符的类别信息，对符号表的操作也是一种语义分析、翻译</li></ul><h2 id="三、树遍历的属性计算方法"><a href="#三、树遍历的属性计算方法" class="headerlink" title="三、树遍历的属性计算方法"></a>三、树遍历的属性计算方法</h2><h3 id="1-过程"><a href="#1-过程" class="headerlink" title="1.过程"></a>1.过程</h3><ul><li>通过树遍历的方法计算属性的值<ul><li>假设语法树已建立，且树中已带有开始符号的继承属性和终结符的综合属性</li><li>以某种次序遍历语法树，直至计算出所有属性</li><li>深度优先，从左到右的遍历，直到计算出所有的属性（也需要多遍扫描）</li></ul></li></ul><h3 id="2-树遍历算法"><a href="#2-树遍历算法" class="headerlink" title="2.树遍历算法"></a>2.树遍历算法</h3><p><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E6%A0%91%E9%81%8D%E5%8E%86%E7%AE%97%E6%B3%95.png" alt="树遍历算法"></p><blockquote><p>先遍历所有子结点，求他们的继承属性，然后求自己的综合属性</p></blockquote><h2 id="四、一遍扫描的处理方法"><a href="#四、一遍扫描的处理方法" class="headerlink" title="四、一遍扫描的处理方法"></a>四、一遍扫描的处理方法</h2><h3 id="1-过程-1"><a href="#1-过程-1" class="headerlink" title="1.过程"></a>1.过程</h3><ul><li>在语法分析的同时计算属性值<ul><li>所采用的语法分析方法</li><li>属性的计算次序</li></ul></li><li>所谓语法制导翻译法，直观上说就是为文法中每一个产生式配上一组语义规则，并且在语法分析的同时执行这些语义规则</li><li>语义规则被计算的世纪与语法分析方法有关<ul><li>自上而下分析，一个产生式匹配输入串成功时</li><li>自下而上分析，一个产生式被用于进行规约时</li></ul></li></ul><h3 id="2-抽象语法树（AST）"><a href="#2-抽象语法树（AST）" class="headerlink" title="2.抽象语法树（AST）"></a>2.抽象语法树（AST）</h3><ul><li>在语法树中去掉那些对翻译不必要的信息，从而获得更有效的源程序中间表示。</li><li>没有非终结符作为内部结点，内部结点由运算符充当，代表该节点具有该运算符作用在其子节点的对应的值之后的结果。<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/AST%E4%BE%8B%E5%AD%90.png" alt="AST例子"></li><li>其中，if语句的根结点是一个三目运算符</li></ul><h3 id="3-建立表达式的抽象语法树"><a href="#3-建立表达式的抽象语法树" class="headerlink" title="3.建立表达式的抽象语法树"></a>3.建立表达式的抽象语法树</h3><h4 id="1-mknode-op-left-right-函数"><a href="#1-mknode-op-left-right-函数" class="headerlink" title="(1)mknode(op,left,right)函数"></a>(1)mknode(op,left,right)函数</h4><ul><li>建立一个运算符结点，标号是op，两个域left和right分别指向左子树和右子树。</li></ul><h4 id="2-mkleaf-id-entry-函数"><a href="#2-mkleaf-id-entry-函数" class="headerlink" title="(2)mkleaf(id,entry)函数"></a>(2)mkleaf(id,entry)函数</h4><ul><li>建立一个标识符结点，标号为id，一个域entry指向标识符在符号表中的入口</li></ul><h4 id="3-mkleaf-num-val-函数"><a href="#3-mkleaf-num-val-函数" class="headerlink" title="(3)mkleaf(num,val)函数"></a>(3)mkleaf(num,val)函数</h4><ul><li>建立一个数结点，标号为num，一个域val用于存放数的值</li></ul><h3 id="4-建立抽象语法树的语义规则"><a href="#4-建立抽象语法树的语义规则" class="headerlink" title="4.建立抽象语法树的语义规则"></a>4.建立抽象语法树的语义规则</h3><p><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E5%BB%BA%E7%AB%8B%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91%E7%9A%84%E8%AF%AD%E4%B9%89%E8%A7%84%E5%88%99.png" alt="建立抽象语法树的语义规则"></p><ul><li>a-4+c的抽象语法树（S属性文法，非常适合与自下而上结合在一起）<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/a-4+c%E7%9A%84%E6%8A%BD%E8%B1%A1%E8%AF%AD%E6%B3%95%E6%A0%91.png" alt="a-4+c的抽象语法树"></li></ul><h2 id="五、S属性文法的自下而上计算"><a href="#五、S属性文法的自下而上计算" class="headerlink" title="五、S属性文法的自下而上计算"></a>五、S属性文法的自下而上计算</h2><h3 id="1-思想"><a href="#1-思想" class="headerlink" title="1.思想"></a>1.思想</h3><ul><li>S属性文法：只含有综合属性</li><li>在自下而上的分析器分析输入符号串的同时计算综合属性<ul><li>分析栈中保存语法符号和有关的综合属性值</li><li>每当进行规约时，新的语法符号的属性值久游栈中正在规约的产生式右边符号的属性值来计算</li></ul></li></ul><h3 id="2-实现"><a href="#2-实现" class="headerlink" title="2.实现"></a>2.实现</h3><ul><li>在分析栈中增加附加域存放综合属性值</li><li>假设产生式A→XYZ对应的语义规则为A.a:&#x3D;f(X.x,Y.y,Z.z)<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/S%E5%B1%9E%E6%80%A7%E6%96%87%E6%B3%95%E8%AE%A1%E7%AE%971.png" alt="S属性文法计算1"><br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/S%E5%B1%9E%E6%80%A7%E6%96%87%E6%B3%95%E8%AE%A1%E7%AE%972.png" alt="S属性文法计算2"><br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/S%E5%B1%9E%E6%80%A7%E6%96%87%E6%B3%95%E8%AE%A1%E7%AE%973.png" alt="S属性文法计算3"></li></ul><h2 id="六、L属性文法的自上而下计算"><a href="#六、L属性文法的自上而下计算" class="headerlink" title="六、L属性文法的自上而下计算"></a>六、L属性文法的自上而下计算</h2><h3 id="1-L属性文法和自顶向下翻译"><a href="#1-L属性文法和自顶向下翻译" class="headerlink" title="1.L属性文法和自顶向下翻译"></a>1.L属性文法和自顶向下翻译</h3><ul><li>按照深度优先遍历语法树，计算所有属性值</li><li>与LL(1)自上而下分析方法结合<ul><li>深度优先建立语法树</li><li>按照语义规则计算属性</li></ul></li></ul><h3 id="2-L属性文法"><a href="#2-L属性文法" class="headerlink" title="2.L属性文法"></a>2.L属性文法</h3><ul><li>对于每个产生式$A→X_1X_2…X_n$，其每个语义规则中的每个属性，要么是综合属性，要么是$X_j$的一个继承属性且这个继承属性仅依赖于<ul><li>产生式中$X_i$左边符号$X_1,X_2,…,X_{i-1}$的属性</li><li>A的继承属性</li></ul></li></ul><h3 id="3-翻译模式"><a href="#3-翻译模式" class="headerlink" title="3.翻译模式"></a>3.翻译模式</h3><ul><li>语义规则：给出了属性计算的定义，没有属性计算的次序等细节</li><li>翻译模式：给出了使用语义规则进行计算的次序，把实现细节表示出来<ul><li>在翻译模式中，和文法符号相关的属性和语义规则（语义动作），用{}括起来，插入到产生式右部的合适位置上<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E7%BF%BB%E8%AF%91%E6%A8%A1%E5%BC%8F%E7%A4%BA%E4%BE%8B.png" alt="翻译模式示例"></li></ul></li></ul><h3 id="4-设计翻译模式的原则"><a href="#4-设计翻译模式的原则" class="headerlink" title="4.设计翻译模式的原则"></a>4.设计翻译模式的原则</h3><ul><li>设计翻译模式时，必须保证当某个动作引用一个属性时它必须是有定义的。</li><li>L属性文法本身就能确保每个动作不会引用尚未计算出来的属性。</li></ul><h3 id="5-建立翻译模式"><a href="#5-建立翻译模式" class="headerlink" title="5.建立翻译模式"></a>5.建立翻译模式</h3><ul><li>当只需要综合属性时，为每一个语义规则建立一个包含赋值的动作，并把这个动作放在相应的产生式右边的末尾。<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E7%BF%BB%E8%AF%91%E6%A8%A1%E5%BC%8F1.png" alt="翻译模式1"></li><li>如果既有综合属性又有继承属性，建立翻译模式时必须保证：<ul><li>产生式右边的符号的继承属性必须在这个符号以前的动作中计算出来</li><li>一个动作不能引用这个动作右边的符号的综合属性</li><li>产生式左边非终结符的综合属性只有在它引用的所有属性都计算出来以后才能计算。计算这种属性的动作通常放在产生式右端末尾<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E7%BF%BB%E8%AF%91%E6%A8%A1%E5%BC%8F2.png" alt="翻译模式2"></li></ul></li></ul><h3 id="6-翻译模式示例"><a href="#6-翻译模式示例" class="headerlink" title="6.翻译模式示例"></a>6.翻译模式示例</h3><p><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E7%BF%BB%E8%AF%91%E6%A8%A1%E5%BC%8F%E7%A4%BA%E4%BE%8B2.png" alt="翻译模式示例"></p><h3 id="7-统一语义动作执行时机"><a href="#7-统一语义动作执行时机" class="headerlink" title="7.统一语义动作执行时机"></a>7.统一语义动作执行时机</h3><ul><li>把所有产生式的语义动作都放在产生式末尾</li><li>转换方法<ul><li>加入新产生式$M→\varepsilon$</li><li>把嵌入在产生式中的每个语义动作用不同的非终结符M代替，并把这个动作放在产生式$M→\varepsilon$的末尾<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E7%BB%9F%E4%B8%80%E6%97%B6%E6%9C%BA.png" alt="统一时机"></li></ul></li></ul><h3 id="8-消除翻译模式中的左递归"><a href="#8-消除翻译模式中的左递归" class="headerlink" title="8.消除翻译模式中的左递归"></a>8.消除翻译模式中的左递归</h3><ul><li>语义动作是在相同位置上的符号被展开（匹配成功）时执行的</li><li>为了构造不带回溯的自顶向下语法分析，必须消除文法中的左递归</li><li>当消除一个翻译模式的基本文法的左递归时同时考虑属性计算<ul><li>适合带综合属性的翻译模式</li></ul></li><li>R.i是继承属性，R.s是综合属性<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E6%B6%88%E9%99%A4%E5%B7%A6%E9%80%92%E5%BD%92.png" alt="消除左递归"></li><li>推广：<br>假设有翻译模式：<br>$$<br>A→A_1Y{A.a:&#x3D;g(A_1.a, Y.y)}\<br>A→X {A.a:&#x3D;f(X.x)}<br>$$</li><li>它的每个文法符号都有一个综合属性，用小写字母表示，g和f是任意函数<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E6%8E%A8%E5%B9%BF%E6%B6%88%E9%99%A4%E5%B7%A6%E9%80%92%E5%BD%92.png" alt="推广消除左递归"></li><li>消之前，f计算的是A.a，消之后，A.a不止包含f，f只能算出R.i，而A.a与R.s相等</li><li>第二句背</li><li>不会了，不想写了<br><img src="/2024/11/12/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch6/%E4%BE%8B%E5%AD%90.png" alt="例子"></li></ul><h2 id="七、递归下降翻译器的设计"><a href="#七、递归下降翻译器的设计" class="headerlink" title="七、递归下降翻译器的设计"></a>七、递归下降翻译器的设计</h2>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch5</title>
    <link href="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/"/>
    <url>/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/</url>
    
    <content type="html"><![CDATA[<h1 id="第五章-自下而上的语法分析"><a href="#第五章-自下而上的语法分析" class="headerlink" title="第五章 自下而上的语法分析"></a><center>第五章 自下而上的语法分析</center></h1><h2 id="一、自下而上分析的基本问题"><a href="#一、自下而上分析的基本问题" class="headerlink" title="一、自下而上分析的基本问题"></a>一、自下而上分析的基本问题</h2><h3 id="1-自下而上分析方法的关键"><a href="#1-自下而上分析方法的关键" class="headerlink" title="1.自下而上分析方法的关键"></a>1.自下而上分析方法的关键</h3><p>找出当前句型的可归约串，然后根据产生式判别将它归约成什么样的非终结符</p><h3 id="2-规范规约基本概念"><a href="#2-规范规约基本概念" class="headerlink" title="2.规范规约基本概念"></a>2.规范规约基本概念</h3><h4 id="1-短语"><a href="#1-短语" class="headerlink" title="(1)短语"></a>(1)短语</h4><p>G为文法，S为开始符号，假定αβδ是G的一个句型，如果<br>$$<br>S\overset*{\Rightarrow}αβδ且A\overset+{\Rightarrow}β<br>$$<br>则称β是句型αβδ相对于非终结符A的短语。<br>使用语法树来表示：<br>针对某一非终结符，以该终结符为根的，高度大于等于2的子树的，所有叶子结点，组成了该终结符的短语。</p><h4 id="2-直接短语"><a href="#2-直接短语" class="headerlink" title="(2)直接短语"></a>(2)直接短语</h4><p>若$ A {\Rightarrow} β $，则β是非终结符A的直接短语。<br>使用语法树来表示：<br>针对某一非终结符，以其为根节点的，高度等于2的树的叶子结点，是该非终结符的直接短语。</p><h4 id="3-句柄"><a href="#3-句柄" class="headerlink" title="(3)句柄"></a>(3)句柄</h4><p>最左直接短语。<br>使用语法树来表示：<br>一棵语法树的最左边的高度为2的子树的叶子节点。</p><h4 id="4-规范规约"><a href="#4-规范规约" class="headerlink" title="(4)规范规约"></a>(4)规范规约</h4><p>从句子到开始符号的归约序列，如果每一步都是把句柄替换为相应产生式的左部符号而得到的，则称为规范归约。规范归约是最右推导（规范推导）的逆过程。<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E8%AF%AD%E6%B3%95%E6%A0%91.png" alt="语法树"></p><h3 id="3-自下而上的分析过程"><a href="#3-自下而上的分析过程" class="headerlink" title="3.自下而上的分析过程"></a>3.自下而上的分析过程</h3><p>考虑文法  </p><p>$G(E)：E→E+T|T$<br>$T→T*F | F$<br>$F→i| (E)$<br>$并假定输入串为(i+i)*i，考察自下而上的分析过程$</p><p>答案：<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E5%88%86%E6%9E%90%E8%BF%87%E7%A8%8B%E7%AD%94%E6%A1%88.png" alt="分析过程答案"></p><h2 id="二、LR分析法"><a href="#二、LR分析法" class="headerlink" title="二、LR分析法"></a>二、LR分析法</h2><h3 id="1-LR分析表工作过程"><a href="#1-LR分析表工作过程" class="headerlink" title="1.LR分析表工作过程"></a>1.LR分析表工作过程</h3><h4 id="1-初始化"><a href="#1-初始化" class="headerlink" title="(1)初始化"></a>(1)初始化</h4><p>状态栈：$S_0$<br>符号栈：#<br>输入串：$a_1a_2a_3…a_n$</p><h4 id="2-一般情况下"><a href="#2-一般情况下" class="headerlink" title="(2)一般情况下"></a>(2)一般情况下</h4><p>状态栈：$S_0S_1…S_m$<br>符号栈：#$X_1X_2…X_m$<br>输入串：$a_ia_{i+1}…a_n$#</p><h4 id="3-ACTION-S-m-a-i-S-x-移入动作"><a href="#3-ACTION-S-m-a-i-S-x-移入动作" class="headerlink" title="(3)$ACTION[S_m,a_i]&#x3D;S_x$移入动作"></a>(3)$ACTION[S_m,a_i]&#x3D;S_x$移入动作</h4><p>表示当前状态栈顶是状态$m$，输入串头为$a_i$，此时让$x$入状态栈，让$a_i$入符号栈，变为：<br>状态栈：$S_0S_1…S_mx$<br>符号栈：#$X_1X_2…X_ma_i$<br>输入串：$a_{i+1}…a_n$#</p><h4 id="4-ACTION-S-m-a-i-R-x-归约动作"><a href="#4-ACTION-S-m-a-i-R-x-归约动作" class="headerlink" title="(4)$ACTION[S_m,a_i]&#x3D;R_x$归约动作"></a>(4)$ACTION[S_m,a_i]&#x3D;R_x$归约动作</h4><p>表示当前状态栈顶是状态$m$，输入串头为$a_i$，此时，状态栈和符号栈顶k个元素出栈，并用产生式$x(A→X_{m-(k-1)}…X_m)$对符号栈出栈元素进行规约。（k表示被规约了k个字母）变为：<br>状态栈：$S_0S_1…S_{m-k}$<br>符号栈：#$X_1X_2…X_{m-k}A$<br>输入串：$a_ia_{i+1}…a_n$#<br>并且此时，若<br>$$<br>GOTO[S_{m-k},A]&#x3D;y,<br>$$<br>则跳转到状态y，y入状态栈顶，格局变为：<br>状态栈：$S_0S_1…S_{m-k}y$<br>符号栈：#$X_1X_2…X_{m-k}A$<br>输入串：$a_ia_{i+1}…a_n$#  </p><h4 id="5-ACTION-S-m-a-i-acc"><a href="#5-ACTION-S-m-a-i-acc" class="headerlink" title="(5)$ACTION[S_m,a_i]&#x3D;acc$"></a>(5)$ACTION[S_m,a_i]&#x3D;acc$</h4><p>分析成功</p><h4 id="6-ACTION-S-m-a-i-空白"><a href="#6-ACTION-S-m-a-i-空白" class="headerlink" title="(6)$ACTION[S_m,a_i]&#x3D;空白$"></a>(6)$ACTION[S_m,a_i]&#x3D;空白$</h4><p>出现语法错误</p><h3 id="2-LR分析算法"><a href="#2-LR分析算法" class="headerlink" title="2.LR分析算法"></a>2.LR分析算法</h3><ul><li>输入：串w和LR语法分析表，该表描述了文法G的ACTION函数和GOTO函数  </li><li>输出：如果w在L(G)中，则输出w的自底向上语法分析过程中的规约步骤；否则给出一个错误提示。  </li><li>方法：初始时，语法分析器栈中的内容为初始状态$S_0$，输入缓冲区中的内容为w#。然后，语法分析器执行下面的程序：<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/LR%E5%88%86%E6%9E%90%E7%AE%97%E6%B3%95.png" alt="LR分析算法"></li></ul><h3 id="3-LR分析器的逻辑结构"><a href="#3-LR分析器的逻辑结构" class="headerlink" title="3.LR分析器的逻辑结构"></a>3.LR分析器的逻辑结构</h3><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/LR%E5%88%86%E6%9E%90%E5%99%A8%E7%9A%84%E9%80%BB%E8%BE%91%E7%BB%93%E6%9E%84.png" alt="LR分析器的逻辑结构"></p><h2 id="三、LR-0-分析"><a href="#三、LR-0-分析" class="headerlink" title="三、LR(0)分析"></a>三、LR(0)分析</h2><h3 id="1-LR-0-项目"><a href="#1-LR-0-项目" class="headerlink" title="1.LR(0)项目"></a>1.LR(0)项目</h3><ul><li>把右部某位置有圆点的产生式称为相应文法的一个LR(0)项目，简称项目。<br>$$<br>A→a_1·a_2<br>$$<br>例如，</li></ul><p>$S→·bBB(1)$<br>$S→b·BB(2)$<br>$S→bB·B(3)$<br>$S→bBB·(4)$</p><ul><li>项目描述了句柄识别的状态</li><li>产生式1是移进项目，·后跟着终结符</li><li>产生式2&#x2F;3是待约项目，·后跟着非终结符</li><li>产生式4是规约项目，·后为空</li></ul><h3 id="2-增广文法"><a href="#2-增广文法" class="headerlink" title="2.增广文法"></a>2.增广文法</h3><ul><li>如果G是一个以S为开始符号的文法，则G的增广文法是在G中加上新开始符号S’和产生式S’→S而得到的文法</li><li>目的是使得文法的开始符号仅出现在一个产生式的左边，从而使得分析器只有有一个接受状态</li></ul><h3 id="3-项目闭包closure-I"><a href="#3-项目闭包closure-I" class="headerlink" title="3.项目闭包closure(I)"></a>3.项目闭包closure(I)</h3><ul><li>I是一个LR(0)项目，表示为$I→I_0…I_i·I_{i+1}…I_n，closure(I)$表示为：<ul><li>$I$本身</li><li>若形如$K→α·Aβ$的项目属于$I$，且$A→µ$是文法的一个产生式，任何形如$A→·µ$的项目也应加到$closure(I)$中</li><li>重复上述过程，直到$closure(I)$不变</li></ul></li><li>此时，$closure(I)$中的所有项目互相称为等价项目，$closure(I)$集合视为一个状态。</li></ul><h3 id="4-构建LR-0-自动机"><a href="#4-构建LR-0-自动机" class="headerlink" title="4.构建LR(0)自动机"></a>4.构建LR(0)自动机</h3><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E6%9E%84%E5%BB%BALR(0)%E8%87%AA%E5%8A%A8%E6%9C%BA.png" alt="构建LR(0)自动机"></p><h3 id="5-构造LR-0-分析表"><a href="#5-构造LR-0-分析表" class="headerlink" title="5.构造LR(0)分析表"></a>5.构造LR(0)分析表</h3><ul><li>行标为状态编号</li><li>ACTION表列标为终结符+#，GOTO函数列标为规约时使用过的非终结符</li><li>ACTION表中，若LR(0)自动机中的项目为移进项目，则ACTION&#x3D;sn，n为下一个状态的编号</li><li>ACTION表中，若LR(0)自动机中的项目为规约项目，则ACTION&#x3D;rn，n为使用产生式规约的编号</li><li>GOTO表中，若LR(0)自动机中的项目为待约项目，则GOTO&#x3D;n，n为下一个状态的编号</li><li>例：<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E6%9E%84%E9%80%A0LR(0)%E5%88%86%E6%9E%90%E8%A1%A8.png" alt="构造LR(0)分析表"></li></ul><h3 id="6-LR-0-分析过程的冲突"><a href="#6-LR-0-分析过程的冲突" class="headerlink" title="6.LR(0)分析过程的冲突"></a>6.LR(0)分析过程的冲突</h3><h4 id="1-移进-规约冲突"><a href="#1-移进-规约冲突" class="headerlink" title="(1)移进&#x2F;规约冲突"></a>(1)移进&#x2F;规约冲突</h4><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E7%A7%BB%E8%BF%9B%E8%A7%84%E7%BA%A6%E5%86%B2%E7%AA%81.png" alt="移进/规约冲突"></p><ul><li>$I_2$的第一条表示，无论后边是什么字符，都要采取规约动作，但$I_2$的第二条表示，如果下一个读入字符是*，则采取移进操作。</li><li>此时，自动机不知道到底是用移进还是规约动作。</li><li>同理$I_9$也有同样的问题。<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E7%A7%BB%E8%BF%9B%E8%A7%84%E7%BA%A6%E5%86%B2%E7%AA%81%E7%9A%84LR(0)%E5%88%86%E6%9E%90%E8%A1%A8.png" alt="移进/规约冲突的LR(0)分析表"></li><li>如果LR(0)分析表中没有语法分析动作冲突，那么给定的文法就称为LR(0)文法</li><li>不是所有CFG【上下文无关文法】都能用LR(0)方法进行分析，也就是说，CFG不总是LR(0)文法</li></ul><h4 id="2-规约-规约冲突"><a href="#2-规约-规约冲突" class="headerlink" title="(2)规约&#x2F;规约冲突"></a>(2)规约&#x2F;规约冲突</h4><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E8%A7%84%E7%BA%A6%E8%A7%84%E7%BA%A6%E5%86%B2%E7%AA%81.png" alt="规约/规约冲突"></p><ul><li>对于某一个状态，接受某个终极符后既可执行规约动作1，也可执行规约动作2，如图中的B和T，同时图中也有移进规约冲突。</li></ul><h3 id="7-SLR分析"><a href="#7-SLR分析" class="headerlink" title="7.SLR分析"></a>7.SLR分析</h3><h4 id="1-思想"><a href="#1-思想" class="headerlink" title="(1)思想"></a>(1)思想</h4><ul><li>可以解决一些冲突。移进&#x2F;规约冲突例中，若下一个输入符号是*，即使我们选择规约出E，但*并不在E的FOLLOW集中，而在T的FOLLOW集中，因此我们要选择移进动作。<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/SLR%E5%8C%96%E8%A7%A3%E5%86%B2%E7%AA%81%E5%90%8E%E7%9A%84%E5%88%86%E6%9E%90%E8%A1%A8.png" alt="SLR化解冲突后的分析表"></li></ul><h4 id="2-算法"><a href="#2-算法" class="headerlink" title="(2)算法"></a>(2)算法</h4><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/SLR%E7%AE%97%E6%B3%95.png" alt="SLR算法"></p><ul><li>理解：下一个输入符号是a，先查看所有移进项目，圆点后边如果有a，则选择移进a，如果a在规约项目左部的FOLLOW集中，则选择规约。</li></ul><h4 id="3-与LR-0-对比"><a href="#3-与LR-0-对比" class="headerlink" title="(3)与LR(0)对比"></a>(3)与LR(0)对比</h4><ul><li>LR(0)在分析时向前看0个符号，也就是不向前看，在分析表中，若遇到ACTION&#x3D;r，则一行全都是规约动作；SLR分析时向前查看一个符号，当输入符号不在FOLLOW集中，才采取规约动作。<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/SLR%E5%88%86%E6%9E%90.png" alt="SLR分析"></li></ul><h4 id="4-SLR分析遇到的冲突"><a href="#4-SLR分析遇到的冲突" class="headerlink" title="(4)SLR分析遇到的冲突"></a>(4)SLR分析遇到的冲突</h4><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/SLR%E5%88%86%E6%9E%90%E6%B3%95%E7%9A%84%E5%86%B2%E7%AA%81.png" alt="SLR分析法的冲突"></p><ul><li>此例中，等号在R的FOLLOW集中，发生了冲突。</li></ul><h2 id="四、LR-1-分析法"><a href="#四、LR-1-分析法" class="headerlink" title="四、LR(1)分析法"></a>四、LR(1)分析法</h2><h3 id="1-LR-1-项目"><a href="#1-LR-1-项目" class="headerlink" title="1.LR(1)项目"></a>1.LR(1)项目</h3><ul><li>将一般形式为$[A→αβ,a]$的项称为$LR(1)$项，其中$A→αβ$是一个产生式</li><li>a是一个终结符（包括#），他的含义是，在当前状态下，A后面要求紧跟的终结符，称为该项的展望符(lookahead)</li><li>也就是说，只有在A后面是a时，才使用这个项目。</li><li>LR(1)中的1指二元组第二个项。</li><li>在形如$[A→α·β,a]$且$ β≠ \varepsilon $的项中，展望符a没有任何作用。</li><li>但是一个形如$[A→α,a]$的项在只有在下一个输入符号是a时才可以按照A→α进行规约。<ul><li>这样的a的集合总是FOLLOW(A)的子集，而且它通常是一个真子集。</li></ul></li></ul><h3 id="2-LR-1-等价项目"><a href="#2-LR-1-等价项目" class="headerlink" title="2.LR(1)等价项目"></a>2.LR(1)等价项目</h3><ul><li>对于待约项目$[A→α·Bβ,a]$，若$B→γ$，则等价项目是$[B→·γ,b]$</li><li>$b∈FIRST(βa)$</li></ul><h3 id="3-构建LR-1-自动机"><a href="#3-构建LR-1-自动机" class="headerlink" title="3.构建LR(1)自动机"></a>3.构建LR(1)自动机</h3><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/LR(1)%E8%87%AA%E5%8A%A8%E6%9C%BA%E4%BE%8B%E5%AD%90.png" alt="LR(1)自动机例子"></p><ul><li>如果除展望符外，两个LR(1)项目集是相同的，则称这两个LR(1)项目集是同心的，如$I_8$和$I_10$、$I_4$和$I_11$</li></ul><h3 id="4-LR-1-项目集闭包计算算法"><a href="#4-LR-1-项目集闭包计算算法" class="headerlink" title="4.LR(1)项目集闭包计算算法"></a>4.LR(1)项目集闭包计算算法</h3><ul><li>对于I中的每一项$[A→α·β,a]$</li><li>对于增广文法中的每一个产生式$[B→·γ,b]$</li><li>对于$FIRST[βa]$中的每一个符号b</li><li>将$[B→·γ,b]$加到集合I中</li><li>直到集合I没有变化为止</li></ul><h3 id="5-LR-1-分析表的构造算法"><a href="#5-LR-1-分析表的构造算法" class="headerlink" title="5.LR(1)分析表的构造算法"></a>5.LR(1)分析表的构造算法</h3><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/LR(1)%E5%88%86%E6%9E%90%E8%A1%A8%E7%9A%84%E6%9E%84%E9%80%A0%E7%AE%97%E6%B3%95.png" alt="LR(1)分析表的构造算法"></p><h2 id="五、LALR分析法"><a href="#五、LALR分析法" class="headerlink" title="五、LALR分析法"></a>五、LALR分析法</h2><h3 id="1-为何被提出？"><a href="#1-为何被提出？" class="headerlink" title="1.为何被提出？"></a>1.为何被提出？</h3><ul><li>LR(1)分析法占用的空间多，因为状态多，有很多同心项：<br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E5%90%88%E5%B9%B6%E5%90%8C%E5%BF%83%E9%A1%B9%E5%89%8D.png" alt="合并同心项前"><br><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/%E5%90%88%E5%B9%B6%E5%90%8C%E5%BF%83%E9%A1%B9%E5%90%8E.png" alt="合并同心项后"></li></ul><h3 id="2-可能出现的问题"><a href="#2-可能出现的问题" class="headerlink" title="2.可能出现的问题"></a>2.可能出现的问题</h3><h4 id="1-可能会产生归约-规约冲突"><a href="#1-可能会产生归约-规约冲突" class="headerlink" title="(1)可能会产生归约&#x2F;规约冲突"></a>(1)可能会产生归约&#x2F;规约冲突</h4><p><img src="/2024/10/29/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch5/LALR%E5%86%B2%E7%AA%81.png" alt="LALR冲突"></p><ul><li>不会产生移进规约冲突<blockquote><p>因为同心项目中，“心”是相同的，即每一项的产生式部分相同，合并的是展望符，而展望符只在归约时起作用，在移进时不起作用。<br>因此，只要合并前无移进&#x2F;归约冲突，合并后就没有。</p></blockquote></li></ul><h4 id="2-推迟错误的发现"><a href="#2-推迟错误的发现" class="headerlink" title="(2)推迟错误的发现"></a>(2)推迟错误的发现</h4><ul><li>会晚发现错误，不会放过错误</li></ul><h3 id="3-LALR-1-特点"><a href="#3-LALR-1-特点" class="headerlink" title="3.LALR(1)特点"></a>3.LALR(1)特点</h3><ul><li>形式上与LR(1)相同</li><li>大小上与LR(0)&#x2F;SLR相当</li><li>分析能力介于SLR和LR(1)之间<br>$$<br>SLR&lt;LALR(1)&lt;LR(1)<br>$$</li><li>合并后的展望符的集合依旧是FOLLOW集的子集</li></ul>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络Ch3</title>
    <link href="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/"/>
    <url>/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/</url>
    
    <content type="html"><![CDATA[<h1 id="第三章-数据链路层"><a href="#第三章-数据链路层" class="headerlink" title="第三章 数据链路层"></a><center>第三章 数据链路层</center></h1><h2 id="一、数据链路层所处的地位"><a href="#一、数据链路层所处的地位" class="headerlink" title="一、数据链路层所处的地位"></a>一、数据链路层所处的地位</h2><h3 id="1-数据链路层使用物理层提供的“比特传输”服务。"><a href="#1-数据链路层使用物理层提供的“比特传输”服务。" class="headerlink" title="1.数据链路层使用物理层提供的“比特传输”服务。"></a>1.数据链路层使用物理层提供的“比特传输”服务。</h3><h3 id="2-数据链路层为网络层提供服务，将网络层的IP数据报（分组）封装成帧，传输给下一节点。"><a href="#2-数据链路层为网络层提供服务，将网络层的IP数据报（分组）封装成帧，传输给下一节点。" class="headerlink" title="2.数据链路层为网络层提供服务，将网络层的IP数据报（分组）封装成帧，传输给下一节点。"></a>2.数据链路层为网络层提供服务，将网络层的IP数据报（分组）封装成帧，传输给下一节点。</h3><h3 id="3-物理链路：传输介质（第0层）-物理层（第1层）实现了相邻结点之间的“物理链路”"><a href="#3-物理链路：传输介质（第0层）-物理层（第1层）实现了相邻结点之间的“物理链路”" class="headerlink" title="3.物理链路：传输介质（第0层）+物理层（第1层）实现了相邻结点之间的“物理链路”"></a>3.物理链路：传输介质（第0层）+物理层（第1层）实现了相邻结点之间的“物理链路”</h3><h3 id="4-逻辑链路：数据链路层需要基于“物理链路”，实现相邻结点之间无差错的“数据链路（逻辑链路）”"><a href="#4-逻辑链路：数据链路层需要基于“物理链路”，实现相邻结点之间无差错的“数据链路（逻辑链路）”" class="headerlink" title="4.逻辑链路：数据链路层需要基于“物理链路”，实现相邻结点之间无差错的“数据链路（逻辑链路）”"></a>4.逻辑链路：数据链路层需要基于“物理链路”，实现相邻结点之间无差错的“数据链路（逻辑链路）”</h3><h2 id="二、数据链路层功能"><a href="#二、数据链路层功能" class="headerlink" title="二、数据链路层功能"></a>二、数据链路层功能</h2><h3 id="1-组帧（封装成帧）"><a href="#1-组帧（封装成帧）" class="headerlink" title="1.组帧（封装成帧）"></a>1.组帧（封装成帧）</h3><h4 id="1-主要问题"><a href="#1-主要问题" class="headerlink" title="(1)主要问题"></a>(1)主要问题</h4><ul><li>帧定界：如何让接收方能够确定帧的界限</li><li>透明传输：接收方要能够去除“帧定界”的附加信息，把帧“恢复原貌”</li></ul><h4 id="2-组帧方法"><a href="#2-组帧方法" class="headerlink" title="(2)组帧方法"></a>(2)组帧方法</h4><h5 id="字符计数法"><a href="#字符计数法" class="headerlink" title="字符计数法"></a>字符计数法</h5><ul><li>原理：在每个帧开头，用一个定长计数字段表示帧长</li><li>帧长&#x3D;计数字段长度+数据字段长度</li><li>最大缺点：任何一个计数字段出错，都会导致后续所有帧无法定界</li></ul><h5 id="字节填充法"><a href="#字节填充法" class="headerlink" title="字节填充法"></a>字节填充法</h5><ul><li>头部加上00000001(01H)，表示ASCII中的SOH(Start Of Header)</li><li>尾部加上00000100(04H)，表示ASCII中的EOT(End Of Transimission)</li><li>转义字符ESC(Escape Character)：解决在数据中出现SOH和EOT时导致帧定界错误的情况<br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E8%BD%AC%E4%B9%89%E5%AD%97%E7%AC%A6.png" alt="转义字符"></li></ul><h5 id="零比特填充法"><a href="#零比特填充法" class="headerlink" title="零比特填充法"></a>零比特填充法</h5><ul><li>在头部和尾部，添加01111110</li><li>发送方要对数据部分进行处理，每当遇到连续5个1，就填充一个0</li><li>接收方要对数据部分进行处理，每当遇到连续5个1，就删除后边紧跟的0</li></ul><h5 id="违规编码法"><a href="#违规编码法" class="headerlink" title="违规编码法"></a>违规编码法</h5><ul><li>曼彻斯特编码（IEEE标准）上跳0下跳1，中间必变</li><li>如果周期中间没变，则“违规”，来分辨帧的边界</li></ul><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E7%BB%84%E5%B8%A7%E5%B0%8F%E7%BB%93.png" alt="组帧小结"></p><h3 id="2-差错控制"><a href="#2-差错控制" class="headerlink" title="2.差错控制"></a>2.差错控制</h3><h4 id="1-目标："><a href="#1-目标：" class="headerlink" title="(1)目标："></a>(1)目标：</h4><ul><li>发现并解决一个帧内部的“位错”</li></ul><h4 id="2-检错编码"><a href="#2-检错编码" class="headerlink" title="(2)检错编码"></a>(2)检错编码</h4><blockquote><p>接收方发现比特错后丢弃帧，并通知发送方重传帧</p></blockquote><h5 id="奇偶校验码"><a href="#奇偶校验码" class="headerlink" title="奇偶校验码"></a>奇偶校验码</h5><ul><li>信息位（有效数据）：指帧的“数据部分”</li><li>加上校验位，使整个校验码1的个数是奇数&#x2F;偶数</li><li>偶数用的多，因为便于硬件实现，使用异或（模2加）运算</li><li>只能检验奇数位错误，无纠错能力</li></ul><h5 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h5><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%A5%87%E5%81%B6%E6%A0%A1%E9%AA%8C%E5%B0%8F%E7%BB%93.png" alt="奇偶校验小结"></p><h5 id="循环冗余校验码-Cyclic-Redundancy-Check-CRC"><a href="#循环冗余校验码-Cyclic-Redundancy-Check-CRC" class="headerlink" title="循环冗余校验码(Cyclic Redundancy Check,CRC)"></a>循环冗余校验码(Cyclic Redundancy Check,CRC)</h5><ul><li>数据发送方、接收方约定一个“除数”</li><li>K个信息位+R个校验位作为“被除数”。添加校验位后需保证除法的余数是否为0</li><li>若不为0则出错<br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/CRC%E4%BE%8B.png" alt="CRC例"></li><li>若信息位+校验位&lt;&#x3D;2^R-1，那么可以纠1位错，否则不能</li></ul><h5 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h5><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/CRC%E7%A0%81%E5%B0%8F%E7%BB%93.png" alt="CRC码小结"></p><h4 id="3-纠错编码"><a href="#3-纠错编码" class="headerlink" title="(3)纠错编码"></a>(3)纠错编码</h4><blockquote><p>接收方发现并纠正比特错误</p></blockquote><h5 id="海明码"><a href="#海明码" class="headerlink" title="海明码"></a>海明码</h5><ul><li>在偶校验法的基础上改进，对索引各位进行偶校验，同时增加一个全校验位</li><li>考试不考，有时间再完善</li></ul><h2 id="三、流量控制、可靠传输"><a href="#三、流量控制、可靠传输" class="headerlink" title="三、流量控制、可靠传输"></a>三、流量控制、可靠传输</h2><h3 id="1-滑动窗口机制"><a href="#1-滑动窗口机制" class="headerlink" title="1.滑动窗口机制"></a>1.滑动窗口机制</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%BA%E5%88%B61.png" alt="滑动窗口机制1"><br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E6%BB%91%E5%8A%A8%E7%AA%97%E5%8F%A3%E6%9C%BA%E5%88%B62.png" alt="滑动窗口机制2"><br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E9%87%8D%E7%82%B9%E5%85%B3%E6%B3%A8.png" alt="重点关注"></p><h3 id="2-停止-等待协议-S-W"><a href="#2-停止-等待协议-S-W" class="headerlink" title="2.停止-等待协议(S-W)"></a>2.停止-等待协议(S-W)</h3><h4 id="1-滑动窗口机制-1"><a href="#1-滑动窗口机制-1" class="headerlink" title="(1)滑动窗口机制"></a>(1)滑动窗口机制</h4><ul><li>发送窗口$W_T&#x3D;1$</li><li>接收窗口$W_R&#x3D;1$</li></ul><h4 id="2-帧编号"><a href="#2-帧编号" class="headerlink" title="(2)帧编号"></a>(2)帧编号</h4><ul><li>只需1bit给帧编号</li><li>要求$W_T+W_R≤2^n$（n是bit位数）</li></ul><h4 id="3-几个概念"><a href="#3-几个概念" class="headerlink" title="(3)几个概念"></a>(3)几个概念</h4><ul><li>帧的首尾主要是一些控制信息，如：帧定界信息、校验码、帧类型、帧序号。</li><li>帧类型：实际应用中，通信一般都是双向的，双方都可能发送数据帧或确认帧。</li><li>帧序号：标明帧的帧号。</li><li>数据帧的数据部分通常很短，甚至可以为空。<br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5.png" alt="几个概念"></li></ul><h4 id="4-正常情况"><a href="#4-正常情况" class="headerlink" title="(4)正常情况"></a>(4)正常情况</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%81%9C%E7%AD%89%E6%AD%A3%E5%B8%B8%E6%83%85%E5%86%B5.png" alt="停等正常情况"></p><ul><li>发送方发送i号数据帧</li><li>接收方接收到i号数据帧</li><li>接收方向发送方发送确认帧ACK_i，滑动窗口右移</li><li>发送方收到确认帧，滑动窗口右移</li></ul><h4 id="5-异常情况"><a href="#5-异常情况" class="headerlink" title="(5)异常情况"></a>(5)异常情况</h4><h5 id="数据帧丢失"><a href="#数据帧丢失" class="headerlink" title="数据帧丢失"></a>数据帧丢失</h5><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%81%9C%E7%AD%89%E8%B6%85%E6%97%B6%E9%87%8D%E4%BC%A0.png" alt="停等超时重传"></p><ul><li>解决方法：超时重传</li><li>发送方在在发送后会开启一个计时器，当超时还没收到确认帧时，重新传输</li></ul><h5 id="确认帧丢失"><a href="#确认帧丢失" class="headerlink" title="确认帧丢失"></a>确认帧丢失</h5><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%81%9C%E7%AD%89%E7%A1%AE%E8%AE%A4%E5%B8%A7%E4%B8%A2%E5%A4%B1.png" alt="停等确认帧丢失"></p><ul><li>解决方法<ul><li>丢弃重复帧</li><li>返回重复帧的ACK</li></ul></li><li>接收方向发送方发送的确认帧，并且滑动窗口右移</li><li>接收方没有收到确认帧，向接收方重传</li><li>接收方丢弃重复帧，并返回重复帧的ACK</li></ul><h5 id="为什么给帧编号？"><a href="#为什么给帧编号？" class="headerlink" title="为什么给帧编号？"></a>为什么给帧编号？</h5><ul><li>若没有编号，则无法辨别重复帧</li></ul><h5 id="数据帧有“差错”"><a href="#数据帧有“差错”" class="headerlink" title="数据帧有“差错”"></a>数据帧有“差错”</h5><ul><li>接收方直接将数据帧丢弃，且不返回ACK</li><li>发送方超时重传</li></ul><h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%81%9C%E7%AD%89%E5%B0%8F%E7%BB%93.png" alt="停等小结"></p><ul><li>停等协议窗口大小为1，所以没有失序问题</li></ul><h3 id="3-后退N帧协议-GBN"><a href="#3-后退N帧协议-GBN" class="headerlink" title="3.后退N帧协议(GBN)"></a>3.后退N帧协议(GBN)</h3><h4 id="1-滑动窗口"><a href="#1-滑动窗口" class="headerlink" title="(1)滑动窗口"></a>(1)滑动窗口</h4><ul><li>发送窗口大于1，接收窗口等于1</li></ul><h4 id="2-正常情况"><a href="#2-正常情况" class="headerlink" title="(2)正常情况"></a>(2)正常情况</h4><ul><li>发送方发送W_T个帧</li><li>接收方每收到一个数据帧，滑动窗口就向后移一位，接收到最后一个数据帧后向发送方发送一个最后帧确认帧（累计确认）</li><li>发送方接收到确认帧，窗口向后移动</li></ul><h4 id="3-数据帧丢失"><a href="#3-数据帧丢失" class="headerlink" title="(3)数据帧丢失"></a>(3)数据帧丢失</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%90%8E%E9%80%80N%E6%95%B0%E6%8D%AE%E5%B8%A7%E4%B8%A2%E5%A4%B11.png" alt="后退N数据帧丢失1"><br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%90%8E%E9%80%80N%E6%95%B0%E6%8D%AE%E5%B8%A7%E4%B8%A2%E5%A4%B12.png" alt="后退N数据帧丢失2"></p><ul><li>若数据帧i丢失，或数据帧i出错被丢弃，则接收方向发送方发送最后一个正确的帧的确认帧，数据帧i以后的帧全部丢弃</li><li>发送方收到确认帧，滑动窗口向右移动到$i+1(mod W_T)$号帧处，然后超时重传，将i+1号帧后的所有帧全部重传，被重传的帧要重置计时器</li></ul><h4 id="4-确认帧丢失"><a href="#4-确认帧丢失" class="headerlink" title="(4)确认帧丢失"></a>(4)确认帧丢失</h4><ul><li>接收方向发送方发送确认帧，确认帧丢失</li><li>发送方超时重传</li><li>接收方收到“非法帧”，直接丢弃，返回最后一个正确帧的确认帧</li><li>发送方收到确认帧，滑动窗口移动</li></ul><h4 id="5-若不满足-W-T-W-R≤2-n"><a href="#5-若不满足-W-T-W-R≤2-n" class="headerlink" title="(5)若不满足$W_T+W_R≤2^n$"></a>(5)若不满足$W_T+W_R≤2^n$</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%B8%8D%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F.png" alt="不满足不等式"></p><h3 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%90%8E%E9%80%80N%E5%B0%8F%E7%BB%93.png" alt="后退N小结"></p><h3 id="4-选择重传协议-SR"><a href="#4-选择重传协议-SR" class="headerlink" title="4.选择重传协议(SR)"></a>4.选择重传协议(SR)</h3><h4 id="1-窗口大小"><a href="#1-窗口大小" class="headerlink" title="(1)窗口大小"></a>(1)窗口大小</h4><ul><li>$W_T+W_R≤2^n$</li><li>接收窗口的大小要小于等于发送窗口大小<blockquote><p>若接收窗口大于发送窗口，则接收窗口多出来的窗口会长期保持空状态（我猜，接收方更需要确保低延迟，所以不允许有空窗口等待发送方窗口移动的情况），通常取相等。</p></blockquote></li></ul><h4 id="2-正常情况-1"><a href="#2-正常情况-1" class="headerlink" title="(2)正常情况"></a>(2)正常情况</h4><ul><li>发送方向接收方发送帧，每个帧一个计时器</li><li>接收方每收到一个帧，都返回一个正确帧，都返回正确帧后，接收方滑动窗口向后移动</li><li>发送方接收到所有的正确帧，滑动窗口向后移动</li></ul><h4 id="3-数据帧丢失-1"><a href="#3-数据帧丢失-1" class="headerlink" title="(3)数据帧丢失"></a>(3)数据帧丢失</h4><ul><li>发送方发送一些数据帧，但有一个数据帧丢失</li><li>接收方收到部分数据帧，返回收到帧的确认帧，滑动窗口向后移动到没收到的帧序号的位置</li><li>发送方收到部分确认帧，滑动窗口移动到没有收到确认帧的位置，若窗口末尾有空位，则可以继续发送数据帧</li><li>发送方超时重传</li></ul><h4 id="4-数据帧差错而被丢弃"><a href="#4-数据帧差错而被丢弃" class="headerlink" title="(4)数据帧差错而被丢弃"></a>(4)数据帧差错而被丢弃</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/SR%E5%B8%A7%E5%B7%AE%E9%94%99%E8%A2%AB%E4%B8%A2%E5%BC%83.jpg" alt="SR帧差错被丢弃"></p><ul><li>接收方在收到错误帧后，会向发送方发送一个NCK否认帧</li><li>发送方收到否认帧后，立即重传，并重置计时器</li><li>请求重传机制</li></ul><h4 id="5-确认帧丢失"><a href="#5-确认帧丢失" class="headerlink" title="(5)确认帧丢失"></a>(5)确认帧丢失</h4><ul><li>确认帧丢失会导致发送方计时器超时，发送方重传</li><li>与此同时，接收方滑动窗口正常移动</li><li>接收方收到重传的帧后，帧落在窗口外，重新发送ACK</li></ul><h4 id="6-不满足-W-T-W-R≤2-n-导致的问题"><a href="#6-不满足-W-T-W-R≤2-n-导致的问题" class="headerlink" title="(6)不满足$W_T+W_R≤2^n$导致的问题"></a>(6)不满足$W_T+W_R≤2^n$导致的问题</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/SR%E4%B8%8D%E6%BB%A1%E8%B6%B3%E4%B8%8D%E7%AD%89%E5%BC%8F.png" alt="SR不满足不等式"></p><h3 id="小结-5"><a href="#小结-5" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/SR%E5%B0%8F%E7%BB%93.png" alt="SR小结"> </p><h2 id="四、三种协议的信道利用率分析"><a href="#四、三种协议的信道利用率分析" class="headerlink" title="四、三种协议的信道利用率分析"></a>四、三种协议的信道利用率分析</h2><h3 id="1-停等协议-SW"><a href="#1-停等协议-SW" class="headerlink" title="1.停等协议(SW)"></a>1.停等协议(SW)</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/SW%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87.png" alt="SW信道利用率"></p><ul><li>只考虑发送信道</li><li>理想状态指没有帧丢失、错误等情况</li></ul><h3 id="2-后退N、选择重传协议的信道利用率分析"><a href="#2-后退N、选择重传协议的信道利用率分析" class="headerlink" title="2.后退N、选择重传协议的信道利用率分析"></a>2.后退N、选择重传协议的信道利用率分析</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/GBN%E6%88%96SR%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87.png" alt="GBN或SR信道利用率"><br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E6%9C%80%E5%A4%A7%E7%AD%89%E4%BA%8E1.png" alt="最大等于1"></p><h3 id="小结-6"><a href="#小结-6" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87%E5%B0%8F%E7%BB%93.png" alt="信道利用率小结"></p><h2 id="五、信道划分和介质访问控制"><a href="#五、信道划分和介质访问控制" class="headerlink" title="五、信道划分和介质访问控制"></a>五、信道划分和介质访问控制</h2><h3 id="1-时分复用-Time-Division-Multiplexing"><a href="#1-时分复用-Time-Division-Multiplexing" class="headerlink" title="1.时分复用(Time Division Multiplexing)"></a>1.时分复用(Time Division Multiplexing)</h3><ul><li>将时间分为等长的“TDM帧”，每个TDM帧又分为等长的m个“时隙”，将m个时隙分配给m对用户（节点）使用</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>每个节点最多只能分到信道总带宽的1&#x2F;m</li><li>如果某节点暂不发送数据，会导致被分配的时隙闲置，信道利用率低</li></ul><h3 id="2-统计时分复用-STDM-Statistic"><a href="#2-统计时分复用-STDM-Statistic" class="headerlink" title="2.统计时分复用(STDM,Statistic)"></a>2.统计时分复用(STDM,Statistic)</h3><ul><li>又称异步时分复用，在TDM的基础上，动态按需分配时隙</li></ul><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>如果需要时，一个节点可以在一段时间内获得所有信道带宽资源</li><li>如果某节点暂不发送数据，可以不分配时隙，信道利用率更高</li></ul><h3 id="3-频分复用-Frequency-Division-Multiplexing"><a href="#3-频分复用-Frequency-Division-Multiplexing" class="headerlink" title="3.频分复用(Frequency Division Multiplexing)"></a>3.频分复用(Frequency Division Multiplexing)</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E9%A2%91%E5%88%86%E5%A4%8D%E7%94%A8.png" alt="频分复用"></p><ul><li>将信道的总频划分为多个子频带，每个子频带作为一个子信道，没对用户使用一个子信道进行通信</li><li>不同子频带之间并不相连，有隔离频带</li><li>优点：各节点可同时发送信号；充分利用了信道带宽（Hz）</li><li>缺点：FDM技术只能用于模拟信号的传输</li></ul><h3 id="4-波分复用"><a href="#4-波分复用" class="headerlink" title="4.波分复用"></a>4.波分复用</h3><ul><li>光的频分复用</li><li>不同波长的光频率也不同，C&#x3D;λf</li><li>光信号的频带范围（带宽）非常大，因此很适合采用波分复用技术，将一根光纤在逻辑上拆分为多个子信道</li></ul><h3 id="5-码分复用-CDM"><a href="#5-码分复用-CDM" class="headerlink" title="5.码分复用(CDM)"></a>5.码分复用(CDM)</h3><h4 id="1-给各节点分配专属“码片序列”"><a href="#1-给各节点分配专属“码片序列”" class="headerlink" title="(1)给各节点分配专属“码片序列”"></a>(1)给各节点分配专属“码片序列”</h4><ul><li>“码片序列”包含m个码片（信号值），可以看作“m维向量”</li><li>要求：各节点的向量必须正交（内积为0）</li><li>相互通信的各节点知道彼此的“码片序列”</li></ul><h4 id="2-发送方发送数据"><a href="#2-发送方发送数据" class="headerlink" title="(2)发送方发送数据"></a>(2)发送方发送数据</h4><ul><li>发出的向量与码片序列相同表示1，不同表示0</li></ul><h4 id="3-信号在传输过程中“叠加”"><a href="#3-信号在传输过程中“叠加”" class="headerlink" title="(3)信号在传输过程中“叠加”"></a>(3)信号在传输过程中“叠加”</h4><ul><li>当多个发送方同时发送数据时，信号值会叠加（本质是向量加法）</li></ul><h4 id="4-接收方接收数据"><a href="#4-接收方接收数据" class="headerlink" title="(4)接收方接收数据"></a>(4)接收方接收数据</h4><ul><li>接收方收到的是叠加信号，需要将信号分离</li><li>方法：叠加信号与码片序列做规格化内积，结果为1表示比特1，为0表示比特0</li></ul><h3 id="小结-7"><a href="#小结-7" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BF%A1%E9%81%93%E5%88%92%E5%88%86%E5%92%8C%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%B0%8F%E7%BB%93.png" alt="信道划分和介质访问控制小结"></p><h2 id="六、随机访问介质访问控制"><a href="#六、随机访问介质访问控制" class="headerlink" title="六、随机访问介质访问控制"></a>六、随机访问介质访问控制</h2><h3 id="1-ALOHA协议和时隙ALOHA协议"><a href="#1-ALOHA协议和时隙ALOHA协议" class="headerlink" title="1.ALOHA协议和时隙ALOHA协议"></a>1.ALOHA协议和时隙ALOHA协议</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/ALOHA.png" alt="ALOHA"></p><ul><li>几个节点共享一个信道</li><li>纯ALOHA在数据准备完毕后立刻传输</li><li>时隙ALOHA将时间分为一个个时隙，时隙大小等于传输一个帧需要的时间，每次发送都需要从时隙的开头发送。</li><li>时隙ALOHA避免了用户发送数据的随意性，降低了冲突概率，提高了信道利用率</li></ul><h3 id="2-CSMA协议-Carrier-Sense-Multiple-Access，载波监听多路访问协议"><a href="#2-CSMA协议-Carrier-Sense-Multiple-Access，载波监听多路访问协议" class="headerlink" title="2.CSMA协议(Carrier Sense Multiple Access，载波监听多路访问协议)"></a>2.CSMA协议(Carrier Sense Multiple Access，载波监听多路访问协议)</h3><ul><li>在发送数据之前，先<strong>监听</strong>信道是否空闲，只有信道空闲时，才会尝试发送</li></ul><h4 id="1-1-坚持CSMA协议"><a href="#1-1-坚持CSMA协议" class="headerlink" title="(1)1-坚持CSMA协议"></a>(1)1-坚持CSMA协议</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/1-%E5%9D%9A%E6%8C%81CSMA%E5%8D%8F%E8%AE%AE.png" alt="1-坚持CSMA协议"></p><ul><li>坚持：指坚持监听信道</li><li>优点：信道利用率高，信道一旦空闲，就可以被下一个节点使用</li><li>缺点：当多个节点都已准备好数据时，一旦信道空闲，就会开始发送，冲突概率大</li></ul><h4 id="2-非坚持CSMA协议"><a href="#2-非坚持CSMA协议" class="headerlink" title="(2)非坚持CSMA协议"></a>(2)非坚持CSMA协议</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E9%9D%9E%E5%9D%9A%E6%8C%81CSMA%E5%8D%8F%E8%AE%AE.png" alt="非坚持CSMA协议"></p><ul><li>非坚持：当信道不空闲时，不坚持监听，而是随机推迟一段时间再监听</li><li>优点：当多个节点都已准备好数据时，如果信道不空闲，则各节点会随机推迟一段时间并再次尝试监听，从而使各节点错开传输数据，降低了冲突概率</li><li>缺点：信道刚恢复空闲时，可能不会被立即利用，导致信道利用率降低</li></ul><h4 id="3-p-坚持CSMA协议"><a href="#3-p-坚持CSMA协议" class="headerlink" title="(3)p-坚持CSMA协议"></a>(3)p-坚持CSMA协议</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/p-%E5%9D%9A%E6%8C%81CSMA%E5%8D%8F%E8%AE%AE.png" alt="p-坚持CSMA协议"></p><ul><li>p指的是信道空闲时，节点选择发送数据的概率</li><li>降低了冲突概率，提升信道利用率</li></ul><h3 id="小结-8"><a href="#小结-8" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E9%9A%8F%E6%9C%BA%E8%AE%BF%E9%97%AE%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6.png" alt="随机访问介质访问控制"></p><h3 id="4-CSMA-CD协议-Collision-Detection"><a href="#4-CSMA-CD协议-Collision-Detection" class="headerlink" title="4.CSMA&#x2F;CD协议(Collision Detection)"></a>4.CSMA&#x2F;CD协议(Collision Detection)</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/CSMACD%E5%8D%8F%E8%AE%AE.png" alt="CSMACD协议"></p><ul><li>用于早期的有线以太网（总线型）</li><li>先听后发，边听边发，冲突停发，随机重发</li></ul><h4 id="1-如何随机重发"><a href="#1-如何随机重发" class="headerlink" title="(1)如何随机重发"></a>(1)如何随机重发</h4><ul><li>截断二进制指数退避算法<ul><li>随机等待一段时间&#x3D;r倍争用期，其中r是随机数，k是重发次数</li><li>当k≤10，在$[0,2^k-1]$随机取一个整数r</li><li>当k&gt;10，在$[0,2^10-1]$随机取一个整数r</li></ul></li><li>第10次冲突是随机重发的分水岭</li><li>第16次冲突，直接躺平，放弃传帧，报告网络层</li></ul><h4 id="2-最短帧长限制"><a href="#2-最短帧长限制" class="headerlink" title="(2)最短帧长限制"></a>(2)最短帧长限制</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E6%9C%80%E7%9F%AD%E5%B8%A7%E9%95%BF.png" alt="最短帧长"></p><ul><li>最短帧长&#x3D;2*最大单向传播时延*信道带宽。若收到的帧小于最短帧长，视为无效帧</li><li>最短帧长&#x3D;争用期长度*数据传输速率</li><li>同样也有最长帧长限制，防止某些节点一直占用信道</li><li>以太网规定，最短帧长&#x3D;64B，最长帧长1518B</li></ul><h4 id="小结-9"><a href="#小结-9" class="headerlink" title="小结"></a>小结</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E9%9A%8F%E6%9C%BA%E8%AE%BF%E9%97%AE%E4%BB%8B%E8%B4%A8%E8%AE%BF%E9%97%AE%E6%8E%A7%E5%88%B6%E5%B0%8F%E7%BB%93.png" alt="随机访问介质访问控制小结"></p><h2 id="七、CSMA-CA协议-Collision-Avoidance"><a href="#七、CSMA-CA协议-Collision-Avoidance" class="headerlink" title="七、CSMA&#x2F;CA协议(Collision Avoidance)"></a>七、CSMA&#x2F;CA协议(Collision Avoidance)</h2><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/CSMACA%E5%8D%8F%E8%AE%AE.png" alt="CSMACA协议"></p><ul><li>适用于无线网络（无线局域网WiFi）</li><li>发送方：先听后发，忙则退避</li><li>接收方：停止等待协议</li></ul><h3 id="1-AP-Access-Point"><a href="#1-AP-Access-Point" class="headerlink" title="1.AP(Access Point)"></a>1.AP(Access Point)</h3><ul><li>接入点，也就是你平时连接的无线WiFi热点</li><li>校园网&#x3D;路由器+n台交换机+n*m个AP</li><li>漫游：切换WiFi热点的动作</li><li>不使用CSMA&#x2F;CD原因<ul><li>硬件上很难实现“边听边发，冲突检测”，因为接收信号的强度往往远小于发送信号的强度，且在无线介质上信号强度的动态变化范围很大</li><li>存在“隐蔽站”问题，在无线通信中，并非所有站点都能够听见对方。发送节点处没有冲突并不意味着在接收节点处没有冲突。</li></ul></li></ul><h3 id="2-信道预约机制"><a href="#2-信道预约机制" class="headerlink" title="2.信道预约机制"></a>2.信道预约机制</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BF%A1%E9%81%93%E9%A2%84%E7%BA%A6%E6%9C%BA%E5%88%B6.png" alt="信道预约机制"></p><h3 id="小结-10"><a href="#小结-10" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/CSMACA%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.png" alt="CSMACA协议小结"></p><h2 id="八、令牌传递协议"><a href="#八、令牌传递协议" class="headerlink" title="八、令牌传递协议"></a>八、令牌传递协议</h2><h3 id="1-令牌帧"><a href="#1-令牌帧" class="headerlink" title="1.令牌帧"></a>1.令牌帧</h3><ul><li>包含令牌号，与主机编号对比来确定哪个主机发送数据</li><li>若是自己的令牌号但无需传数据，则立即释放此令牌帧并重新生成一个新令牌帧</li></ul><h3 id="2-数据帧"><a href="#2-数据帧" class="headerlink" title="2.数据帧"></a>2.数据帧</h3><ul><li>若是该主机发送数据，主机会把令牌帧转化为数据帧，包括令牌号、源地址、目的地址、数据部分、bool已接收</li><li>主机收到数据帧后，判断目的地址是否是自己，若不是则传给下一个节点，若是，将数据部分复制一份并把bool已接收设为true<br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BB%A4%E7%89%8C%E5%B8%A7%E5%92%8C%E6%95%B0%E6%8D%AE%E5%B8%A7.png" alt="令牌帧和数据帧"></li></ul><h3 id="小结-11"><a href="#小结-11" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BB%A4%E7%89%8C%E4%BC%A0%E9%80%92%E5%8D%8F%E8%AE%AE%E5%B0%8F%E7%BB%93.png" alt="令牌传递协议小结"></p><h2 id="八、以太网和IEEE802-3"><a href="#八、以太网和IEEE802-3" class="headerlink" title="八、以太网和IEEE802.3"></a>八、以太网和IEEE802.3</h2><h3 id="1-以太网标准（物理层）"><a href="#1-以太网标准（物理层）" class="headerlink" title="1.以太网标准（物理层）"></a>1.以太网标准（物理层）</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BB%A5%E5%A4%AA%E7%BD%91%E6%A0%87%E5%87%86.png" alt="以太网标准"></p><ul><li>半双工：同一时刻只能单向传输，可以改变方向</li><li>全双工：可以双向传输</li></ul><h3 id="2-介质访问控制子层（MAC子层）"><a href="#2-介质访问控制子层（MAC子层）" class="headerlink" title="2.介质访问控制子层（MAC子层）"></a>2.介质访问控制子层（MAC子层）</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/MACV2.png" alt="MACV2"></p><ul><li>记忆口诀：662N4，收发协数验</li><li>帧长范围：64B-1518B，因此数据部分长度为46B-1500B</li><li>V2版本的MAC子层就是数据链路层，而IEEE802.3版本的MAC子层上方还有逻辑链路控制子层(LLC)</li><li>违规编码：曼彻斯特编码为跳0反跳1看中间，中必变，因此中间不变就违规</li></ul><h3 id="3-帧的传播"><a href="#3-帧的传播" class="headerlink" title="3.帧的传播"></a>3.帧的传播</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%B8%A7%E7%9A%84%E4%BC%A0%E6%92%AD.png" alt="帧的传播"></p><ul><li>冲突域：如果两个节点同时发送数据会导致冲突，则节点组成冲突域</li><li>广播域：如果一个节点发送广播帧，可被另一个节点接收，则二者处于广播域</li></ul><h3 id="小结-12"><a href="#小结-12" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BB%A5%E5%A4%AA%E7%BD%91%E5%B0%8F%E7%BB%93.png" alt="以太网小结"></p><h2 id="九、VLAN基本概念与基本原理"><a href="#九、VLAN基本概念与基本原理" class="headerlink" title="九、VLAN基本概念与基本原理"></a>九、VLAN基本概念与基本原理</h2><h3 id="1-大型局域网可能遇到的问题"><a href="#1-大型局域网可能遇到的问题" class="headerlink" title="1.大型局域网可能遇到的问题"></a>1.大型局域网可能遇到的问题</h3><ul><li>局域网内任何一个结点发出的广播帧，都会被广播至所有节点。可能出现广播风暴</li><li>不安全，局域网内可能会有一些敏感节点被黑客攻击</li></ul><h3 id="2-VLAN（虚拟局域网）"><a href="#2-VLAN（虚拟局域网）" class="headerlink" title="2.VLAN（虚拟局域网）"></a>2.VLAN（虚拟局域网）</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/VLAN.png" alt="VLAN"></p><ul><li>可将一个大型局域网分割成若干个较小的VLAN，每个VLAN是一个广播域</li><li>需要用支持VLAN功能的以太网交换机实现</li><li>每个VLAN对应一个VID</li><li>当A发出一个广播帧，则VLAN-10的所有主机都会收到广播帧，而其他VLAN不会</li></ul><h3 id="3-VLAN划分方式"><a href="#3-VLAN划分方式" class="headerlink" title="3.VLAN划分方式"></a>3.VLAN划分方式</h3><h4 id="1-基于接口"><a href="#1-基于接口" class="headerlink" title="(1)基于接口"></a>(1)基于接口</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%9F%BA%E4%BA%8E%E6%8E%A5%E5%8F%A3.png" alt="基于接口"></p><ul><li>缺点：当一个主机的接口改变，无法改变映射</li><li>交换机2如何判断1发来的广播帧从属于哪个VLAN？<blockquote><p>主机与交换机之间传输的是标准以太网帧，但交换机与交换机之间传输的是802.1Q帧。这个帧会在标准以太网帧中插入4个字节的数据，包含VID<br><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/802.1Q%E5%B8%A7.png" alt="802.1Q帧"></p></blockquote></li></ul><h4 id="2-基于MAC地址"><a href="#2-基于MAC地址" class="headerlink" title="(2)基于MAC地址"></a>(2)基于MAC地址</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%9F%BA%E4%BA%8EMAC%E5%9C%B0%E5%9D%80.png" alt="基于MAC地址"></p><h4 id="3-基于IP地址"><a href="#3-基于IP地址" class="headerlink" title="(3)基于IP地址"></a>(3)基于IP地址</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%9F%BA%E4%BA%8EIP%E5%9C%B0%E5%9D%80.png" alt="基于IP地址"></p><ul><li>注：这种方式可以让VLAN的范围跨越路由器，让多个局域网的主机组成一个VLAN（需要网络层功能支持）</li></ul><h3 id="小结-13"><a href="#小结-13" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/VLAN%E5%B0%8F%E7%BB%93.png" alt="VLAN小结"></p><h2 id="十、无线局域网"><a href="#十、无线局域网" class="headerlink" title="十、无线局域网"></a>十、无线局域网</h2><h3 id="1-分类"><a href="#1-分类" class="headerlink" title="1.分类"></a>1.分类</h3><h4 id="1-有固定基础设施无线局域网"><a href="#1-有固定基础设施无线局域网" class="headerlink" title="(1)有固定基础设施无线局域网"></a>(1)有固定基础设施无线局域网</h4><ul><li>如802.11无线局域网</li><li>结点地位不同</li></ul><h4 id="2-无固定基础设施移动自组织网络"><a href="#2-无固定基础设施移动自组织网络" class="headerlink" title="(2)无固定基础设施移动自组织网络"></a>(2)无固定基础设施移动自组织网络</h4><ul><li>如AirDrop，华为分享</li><li>所有结点地位相同</li></ul><h3 id="2-802-11无线局域网"><a href="#2-802-11无线局域网" class="headerlink" title="2.802.11无线局域网"></a>2.802.11无线局域网</h3><h4 id="1-一个普通家用路由器的硬件架构"><a href="#1-一个普通家用路由器的硬件架构" class="headerlink" title="(1)一个普通家用路由器的硬件架构"></a>(1)一个普通家用路由器的硬件架构</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E5%AE%B6%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8.png" alt="家用路由器"></p><h4 id="2-802-11无线局域网的基本概念"><a href="#2-802-11无线局域网的基本概念" class="headerlink" title="(2)802.11无线局域网的基本概念"></a>(2)802.11无线局域网的基本概念</h4><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E6%97%A0%E7%BA%BF%E5%B1%80%E5%9F%9F%E7%BD%91%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5.png" alt="无线局域网基本概念"></p><ul><li>扩展服务集ESS：将多个AP连接到同一个分配系统，组成一个更到服务集<ul><li>全屋WiFi</li></ul></li><li>漫游：一个移动站从一个基本服务集切换到另一个基本服务集，仍然可以保持通信<ul><li>丝滑切换WiFi热点</li></ul></li></ul><h3 id="3-802-11帧的分类"><a href="#3-802-11帧的分类" class="headerlink" title="3.802.11帧的分类"></a>3.802.11帧的分类</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/802.11%E5%B8%A7%E7%9A%84%E5%88%86%E7%B1%BB.png" alt="802.11帧的分类"></p><h3 id="4-数据帧格式"><a href="#4-数据帧格式" class="headerlink" title="4.数据帧格式"></a>4.数据帧格式</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E6%95%B0%E6%8D%AE%E5%B8%A7%E6%A0%BC%E5%BC%8F.png" alt="数据帧格式"></p><h3 id="小结-14"><a href="#小结-14" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E6%97%A0%E7%BA%BF%E5%B1%80%E5%9F%9F%E7%BD%91%E5%B0%8F%E7%BB%93.png" alt="无线局域网小结"></p><h2 id="十一、广域网"><a href="#十一、广域网" class="headerlink" title="十一、广域网"></a>十一、广域网</h2><h2 id="十二、以太网交换机"><a href="#十二、以太网交换机" class="headerlink" title="十二、以太网交换机"></a>十二、以太网交换机</h2><h3 id="1-以太网交换机的自学习功能"><a href="#1-以太网交换机的自学习功能" class="headerlink" title="1.以太网交换机的自学习功能"></a>1.以太网交换机的自学习功能</h3><ul><li>主机之间互相知道对方的MAC地址（后续学习）</li><li>当主机向另一个主机发送数据时，会先将MAC帧发送给交换机，交换机以（MAC地址，端口号）将发送方的MAC地址放在交换表中，交换机不知道MAC地址（交换表中无对应项），会将MAC帧广播给每一个端口</li><li>交换表每个表项有一个有效期，有效期过后自动作废</li></ul><h3 id="2-交换机的交换方式"><a href="#2-交换机的交换方式" class="headerlink" title="2.交换机的交换方式"></a>2.交换机的交换方式</h3><h4 id="1-直通式交换方式"><a href="#1-直通式交换方式" class="headerlink" title="(1)直通式交换方式"></a>(1)直通式交换方式</h4><ul><li>仅接收并处理目的地址，直接将收到的帧转发给对应的端口</li><li>优点：<ul><li>转发时延低</li></ul></li><li>缺点：<ul><li>不适用需要速率匹配、协议转换或差错检测的线路</li></ul></li></ul><h4 id="2-存储转发交换方式"><a href="#2-存储转发交换方式" class="headerlink" title="(2)存储转发交换方式"></a>(2)存储转发交换方式</h4><ul><li>接收并处理整个帧（差错控制等）</li><li>优点：<ul><li>适用于需要速率匹配、协议转换或差错检测的线路</li></ul></li><li>缺点：<ul><li>转发时延高</li></ul></li></ul><h3 id="小结-15"><a href="#小结-15" class="headerlink" title="小结"></a>小结</h3><p><img src="/2024/10/19/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh3/%E4%BA%A4%E6%8D%A2%E6%9C%BA%E5%B0%8F%E7%BB%93.png" alt="交换机小结"></p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NoSql实验</title>
    <link href="/2024/10/19/NoSql%E5%AE%9E%E9%AA%8C/"/>
    <url>/2024/10/19/NoSql%E5%AE%9E%E9%AA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="NoSql实验记录"><a href="#NoSql实验记录" class="headerlink" title="NoSql实验记录"></a><center>NoSql实验记录</center></h1><p>写在前面：</p><blockquote><p>我写这个是为了记录我实验的过程，并不是一个教程。而且就算是记录我也写的足够详细了，我遇到的问题踩到的坑也都写上了，要是按照我的步骤你失败了说明是你的问题，自行上网查找解决方法，别来烦我。此外，我这个记录主要是非关系数据库实验，其他的包括前后端项目搭建的问题请自行解决。</p></blockquote><h2 id="实验一、MongoDB的下载及环境配置"><a href="#实验一、MongoDB的下载及环境配置" class="headerlink" title="实验一、MongoDB的下载及环境配置"></a>实验一、MongoDB的下载及环境配置</h2><p>没啥好说的，配环境而已，有时间就写，没时间就这样了。</p><h2 id="实验二、熟悉环境、建立-删除表、插入数据"><a href="#实验二、熟悉环境、建立-删除表、插入数据" class="headerlink" title="实验二、熟悉环境、建立&#x2F;删除表、插入数据"></a>实验二、熟悉环境、建立&#x2F;删除表、插入数据</h2><h3 id="1-打开Mongo-Shell命令行工具"><a href="#1-打开Mongo-Shell命令行工具" class="headerlink" title="1.打开Mongo Shell命令行工具"></a>1.打开Mongo Shell命令行工具</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Shell">mongosh<br></code></pre></td></tr></table></figure><blockquote><p>注：需在第一步完成Mongo Shell的环境变量配置，并确保你的数据库服务已经启动。不想配环境变量的话需要在Mongo Shell安装目录打这条指令，或者直接在终端中打出mongosh.exe的完整路径。  </p></blockquote><p>这一步完成后会显示连接到数据库，并默认连接到test数据库。使用<code>use dbname</code>即可切换到你想要的数据库，若没有这个数据库则会自动创建。</p><h3 id="2-编写程序，将给出的示例数据导入到MongoDB中"><a href="#2-编写程序，将给出的示例数据导入到MongoDB中" class="headerlink" title="2.编写程序，将给出的示例数据导入到MongoDB中"></a>2.编写程序，将给出的示例数据导入到MongoDB中</h3><p>这一步我没啥太好的解决办法，无脑编程序写吧，我使用js编写了一个小脚本，使用了xlsx和mongodb库。需要注意的是，示例数据给出的birthday属性需要处理一下，xlsx库读日期单元格时会把日期转换成文本，导致原始数据和你读到的数据不匹配。例如，我在读的时候，原始数据为1988&#x2F;10&#x2F;18，读出来变成了32434。我不懂为啥会变成这个数，但是在excel中把单元格格式改成文本，就会出现这个数了。另外，注意数据导入数据库后你的数据类型，可以使用以下方法查询数据类型（以AGE字段为例）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs Mongo">db.student.find().forEach(function(doc) &#123;<br>    print(typeof doc.AGE);<br>&#125;);<br></code></pre></td></tr></table></figure><p>更改数据类型：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs Mongo">db.student.find().forEach(function(doc) &#123;<br>    doc.AGE = parseInt(doc.AGE);<br>    db.student.save(doc);<br>&#125;);<br></code></pre></td></tr></table></figure><p>有关我导入数据的脚本，抱歉，无可奉告，我只能说有手就行，我这小垃圾都能写，你不会的话，恕我直言，就是懒。</p><h2 id="实验三、使用Java做简单查询"><a href="#实验三、使用Java做简单查询" class="headerlink" title="实验三、使用Java做简单查询"></a>实验三、使用Java做简单查询</h2>]]></content>
    
    
    <categories>
      
      <category>Nosql</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Nosql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch4</title>
    <link href="/2024/10/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch4/"/>
    <url>/2024/10/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch4/</url>
    
    <content type="html"><![CDATA[<h1 id="第四章-自顶向下语法分析方法"><a href="#第四章-自顶向下语法分析方法" class="headerlink" title="第四章 自顶向下语法分析方法"></a><center>第四章 自顶向下语法分析方法</center></h1><h2 id="一、三种集合定义"><a href="#一、三种集合定义" class="headerlink" title="一、三种集合定义"></a>一、三种集合定义</h2><h3 id="1-首符集"><a href="#1-首符集" class="headerlink" title="1.首符集"></a>1.首符集</h3><p>设$G&#x3D;(V_N ，V_T，P，S)$是上下文无关文法，$α$是$G$的任一符号串，则有：</p><p>$FIRST(α)&#x3D; ${$ a|α\overset*{\Rightarrow}aβ,a∈V_T,α、β∈V^*$}</p><p>特别地，若$α\overset{*}{\Rightarrow} \varepsilon$，则$\varepsilon∈FIRST(α)$<br><strong>即： FIRST(α)是从α出发推导出的所有符号串首终结符或可能的ε构成的集合。</strong></p><h3 id="2-后继符集"><a href="#2-后继符集" class="headerlink" title="2.后继符集"></a>2.后继符集</h3><p>设$G&#x3D;(V_N ，V_T，P，S)$是上下文无关文法，$A∈V_N$的后继符集合为：  </p><p>$FOLLOW(A)&#x3D;${$a|S \overset*{\Rightarrow} μAβ且a∈V_T ,a∈ FIRST(β),μ∈{V_T}^*,β∈V^*$}</p><p>或者<br>$FOLLOW(A)&#x3D;${$a | S  \overset*{\Rightarrow}  …Aa… ,a∈V_T$}<br>特别地，若$S  \overset{*}{\Rightarrow}  …A$,则#$∈FOLLOW(A)$</p><h3 id="3-选择集"><a href="#3-选择集" class="headerlink" title="3.选择集"></a>3.选择集</h3><p>对于给出上下文无关文法的产生式$A→α,A∈V_N,α∈V^*$，则<br>$$SELECT(A→α)&#x3D; \begin{cases} FIRST(α), &amp; \text {否则} \\ FIRST(α)∪FOLLOW(A), &amp; α\overset{*}{\Rightarrow} \varepsilon\end{cases}$$</p><h2 id="二、三种集合的构造算法"><a href="#二、三种集合的构造算法" class="headerlink" title="二、三种集合的构造算法"></a>二、三种集合的构造算法</h2><h3 id="1-求FIRST-X-的算法"><a href="#1-求FIRST-X-的算法" class="headerlink" title="1.求FIRST(X)的算法"></a>1.求FIRST(X)的算法</h3><p>对每一文法符号$X∈(V_N∪V_T)$，求$FIRST(X)$</p><h4 id="1-若-X∈V-T-，则令-FIRST-X-X"><a href="#1-若-X∈V-T-，则令-FIRST-X-X" class="headerlink" title="(1)若$X∈V_T$，则令$FIRST(X)&#x3D;${$X$}"></a>(1)若$X∈V_T$，则令$FIRST(X)&#x3D;${$X$}</h4><h4 id="2-若-X∈V-N-，且有产生式X→a…（-a∈V-T-）（右部终结符打头），则令-a∈FIRST-X"><a href="#2-若-X∈V-N-，且有产生式X→a…（-a∈V-T-）（右部终结符打头），则令-a∈FIRST-X" class="headerlink" title="(2)若$X∈V_N$，且有产生式X→a…（$a∈V_T$）（右部终结符打头），则令$a∈FIRST(X)$"></a>(2)若$X∈V_N$，且有产生式X→a…（$a∈V_T$）（右部终结符打头），则令$a∈FIRST(X)$</h4><h4 id="3-若-X∈V-N-，有-X→-varepsilon-，则令-varepsilon∈FIRST-X"><a href="#3-若-X∈V-N-，有-X→-varepsilon-，则令-varepsilon∈FIRST-X" class="headerlink" title="(3)若$X∈V_N$，有$X→\varepsilon$，则令$\varepsilon∈FIRST(X)$"></a>(3)若$X∈V_N$，有$X→\varepsilon$，则令$\varepsilon∈FIRST(X)$</h4><h4 id="4-若-X∈V-N，y-1-y-2-…-y-i∈V-N-，且有产生式-X→-y-1-y-2…-y-n-，当-y-1-y-2-…-y-i-1-都-overset-Rightarrow-varepsilon-，（其中1≤i≤n）-则-FIRST-y-1-ε-，-FIRST-y-2-ε-，…，-FIRST-y-i-1-ε-，-FIRST-y-i-都加到-FIRST-X-中"><a href="#4-若-X∈V-N，y-1-y-2-…-y-i∈V-N-，且有产生式-X→-y-1-y-2…-y-n-，当-y-1-y-2-…-y-i-1-都-overset-Rightarrow-varepsilon-，（其中1≤i≤n）-则-FIRST-y-1-ε-，-FIRST-y-2-ε-，…，-FIRST-y-i-1-ε-，-FIRST-y-i-都加到-FIRST-X-中" class="headerlink" title="(4)若$X∈V_N，y_1,y_2,…,y_i∈V_N$，且有产生式$X→ y_1 y_2…..y_n$，当$y_1, y_2,…,y_{i-1}都\overset{*}{\Rightarrow} \varepsilon$，（其中1≤i≤n）,则$FIRST(y_1)-ε$，$FIRST(y_2)-ε$，…，$FIRST(y_{i-1})-ε$，$FIRST(y_i)$都加到$FIRST(X)$中"></a>(4)若$X∈V_N，y_1,y_2,…,y_i∈V_N$，且有产生式$X→ y_1 y_2…..y_n$，当$y_1, y_2,…,y_{i-1}都\overset{*}{\Rightarrow} \varepsilon$，（其中1≤i≤n）,则$FIRST(y_1)-ε$，$FIRST(y_2)-ε$，…，$FIRST(y_{i-1})-ε$，$FIRST(y_i)$都加到$FIRST(X)$中</h4><h4 id="5-当-4-中所有-y-i-overset-Rightarrow-varepsilon-space-i-1-2-3-…-n-则-FIRST-X-FIRST-y-1-∪FIRST-y-2-∪…∪FIRST-y-n-∪-ε"><a href="#5-当-4-中所有-y-i-overset-Rightarrow-varepsilon-space-i-1-2-3-…-n-则-FIRST-X-FIRST-y-1-∪FIRST-y-2-∪…∪FIRST-y-n-∪-ε" class="headerlink" title="(5)当(4)中所有$y_i\overset{*}{\Rightarrow} \varepsilon \space i&#x3D;(1,2,3,…,n)$则$FIRST(X)&#x3D;FIRST(y_1)∪FIRST(y_2)∪…∪FIRST(y_n)∪ {ε}$"></a>(5)当(4)中所有$y_i\overset{*}{\Rightarrow} \varepsilon \space i&#x3D;(1,2,3,…,n)$则$FIRST(X)&#x3D;FIRST(y_1)∪FIRST(y_2)∪…∪FIRST(y_n)∪ {ε}$</h4><h4 id="6-反复使用上述-2-～-4-步直到每个符号的FIRST集合不再增加为止。"><a href="#6-反复使用上述-2-～-4-步直到每个符号的FIRST集合不再增加为止。" class="headerlink" title="(6)反复使用上述(2)～(4) 步直到每个符号的FIRST集合不再增加为止。"></a>(6)反复使用上述(2)～(4) 步直到每个符号的FIRST集合不再增加为止。</h4><h3 id="2-求FOLLOW-A-的算法-A∈V-N"><a href="#2-求FOLLOW-A-的算法-A∈V-N" class="headerlink" title="2.求FOLLOW(A)的算法$(A∈V_N)$"></a>2.求FOLLOW(A)的算法$(A∈V_N)$</h3><h4 id="1-“落-下S”-对文法开始符号S，令-∈FOLLOW-S"><a href="#1-“落-下S”-对文法开始符号S，令-∈FOLLOW-S" class="headerlink" title="(1)“落#下S” 对文法开始符号S，令#$∈FOLLOW(S)$"></a>(1)“落#下S” 对文法开始符号S，令#$∈FOLLOW(S)$</h4><h4 id="2-“右部FOLLOW”-若-B→αAβ-是一个产生式，则令-FIRST-β-ε-属于-FOLLOW-A"><a href="#2-“右部FOLLOW”-若-B→αAβ-是一个产生式，则令-FIRST-β-ε-属于-FOLLOW-A" class="headerlink" title="(2)“右部FOLLOW” 若$B→αAβ$是一个产生式，则令$FIRST(β)-${$ε$}属于$FOLLOW(A)$"></a>(2)“右部FOLLOW” 若$B→αAβ$是一个产生式，则令$FIRST(β)-${$ε$}属于$FOLLOW(A)$</h4><h4 id="3-“守门员福利”-若-B→αA-是一个产生式，或-B→αAβ-是一个产生式且有-ε∈FIRST-β-，则令-FOLLOW-B-是-FOLLOW-A-的子集。即把-FOLLOW-B-的所有元素加入到-FOLLOW-A-中。"><a href="#3-“守门员福利”-若-B→αA-是一个产生式，或-B→αAβ-是一个产生式且有-ε∈FIRST-β-，则令-FOLLOW-B-是-FOLLOW-A-的子集。即把-FOLLOW-B-的所有元素加入到-FOLLOW-A-中。" class="headerlink" title="(3)“守门员福利” 若$B→αA$是一个产生式，或$B→αAβ$是一个产生式且有$ε∈FIRST(β)$，则令$FOLLOW(B)$是$FOLLOW(A)$的子集。即把$FOLLOW(B)$的所有元素加入到$FOLLOW(A)$中。"></a>(3)“守门员福利” 若$B→αA$是一个产生式，或$B→αAβ$是一个产生式且有$ε∈FIRST(β)$，则令$FOLLOW(B)$是$FOLLOW(A)$的子集。即把$FOLLOW(B)$的所有元素加入到$FOLLOW(A)$中。</h4><h4 id="4-反复使用-2-直到每个非终结符的FOLLOW集合不再增加为止。"><a href="#4-反复使用-2-直到每个非终结符的FOLLOW集合不再增加为止。" class="headerlink" title="(4)反复使用(2)直到每个非终结符的FOLLOW集合不再增加为止。"></a>(4)反复使用(2)直到每个非终结符的FOLLOW集合不再增加为止。</h4><h3 id="3-求SELECT-A→α-的算法（使用SELECT定义）"><a href="#3-求SELECT-A→α-的算法（使用SELECT定义）" class="headerlink" title="3.求SELECT(A→α)的算法（使用SELECT定义）"></a>3.求SELECT(A→α)的算法（使用SELECT定义）</h3><h4 id="1-求-FIRST-α"><a href="#1-求-FIRST-α" class="headerlink" title="(1)求$FIRST(α)$"></a>(1)求$FIRST(α)$</h4><h4 id="2-若-ε∉FIRST-α-则令-SELECT-A→α-FIRST-α-，否则求-FOLLOW-A-并令-SELECT-A→α-FIRST-α-∪-FOLLOW-A"><a href="#2-若-ε∉FIRST-α-则令-SELECT-A→α-FIRST-α-，否则求-FOLLOW-A-并令-SELECT-A→α-FIRST-α-∪-FOLLOW-A" class="headerlink" title="(2)若$ε∉FIRST(α)$,则令$SELECT(A→α)&#x3D;FIRST(α)$，否则求$FOLLOW(A)$,并令$SELECT(A→α)&#x3D;FIRST(α) ∪ FOLLOW(A)$"></a>(2)若$ε∉FIRST(α)$,则令$SELECT(A→α)&#x3D;FIRST(α)$，否则求$FOLLOW(A)$,并令$SELECT(A→α)&#x3D;FIRST(α) ∪ FOLLOW(A)$</h4><h2 id="三、LL-1-分析法"><a href="#三、LL-1-分析法" class="headerlink" title="三、LL(1)分析法"></a>三、LL(1)分析法</h2><h3 id="1-定义："><a href="#1-定义：" class="headerlink" title="1.定义："></a>1.定义：</h3><ul><li>一个上下文无关文法是LL(1)文法的充分必要条件是每个非终结符A的两个不同产生式，$A→α ,A→β$；满足$SELECT(A →α ) ∩ SELECT(A →β)&#x3D; Ф$。其中α、β不能同时 $\overset{*} {\Rightarrow} \varepsilon$。</li></ul><h2 id="二、文法的等价交换"><a href="#二、文法的等价交换" class="headerlink" title="二、文法的等价交换"></a>二、文法的等价交换</h2><h3 id="1-提取公共左因子"><a href="#1-提取公共左因子" class="headerlink" title="1.提取公共左因子"></a>1.提取公共左因子</h3><p>若文法中含有形如：$Α→αβ|αγ$的产生式，这导致了对相同的产生式右部的FIRST集相交。<br>即有$SELECT(A→ αβ)SELECT(A→ αγ)≠φ$。<br>不满足$LL(1)$文法的充要条件。等价交换为：<br>$A→ αA’$和 $A’→ β| γ$</p><h3 id="2-消除左递归"><a href="#2-消除左递归" class="headerlink" title="2.消除左递归"></a>2.消除左递归</h3><p>当一个文法含有下列形式的产生式之一时：</p><ul><li>$A→Aβ,A∈V_N,β∈V^*$</li><li>$A→Bβ,B→A α,A,B∈V_N,α,β∈V^*$<br>则称该文法是左递归的。<br>含有左递归的文法不能采取自顶向下分析法。</li></ul><h4 id="方法：把左递归改写为右递归："><a href="#方法：把左递归改写为右递归：" class="headerlink" title="方法：把左递归改写为右递归："></a>方法：把左递归改写为右递归：</h4><h2 id="三、递归下降分析程序构造"><a href="#三、递归下降分析程序构造" class="headerlink" title="三、递归下降分析程序构造"></a>三、递归下降分析程序构造</h2><h3 id="1-每个非终结符对应一个过程（函数、方法）"><a href="#1-每个非终结符对应一个过程（函数、方法）" class="headerlink" title="1.每个非终结符对应一个过程（函数、方法）"></a>1.每个非终结符对应一个过程（函数、方法）</h3><h3 id="2-根据产生式生成每一个过程的内容"><a href="#2-根据产生式生成每一个过程的内容" class="headerlink" title="2.根据产生式生成每一个过程的内容"></a>2.根据产生式生成每一个过程的内容</h3><h3 id="3-例子"><a href="#3-例子" class="headerlink" title="3.例子"></a>3.例子</h3><p><img src="/2024/10/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch4/%E9%80%92%E5%BD%92%E4%B8%8B%E9%99%8D%E4%BE%8B.png" alt="递归下降例"><br><img src="/2024/10/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch4/%E9%80%92%E5%BD%92%E4%B8%8B%E9%99%8D%E4%BE%8B%E7%BB%AD.png" alt="递归下降例续"></p><h2 id="四、预测分析程序"><a href="#四、预测分析程序" class="headerlink" title="四、预测分析程序"></a>四、预测分析程序</h2><h3 id="1-验证是否为LL-1-文法"><a href="#1-验证是否为LL-1-文法" class="headerlink" title="1.验证是否为LL(1)文法"></a>1.验证是否为LL(1)文法</h3><h3 id="2-构造预测分析表"><a href="#2-构造预测分析表" class="headerlink" title="2.构造预测分析表"></a>2.构造预测分析表</h3><ul><li>构造方法：若$SELECT(A→B)&#x3D;C$，则矩阵$M[A,C]&#x3D;B$</li></ul><h3 id="3-分析"><a href="#3-分析" class="headerlink" title="3.分析"></a>3.分析</h3><p><img src="/2024/10/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch4/%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E6%B5%81%E7%A8%8B.png" alt="预测分析流程"></p><h3 id="4-分析例子"><a href="#4-分析例子" class="headerlink" title="4.分析例子"></a>4.分析例子</h3><p><img src="/2024/10/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch4/%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E4%BE%8B%E5%AD%90.png" alt="预测分析例子"><br><img src="/2024/10/11/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch4/%E9%A2%84%E6%B5%8B%E5%88%86%E6%9E%90%E4%BE%8B%E5%AD%90%E7%BB%AD.png" alt="预测分析例子续"></p>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>人工智能导论Ch2</title>
    <link href="/2024/09/24/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BACh2/"/>
    <url>/2024/09/24/%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E5%AF%BC%E8%AE%BACh2/</url>
    
    <content type="html"><![CDATA[<h1 id="第二章-知识表示与知识图谱"><a href="#第二章-知识表示与知识图谱" class="headerlink" title="第二章 知识表示与知识图谱"></a><center>第二章 知识表示与知识图谱</center></h1><h2 id="一、知识与知识表示的概念"><a href="#一、知识与知识表示的概念" class="headerlink" title="一、知识与知识表示的概念"></a>一、知识与知识表示的概念</h2><h3 id="1-知识"><a href="#1-知识" class="headerlink" title="1.知识"></a>1.知识</h3><ul><li>在长期的生活及社会实践中、在科学研究及实验中积累起来的对客观世界的认识与经验<ul><li>事实</li></ul></li><li>把有关信息关联在一起所形成的信息结构<ul><li>信息关联形式：“如果……，则……”</li><li>规则</li></ul></li><li>知识反映了客观世界中事物之间的关系，不同事物或者相同事物间的不同关系形成了不同的知识</li></ul><h3 id="2-知识的特性"><a href="#2-知识的特性" class="headerlink" title="2.知识的特性"></a>2.知识的特性</h3><h4 id="1-相对正确性"><a href="#1-相对正确性" class="headerlink" title="(1)相对正确性"></a>(1)相对正确性</h4><ul><li>任何知识都是在一定条件及环境下产生的，在这种条件及环境下才是正确的</li></ul><h4 id="2-不确定性"><a href="#2-不确定性" class="headerlink" title="(2)不确定性"></a>(2)不确定性</h4><ul><li>随机性引起的不确定性<blockquote><p>例：如果头痛流鼻涕，则<strong>可能</strong>得了感冒</p></blockquote></li><li>模糊性引起的不确定性<blockquote><p>例：天气冷热、雨的大小</p></blockquote></li><li>经验引起的不确定性<blockquote><p>例：老马识途</p></blockquote></li><li>不完全性引起的不确定性</li></ul><h4 id="3-可表示性与可利用性"><a href="#3-可表示性与可利用性" class="headerlink" title="(3)可表示性与可利用性"></a>(3)可表示性与可利用性</h4><ul><li>可表示性：知识可以用适当的形式表示出来。如：语言、文字、图形、神经网络等</li><li>可利用性：知识可以被利用</li></ul><h3 id="3-知识的表示"><a href="#3-知识的表示" class="headerlink" title="3.知识的表示"></a>3.知识的表示</h3><h4 id="1-概念："><a href="#1-概念：" class="headerlink" title="(1)概念："></a>(1)概念：</h4><ul><li>将人类知识形式化或模型化</li><li>知识表示是对知识的一种描述，或者说是一组约定，一种计算机可以接受的用于描述知识的数据结构</li></ul><h4 id="2-选择表示方法的原则"><a href="#2-选择表示方法的原则" class="headerlink" title="(2)选择表示方法的原则"></a>(2)选择表示方法的原则</h4><h2 id="二、一阶谓词逻辑表示法"><a href="#二、一阶谓词逻辑表示法" class="headerlink" title="二、一阶谓词逻辑表示法"></a>二、一阶谓词逻辑表示法</h2><h3 id="1-命题"><a href="#1-命题" class="headerlink" title="1.命题"></a>1.命题</h3><h3 id="2-谓词"><a href="#2-谓词" class="headerlink" title="2.谓词"></a>2.谓词</h3><p>一种函数</p><h3 id="3-谓词公式"><a href="#3-谓词公式" class="headerlink" title="3.谓词公式"></a>3.谓词公式</h3><h4 id="1-定义："><a href="#1-定义：" class="headerlink" title="(1)定义："></a>(1)定义：</h4><ul><li>单个谓词是谓词公式</li><li>若A是，则非A也是</li><li>若A、B是，则A合取B、A析取B、A→B、A当且仅当B也都是</li><li>若A是，则“任意xA”、“存在xA”是</li><li>以上4点以有限步生成</li><li>连接词优先级：非、合取、析取、→、当且仅当</li></ul><h3 id="4-谓词公式的性质"><a href="#4-谓词公式的性质" class="headerlink" title="4.谓词公式的性质"></a>4.谓词公式的性质</h3><h3 id="5-一阶谓词逻辑表示方法"><a href="#5-一阶谓词逻辑表示方法" class="headerlink" title="5.一阶谓词逻辑表示方法"></a>5.一阶谓词逻辑表示方法</h3><h2 id="三、产生式表示法"><a href="#三、产生式表示法" class="headerlink" title="三、产生式表示法"></a>三、产生式表示法</h2>]]></content>
    
    
    <categories>
      
      <category>人工智能导论</category>
      
    </categories>
    
    
    <tags>
      
      <tag>人工智能导论</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络Ch1</title>
    <link href="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/"/>
    <url>/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/</url>
    
    <content type="html"><![CDATA[<h1 id="第一章-计算机网络体系结构"><a href="#第一章-计算机网络体系结构" class="headerlink" title="第一章 计算机网络体系结构"></a><center>第一章 计算机网络体系结构</center></h1><h2 id="一、计算机网络的概念"><a href="#一、计算机网络的概念" class="headerlink" title="一、计算机网络的概念"></a>一、计算机网络的概念</h2><h3 id="1-什么是计算机网络？"><a href="#1-什么是计算机网络？" class="headerlink" title="1.什么是计算机网络？"></a>1.什么是计算机网络？</h3><blockquote><p>计算机网络(Computer networking)是一个将众多<strong>分散的</strong>、<strong>自治的</strong>计算机系统，通过<strong>通信设备</strong>与<strong>线路</strong>连接起来，由功能完善的软件实现资源共享和信息传递的系统</p></blockquote><h4 id="计算机网络包括软件-硬件"><a href="#计算机网络包括软件-硬件" class="headerlink" title="计算机网络包括软件+硬件"></a>计算机网络包括软件+硬件</h4><h3 id="2-计算机网络、互联网、互连网"><a href="#2-计算机网络、互联网、互连网" class="headerlink" title="2.计算机网络、互联网、互连网"></a>2.计算机网络、互联网、互连网</h3><h4 id="计算机网络（简称网络）：由若干节点和连接这些节点的链路组成"><a href="#计算机网络（简称网络）：由若干节点和连接这些节点的链路组成" class="headerlink" title="计算机网络（简称网络）：由若干节点和连接这些节点的链路组成"></a>计算机网络（简称网络）：由若干节点和连接这些节点的链路组成</h4><ul><li>节点可以是计算机、集线器、交换机、路由器等</li><li>链路可以有线可以无线</li></ul><h4 id="通过路由器可以将不同的计算机网络连接起来，形成更大的计算机网络，成为“互连网”"><a href="#通过路由器可以将不同的计算机网络连接起来，形成更大的计算机网络，成为“互连网”" class="headerlink" title="通过路由器可以将不同的计算机网络连接起来，形成更大的计算机网络，成为“互连网”"></a>通过路由器可以将不同的计算机网络连接起来，形成更大的计算机网络，成为“互连网”</h4><blockquote><p>这里的路由器≠家用路由器&#x3D;路由器+交换机+其他<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%AE%B6%E7%94%A8%E8%B7%AF%E7%94%B1%E5%99%A8.png" alt="家用路由器"><br>路由器将多个计算机网络连接起来；交换机将多个节点连接起来，组成一个计算机网络</p></blockquote><h4 id="互联网：各大互联网服务提供商和国际机构组建而成，覆盖全球范围的互连网"><a href="#互联网：各大互联网服务提供商和国际机构组建而成，覆盖全球范围的互连网" class="headerlink" title="互联网：各大互联网服务提供商和国际机构组建而成，覆盖全球范围的互连网"></a>互联网：各大互联网服务提供商和国际机构组建而成，覆盖全球范围的互连网</h4><ul><li>互联网必须使用TCP&#x2F;IP协议，互连网可以用任意协议</li></ul><h2 id="二、计算机网络的组成、功能"><a href="#二、计算机网络的组成、功能" class="headerlink" title="二、计算机网络的组成、功能"></a>二、计算机网络的组成、功能</h2><h3 id="1-从组成成分看"><a href="#1-从组成成分看" class="headerlink" title="1.从组成成分看"></a>1.从组成成分看</h3><h4 id="1-硬件："><a href="#1-硬件：" class="headerlink" title="(1)硬件："></a>(1)硬件：</h4><ul><li>主机（端系统,end system）：电脑、手机、物联网设备</li><li>通信设备：集线器、交换机、路由器</li><li>通信链路：网线、光纤、同轴电缆</li></ul><h4 id="2-软件："><a href="#2-软件：" class="headerlink" title="(2)软件："></a>(2)软件：</h4><ul><li>方便用户使用，实现资源共享。如：Email客户端、聊天软件、网盘软件</li></ul><h4 id="3-协议："><a href="#3-协议：" class="headerlink" title="(3)协议："></a>(3)协议：</h4><ul><li>规定计算机网络中的通信规则</li><li>由硬件、软件共同实现，如：网络适配器+软件 实现网络通信协议<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E7%BB%84%E6%88%90.png" alt="计算机网络的组成"></li></ul><h3 id="2-从工作方式看"><a href="#2-从工作方式看" class="headerlink" title="2.从工作方式看"></a>2.从工作方式看</h3><h4 id="1-边缘部分："><a href="#1-边缘部分：" class="headerlink" title="(1)边缘部分："></a>(1)边缘部分：</h4><ul><li>工作方式：直接为用户服务（通信、资源共享）</li><li>主要由连接到互联网上的主机及其软件组成</li></ul><h4 id="2-核心部分："><a href="#2-核心部分：" class="headerlink" title="(2)核心部分："></a>(2)核心部分：</h4><ul><li>工作方式：为边缘部分提供服务（连通性、交换服务）</li><li>由大量网络和连接这些网络的路由器组成</li></ul><h3 id="3-从逻辑功能看"><a href="#3-从逻辑功能看" class="headerlink" title="3.从逻辑功能看"></a>3.从逻辑功能看</h3><h4 id="1-资源子网"><a href="#1-资源子网" class="headerlink" title="(1)资源子网"></a>(1)资源子网</h4><ul><li>计算机网络中运行应用程序，向用户提供可共享的硬件、软件和信息资源的部分</li><li>主要由连接到互联网上的主机组成</li></ul><h4 id="2-通信子网"><a href="#2-通信子网" class="headerlink" title="(2)通信子网"></a>(2)通信子网</h4><ul><li>计算机网络中负责计算机间信息传输的部分。即把计算机和其他用户装置互连在一起的所有通信设备和介质的总称</li><li>主要由通信链路+通信设备+协议构成<blockquote><p>注：主机内部实现信息传输的网络适配器、底层协议属于通信子网的范畴</p></blockquote></li></ul><h3 id="4-功能"><a href="#4-功能" class="headerlink" title="4.功能"></a>4.功能</h3><h4 id="1-数据通信※"><a href="#1-数据通信※" class="headerlink" title="(1)数据通信※"></a>(1)数据通信※</h4><ul><li>实现计算机之间的数据传输，是最基本最重要的功能</li></ul><h4 id="2-资源共享"><a href="#2-资源共享" class="headerlink" title="(2)资源共享"></a>(2)资源共享</h4><ul><li>硬件、软件、数据资源<ul><li>智能音箱请求服务器处理</li><li>应用商店</li><li>分享视频<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E8%B5%84%E6%BA%90%E5%85%B1%E4%BA%AB.png" alt="资源共享"></li></ul></li></ul><h4 id="3-分布式处理"><a href="#3-分布式处理" class="headerlink" title="(3)分布式处理"></a>(3)分布式处理</h4><ul><li>将某个复杂任务分配给网络中的多台计算机处理，如：大矩阵运算、MapReduce</li></ul><h4 id="4-提高可靠性"><a href="#4-提高可靠性" class="headerlink" title="(4)提高可靠性"></a>(4)提高可靠性</h4><ul><li>网络中各台计算机互为替代机，如：某网盘服务器集群网络，数据冗余备份</li></ul><h4 id="5-负载均衡"><a href="#5-负载均衡" class="headerlink" title="(5)负载均衡"></a>(5)负载均衡</h4><ul><li>网络中各台计算机共同分担繁重工作，如：某游戏用多台服务器均衡处理玩家的请求</li></ul><h4 id="6-其他"><a href="#6-其他" class="headerlink" title="(6)其他"></a>(6)其他</h4><ul><li>满足社会需求、生活需求，如：远程办公、远程教育、娱乐等</li></ul><h2 id="三、数据交换技术"><a href="#三、数据交换技术" class="headerlink" title="三、数据交换技术"></a>三、数据交换技术</h2><h3 id="1-电路交换"><a href="#1-电路交换" class="headerlink" title="1.电路交换"></a>1.电路交换</h3><h4 id="1-过程："><a href="#1-过程：" class="headerlink" title="(1)过程："></a>(1)过程：</h4><ul><li>建立连接（尝试占用通信资源）</li><li>通信（一直占用通信资源）</li><li>释放连接（归还通信资源）</li></ul><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E7%9A%84%E8%BF%87%E7%A8%8B.png" alt="电路交换的过程"></p><h4 id="2-优点："><a href="#2-优点：" class="headerlink" title="(2)优点："></a>(2)优点：</h4><ul><li>通信前从主叫端到被叫端建立一条专用的物理通路，在通信的全部时间内，两个用户始终占用端到端的线路资源。数据直送，传输效率高。（更适合低频次、大量传输数据）</li></ul><h4 id="3-缺点："><a href="#3-缺点：" class="headerlink" title="(3)缺点："></a>(3)缺点：</h4><ul><li>建立&#x2F;释放连接，需要额外的时间开销。（计算机往往是突发式传输，往往高频次、少量传输数据）</li><li>线路被通信双方独占，利用率低。</li><li>线路分配的灵活性差。（若有节点坏了，只能重新建立）</li><li>交换节点不支持“差错控制”（无法发现传输过程中发生的数据错误）</li></ul><h3 id="2-电报网络"><a href="#2-电报网络" class="headerlink" title="2.电报网络"></a>2.电报网络</h3><h4 id="1-过程：-1"><a href="#1-过程：-1" class="headerlink" title="(1)过程："></a>(1)过程：</h4><ul><li>计算机将控制信息（发送方和接收方）和用户数据（想发送的信息）组合成一个“报文”</li><li>计算机将报文发送到交换机，交换机将收到的报文储存在内存中</li><li>交换机根据转发表，将报文发送给下一交换机</li></ul><h4 id="2-优点：-1"><a href="#2-优点：-1" class="headerlink" title="(2)优点："></a>(2)优点：</h4><ul><li>通信前不需要建立连接</li><li>数据以“报文”为单位被交换节点间“存储转发”，通信线路可以灵活分配</li><li>在通信时间内，两个用户无需独占一整条物理线路。相比于电路交换，线路利用率高</li><li>交换节点支持“差错控制”（通过校验技术）</li></ul><h4 id="3-缺点：-1"><a href="#3-缺点：-1" class="headerlink" title="(3)缺点："></a>(3)缺点：</h4><ul><li>报文不定长，不方便存储转发管理</li><li>长报文的存储转发时间开销大、缓存开销大</li><li>长报文容易报错，重传代价高</li></ul><h3 id="3-分组交换（现代计算机采用）"><a href="#3-分组交换（现代计算机采用）" class="headerlink" title="3.分组交换（现代计算机采用）"></a>3.分组交换（现代计算机采用）</h3><h4 id="1-过程：-2"><a href="#1-过程：-2" class="headerlink" title="(1)过程："></a>(1)过程：</h4><ul><li>计算机将用户数据拆分分组</li><li>将分组依次通过分组交换机发送（路由器，通过IP地址知道应该向哪里发送）</li><li>接收者计算机将所有分组排序，去掉首部，合并成用户数据<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2%E7%9A%84%E8%BF%87%E7%A8%8B.png" alt="分组交换的过程"></li></ul><h4 id="2-优点：-2"><a href="#2-优点：-2" class="headerlink" title="(2)优点："></a>(2)优点：</h4><ul><li>所有报文交换的优点</li><li>相对于报文交换，分组交换：<ul><li>分组定长，方便存储转发管理</li><li>分组的存储转发时间开销小、缓存开销小</li><li>分组不容易出错，重传代价低</li></ul></li></ul><h4 id="3-缺点：-2"><a href="#3-缺点：-2" class="headerlink" title="(3)缺点："></a>(3)缺点：</h4><ul><li>相比于报文交换，控制信息占比增加</li><li>相比于电路交换，依然存在存储转发时延</li><li>报文被拆分为多个分组，传输过程中可能出现失序、丢失等问题，增加处理的复杂度</li></ul><h3 id="4-“虚电路交换”技术（基于分组交换）"><a href="#4-“虚电路交换”技术（基于分组交换）" class="headerlink" title="4.“虚电路交换”技术（基于分组交换）"></a>4.“虚电路交换”技术（基于分组交换）</h3><h4 id="1-过程：-3"><a href="#1-过程：-3" class="headerlink" title="(1)过程："></a>(1)过程：</h4><ul><li>建立连接（虚拟电路）</li><li>通信（分组按序、按已建立好的既定线路发送，通信双方不独占线路）</li><li>释放连接</li></ul><h2 id="四、三种交换技术的性能分析"><a href="#四、三种交换技术的性能分析" class="headerlink" title="四、三种交换技术的性能分析"></a>四、三种交换技术的性能分析</h2><h3 id="1-电路交换性能分析"><a href="#1-电路交换性能分析" class="headerlink" title="1.电路交换性能分析"></a>1.电路交换性能分析</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E7%94%B5%E8%B7%AF%E4%BA%A4%E6%8D%A2%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.png" alt="电路交换性能分析"></p><blockquote><p>注：数据传送刚结束，A就可以开始通知B开始释放连接，途中为了避免线重合所以留了一点距离。从A开始发送到D完全接收一共耗时11ms</p></blockquote><h3 id="2-报文交换性能分析"><a href="#2-报文交换性能分析" class="headerlink" title="2.报文交换性能分析"></a>2.报文交换性能分析</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%8A%A5%E6%96%87%E4%BA%A4%E6%8D%A2%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.png" alt="报文交换性能分析"></p><blockquote><p>从A开始发送到D完全接收一共耗时31ms</p></blockquote><h3 id="3-分组交换性能分析"><a href="#3-分组交换性能分析" class="headerlink" title="3.分组交换性能分析"></a>3.分组交换性能分析</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%88%86%E7%BB%84%E4%BA%A4%E6%8D%A2%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90.png" alt="分组交换性能分析"></p><blockquote><p>分组比报文小，所以存储转发时延更小。从A开始发送到D完全接收一共耗时17.5ms</p></blockquote><h3 id="4-对比和总结"><a href="#4-对比和总结" class="headerlink" title="4.对比和总结"></a>4.对比和总结</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%AF%B9%E6%AF%94%E5%92%8C%E6%80%BB%E7%BB%93.png" alt="对比和总结"></p><h2 id="五、计算机网络的分类"><a href="#五、计算机网络的分类" class="headerlink" title="五、计算机网络的分类"></a>五、计算机网络的分类</h2><h3 id="1-按分布范围分类"><a href="#1-按分布范围分类" class="headerlink" title="1.按分布范围分类"></a>1.按分布范围分类</h3><h4 id="1-广域网-WAN"><a href="#1-广域网-WAN" class="headerlink" title="(1)广域网(WAN)"></a>(1)广域网(WAN)</h4><ul><li>范围：几十~几千公里</li><li>跨省&#x2F;跨国&#x2F;跨洲</li></ul><h4 id="2-城域网-MAN"><a href="#2-城域网-MAN" class="headerlink" title="(2)城域网(MAN)"></a>(2)城域网(MAN)</h4><ul><li>范围：几千米~几十千米</li><li>一个或几个相邻城市</li><li>通信技术：常采用<strong>以太网技术</strong>，因此常并入局域网范畴探讨</li></ul><h4 id="3-局域网-LAN-※"><a href="#3-局域网-LAN-※" class="headerlink" title="(3)局域网(LAN)※"></a>(3)局域网(LAN)※</h4><ul><li>范围：几十米~几千米</li><li>学校&#x2F;企业&#x2F;工作单位&#x2F;家庭</li><li>通信技术：以太网技术</li></ul><h4 id="4-个域网-PAN-（考试不算）"><a href="#4-个域网-PAN-（考试不算）" class="headerlink" title="(4)个域网(PAN)（考试不算）"></a>(4)个域网(PAN)（考试不算）</h4><ul><li>范围：几十米以内</li><li>家庭&#x2F;个人</li><li>通常是通过无线技术（蓝牙等）将个人设备连接起来的网路，因此也常称为无线个域网(WPAN)<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%B1%80%E5%9F%9F%E7%BD%91%E5%92%8C%E5%B9%BF%E5%9F%9F%E7%BD%91.png" alt="局域网和广域网"></li></ul><h3 id="2-按传输技术（通信方式）分类"><a href="#2-按传输技术（通信方式）分类" class="headerlink" title="2.按传输技术（通信方式）分类"></a>2.按传输技术（通信方式）分类</h3><h4 id="1-广播式网络"><a href="#1-广播式网络" class="headerlink" title="(1)广播式网络"></a>(1)广播式网络</h4><p>当一台计算机发送数据分组时，广播范围内的所有计算机都会收到该分组，并通过检查分组的目的地址决定是否接收该分组</p><h4 id="2-点对点网络"><a href="#2-点对点网络" class="headerlink" title="(2)点对点网络"></a>(2)点对点网络</h4><p>数据只会从发送方“点对点”发到接收方，精准送达</p><h3 id="3-按照拓扑结构"><a href="#3-按照拓扑结构" class="headerlink" title="3.按照拓扑结构"></a>3.按照拓扑结构</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%80%BB%E7%BA%BF%E5%9E%8B%E7%BB%93%E6%9E%84%E5%92%8C%E7%8E%AF%E5%BD%A2%E7%BB%93%E6%9E%84.png" alt="总线型结构和环形结构"><br>总线争用：当A给C传输数据时，总线上会充斥着A给C的数据，此时其他节点想要发送数据会导致数据错乱问题<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%98%9F%E5%9E%8B%E7%BB%93%E6%9E%84%E5%92%8C%E7%BD%91%E7%8A%B6%E7%BB%93%E6%9E%84.png" alt="星型结构和网状结构"></p><h3 id="4-按使用者分类"><a href="#4-按使用者分类" class="headerlink" title="4.按使用者分类"></a>4.按使用者分类</h3><h4 id="1-公用网："><a href="#1-公用网：" class="headerlink" title="(1)公用网："></a>(1)公用网：</h4><p>向公众开放的网络。如：办宽带、交话费即可使用的互联网</p><h4 id="2-专用网："><a href="#2-专用网：" class="headerlink" title="(2)专用网："></a>(2)专用网：</h4><p>仅供某个组织内部使用的网络。如：政府、军队、电力、银行的内部网络</p><h3 id="5-按传输介质分类"><a href="#5-按传输介质分类" class="headerlink" title="5.按传输介质分类"></a>5.按传输介质分类</h3><h4 id="1-有线网络"><a href="#1-有线网络" class="headerlink" title="(1)有线网络"></a>(1)有线网络</h4><h4 id="2-无线网络"><a href="#2-无线网络" class="headerlink" title="(2)无线网络"></a>(2)无线网络</h4><h3 id="6-小结"><a href="#6-小结" class="headerlink" title="6.小结"></a>6.小结</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%88%86%E7%B1%BB%E5%B0%8F%E7%BB%93.png" alt="计算机网络分类小结"></p><h2 id="六、计算机网络的性能指标"><a href="#六、计算机网络的性能指标" class="headerlink" title="六、计算机网络的性能指标"></a>六、计算机网络的性能指标</h2><h3 id="1-速率"><a href="#1-速率" class="headerlink" title="1.速率"></a>1.速率</h3><h4 id="1-信道（Channel）："><a href="#1-信道（Channel）：" class="headerlink" title="(1)信道（Channel）："></a>(1)信道（Channel）：</h4><p>表示向某一方小传送信息的通道（信道≠通信线路）一条通信线路在逻辑上往往对应一条发送信道和一条接收信道</p><h4 id="2-速率（Speed）："><a href="#2-速率（Speed）：" class="headerlink" title="(2)速率（Speed）："></a>(2)速率（Speed）：</h4><ul><li>指连接到网络上的节点在信道上传输数据的速率。也称数据率或比特率、<strong>数据传输速率</strong></li><li>单位：bit&#x2F;s，或b&#x2F;s，或bps</li><li>注：1B&#x3D;8b</li><li>计算机网络中， $ 1M&#x3D;{10^3}k $</li></ul><h3 id="2-带宽（bandwidth）："><a href="#2-带宽（bandwidth）：" class="headerlink" title="2.带宽（bandwidth）："></a>2.带宽（bandwidth）：</h3><ul><li>某信道所能传送的<strong>最高数据率</strong></li><li>节点间通信实际所能达到的最高速率，由带宽、节点性能共同限制</li></ul><h3 id="3-吞吐量（Throughput）："><a href="#3-吞吐量（Throughput）：" class="headerlink" title="3.吞吐量（Throughput）："></a>3.吞吐量（Throughput）：</h3><ul><li>指单位时间内通过某个网络（或信道、接口）的实际数据量。</li><li>吞吐量受带宽限制、受复杂的网络负载情况影响。</li><li>需要把发送和接收的速率加在一起</li></ul><h3 id="4-时延（Delay）："><a href="#4-时延（Delay）：" class="headerlink" title="4.时延（Delay）："></a>4.时延（Delay）：</h3><ul><li>指数据（一个报文或分组，甚至比特）从网络（或链路）的一端传送到另一端所需的时间。有时也称为延迟或迟延。</li><li>总时延&#x3D;发送时延 + 传播时延 + 处理时延 + 排队时延</li></ul><blockquote><p>考试中只考虑发送时延和传播时延，因为后两个不容易计算。<br>数据发送过程中，每经过一个信道，就会产生一个发送时延+传播时延；每经过一个路由器，就会产生一个处理时延+排队时延。<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%97%B6%E5%BB%B6.png" alt="时延"></p></blockquote><ul><li>例题：<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%97%B6%E5%BB%B6%E4%BE%8B%E9%A2%98.png" alt="时延例题"></li></ul><h3 id="5-时延带宽积"><a href="#5-时延带宽积" class="headerlink" title="5.时延带宽积"></a>5.时延带宽积</h3><ul><li>时延带宽积 &#x3D; 传播时延 * 带宽</li><li>含义：一条链路中，已从发送端发出但尚未到达接收端的最大比特数</li><li>例题：<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%97%B6%E5%BB%B6%E5%B8%A6%E5%AE%BD%E7%A7%AF%E4%BE%8B%E9%A2%98.png" alt="时延带宽积例题"><br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%97%B6%E5%BB%B6%E5%B8%A6%E5%AE%BD%E7%A7%AF%E8%A7%A3%E7%AD%94.png" alt="时延带宽积解答"></li></ul><h3 id="6-往返时延RRT（Round-Trip-Time）："><a href="#6-往返时延RRT（Round-Trip-Time）：" class="headerlink" title="6.往返时延RRT（Round-Trip Time）："></a>6.往返时延RRT（Round-Trip Time）：</h3><ul><li>表示从<strong>发送方发送※※完※※数据</strong>，到发送方收到<strong>来自接收方的确认</strong>总共经历的时间</li><li>图示：（无路由器）<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%BE%80%E8%BF%94%E6%97%B6%E5%BB%B6.png" alt="往返时延"></li></ul><h3 id="7-信道利用率"><a href="#7-信道利用率" class="headerlink" title="7.信道利用率"></a>7.信道利用率</h3><ul><li>某个信道有百分之多少的时间是有数据通过的。</li><li>$ {信道利用率 &#x3D; \frac{有数据通过的时间}{有数据通过的时间+没有数据通过的时间}} $</li><li>太低会浪费资源，太高容易导致网络拥塞</li><li>例题：<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E4%BF%A1%E9%81%93%E5%88%A9%E7%94%A8%E7%8E%87%E4%BE%8B%E9%A2%98.png" alt="信道利用率例题"></li></ul><h3 id="8-总结"><a href="#8-总结" class="headerlink" title="8.总结"></a>8.总结</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87%E5%B0%8F%E7%BB%93.png" alt="性能指标小结"><br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%80%A7%E8%83%BD%E6%8C%87%E6%A0%87%E5%B0%8F%E7%BB%932.png" alt="性能指标小结2"></p><h2 id="七、计算机网络的分层结构"><a href="#七、计算机网络的分层结构" class="headerlink" title="七、计算机网络的分层结构"></a>七、计算机网络的分层结构</h2><h3 id="1-引入————快递网络"><a href="#1-引入————快递网络" class="headerlink" title="1.引入————快递网络"></a>1.引入————快递网络</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%BF%AB%E9%80%92%E7%BD%91%E7%BB%9C.png" alt="快递网络"></p><h3 id="2-计算机网络的分层方式"><a href="#2-计算机网络的分层方式" class="headerlink" title="2.计算机网络的分层方式"></a>2.计算机网络的分层方式</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%9A%84%E5%88%86%E5%B1%82%E6%96%B9%E5%BC%8F.png" alt="计算机网络的分层方式"></p><h3 id="3-网络的体系结构（Network-Architecture）"><a href="#3-网络的体系结构（Network-Architecture）" class="headerlink" title="3.网络的体系结构（Network Architecture）"></a>3.网络的体系结构（Network Architecture）</h3><ul><li>是计算机网络的各层及其协议的集合，就是这个计算机网络及其构建所应完成的精确定义（不涉及实现）</li><li>实现（implementation）是遵循这种体系结构的前提下，用何种硬件或软件完成这些功能的问题</li><li>体系结构是抽象的，而实现则是具体的</li></ul><h3 id="4-实体"><a href="#4-实体" class="headerlink" title="4.实体"></a>4.实体</h3><ul><li>在计算机网路的分层结构中，第n层中的活动元素（软件+硬件）通常称为第n层实体。不同机器上的同一层称为对等层，同一层的实体称为对等实体</li></ul><h3 id="5-协议："><a href="#5-协议：" class="headerlink" title="5.协议："></a>5.协议：</h3><ul><li>即网络协议，是控制对等实体之间进行通信的规则的集合，是水平的</li><li>三要素：<ul><li>语法：数据与控制信息的格式。例如，PCI（首部）占几个字节、每个字节什么含义；协议的数据部分最多有多少字节</li><li>语义：即需要发出何种控制信息、完成何种动作及做出何种应答。例如，协议中需要明确规定：发送方发送数据后，接收方是否需“应答”，以及应答的种类有哪些（如传输成功、传输失败）</li><li>同步（或<strong>时序</strong>）：执行各种操作的条件、时序关系等，即事件实现顺序的详细说明。例如，发送方发完数据后，接收方需要立即应答。如果发送方在10秒内未收到“传输成功”应答，则发送方会再次发送数据</li></ul></li></ul><h3 id="6-服务"><a href="#6-服务" class="headerlink" title="6.服务"></a>6.服务</h3><ul><li>下层为紧邻的上层提供的功能调用，是垂直的</li></ul><h3 id="7-数据的传输过程"><a href="#7-数据的传输过程" class="headerlink" title="7.数据的传输过程"></a>7.数据的传输过程</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E6%95%B0%E6%8D%AE%E7%9A%84%E4%BC%A0%E8%BE%93%E8%BF%87%E7%A8%8B.png" alt="数据的传输过程"></p><h4 id="协议数据单元（PDU）：对等层次之间传送的数据单位。第n层的PDU记为n-PDU"><a href="#协议数据单元（PDU）：对等层次之间传送的数据单位。第n层的PDU记为n-PDU" class="headerlink" title="协议数据单元（PDU）：对等层次之间传送的数据单位。第n层的PDU记为n-PDU"></a>协议数据单元（PDU）：对等层次之间传送的数据单位。第n层的PDU记为n-PDU</h4><h4 id="服务数据单元（SDU）：为完成上一层实体所要求的功能而传送的数据。第n层的SDU记为n-SDU"><a href="#服务数据单元（SDU）：为完成上一层实体所要求的功能而传送的数据。第n层的SDU记为n-SDU" class="headerlink" title="服务数据单元（SDU）：为完成上一层实体所要求的功能而传送的数据。第n层的SDU记为n-SDU"></a>服务数据单元（SDU）：为完成上一层实体所要求的功能而传送的数据。第n层的SDU记为n-SDU</h4><h4 id="协议控制信息（PCI）：控制协议操作的信息。第n层的PCI记为n-PCI"><a href="#协议控制信息（PCI）：控制协议操作的信息。第n层的PCI记为n-PCI" class="headerlink" title="协议控制信息（PCI）：控制协议操作的信息。第n层的PCI记为n-PCI"></a>协议控制信息（PCI）：控制协议操作的信息。第n层的PCI记为n-PCI</h4><ul><li>三者的关系：n-SDU+n-PCI&#x3D;n-PDU&#x3D;(n-1)-SDU</li></ul><h3 id="8-总结-1"><a href="#8-总结-1" class="headerlink" title="8.总结"></a>8.总结</h3><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/%E5%88%86%E5%B1%82%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93.png" alt="分层结构总结"></p><h2 id="八、OSI参考模型-TCP-IP模型"><a href="#八、OSI参考模型-TCP-IP模型" class="headerlink" title="八、OSI参考模型&amp;TCP&#x2F;IP模型"></a>八、OSI参考模型&amp;TCP&#x2F;IP模型</h2><h3 id="1-OSI参考模型（口诀：物联网输会示用）"><a href="#1-OSI参考模型（口诀：物联网输会示用）" class="headerlink" title="1.OSI参考模型（口诀：物联网输会示用）"></a>1.OSI参考模型（口诀：物联网输会示用）</h3><h4 id="1-物理层：实现相邻节点之间比特的传输"><a href="#1-物理层：实现相邻节点之间比特的传输" class="headerlink" title="(1)物理层：实现相邻节点之间比特的传输"></a>(1)物理层：实现相邻节点之间比特的传输</h4><ul><li>需定义电路接口参数（形状、尺寸、引脚数等）</li><li>需定义传输信号的含义、电气特征（如：5V表示1，1V表示0；每比特电信号持续时间0.1ms）</li></ul><h4 id="2-数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）"><a href="#2-数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）" class="headerlink" title="(2)数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）"></a>(2)数据链路层：确保相邻节点之间的链路逻辑上无差错（帧）</h4><ul><li><strong>差错控制</strong>：检错+纠错；或检错+丢弃+重传</li><li>流量控制：协调两个结点的速率</li></ul><h4 id="3-网络层：把“分组”从源节点转发到目的节点"><a href="#3-网络层：把“分组”从源节点转发到目的节点" class="headerlink" title="(3)网络层：把“分组”从源节点转发到目的节点"></a>(3)网络层：把“分组”从源节点转发到目的节点</h4><ul><li><strong>路由选择</strong>：构造并维护路由表，决定分组到达目的节点的最佳路径</li><li><strong>分组转发</strong>：将“分组”从合适的端口转发出去</li><li>拥塞控制：发现网络拥塞，并采取措施缓解拥塞</li><li>网际互连：实现异构网络互连</li><li>其他功能：差错控制、流量控制、连接的建立与释放、可靠传输管理</li></ul><h4 id="4-传输层：实现端到端的通信"><a href="#4-传输层：实现端到端的通信" class="headerlink" title="(4)传输层：实现端到端的通信"></a>(4)传输层：实现端到端的通信</h4><ul><li>复用和分用：发送端几个高层实体复用一条低层的连接，在接收端再进行分用</li><li>其他功能（以“报文”段为单位）：差错控制、流量控制、连接建立与释放、可靠传输管理</li></ul><h4 id="5-会话层：管理进程间会话"><a href="#5-会话层：管理进程间会话" class="headerlink" title="(5)会话层：管理进程间会话"></a>(5)会话层：管理进程间会话</h4><ul><li>主要功能：会话管理（采用检查点机制，当通信失效时从检查点继续恢复通信）</li></ul><h4 id="6-表示层：解决不同主机上信息表示不一致的问题"><a href="#6-表示层：解决不同主机上信息表示不一致的问题" class="headerlink" title="(6)表示层：解决不同主机上信息表示不一致的问题"></a>(6)表示层：解决不同主机上信息表示不一致的问题</h4><ul><li>主要功能：数据格式转换（如编码转换、压缩&#x2F;解压、加密&#x2F;解密）</li></ul><h4 id="7-应用层：实现特定的网络应用"><a href="#7-应用层：实现特定的网络应用" class="headerlink" title="(7)应用层：实现特定的网络应用"></a>(7)应用层：实现特定的网络应用</h4><h4 id="8-总结-2"><a href="#8-总结-2" class="headerlink" title="(8)总结"></a>(8)总结</h4><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/OSI%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B%E6%80%BB%E7%BB%93.png" alt="OSI参考模型总结"><br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh1/OSI%E5%8F%82%E8%80%83%E6%A8%A1%E5%9E%8B%E6%80%BB%E7%BB%932.png" alt="OSI参考模型总结2"></p><h3 id="2-TCP-IP模型（接网使用）"><a href="#2-TCP-IP模型（接网使用）" class="headerlink" title="2.TCP&#x2F;IP模型（接网使用）"></a>2.TCP&#x2F;IP模型（接网使用）</h3><h4 id="1-网络接口层"><a href="#1-网络接口层" class="headerlink" title="(1)网络接口层"></a>(1)网络接口层</h4><ul><li>任务：实现相邻结点间的数据传输（为网络层传输分组）。但具体怎么传输不做规定</li><li>使TCP&#x2F;IP网络体系结构有更强的灵活性、适应性</li></ul><h4 id="2-网络层"><a href="#2-网络层" class="headerlink" title="(2)网络层"></a>(2)网络层</h4><h4 id="3-传输层"><a href="#3-传输层" class="headerlink" title="(3)传输层"></a>(3)传输层</h4><ul><li>功能：复用和分用、差错控制、流量控制、连接建立与释放、可靠传输管理</li></ul><h4 id="4-应用层"><a href="#4-应用层" class="headerlink" title="(4)应用层"></a>(4)应用层</h4><ul><li>理念：如果某些应用需要数据格式转换和会话管理，那就交给应用层实现。因此砍掉了会话层和表示层</li></ul>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>计算机网络Ch2</title>
    <link href="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/"/>
    <url>/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/</url>
    
    <content type="html"><![CDATA[<h1 id="第二章-物理层"><a href="#第二章-物理层" class="headerlink" title="第二章 物理层"></a><center>第二章 物理层</center></h1><h2 id="一、通信基础基本概念"><a href="#一、通信基础基本概念" class="headerlink" title="一、通信基础基本概念"></a>一、通信基础基本概念</h2><h3 id="1-信源、信宿、信号、信道"><a href="#1-信源、信宿、信号、信道" class="headerlink" title="1.信源、信宿、信号、信道"></a>1.信源、信宿、信号、信道</h3><h4 id="1-信源：信号的来源（即数据的发送方）"><a href="#1-信源：信号的来源（即数据的发送方）" class="headerlink" title="(1)信源：信号的来源（即数据的发送方）"></a>(1)信源：信号的来源（即数据的发送方）</h4><h4 id="2-信宿：信号的“归宿”（即数据的接收方）"><a href="#2-信宿：信号的“归宿”（即数据的接收方）" class="headerlink" title="(2)信宿：信号的“归宿”（即数据的接收方）"></a>(2)信宿：信号的“归宿”（即数据的接收方）</h4><h4 id="3-数据：即信息的实体（如：文字、声音、图像），在计算机内部数据通常是二进制"><a href="#3-数据：即信息的实体（如：文字、声音、图像），在计算机内部数据通常是二进制" class="headerlink" title="(3)数据：即信息的实体（如：文字、声音、图像），在计算机内部数据通常是二进制"></a>(3)数据：即信息的实体（如：文字、声音、图像），在计算机内部数据通常是二进制</h4><h4 id="4-信道：信号的通道"><a href="#4-信道：信号的通道" class="headerlink" title="(4)信道：信号的通道"></a>(4)信道：信号的通道</h4><ul><li>注：一条物理线路通常包含两条信道，即发送信道、接收信道</li></ul><h4 id="5-信号：数据的载体"><a href="#5-信号：数据的载体" class="headerlink" title="(5)信号：数据的载体"></a>(5)信号：数据的载体</h4><ul><li>数字信号：信号值是离散的</li><li>模拟信号：信号值是连续的</li></ul><h3 id="2-码元、速率、波特"><a href="#2-码元、速率、波特" class="headerlink" title="2.码元、速率、波特"></a>2.码元、速率、波特</h3><h4 id="1-码元：每个信号是一个“码元”，信号周期称为码元宽度"><a href="#1-码元：每个信号是一个“码元”，信号周期称为码元宽度" class="headerlink" title="(1)码元：每个信号是一个“码元”，信号周期称为码元宽度"></a>(1)码元：每个信号是一个“码元”，信号周期称为码元宽度</h4><ul><li>如果一个码元（即一个信号）可能有4种状态，那么可以称其为4进制码元（一个码元携带2bit的数据）</li><li>类似地，如果一个码元（即一个信号）可能有8种状态，那么可以称其为8进制码元（一个码元携带3bit数据）</li><li>如果出现K种可能的信号，则一个码元可携带 $ log_2K $ bit的数据<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%94%A8%E6%A8%A1%E6%8B%9F%E4%BF%A1%E5%8F%B7%E8%AE%BE%E8%AE%A14%E8%BF%9B%E5%88%B6%E7%A0%81%E5%85%83.png" alt="用模拟信号设计4进制码元"><br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%94%A8%E6%95%B0%E5%AD%97%E4%BF%A1%E5%8F%B7%E8%AE%BE%E8%AE%A14%E8%BF%9B%E5%88%B6%E7%A0%81%E5%85%83.png" alt="用数字信号设计4进制码元"></li></ul><h4 id="2-速率"><a href="#2-速率" class="headerlink" title="(2)速率"></a>(2)速率</h4><ul><li><h5 id="波特率"><a href="#波特率" class="headerlink" title="波特率"></a>波特率</h5><ul><li>每秒传输几个码元</li><li>单位：码元&#x2F;秒，或波特（Baud）</li></ul></li><li><h5 id="比特率"><a href="#比特率" class="headerlink" title="比特率"></a>比特率</h5><ul><li>每秒传输几个比特</li><li>单位bit&#x2F;s，或b&#x2F;s，bps</li></ul></li><li>若一个码元携带n比特的信息量，则波特率M Baud对应的比特率为Mn b&#x2F;s</li></ul><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%AC%AC%E4%B8%80%E8%8A%82%E5%B0%8F%E7%BB%93.png" alt="第一节小结"></p><h2 id="二、信道的极限容量"><a href="#二、信道的极限容量" class="headerlink" title="二、信道的极限容量"></a>二、信道的极限容量</h2><h3 id="1-带宽"><a href="#1-带宽" class="headerlink" title="1.带宽"></a>1.带宽</h3><h4 id="1-计算机网络中："><a href="#1-计算机网络中：" class="headerlink" title="(1)计算机网络中："></a>(1)计算机网络中：</h4><ul><li>表示某信道所能通过的“最高数据率”。</li><li>单位：bps</li></ul><h4 id="2-通信原理中："><a href="#2-通信原理中：" class="headerlink" title="(2)通信原理中："></a>(2)通信原理中：</h4><ul><li>表示某信道允许通过的信号频带范围。</li><li>单位：Hz</li></ul><h3 id="2-噪声"><a href="#2-噪声" class="headerlink" title="2.噪声"></a>2.噪声</h3><ul><li>对信道产生干扰，影响信道的数据传输速率。</li></ul><h3 id="3-奈奎斯特定理"><a href="#3-奈奎斯特定理" class="headerlink" title="3.奈奎斯特定理"></a>3.奈奎斯特定理</h3><ul><li>对于一个<strong>理想低通信道</strong>（没有噪声、带宽有限的信道）<strong>极限波特率</strong>&#x3D;2W（单位：波特，即码元&#x2F;秒）</li><li>W是信道的频率带宽（单位：Hz）</li><li>极限比特率&#x3D;$2Wlog_2K \space b&#x2F;s$</li></ul><h3 id="4-香农定理"><a href="#4-香农定理" class="headerlink" title="4.香农定理"></a>4.香农定理</h3><ul><li>对于一个有噪声、带宽有限的信道，极限比特率&#x3D;$Wlog_2(1+S&#x2F;N)$，单位b&#x2F;s</li><li>S&#x2F;N：信噪比，无单位，信号的功率&#x2F;噪声的功率，信号功率往往比噪声功率大得多</li><li>为方便记录信噪比，信噪比$&#x3D;10lgS&#x2F;N$，单位：分贝（db）<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E4%B8%A4%E4%B8%AA%E5%AE%9A%E7%90%86%E5%AF%B9%E6%AF%94.png" alt="两个定理对比"></li></ul><h2 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h2><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%AC%AC%E4%BA%8C%E8%8A%82%E5%B0%8F%E7%BB%93.png" alt="第二节小结"></p><h2 id="三、编码和调制"><a href="#三、编码和调制" class="headerlink" title="三、编码和调制"></a>三、编码和调制</h2><h3 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h3><h4 id="1-编码和解码"><a href="#1-编码和解码" class="headerlink" title="(1)编码和解码"></a>(1)编码和解码</h4><ul><li>编码：将二进制数据编码为数字信号</li><li>解码：将数字信号解码为二进制数据</li></ul><h4 id="2-调制和解调"><a href="#2-调制和解调" class="headerlink" title="(2)调制和解调"></a>(2)调制和解调</h4><ul><li>二进制数据调制为模拟信号</li><li>模拟信号调制为二进制数据</li></ul><h4 id="3-变换器：将二进制数据转换为信号"><a href="#3-变换器：将二进制数据转换为信号" class="headerlink" title="(3)变换器：将二进制数据转换为信号"></a>(3)变换器：将二进制数据转换为信号</h4><h4 id="4-反变换器：将信号转换为二进制数据"><a href="#4-反变换器：将信号转换为二进制数据" class="headerlink" title="(4)反变换器：将信号转换为二进制数据"></a>(4)反变换器：将信号转换为二进制数据</h4><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E4%BF%A1%E5%8F%B7%E4%BC%A0%E8%BE%93%E7%A4%BA%E6%84%8F%E5%9B%BE.png" alt="信号传输示意图"></p><h3 id="2-常用的编码方法"><a href="#2-常用的编码方法" class="headerlink" title="2.常用的编码方法"></a>2.常用的编码方法</h3><h4 id="1-编码方法"><a href="#1-编码方法" class="headerlink" title="(1)编码方法"></a>(1)编码方法</h4><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%BC%96%E7%A0%81%E6%96%B9%E6%B3%95.png" alt="编码方法"></p><h4 id="2-编码方法的特点"><a href="#2-编码方法的特点" class="headerlink" title="(2)编码方法的特点"></a>(2)编码方法的特点</h4><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E5%90%84%E7%A7%8D%E7%BC%96%E7%A0%81%E7%9A%84%E7%89%B9%E7%82%B9.png" alt="各种编码的特点"></p><h3 id="3-常见的调制方法"><a href="#3-常见的调制方法" class="headerlink" title="3.常见的调制方法"></a>3.常见的调制方法</h3><h4 id="1-调幅"><a href="#1-调幅" class="headerlink" title="(1)调幅"></a>(1)调幅</h4><ul><li>使信号幅度变化</li></ul><h4 id="2-调频"><a href="#2-调频" class="headerlink" title="(2)调频"></a>(2)调频</h4><ul><li>使信号频率变化</li></ul><h4 id="3-调相"><a href="#3-调相" class="headerlink" title="(3)调相"></a>(3)调相</h4><ul><li>使信号相位变化</li></ul><h4 id="4-正交幅度调制"><a href="#4-正交幅度调制" class="headerlink" title="(4)正交幅度调制"></a>(4)正交幅度调制</h4><ul><li>既调频，又调相<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E8%B0%83%E5%88%B6%E6%96%B9%E6%B3%95.png" alt="调制方法"><br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E6%AD%A3%E4%BA%A4%E5%B9%85%E5%BA%A6%E8%B0%83%E5%88%B6.png" alt="正交幅度调制"></li></ul><h2 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h2><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%AC%AC%E4%B8%89%E8%8A%82%E5%B0%8F%E7%BB%93.png" alt="第三节小结"></p><h2 id="四、传输介质"><a href="#四、传输介质" class="headerlink" title="四、传输介质"></a>四、传输介质</h2><h3 id="1-导向型传输介质"><a href="#1-导向型传输介质" class="headerlink" title="1.导向型传输介质"></a>1.导向型传输介质</h3><h4 id="1-双绞线"><a href="#1-双绞线" class="headerlink" title="(1)双绞线"></a>(1)双绞线</h4><ul><li>主要构成：两根导线相互绞合而成<ul><li>有屏蔽层：屏蔽双绞线（STP）</li><li>没有屏蔽层：非屏蔽双绞线（UTP）</li></ul></li><li>抗干扰能力：较好。<strong>绞合、屏蔽层</strong> 可以提升抗电磁干扰的能力</li><li>代表应用：近些年的局域网线、早期电话线<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E5%8F%8C%E7%BB%9E%E7%BA%BF.png" alt="双绞线"></li></ul><h4 id="2-同轴电缆"><a href="#2-同轴电缆" class="headerlink" title="(2)同轴电缆"></a>(2)同轴电缆</h4><ul><li>主要构成：内导体（用于传输信号）+外导体屏蔽层（用于抗电磁干扰）<ul><li>内导体越粗，电阻越低，传输过程中信号衰减越少，传输距离越长</li></ul></li><li>抗干扰能力：好。屏蔽层带来良好的抗干扰性</li><li>代表应用：早期局域网、早期有线电视<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E5%90%8C%E8%BD%B4%E7%94%B5%E7%BC%86.png" alt="同轴电缆"></li></ul><h4 id="3-光纤"><a href="#3-光纤" class="headerlink" title="(3)光纤"></a>(3)光纤</h4><ul><li>主要构成：纤芯（高折射率）+包层（低折射率）<ul><li>利用光的全反射特性，在纤芯内传输光脉冲信号</li></ul></li><li>分类：<ul><li>单模光纤：只有一条光线在一根光纤中传输，适合长距离传输，信号传输损耗小</li><li>多模光纤：多条光线在一根光纤中传输，适合近距离传输，远距离传输光信号容易失真</li></ul></li><li>抗干扰能力：非常好。光信号对电磁干扰不敏感</li><li>其他优点：信号传输损耗小，长距离传输时中继器少；很细很省布线空间<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E5%85%89%E7%BA%A4.png" alt="光纤"></li></ul><h4 id="4-以太网对有线传输介质的命名规则"><a href="#4-以太网对有线传输介质的命名规则" class="headerlink" title="(4)以太网对有线传输介质的命名规则"></a>(4)以太网对有线传输介质的命名规则</h4><ul><li>速度+Base+介质信息<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E5%91%BD%E5%90%8D%E8%A7%84%E5%88%99.png" alt="命名规则"></li></ul><h3 id="2-非导向型传播介质"><a href="#2-非导向型传播介质" class="headerlink" title="2.非导向型传播介质"></a>2.非导向型传播介质</h3><h4 id="1-无线电波"><a href="#1-无线电波" class="headerlink" title="(1)无线电波"></a>(1)无线电波</h4><ul><li>特点：穿透能力强、传输距离长、信号指向性弱</li><li>如：手机信号、WIFI</li></ul><h4 id="2-微波通信"><a href="#2-微波通信" class="headerlink" title="(2)微波通信"></a>(2)微波通信</h4><ul><li>特点：频率带宽高、信号指向性强、保密性差（容易被窃听）</li><li>如：卫星通信（卫星作为信号中继器，传播时延较大）</li></ul><h4 id="3-其他：红外线通信、激光通信等————信号指向性强"><a href="#3-其他：红外线通信、激光通信等————信号指向性强" class="headerlink" title="(3)其他：红外线通信、激光通信等————信号指向性强"></a>(3)其他：红外线通信、激光通信等————信号指向性强</h4><h3 id="3-物理层接口的特性"><a href="#3-物理层接口的特性" class="headerlink" title="3.物理层接口的特性"></a>3.物理层接口的特性</h3><h4 id="1-机械特性"><a href="#1-机械特性" class="headerlink" title="(1)机械特性"></a>(1)机械特性</h4><ul><li>指明接口所用接线器的形状和尺寸、引脚数目和排列、固定和锁定装置等</li></ul><h4 id="2-电气特性"><a href="#2-电气特性" class="headerlink" title="(2)电气特性"></a>(2)电气特性</h4><ul><li>指明在接口电缆的各条线上出现的电压的范围、传输速率、距离限制等</li></ul><h4 id="3-功能特性"><a href="#3-功能特性" class="headerlink" title="(3)功能特性"></a>(3)功能特性</h4><ul><li>指明某条线上出现的某一电平的电压的意义</li></ul><h4 id="4-过程特性"><a href="#4-过程特性" class="headerlink" title="(4)过程特性"></a>(4)过程特性</h4><ul><li>指明对于不同功能的各种可能事件的出现顺序</li></ul><h2 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h2><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%AC%AC%E5%9B%9B%E8%8A%82%E5%B0%8F%E7%BB%93.png" alt="第四节小结"></p><h2 id="五、物理层设备"><a href="#五、物理层设备" class="headerlink" title="五、物理层设备"></a>五、物理层设备</h2><h3 id="1-中继器"><a href="#1-中继器" class="headerlink" title="1.中继器"></a>1.中继器</h3><ul><li>中继器只有两个端口，通过一个端口接收信号，将失真信号整形再生，并转发至零一端口（信号再生会产生一段时间）</li><li>仅支持半双工通信（两端连接的结点不可同时发送数据，会导致“冲突”）</li><li>中继器两个端口对应两个“网段”</li></ul><h3 id="2-集线器"><a href="#2-集线器" class="headerlink" title="2.集线器"></a>2.集线器</h3><ul><li>本质上是多端口中继器。集线器将其中一个端口接收到的信号整形再生后，转发到所有其他端口</li><li>各端口连接的结点不可同时发送数据，会导致冲突</li><li>集线器的N个端口对应N个“网段”，各网段属于同一个“冲突域”<blockquote><p>冲突域：如果两台主机同时发送数据会导致“冲突”，则这两台主机处于同一个“冲突域”，处于同一个冲突域的主机在发送数据前需要进行“信道争用”</p></blockquote></li></ul><h3 id="3-中继器、集线器的一些特性"><a href="#3-中继器、集线器的一些特性" class="headerlink" title="3.中继器、集线器的一些特性"></a>3.中继器、集线器的一些特性</h3><h4 id="1-集线器、中继器不能“无限串联”————如10Base5的5-4-3原则"><a href="#1-集线器、中继器不能“无限串联”————如10Base5的5-4-3原则" class="headerlink" title="(1)集线器、中继器不能“无限串联”————如10Base5的5-4-3原则"></a>(1)集线器、中继器不能“无限串联”————如10Base5的5-4-3原则</h4><ul><li>5-4-3原则：使用集线器（或中继器）连接10Base5网段时，最多只能串联5个网段，使用4台集线器（或中继器），只有3个网段可以挂接计算机。<br><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/5-4-3%E5%8E%9F%E5%88%99.png" alt="5-4-3原则"></li><li>集线器连接的网络，物理上是星形拓扑，逻辑上是总线型拓扑</li><li>集线器连接的网段“共享带宽”</li></ul><h2 id="小结-4"><a href="#小结-4" class="headerlink" title="小结"></a>小结</h2><p><img src="/2024/09/11/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9CCh2/%E7%AC%AC%E4%BA%94%E8%8A%82%E5%B0%8F%E7%BB%93.png" alt="第五节小结"></p>]]></content>
    
    
    <categories>
      
      <category>计算机网络</category>
      
    </categories>
    
    
    <tags>
      
      <tag>计算机网络</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch3</title>
    <link href="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch3/"/>
    <url>/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch3/</url>
    
    <content type="html"><![CDATA[<h1 id="第三章-词法分析"><a href="#第三章-词法分析" class="headerlink" title="第三章 词法分析"></a><center>第三章 词法分析</center></h1><h2 id="一、手工构造词法分析器"><a href="#一、手工构造词法分析器" class="headerlink" title="一、手工构造词法分析器"></a>一、手工构造词法分析器</h2><h3 id="1-词法分析器的功能和输出形式"><a href="#1-词法分析器的功能和输出形式" class="headerlink" title="1.词法分析器的功能和输出形式"></a>1.词法分析器的功能和输出形式</h3><h4 id="功能：输入源程序，输出单词符号"><a href="#功能：输入源程序，输出单词符号" class="headerlink" title="功能：输入源程序，输出单词符号"></a>功能：输入源程序，输出单词符号</h4><h4 id="单词符号：一个程序语言的基本语法符号"><a href="#单词符号：一个程序语言的基本语法符号" class="headerlink" title="单词符号：一个程序语言的基本语法符号"></a>单词符号：一个程序语言的基本语法符号</h4><h4 id="单词分类（5类）："><a href="#单词分类（5类）：" class="headerlink" title="单词分类（5类）："></a>单词分类（5类）：</h4><ul><li>关键字：由程序语言定义的具有固定意义的标识符。也称为保留字或基本字。</li><li>标识符：用来表示程序中各种名字的字符串</li><li>常数：整型、实型、布尔型、文字型</li><li>运算符：+、-、*、&#x2F;</li><li>界限符：逗号，分号，括号等</li></ul><h2 id="二、正则表达式与有限自动机"><a href="#二、正则表达式与有限自动机" class="headerlink" title="二、正则表达式与有限自动机"></a>二、正则表达式与有限自动机</h2><h3 id="1-正规式与正规集"><a href="#1-正规式与正规集" class="headerlink" title="1.正规式与正规集"></a>1.正规式与正规集</h3><h4 id="1-正规式也称正则表达式"><a href="#1-正规式也称正则表达式" class="headerlink" title="(1)正规式也称正则表达式"></a>(1)正规式也称正则表达式</h4><h4 id="2-正规表达式（regular-expression）"><a href="#2-正规表达式（regular-expression）" class="headerlink" title="(2)正规表达式（regular expression）"></a>(2)正规表达式（regular expression）</h4><ul><li>是说明单词的模式（pattern）的一种重要的表示法（记号），是定义正规集的一种重要的数学工具。</li></ul><h4 id="3-定义（正规式和它所表示的正规集）："><a href="#3-定义（正规式和它所表示的正规集）：" class="headerlink" title="(3)定义（正规式和它所表示的正规集）："></a>(3)定义（正规式和它所表示的正规集）：</h4><h5 id="设字母表为∑，辅助字母表-Σ-varepsilon-varphi-·"><a href="#设字母表为∑，辅助字母表-Σ-varepsilon-varphi-·" class="headerlink" title="设字母表为∑，辅助字母表  Σ&#96;&#x3D; { $\varepsilon,\varphi, |,·,*,(,)$ }"></a>设字母表为∑，辅助字母表  Σ&#96;&#x3D; { $\varepsilon,\varphi, |,·,*,(,)$ }</h5><ul><li>$ \varepsilon,\varphi $都是正规式，表示的正规集是{ $ \varepsilon $ },{ $ \varphi $ }</li><li>对任意a∈∑，a是正规式，表示的正规集是{a}</li><li>$ e_1、e_2$是正规式，表示的正规集是$L(e_1)$、$L(e_2)$，则$(e_1)$、$e_1|e_2$、$e_1·e_2$、$e^*$也是正规式，表示的正规集分别为$L(e_1)$、$L(e_1)$∪$L(e_2)$、$L(e_1)$ $L(e_2)$和$(L(e_1))^*$</li></ul><h4 id="4-正规式的等价性"><a href="#4-正规式的等价性" class="headerlink" title="(4)正规式的等价性"></a>(4)正规式的等价性</h4><ul><li>若两个正规式的正规集相等，那么正规式等价，记作$e_1&#x3D;e_2$</li></ul><h3 id="2-确定有限自动机"><a href="#2-确定有限自动机" class="headerlink" title="2.确定有限自动机"></a>2.确定有限自动机</h3><h4 id="1-DFA定义："><a href="#1-DFA定义：" class="headerlink" title="(1)DFA定义："></a>(1)DFA定义：</h4><h5 id="一个确定的有穷自动机（DFA）M是一个五元组M-（S，Σ，δ，-s-0-，F），其中"><a href="#一个确定的有穷自动机（DFA）M是一个五元组M-（S，Σ，δ，-s-0-，F），其中" class="headerlink" title="一个确定的有穷自动机（DFA）M是一个五元组M&#x3D;（S，Σ，δ，$s_0$，F），其中"></a>一个确定的有穷自动机（DFA）M是一个五元组M&#x3D;（S，Σ，δ，$s_0$，F），其中</h5><ul><li>S是一个有穷集，它的每一个元素称为一个状态</li><li>Σ是一个有穷字母表，它的每个元素称为一个输入符号，所以也称Σ为输入符号表</li><li>δ是转换函数，是在S×Σ→S上的单值部分映射，即，如果 δ（s，a）&#x3D;s’，（s∈S，s’∈S）就意味着，当前状态为s，输入符为a时，将转换为下一个状态s’，s’称作s的一个后继状态</li><li>$s_0$ ∈S是唯一的一个初态</li><li>F ⊂ S是一个终态集（可空），终态也称可接受状态或结束状态<br><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch3/DFA%E5%9B%BE%E7%A4%BA.png" alt="DFA图示"><blockquote><p>给定e∈Σ，若e中的每个字母可以沿着DFA的图从起始状态到终止状态，则e被DFA M所识别（接受），否则为不接受。例：e&#x3D;abb可被识别</p></blockquote></li></ul><h3 id="3-非确定的有穷自动机NFA"><a href="#3-非确定的有穷自动机NFA" class="headerlink" title="3.非确定的有穷自动机NFA"></a>3.非确定的有穷自动机NFA</h3><h4 id="1-定义；"><a href="#1-定义；" class="headerlink" title="(1)定义；"></a>(1)定义；</h4><h5 id="一个非确定的有穷自动机（NFA）M是一个五元组：-M-（S，Σ，-δ，S-0，F）-其中"><a href="#一个非确定的有穷自动机（NFA）M是一个五元组：-M-（S，Σ，-δ，S-0，F）-其中" class="headerlink" title="一个非确定的有穷自动机（NFA）M是一个五元组：$M&#x3D;（S，Σ， δ，S_0，F）$,其中:"></a>一个非确定的有穷自动机（NFA）M是一个五元组：$M&#x3D;（S，Σ， δ，S_0，F）$,其中:</h5><ul><li>S是一个有穷集，它的每个元素称为一个状态；</li><li>Σ是一个有穷字母表，它的每个元素称为一个输入符号，所以也称Σ为输入符号表；</li><li>δ是状态转换函数，是在S×Σ*→S的子集的映射，即， $δ : S×Σ^*→2^S $；表明在某状态下对于某输入符号可能有多个后继状态；</li><li>$S_0 ⊂ S$是一个非空初态集；</li><li>$F ⊂ K$是一个终态集（可空）。</li></ul><h2 id="三、NFA确定化（NFA→DFA）"><a href="#三、NFA确定化（NFA→DFA）" class="headerlink" title="三、NFA确定化（NFA→DFA）"></a>三、NFA确定化（NFA→DFA）</h2><h3 id="1-列表，第一行是初态，通过各个字母到达其他状态"><a href="#1-列表，第一行是初态，通过各个字母到达其他状态" class="headerlink" title="1.列表，第一行是初态，通过各个字母到达其他状态"></a>1.列表，第一行是初态，通过各个字母到达其他状态</h3><h3 id="2-求其他状态的-varepsilon-闭包"><a href="#2-求其他状态的-varepsilon-闭包" class="headerlink" title="2.求其他状态的$\varepsilon$闭包"></a>2.求其他状态的$\varepsilon$闭包</h3><h3 id="3-将最左边一列没出现过的状态重复1和2"><a href="#3-将最左边一列没出现过的状态重复1和2" class="headerlink" title="3.将最左边一列没出现过的状态重复1和2"></a>3.将最左边一列没出现过的状态重复1和2</h3><h3 id="4-画图，初态是原来的初态，终态为包含原来终态的所有状态"><a href="#4-画图，初态是原来的初态，终态为包含原来终态的所有状态" class="headerlink" title="4.画图，初态是原来的初态，终态为包含原来终态的所有状态"></a>4.画图，初态是原来的初态，终态为包含原来终态的所有状态</h3><h2 id="四、DFA最小化"><a href="#四、DFA最小化" class="headerlink" title="四、DFA最小化"></a>四、DFA最小化</h2><h3 id="1-将状态集合划分为两个集合，非终态集和终态集"><a href="#1-将状态集合划分为两个集合，非终态集和终态集" class="headerlink" title="1.将状态集合划分为两个集合，非终态集和终态集"></a>1.将状态集合划分为两个集合，非终态集和终态集</h3><h3 id="2-将非终态集继续划分"><a href="#2-将非终态集继续划分" class="headerlink" title="2.将非终态集继续划分"></a>2.将非终态集继续划分</h3><ul><li>根据字母表中的每个元素，一一代入状态转换函数中，将接收和不接受的集合分开</li><li>重复这个步骤，最终将状态集划分为多个集合，这几个集合组成的集合为</li></ul><p>$P&#x3D;$ { $S_1，S_2，…，S_i$ }</p><h3 id="3-在P的每个元素中选出一个代表，将相同组的状态元素全部替换。"><a href="#3-在P的每个元素中选出一个代表，将相同组的状态元素全部替换。" class="headerlink" title="3.在P的每个元素中选出一个代表，将相同组的状态元素全部替换。"></a>3.在P的每个元素中选出一个代表，将相同组的状态元素全部替换。</h3><p>把原来导入非代表状态的弧均导入其代表即可，即若$k^′$是一代表且$f(k^′,a)&#x3D;t$,令$r$是$t$组的代表，则$M^′$中有一转换$f^′(k^′,a)&#x3D;r$，$M^′$的开始状态是含有$S_0$的那组的代表，$M^′$的终态是含有$F$的那组的代表。</p><h2 id="五、正规式转化为NFA"><a href="#五、正规式转化为NFA" class="headerlink" title="五、正规式转化为NFA"></a>五、正规式转化为NFA</h2><h3 id="1-转化方法"><a href="#1-转化方法" class="headerlink" title="1.转化方法"></a>1.转化方法</h3><p>将正规式的每个元素一步一步按照规则进行转化</p><h3 id="2-规则"><a href="#2-规则" class="headerlink" title="2.规则"></a>2.规则</h3><h4 id="1-e-1·e-2"><a href="#1-e-1·e-2" class="headerlink" title="(1)$e_1·e_2$"></a>(1)$e_1·e_2$</h4><p><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch3/e1%E8%BF%9E%E6%8E%A5e2.png" alt="e1连接e2"></p><h4 id="2-e"><a href="#2-e" class="headerlink" title="(2)$e^*$"></a>(2)$e^*$</h4><p><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch3/e%E7%9A%84%E9%97%AD%E5%8C%85.png" alt="e的闭包"></p><h4 id="3-e-1-e-2"><a href="#3-e-1-e-2" class="headerlink" title="(3)$e_1|e_2$"></a>(3)$e_1|e_2$</h4><p><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch3/e1%E6%88%96e2.png" alt="e1或e2"></p><h2 id="六、把给定的∑上的NFA-M转换为一个正规文法G-R-的构造规则"><a href="#六、把给定的∑上的NFA-M转换为一个正规文法G-R-的构造规则" class="headerlink" title="六、把给定的∑上的NFA M转换为一个正规文法G[R]的构造规则:"></a>六、把给定的∑上的NFA M转换为一个正规文法G[R]的构造规则:</h2><p>设$NFA \space\space M&#x3D;（ K，Σ，f，S，Z），G[R]&#x3D;（V_N，V_T，P，R）$</p><h3 id="1-令-V-T-Σ"><a href="#1-令-V-T-Σ" class="headerlink" title="1.令$V_T&#x3D;Σ$"></a>1.令$V_T&#x3D;Σ$</h3><p>正规文法的终结符集就是NFA的字母表</p><h3 id="2-令-V-N-K"><a href="#2-令-V-N-K" class="headerlink" title="2.令$V_N&#x3D;K$"></a>2.令$V_N&#x3D;K$</h3><p>即对M的每个状态生成非终结符（不妨取相同名字，G的开始符号是M的初态）</p><h3 id="3-令-S-R"><a href="#3-令-S-R" class="headerlink" title="3.令$S&#x3D;R$"></a>3.令$S&#x3D;R$</h3><p>如果M有多个初态，应先拓广自动机，引入新初态x；<br>方法：选定一个初态，与其他初态之间用$\varepsilon$弧连接</p><h3 id="4-对M增加一个产生式：-Z→-varepsilon"><a href="#4-对M增加一个产生式：-Z→-varepsilon" class="headerlink" title="4.对M增加一个产生式：$Z→\varepsilon$"></a>4.对M增加一个产生式：$Z→\varepsilon$</h3><p>终态推导出$\varepsilon$</p><h3 id="5-构造G的产生式"><a href="#5-构造G的产生式" class="headerlink" title="5.构造G的产生式"></a>5.构造G的产生式</h3><p>对M中的每个状态转换函数$δ(A,t)&#x3D;B$得出G的一个产生式$A→tB$（t为终结符或$\varepsilon$，A、B为非终结符）</p>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>编译原理Ch1</title>
    <link href="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/"/>
    <url>/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/</url>
    
    <content type="html"><![CDATA[<h1 id="第一章-引论-第二章"><a href="#第一章-引论-第二章" class="headerlink" title="第一章 引论 &amp;&amp; 第二章"></a><center>第一章 引论 &amp;&amp; 第二章</center></h1><h2 id="1-1-编译程序（Compiler）"><a href="#1-1-编译程序（Compiler）" class="headerlink" title="1.1 编译程序（Compiler）"></a>1.1 编译程序（Compiler）</h2><h3 id="可变目标编译程序"><a href="#可变目标编译程序" class="headerlink" title="可变目标编译程序"></a>可变目标编译程序</h3><h3 id="交叉编译程序"><a href="#交叉编译程序" class="headerlink" title="交叉编译程序"></a>交叉编译程序</h3><h2 id="1-2-编译程序的组成"><a href="#1-2-编译程序的组成" class="headerlink" title="1.2 编译程序的组成"></a>1.2 编译程序的组成</h2><p><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E7%BC%96%E8%AF%91%E7%A8%8B%E5%BA%8F%E7%9A%84%E7%BB%84%E6%88%90.jpg" alt="编译程序的组成"></p><h3 id="1-2-1（第二重要）词法的：lexical"><a href="#1-2-1（第二重要）词法的：lexical" class="headerlink" title="1.2.1（第二重要）词法的：lexical"></a>1.2.1（第二重要）词法的：lexical</h3><ul><li>将你输入的代码转化成一个个单词（当你写完代码后，你的程序代码相当于一个大长字符串）</li></ul><h3 id="1-2-2（最重要）语法分析器：按照语法分析程序结构，结构决定功能※"><a href="#1-2-2（最重要）语法分析器：按照语法分析程序结构，结构决定功能※" class="headerlink" title="1.2.2（最重要）语法分析器：按照语法分析程序结构，结构决定功能※"></a>1.2.2（最重要）语法分析器：按照语法分析程序结构，结构决定功能※</h3><h4 id="程序包括"><a href="#程序包括" class="headerlink" title="程序包括:"></a>程序包括:</h4><ul><li>返回类型：int</li><li>标识符：main</li><li>参数表：(</li><li>参数序列：)</li><li>函数体：{语句;}</li></ul><h3 id="1-2-3-语义分析：不重要，知道就行"><a href="#1-2-3-语义分析：不重要，知道就行" class="headerlink" title="1.2.3 语义分析：不重要，知道就行"></a>1.2.3 语义分析：不重要，知道就行</h3><h3 id="1-2-4（第三重要）中间代码生成：将你的代码转化为所谓的中间代码"><a href="#1-2-4（第三重要）中间代码生成：将你的代码转化为所谓的中间代码" class="headerlink" title="1.2.4（第三重要）中间代码生成：将你的代码转化为所谓的中间代码"></a>1.2.4（第三重要）中间代码生成：将你的代码转化为所谓的中间代码</h3><p>源代码有m个源程序，n个目标平台，如果有中间代码，那么程序员的工作量是$m+n$；如果没有，工作量是$m*n$</p><h3 id="1-2-5-代码优化器：不重要，知道就行"><a href="#1-2-5-代码优化器：不重要，知道就行" class="headerlink" title="1.2.5 代码优化器：不重要，知道就行"></a>1.2.5 代码优化器：不重要，知道就行</h3><h3 id="1-2-6-代码生成器：不重要，知道就行"><a href="#1-2-6-代码生成器：不重要，知道就行" class="headerlink" title="1.2.6 代码生成器：不重要，知道就行"></a>1.2.6 代码生成器：不重要，知道就行</h3><blockquote><p>编译器只是给什么就干什么，不知道整体程序要干什么，程序是由这个过程的线性序列组成的</p></blockquote><h3 id="1-2-7-三个概念"><a href="#1-2-7-三个概念" class="headerlink" title="1.2.7 三个概念"></a>1.2.7 三个概念</h3><ul><li><h4 id="前端：前四个"><a href="#前端：前四个" class="headerlink" title="前端：前四个"></a>前端：前四个</h4></li><li><h4 id="后端：后二个"><a href="#后端：后二个" class="headerlink" title="后端：后二个"></a>后端：后二个</h4></li><li><h4 id="遍：编译器一遍扫描，完成自己的工作"><a href="#遍：编译器一遍扫描，完成自己的工作" class="headerlink" title="遍：编译器一遍扫描，完成自己的工作"></a>遍：编译器一遍扫描，完成自己的工作</h4></li></ul><h2 id="1-3-高级语言及其语法特征"><a href="#1-3-高级语言及其语法特征" class="headerlink" title="1.3 高级语言及其语法特征"></a>1.3 高级语言及其语法特征</h2><h3 id="1-3-1-程序语言的语法和语义"><a href="#1-3-1-程序语言的语法和语义" class="headerlink" title="1.3.1 程序语言的语法和语义"></a>1.3.1 程序语言的语法和语义</h3><h4 id="语言："><a href="#语言：" class="headerlink" title="语言："></a>语言：</h4><ul><li>定义在某个字母表上的句子的集合（自然语言&#x2F;程序语言）</li><li>自然语言的定义是不断变化的，程序设计语言的结构定义是固定的</li><li>语法：<br><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E8%AF%AD%E6%B3%95.jpg" alt="语法"></li></ul><h4 id="语义："><a href="#语义：" class="headerlink" title="语义："></a>语义：</h4><ul><li>定义程序的意义。没有公认的形式系统描述语义</li></ul><h4 id="高级语言的分类：不重要，与编译器的关联都在语义层面"><a href="#高级语言的分类：不重要，与编译器的关联都在语义层面" class="headerlink" title="高级语言的分类：不重要，与编译器的关联都在语义层面"></a>高级语言的分类：不重要，与编译器的关联都在语义层面</h4><ul><li>强制式语言&#x2F;过程式语言&#x2F;命令式语言：FORTRAN,C,Pascal</li><li>应用式&#x2F;函数式语言：LISP</li><li>基于规则的语言：Prolog</li><li>OO的语言：</li></ul><h3 id="1-3-2-程序语言的语法描述"><a href="#1-3-2-程序语言的语法描述" class="headerlink" title="1.3.2 程序语言的语法描述"></a>1.3.2 程序语言的语法描述</h3><h4 id="字母表和符号串"><a href="#字母表和符号串" class="headerlink" title="字母表和符号串"></a>字母表和符号串</h4><p><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E5%AD%97%E6%AF%8D%E8%A1%A8%E5%92%8C%E7%AC%A6%E5%8F%B7%E4%B8%B2.jpg" alt="字母表和符号串"></p><ul><li>例：C的字母表：ASCII</li><li>例：C#：UNICODE</li><li>序列：线性生成符号串，无法出现乘方&#x2F;积分&#x2F;∑类似的方式</li></ul><h4 id="符号串和符号串集合的运算"><a href="#符号串和符号串集合的运算" class="headerlink" title="符号串和符号串集合的运算"></a>符号串和符号串集合的运算</h4><ul><li>相等：</li><li>长度：$|e|&#x3D;0$</li><li>连接：拼一起。(ex&#x3D;xe)</li><li>符号串集合的乘积运算<br><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E7%AC%A6%E5%8F%B7%E4%B8%B2%E4%B9%98%E7%A7%AF.jpg" alt="符号串乘积"></li><li>幂运算<ul><li>$for∈∑^3$</li><li>$while∈∑^5$</li><li>$main∈∑^4$</li></ul></li><li>闭包运算<ul><li>正则闭包：$∑^+&#x3D;∑^1∪∑^2∪…∪∑^n∪…$</li><li>闭包：$∑^*&#x3D;∑^0∪∑^+$</li></ul></li></ul><h3 id="1-3-3-文法的直观理解"><a href="#1-3-3-文法的直观理解" class="headerlink" title="1.3.3 文法的直观理解"></a>1.3.3 文法的直观理解</h3><h4 id="什么是文法"><a href="#什么是文法" class="headerlink" title="什么是文法"></a>什么是文法</h4><ul><li>文法是对语言结构的定义与描述。即从形式上用于描述和规定语言结构的称为“文法”（或称为“语法”）。</li></ul><h4 id="语法规则"><a href="#语法规则" class="headerlink" title="语法规则"></a>语法规则</h4><ul><li>我们通过建立一组规则（产生式），来描述句子的语法结构。规定用“::&#x3D;”表示“由……组成”。<br><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E8%AF%AD%E6%B3%95%E8%A7%84%E5%88%99%E4%B8%BE%E4%BE%8B.png" alt="语法规则举例"></li></ul><h4 id="由产生式推导句子"><a href="#由产生式推导句子" class="headerlink" title="由产生式推导句子"></a>由产生式推导句子</h4><ul><li>有了一组产生式之后，可以按照一定的方式用它们去推导或产生句子。</li><li>推导方法：从一个要识别的符号开始推导，即用相应产生式的右部来替代产生式的左部，每次仅用一条产生式去进行推导。<blockquote><p>例：<br>&lt;句子&gt;  &#x3D;&gt; &lt;主语&gt;&lt;谓语&gt;<br>&lt;主语&gt;&lt;谓语&gt; &#x3D;&gt; &lt;代词&gt;&lt;谓语&gt; …<br>这种推导一直进行下去，直到所有带&lt; &gt;的符号都由终结符号替代为止。</p></blockquote></li></ul><p><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E6%8E%A8%E5%AF%BC%E4%B8%BE%E4%BE%8B.png" alt="推导举例"></p><h4 id="语法树"><a href="#语法树" class="headerlink" title="语法树"></a>语法树</h4><ul><li>我们用语法树来描述一个句子的语法结构。<br><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E8%AF%AD%E6%B3%95%E6%A0%91%E4%B8%BE%E4%BE%8B.png" alt="语法树举例"></li></ul><h3 id="1-3-4-文法和语言的形式定义"><a href="#1-3-4-文法和语言的形式定义" class="headerlink" title="1.3.4 文法和语言的形式定义"></a>1.3.4 文法和语言的形式定义</h3><h4 id="文法的定义"><a href="#文法的定义" class="headerlink" title="文法的定义"></a>文法的定义</h4><blockquote><p>定义（乔姆斯基）：文法$G&#x3D;(V_N,V_T,P,Z)$</p><ul><li>$V_N$：非终结符号集</li><li>$V_T$：终结符号集</li><li>$P$：产生式或规则的集合</li><li>$Z$：开始符号（识别符号）$Z∈{V_N}$</li></ul></blockquote><p>人话：终结符是不可拆分的，非终结符可以被拆分为终结符或非终结符，产生式就是非终结符拆分的规则&#x2F;过程，开始符号是最开始那个产生式的左部</p><h4 id="推导与规约"><a href="#推导与规约" class="headerlink" title="推导与规约"></a>推导与规约</h4><ul><li>直接推导：<br><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E7%9B%B4%E6%8E%A5%E6%8E%A8%E5%AF%BC.png" alt="直接推导.png"><blockquote><p>换句话说，x和y是符号串，若使用一次产生式可以从x变换出y，则称x直接推导出y（或者说y是x的直接推导），记为$x⇒y$</p></blockquote></li><li>+推导：x和y是符号串，若使用若干次（大于0）产生式可以从x变换出y，则称x推导出y（或者说y是x的推导），记为$A \overset{+}{\Rightarrow} B$</li><li>*推导：x和y是符号串，若使用0次或若干次产生式可以从x变换出y，则称x*推导出y（或者说y是x的*推导），记为$A \overset{*}{\Rightarrow} B$</li><li>最右推导：若符号串α中有两个以上的非终结符时，对推导的每一步坚持把α中的最右非终结符进行替换，称为最右推导。</li><li>最左推导：若符号串α中有两个以上的非终结符时，对推导的每一步坚持把α中的最左非终结符进行替换，称为最左推导。</li><li>规约：推导的逆过程</li></ul><h4 id="语言的形式定义"><a href="#语言的形式定义" class="headerlink" title="语言的形式定义"></a>语言的形式定义</h4><p>对于文法G[Z]:</p><ul><li><p><strong>句型</strong>：x是句型 $ \Leftrightarrow $ $ \space Z \overset{*}{\Rightarrow} x$，且$x∈V^{\ast}$;</p></li><li><p><strong>句子</strong>：x是句子 $ \Leftrightarrow $ $\space Z \overset{+}{\Rightarrow} x$，且$x∈{V^*_T}$;</p></li><li><p><strong>语言</strong>：$L(G[N])$&#x3D; { $ x|\space Z \overset{+}{\Rightarrow} x，x∈{V^*_T} $ } </p><blockquote><p>例：<br><img src="/2024/09/10/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86Ch1/%E6%96%87%E6%B3%95%E4%BE%8B%E5%AD%90.png" alt="文法例子"><br><strong>等价文法</strong>：G和G`是不同文法，若L(G)&#x3D;L(G`)，则二者是等价文法</p></blockquote></li></ul><h4 id="文法分类"><a href="#文法分类" class="headerlink" title="文法分类"></a>文法分类</h4><ul><li>形式语言：用文法和自动机所描述的没有意义的语言</li><li>0型文法： $ P: u \rightarrow v，其中u∈V^+，v∈V^*$</li></ul><blockquote><p>人话：产生式左边有符号（非空），右边随意</p></blockquote><ul><li>1型文法：$ P: xUy\rightarrow xuy，其中U∈V_N，x、y、u∈V^*$<blockquote><p>人话：0型基础上，有非终结符</p></blockquote></li><li>2型文法(※)：$P：U\rightarrow u，其中U∈V_N，u∈{V^*}$<blockquote><p>人话：1型基础上，产生式左部只有一个符号且是非终结符（另：上下文无关）</p></blockquote></li><li>3型文法(※)：<ul><li>（左线性）$P：U\rightarrow T或U\rightarrow wT，其中U、w∈V_N，T∈V_T$</li><li>（右线性）$P：U\rightarrow T或U\rightarrow Tw，其中U、w∈V_N，T∈V_T$<blockquote><p>人话：右边要么没有非终结符，要么只有一个</p></blockquote></li></ul></li></ul><h4 id="语法树与二义性文法"><a href="#语法树与二义性文法" class="headerlink" title="语法树与二义性文法"></a>语法树与二义性文法</h4><ul><li>若对于一个文法的某一句子存在两棵不同的语法树，则该文法是二义性文法，否则是无二义性文法。</li><li>若一个文法的某句子存在两个不同的规范推导，则该文法是二义性的，否则是无二义性的。</li></ul>]]></content>
    
    
    <categories>
      
      <category>编译原理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>编译原理</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>博客命令大全</title>
    <link href="/2024/09/08/%E5%8D%9A%E5%AE%A2%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/"/>
    <url>/2024/09/08/%E5%8D%9A%E5%AE%A2%E5%91%BD%E4%BB%A4%E5%A4%A7%E5%85%A8/</url>
    
    <content type="html"><![CDATA[<h2 id="博客命令大全"><a href="#博客命令大全" class="headerlink" title="博客命令大全"></a><center>博客命令大全</center></h2><h3 id="1-新建文章："><a href="#1-新建文章：" class="headerlink" title="1.新建文章："></a>1.新建文章：</h3><p>npx hexo new post ‘name’</p><h3 id="2-上传更改："><a href="#2-上传更改：" class="headerlink" title="2.上传更改："></a>2.上传更改：</h3><p>npx hexo clean（先删除构建出来的文件）<br>npx hexo g -d（构建并上传更改）</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/09/08/hello-world/"/>
    <url>/2024/09/08/hello-world/</url>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="f910cb24bbf7a08a79f8e96a01995a93e8e742670c7b9f861492c99532ab3e6e">843c319bbffd590b79d8db7444b17f93236b7fe2592b6193ec01a478daf49ebe91560ab7777ffe11c0191e684a150b0c39895550d084bd4e0174e2beda81f9314097a72d2f28b70b69b0b0ef588441c2cd64f7aab03bff3439e0a233d662a5585155700ea9f2e31b9363fa7c9af55e3744d657f8a2231bf4c5ab3670c7b20399fd0c971fc4d448daf37a6463297626f9fc8d51fc577df4f219ee4dbacf6fccb805fe1c23e2e62d4de129d5d08ba34c60c4edc2fdfc8df713a66e7cb5953f4b677259f747737a89e186f180ed19628e2aa12adae6e911475837a91e8ceb592fc9b9069cf3480ce9b769fb531efc228e0727efbd92bdc1fc0f3df08ec0f65fd1e715af6257cab3a9c33bd626203b44be312bf3dee65adc3080b845f863b8fef08f2e356cc233c07a52be64c2517b84b18cd6aaf33d92465a0d1bf54bfffa601ce2eb1d0b91f3a0beefdf74138ed2a200c4c4a733b5e3f278f2e55892ea8d9aac6e65a26f41c9ea71ca598cc3bca416e43b7fc138147f401f7f77093e37190ba14f8bf0f5a815f928805178fe176116e4e92750c6c52b82fd64665da4e42d47b31d2cc8a0b86da9d0c2f85f766dd30dfe6891040fd9d06fdb1fe11d2e76631949541df53fe98af1e2865d0af90736228a05297e1f968dd7fbbf5c2f81964e65dd0a4a6f590b2906eca2d6027ee1f24e8b0e4c8621d1348bdb43e8ff6f7b19d6c2726b86affe0ffe7889189c2cc776e7080ce2300730be009cdc296a403db7ae7a06c49b4e4d260ed50cfdd601e5c33ad4e1adf3fc46d16a66ffaeda1de43e12254c434de15e4c53a44f438427ee5418a39ee300b7ca27849113679585fef74c6aac8cf327d9bf047fd4f14784a0c395186dac4ec0ff10dfcd62f2cba65642f726ca3d952c686033b1633b1828a09042656ccf464e9bf7b3293ec484976d545d778cb995ed6564d2ef39d3cb77781f8ba067d9c8b364098b68b04e2d287e6a168b6646dcf588bf2bdc435b2392aff481bfb9d5d04d5b6eb774bd0cbfdb5eaf6558846f0b64b5ffb845e782558fe5d87198eee075326257f21b9cbd7f783c9731778892d37d9cd893c0b4c98881a422d9baae61558ff7fba625a3ba8002b6a1f48dd3719408f9ca7a90ee66cc58c223156e63e97eff7aa39ab90d9b6649f292547a46e7e1991f1812709c1c65512a71b56b168e1f039809082350f2bcd3a394c17ee7f99389f6add5f6a15624cb296e69a1f6434146317e49b07cac02544fdb9bf77e2259e62d13063d1ddcd57561f98626de774c03f02d4f4b4db919e4e58f0f9b89f22ea070b63c0fff95cb78d69b6471cea0bc2a43690e449d07dc7a3f20f769cb53127e86ac91a0339e1514b6a8c3ed21392b51b90ca8eb2c75b31ddccfd5699905d35f0d9f26ec5fd96a8c7c8b40d57e70c15f425a3c4b5c3b6215ca1e1748986be6cc0b6318cd13ededf7719a770061628d9cbe587f4a8fc015b456d6bb2651358ea616cd65020e81b89cd2166c1659e60819ae2350ae7fdb5baf58144f7c9dd9717019648ba18c770df20a9b48843da80c039e4a7837e3ea83c994f01011d477b78263b07418bd8c4eb3c5075d4f9bcc620d875b84b8dc493db8247d68d1b99d9caea886d4a03f61266d196c38a709c08395a82b14e4b912501189e24ec014331bb4e7e5f5d18cfdb07de620da472d997ec712c34dd5231839d534ba6bf44464e0454bb887255bc4b659376c6597390dedb2deed8b3453c1b7b20f4c6a170d62e9cbf3475f9bb1c54b88f9e2d4577c38a936c65159ec38f1ec62dec298225984bf01c644381934c31e4f9731a3ccc8ae7604889d9253ace58a1bcab1ff42cbfd68e618d0e6251a5d1ac40570e3ff02de12867dedbcaa5047a7a4d96081efac23337ea24de4874daa0949cdd83e58bafb120c6881bf8f7a379faa215994ee719595b584aa037bdae819b2e3e696fe6affaef377798a75a89b5babf4812a573470b823db057e04d270fe9b6bca954f65c4ffab631e3395d20f984fa39e4deddee96a062fc155153d3c4f4a319a7a7389ffb6004c5c4b4640874a227a52c5e834276e981800adb34d53cb31f3f7fda11f0980f00b2f3846e3078f3528e9b95129a231b5d8dfd6ddb2382d85d33c74506b6239080ec61b53805d18fb0d406f8c2fc720e40a7e0107f9dcd190c0adb6a7ec6eefa213303d3290c7ae898a27eaf915a943116f5393ecd59e0ebde5895f57a834e2ff03a52427573584505805cd4f5cdca71461a31291d5e58a9421cbcd7c5a0cd2f2f2a62eb4ad3c73528aa3ca1faae5bb2fb2cdeaf7baf14838152d861f894a785ea5b57306cb645fb2ec301d0f219fa9b4da5d6f48a472490cf86867110c42671db680b4e18e2a03f0c4a45c0f80ba4e41836f7f2dbc07f185a8aa27f6f03d83c1b0d48d01deccda8336981b838ddfc38711a58268bf5b91ea2678508bcc92a509522c5d0eec7deef0a0748c2f877a526531c8819ef5db611b181032fc05409d6fe26e2bdd39d24c92ccc7f5d441cf21630cb9b8bc79abf30a8c4850f9864404addfb68791a2205eb188b8e7f00d739e9b2a6f82fc8a2f8e26e01a35daf9bef05eab852cbd7830b2a4033030dbab9e974f756e4a661c767c79479e6228a109f6d1addc2bee8e01c83fc515034a96415e0d7d122c66e1f0ddea95fb19907ee4ff410d85a539c62a1aed51c237c5e1f147b55d2c21dd391f5199953843e77ddb5b9dd085a1da3123013446f5dbd1ffe34f087e5f25772d2f1e6bf70d659c3468a46af777864e152b4f094f4dabf594c518b1804060ed82230e23bb895386041534b49fafdd0a72b334cd191463bda1216fcafe3ac4fed854c463733f2c8303ef0626a2f21704fe64a10fdb672de3de168caeca4955685b893a1725ebf08d60ba98efe2d90171fb32f6b13223308713116f6080964edf14f8a9a58c4e54980dfe3fd310ad0d538ed9fadb5aa0107408789948d9dd8ee7fb892c1f3b79c7e29e7c393eebfae56652b7d8c26a3311784c843e60e258965e517737ece7030583aa257bf1ae5e2f73ec0ef1a81509c9f156b3fc75989439bace92fb1412c7379f74e65f8b1bd78d5711c8b47877deebdd650c08367ec7e4182c3e8c7c50ab39fae50987f5aa2d784d80f835406539c79172fd30d2b9b509e66445283d1b0cec8479</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">Hey, password is required here.</span>        <button id="submitPassBtn">提交密码</button>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
